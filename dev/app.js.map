{"version":3,"sources":["webpack:///app.js","webpack:///./~/rxjs/scheduler/async.js","webpack:///./~/@angular/forms/@angular/forms.es5.js","webpack:///./~/rxjs/Notification.js","webpack:///./~/rxjs/operator/map.js","webpack:///./~/rxjs/scheduler/AsyncAction.js","webpack:///./~/rxjs/scheduler/AsyncScheduler.js","webpack:///./~/rxjs/util/ArgumentOutOfRangeError.js","webpack:///./~/rxjs/util/EmptyError.js","webpack:///./src/app/services/app_state.service.ts","webpack:///./~/rxjs/AsyncSubject.js","webpack:///./~/rxjs/ReplaySubject.js","webpack:///./~/rxjs/operator/reduce.js","webpack:///./~/rxjs/util/isDate.js","webpack:///./~/rxjs/util/isNumeric.js","webpack:///./~/@angular/router/@angular/router.es5.js","webpack:///./~/rxjs/BehaviorSubject.js","webpack:///./~/rxjs/observable/fromPromise.js","webpack:///./~/rxjs/operator/combineLatest.js","webpack:///./~/rxjs/operator/concat.js","webpack:///./~/rxjs/operator/filter.js","webpack:///./~/rxjs/operator/mergeMap.js","webpack:///./~/rxjs/operator/observeOn.js","webpack:///./~/rxjs/operator/zip.js","webpack:///./src/app/shared/faq.component/faq.component.ts","webpack:///./src/app/helpers/validators.ts","webpack:///./~/rxjs/observable/FromObservable.js","webpack:///./~/rxjs/observable/PromiseObservable.js","webpack:///./~/rxjs/observable/dom/AjaxObservable.js","webpack:///./~/rxjs/observable/forkJoin.js","webpack:///./~/rxjs/observable/from.js","webpack:///./~/rxjs/observable/of.js","webpack:///./~/rxjs/operator/catch.js","webpack:///./~/rxjs/operator/concatAll.js","webpack:///./~/rxjs/operator/concatMap.js","webpack:///./~/rxjs/operator/distinctUntilChanged.js","webpack:///./~/rxjs/operator/every.js","webpack:///./~/rxjs/operator/find.js","webpack:///./~/rxjs/operator/first.js","webpack:///./~/rxjs/operator/last.js","webpack:///./~/rxjs/operator/mergeMapTo.js","webpack:///./~/rxjs/operator/onErrorResumeNext.js","webpack:///./~/rxjs/operator/race.js","webpack:///./~/rxjs/operator/throttle.js","webpack:///./~/rxjs/operator/timeInterval.js","webpack:///./~/rxjs/operator/timestamp.js","webpack:///./~/rxjs/scheduler/VirtualTimeScheduler.js","webpack:///./~/rxjs/scheduler/asap.js","webpack:///./~/rxjs/scheduler/queue.js","webpack:///./~/rxjs/testing/SubscriptionLog.js","webpack:///./~/rxjs/testing/SubscriptionLoggable.js","webpack:///./~/rxjs/util/TimeoutError.js","webpack:///./~/rxjs/util/applyMixins.js","webpack:///./~/rxjs/util/noop.js","webpack:///./~/timers-browserify/main.js","webpack:///./src/app/axis-heart/services/axis_calculator.service.ts","webpack:///./src/app/is-arrhythmia/services/arrhythmia.service.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/app/shared/btn_plus.component/btn_plus.component.ts","webpack:///./src/app/shared/settings_field.component/settings_field.component.ts","webpack:///./src/app/shared/sum_field.component/sum_field.component.ts","webpack:///./src/app/shared/btn_plus.component/btn_plus.component.html","webpack:///./src/app/shared/faq.component/faq.component.html","webpack:///./src/app/shared/settings_field.component/settings_field.component.html","webpack:///./src/app/shared/sum_field.component/sum_field.component.html","webpack:///./~/process/browser.js","webpack:///./~/rxjs/Rx.js","webpack:///./~/rxjs/Scheduler.js","webpack:///./~/rxjs/add/observable/bindCallback.js","webpack:///./~/rxjs/add/observable/bindNodeCallback.js","webpack:///./~/rxjs/add/observable/combineLatest.js","webpack:///./~/rxjs/add/observable/concat.js","webpack:///./~/rxjs/add/observable/defer.js","webpack:///./~/rxjs/add/observable/dom/ajax.js","webpack:///./~/rxjs/add/observable/dom/webSocket.js","webpack:///./~/rxjs/add/observable/empty.js","webpack:///./~/rxjs/add/observable/forkJoin.js","webpack:///./~/rxjs/add/observable/from.js","webpack:///./~/rxjs/add/observable/fromEvent.js","webpack:///./~/rxjs/add/observable/fromEventPattern.js","webpack:///./~/rxjs/add/observable/fromPromise.js","webpack:///./~/rxjs/add/observable/generate.js","webpack:///./~/rxjs/add/observable/if.js","webpack:///./~/rxjs/add/observable/interval.js","webpack:///./~/rxjs/add/observable/merge.js","webpack:///./~/rxjs/add/observable/never.js","webpack:///./~/rxjs/add/observable/of.js","webpack:///./~/rxjs/add/observable/onErrorResumeNext.js","webpack:///./~/rxjs/add/observable/pairs.js","webpack:///./~/rxjs/add/observable/race.js","webpack:///./~/rxjs/add/observable/range.js","webpack:///./~/rxjs/add/observable/throw.js","webpack:///./~/rxjs/add/observable/timer.js","webpack:///./~/rxjs/add/observable/using.js","webpack:///./~/rxjs/add/observable/zip.js","webpack:///./~/rxjs/add/operator/audit.js","webpack:///./~/rxjs/add/operator/auditTime.js","webpack:///./~/rxjs/add/operator/buffer.js","webpack:///./~/rxjs/add/operator/bufferCount.js","webpack:///./~/rxjs/add/operator/bufferTime.js","webpack:///./~/rxjs/add/operator/bufferToggle.js","webpack:///./~/rxjs/add/operator/bufferWhen.js","webpack:///./~/rxjs/add/operator/catch.js","webpack:///./~/rxjs/add/operator/combineAll.js","webpack:///./~/rxjs/add/operator/combineLatest.js","webpack:///./~/rxjs/add/operator/concat.js","webpack:///./~/rxjs/add/operator/concatAll.js","webpack:///./~/rxjs/add/operator/concatMap.js","webpack:///./~/rxjs/add/operator/concatMapTo.js","webpack:///./~/rxjs/add/operator/count.js","webpack:///./~/rxjs/add/operator/debounce.js","webpack:///./~/rxjs/add/operator/debounceTime.js","webpack:///./~/rxjs/add/operator/defaultIfEmpty.js","webpack:///./~/rxjs/add/operator/delay.js","webpack:///./~/rxjs/add/operator/delayWhen.js","webpack:///./~/rxjs/add/operator/dematerialize.js","webpack:///./~/rxjs/add/operator/distinct.js","webpack:///./~/rxjs/add/operator/distinctUntilChanged.js","webpack:///./~/rxjs/add/operator/distinctUntilKeyChanged.js","webpack:///./~/rxjs/add/operator/do.js","webpack:///./~/rxjs/add/operator/elementAt.js","webpack:///./~/rxjs/add/operator/every.js","webpack:///./~/rxjs/add/operator/exhaust.js","webpack:///./~/rxjs/add/operator/exhaustMap.js","webpack:///./~/rxjs/add/operator/expand.js","webpack:///./~/rxjs/add/operator/filter.js","webpack:///./~/rxjs/add/operator/finally.js","webpack:///./~/rxjs/add/operator/find.js","webpack:///./~/rxjs/add/operator/findIndex.js","webpack:///./~/rxjs/add/operator/first.js","webpack:///./~/rxjs/add/operator/groupBy.js","webpack:///./~/rxjs/add/operator/ignoreElements.js","webpack:///./~/rxjs/add/operator/isEmpty.js","webpack:///./~/rxjs/add/operator/last.js","webpack:///./~/rxjs/add/operator/let.js","webpack:///./~/rxjs/add/operator/map.js","webpack:///./~/rxjs/add/operator/mapTo.js","webpack:///./~/rxjs/add/operator/materialize.js","webpack:///./~/rxjs/add/operator/max.js","webpack:///./~/rxjs/add/operator/merge.js","webpack:///./~/rxjs/add/operator/mergeAll.js","webpack:///./~/rxjs/add/operator/mergeMap.js","webpack:///./~/rxjs/add/operator/mergeMapTo.js","webpack:///./~/rxjs/add/operator/mergeScan.js","webpack:///./~/rxjs/add/operator/min.js","webpack:///./~/rxjs/add/operator/multicast.js","webpack:///./~/rxjs/add/operator/observeOn.js","webpack:///./~/rxjs/add/operator/onErrorResumeNext.js","webpack:///./~/rxjs/add/operator/pairwise.js","webpack:///./~/rxjs/add/operator/partition.js","webpack:///./~/rxjs/add/operator/pluck.js","webpack:///./~/rxjs/add/operator/publish.js","webpack:///./~/rxjs/add/operator/publishBehavior.js","webpack:///./~/rxjs/add/operator/publishLast.js","webpack:///./~/rxjs/add/operator/publishReplay.js","webpack:///./~/rxjs/add/operator/race.js","webpack:///./~/rxjs/add/operator/reduce.js","webpack:///./~/rxjs/add/operator/repeat.js","webpack:///./~/rxjs/add/operator/repeatWhen.js","webpack:///./~/rxjs/add/operator/retry.js","webpack:///./~/rxjs/add/operator/retryWhen.js","webpack:///./~/rxjs/add/operator/sample.js","webpack:///./~/rxjs/add/operator/sampleTime.js","webpack:///./~/rxjs/add/operator/scan.js","webpack:///./~/rxjs/add/operator/sequenceEqual.js","webpack:///./~/rxjs/add/operator/share.js","webpack:///./~/rxjs/add/operator/shareReplay.js","webpack:///./~/rxjs/add/operator/single.js","webpack:///./~/rxjs/add/operator/skip.js","webpack:///./~/rxjs/add/operator/skipLast.js","webpack:///./~/rxjs/add/operator/skipUntil.js","webpack:///./~/rxjs/add/operator/skipWhile.js","webpack:///./~/rxjs/add/operator/startWith.js","webpack:///./~/rxjs/add/operator/subscribeOn.js","webpack:///./~/rxjs/add/operator/switch.js","webpack:///./~/rxjs/add/operator/switchMap.js","webpack:///./~/rxjs/add/operator/switchMapTo.js","webpack:///./~/rxjs/add/operator/take.js","webpack:///./~/rxjs/add/operator/takeLast.js","webpack:///./~/rxjs/add/operator/takeUntil.js","webpack:///./~/rxjs/add/operator/takeWhile.js","webpack:///./~/rxjs/add/operator/throttle.js","webpack:///./~/rxjs/add/operator/throttleTime.js","webpack:///./~/rxjs/add/operator/timeInterval.js","webpack:///./~/rxjs/add/operator/timeout.js","webpack:///./~/rxjs/add/operator/timeoutWith.js","webpack:///./~/rxjs/add/operator/timestamp.js","webpack:///./~/rxjs/add/operator/toArray.js","webpack:///./~/rxjs/add/operator/toPromise.js","webpack:///./~/rxjs/add/operator/window.js","webpack:///./~/rxjs/add/operator/windowCount.js","webpack:///./~/rxjs/add/operator/windowTime.js","webpack:///./~/rxjs/add/operator/windowToggle.js","webpack:///./~/rxjs/add/operator/windowWhen.js","webpack:///./~/rxjs/add/operator/withLatestFrom.js","webpack:///./~/rxjs/add/operator/zip.js","webpack:///./~/rxjs/add/operator/zipAll.js","webpack:///./~/rxjs/observable/ArrayLikeObservable.js","webpack:///./~/rxjs/observable/BoundCallbackObservable.js","webpack:///./~/rxjs/observable/BoundNodeCallbackObservable.js","webpack:///./~/rxjs/observable/DeferObservable.js","webpack:///./~/rxjs/observable/ErrorObservable.js","webpack:///./~/rxjs/observable/ForkJoinObservable.js","webpack:///./~/rxjs/observable/FromEventObservable.js","webpack:///./~/rxjs/observable/FromEventPatternObservable.js","webpack:///./~/rxjs/observable/GenerateObservable.js","webpack:///./~/rxjs/observable/IfObservable.js","webpack:///./~/rxjs/observable/IntervalObservable.js","webpack:///./~/rxjs/observable/IteratorObservable.js","webpack:///./~/rxjs/observable/NeverObservable.js","webpack:///./~/rxjs/observable/PairsObservable.js","webpack:///./~/rxjs/observable/RangeObservable.js","webpack:///./~/rxjs/observable/SubscribeOnObservable.js","webpack:///./~/rxjs/observable/TimerObservable.js","webpack:///./~/rxjs/observable/UsingObservable.js","webpack:///./~/rxjs/observable/bindCallback.js","webpack:///./~/rxjs/observable/bindNodeCallback.js","webpack:///./~/rxjs/observable/combineLatest.js","webpack:///./~/rxjs/observable/concat.js","webpack:///./~/rxjs/observable/defer.js","webpack:///./~/rxjs/observable/dom/WebSocketSubject.js","webpack:///./~/rxjs/observable/dom/ajax.js","webpack:///./~/rxjs/observable/dom/webSocket.js","webpack:///./~/rxjs/observable/empty.js","webpack:///./~/rxjs/observable/fromEvent.js","webpack:///./~/rxjs/observable/fromEventPattern.js","webpack:///./~/rxjs/observable/if.js","webpack:///./~/rxjs/observable/interval.js","webpack:///./~/rxjs/observable/never.js","webpack:///./~/rxjs/observable/pairs.js","webpack:///./~/rxjs/observable/range.js","webpack:///./~/rxjs/observable/throw.js","webpack:///./~/rxjs/observable/timer.js","webpack:///./~/rxjs/observable/using.js","webpack:///./~/rxjs/observable/zip.js","webpack:///./~/rxjs/operator/audit.js","webpack:///./~/rxjs/operator/auditTime.js","webpack:///./~/rxjs/operator/buffer.js","webpack:///./~/rxjs/operator/bufferCount.js","webpack:///./~/rxjs/operator/bufferTime.js","webpack:///./~/rxjs/operator/bufferToggle.js","webpack:///./~/rxjs/operator/bufferWhen.js","webpack:///./~/rxjs/operator/combineAll.js","webpack:///./~/rxjs/operator/concatMapTo.js","webpack:///./~/rxjs/operator/count.js","webpack:///./~/rxjs/operator/debounce.js","webpack:///./~/rxjs/operator/debounceTime.js","webpack:///./~/rxjs/operator/defaultIfEmpty.js","webpack:///./~/rxjs/operator/delay.js","webpack:///./~/rxjs/operator/delayWhen.js","webpack:///./~/rxjs/operator/dematerialize.js","webpack:///./~/rxjs/operator/distinct.js","webpack:///./~/rxjs/operator/distinctUntilKeyChanged.js","webpack:///./~/rxjs/operator/do.js","webpack:///./~/rxjs/operator/elementAt.js","webpack:///./~/rxjs/operator/exhaust.js","webpack:///./~/rxjs/operator/exhaustMap.js","webpack:///./~/rxjs/operator/expand.js","webpack:///./~/rxjs/operator/finally.js","webpack:///./~/rxjs/operator/findIndex.js","webpack:///./~/rxjs/operator/groupBy.js","webpack:///./~/rxjs/operator/ignoreElements.js","webpack:///./~/rxjs/operator/isEmpty.js","webpack:///./~/rxjs/operator/let.js","webpack:///./~/rxjs/operator/mapTo.js","webpack:///./~/rxjs/operator/materialize.js","webpack:///./~/rxjs/operator/max.js","webpack:///./~/rxjs/operator/mergeScan.js","webpack:///./~/rxjs/operator/min.js","webpack:///./~/rxjs/operator/pairwise.js","webpack:///./~/rxjs/operator/partition.js","webpack:///./~/rxjs/operator/pluck.js","webpack:///./~/rxjs/operator/publish.js","webpack:///./~/rxjs/operator/publishBehavior.js","webpack:///./~/rxjs/operator/publishLast.js","webpack:///./~/rxjs/operator/publishReplay.js","webpack:///./~/rxjs/operator/repeat.js","webpack:///./~/rxjs/operator/repeatWhen.js","webpack:///./~/rxjs/operator/retry.js","webpack:///./~/rxjs/operator/retryWhen.js","webpack:///./~/rxjs/operator/sample.js","webpack:///./~/rxjs/operator/sampleTime.js","webpack:///./~/rxjs/operator/scan.js","webpack:///./~/rxjs/operator/sequenceEqual.js","webpack:///./~/rxjs/operator/shareReplay.js","webpack:///./~/rxjs/operator/single.js","webpack:///./~/rxjs/operator/skip.js","webpack:///./~/rxjs/operator/skipLast.js","webpack:///./~/rxjs/operator/skipUntil.js","webpack:///./~/rxjs/operator/skipWhile.js","webpack:///./~/rxjs/operator/startWith.js","webpack:///./~/rxjs/operator/subscribeOn.js","webpack:///./~/rxjs/operator/switch.js","webpack:///./~/rxjs/operator/switchMap.js","webpack:///./~/rxjs/operator/switchMapTo.js","webpack:///./~/rxjs/operator/take.js","webpack:///./~/rxjs/operator/takeLast.js","webpack:///./~/rxjs/operator/takeUntil.js","webpack:///./~/rxjs/operator/takeWhile.js","webpack:///./~/rxjs/operator/throttleTime.js","webpack:///./~/rxjs/operator/timeout.js","webpack:///./~/rxjs/operator/timeoutWith.js","webpack:///./~/rxjs/operator/toArray.js","webpack:///./~/rxjs/operator/toPromise.js","webpack:///./~/rxjs/operator/window.js","webpack:///./~/rxjs/operator/windowCount.js","webpack:///./~/rxjs/operator/windowTime.js","webpack:///./~/rxjs/operator/windowToggle.js","webpack:///./~/rxjs/operator/windowWhen.js","webpack:///./~/rxjs/operator/withLatestFrom.js","webpack:///./~/rxjs/operator/zipAll.js","webpack:///./~/rxjs/scheduler/Action.js","webpack:///./~/rxjs/scheduler/AnimationFrameAction.js","webpack:///./~/rxjs/scheduler/AnimationFrameScheduler.js","webpack:///./~/rxjs/scheduler/AsapAction.js","webpack:///./~/rxjs/scheduler/AsapScheduler.js","webpack:///./~/rxjs/scheduler/QueueAction.js","webpack:///./~/rxjs/scheduler/QueueScheduler.js","webpack:///./~/rxjs/scheduler/animationFrame.js","webpack:///./~/rxjs/testing/ColdObservable.js","webpack:///./~/rxjs/testing/HotObservable.js","webpack:///./~/rxjs/testing/TestScheduler.js","webpack:///./~/rxjs/util/AnimationFrame.js","webpack:///./~/rxjs/util/FastMap.js","webpack:///./~/rxjs/util/Immediate.js","webpack:///./~/rxjs/util/Map.js","webpack:///./~/rxjs/util/MapPolyfill.js","webpack:///./~/rxjs/util/Set.js","webpack:///./~/rxjs/util/assign.js","webpack:///./~/rxjs/util/not.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./src/app/axis-heart/index.ts","webpack:///./src/app/is-arrhythmia/index.ts","webpack:///./src/app/axis-heart/axis_settings.component/axis_settings.component.ts","webpack:///./src/app/axis-heart/calculator.component/calculator.component.ts","webpack:///./src/app/is-arrhythmia/arrhythmia.component/arrhythmia.component.ts","webpack:///./src/app/is-arrhythmia/arrhythmia_settings.component/arrhythmia_settings.component.ts","webpack:///./src/app/axis-heart/axis_settings.component/axis_settings.component.html","webpack:///./src/app/axis-heart/calculator.component/calculator.component.html","webpack:///./src/app/is-arrhythmia/arrhythmia.component/arrhythmia.component.html","webpack:///./src/app/is-arrhythmia/arrhythmia_settings.component/arrhythmia_settings.component.html","webpack:///./src/app/common/calc_wrapper.component/calc_wrapper.component.ts","webpack:///./src/app/common/faq_list.component/faq_list.component.ts","webpack:///./src/app/common/index.component/index.component.ts","webpack:///./src/app/common/not_found.component/not_found.component.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/common/calc_wrapper.component/calc_wrapper.component.html","webpack:///./src/app/common/faq_list.component/faq_list.component.html","webpack:///./src/app/common/index.component/index.component.html","webpack:///./src/app/common/not_found.component/not_found.component.html","webpack:///./src/app/app.component.scss"],"names":["webpackJsonp","module","exports","__webpack_require__","Object","defineProperty","value","AsyncAction_1","AsyncScheduler_1","async","AsyncScheduler","AsyncAction","__webpack_exports__","isEmptyInputValue","length","isPresent","o","toObservable","r","obs","i","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__","Error","_executeValidators","control","validators","map","v","_executeAsyncValidators","_mergeErrors","arrayOfErrors","res","reduce","errors","assign","keys","_isAndroid","test","__WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__","getUserAgent","toLowerCase","normalizeValidator","validator","validate","c","normalizeAsyncValidator","unimplemented","_buildValueString","id","slice","_extractId","valueString","split","_buildValueString$1","_extractId$1","controlPath","name","parent","concat","setUpControl","dir","_throwError","valueAccessor","Validators","compose","asyncValidator","composeAsync","writeValue","registerOnChange","newValue","viewToModelUpdate","markAsDirty","setValue","emitModelToViewChange","registerOnTouched","markAsTouched","emitModelEvent","setDisabledState","registerOnDisabledChange","isDisabled","_rawValidators","forEach","registerOnValidatorChange","updateValueAndValidity","_rawAsyncValidators","cleanUpControl","_noControlError","_clearChangeFns","setUpFormContainer","message","messageEnd","join","path","composeValidators","composeAsyncValidators","isPropertyUpdated","changes","viewModel","hasOwnProperty","change","isFirstChange","currentValue","isBuiltInAccessor","BUILTIN_ACCESSORS","some","a","constructor","selectValueAccessor","valueAccessors","defaultAccessor","undefined","builtinAccessor","customAccessor","DefaultValueAccessor","_find","delimiter","Array","FormGroup","controls","FormArray","at","coerceToValidator","isArray","coerceToAsyncValidator","remove","list","el","index","indexOf","splice","_hasInvalidParent","FormGroupName","FormGroupDirective","FormArrayName","d","AbstractControlDirective","AbstractFormGroupDirective","CheckboxControlValueAccessor","ControlContainer","NG_VALUE_ACCESSOR","COMPOSITION_BUFFER_MODE","NgControl","NgControlStatus","NgControlStatusGroup","NgForm","NgModel","NgModelGroup","RadioControlValueAccessor","FormControlDirective","FormControlName","NgSelectOption","SelectControlValueAccessor","SelectMultipleControlValueAccessor","CheckboxRequiredValidator","EmailValidator","MaxLengthValidator","MinLengthValidator","PatternValidator","RequiredValidator","FormBuilder","AbstractControl","FormControl","NG_ASYNC_VALIDATORS","NG_VALIDATORS","VERSION","FormsModule","ReactiveFormsModule","InternalFormsSharedModule","REACTIVE_DRIVEN_DIRECTIVES","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","CHECKBOX_VALUE_ACCESSOR","DEFAULT_VALUE_ACCESSOR","AbstractControlStatus","ngControlStatusHost","formDirectiveProvider","formControlBinding","modelGroupProvider","NgNoValidate","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","RADIO_VALUE_ACCESSOR","RadioControlRegistry","RANGE_VALUE_ACCESSOR","RangeValueAccessor","formControlBinding$1","controlNameBinding","formDirectiveProvider$1","formArrayNameProvider","formGroupNameProvider","SELECT_VALUE_ACCESSOR","NgSelectMultipleOption","SELECT_MULTIPLE_VALUE_ACCESSOR","CHECKBOX_REQUIRED_VALIDATOR","EMAIL_VALIDATOR","MAX_LENGTH_VALIDATOR","MIN_LENGTH_VALIDATOR","PATTERN_VALIDATOR","REQUIRED_VALIDATOR","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__","n","__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__","prototype","get","this","enumerable","configurable","valid","invalid","pending","disabled","enabled","pristine","dirty","touched","untouched","statusChanges","valueChanges","reset","hasError","errorCode","getError","_super","apply","arguments","EMAIL_REGEXP","min","parseFloat","isNaN","actual","max","required","requiredTrue","email","minLength","minlength","requiredLength","actualLength","maxLength","maxlength","pattern","nullValidator","regex","regexStr","RegExp","toString","requiredPattern","actualValue","presentValidators","filter","observables","call","provide","useExisting","multi","_renderer","_elementRef","onChange","_","onTouched","setProperty","nativeElement","fn","decorators","type","args","selector","host","(change)","(blur)","providers","ctorParameters","_compositionMode","_composing","normalizedValue","_handleInput","_compositionStart","_compositionEnd","(input)","(compositionstart)","(compositionend)","_this","_parent","_accessors","add","accessor","push","select","_isSameGroup","fireUncheck","controlPair","_control","_registry","_injector","ngOnInit","_checkName","ngOnDestroy","_state","_fn","formControlName","_throwNameError","propDecorators","_optionMap","Map","_idCounter","_compareWith","set","JSON","stringify","_getOptionId","_getOptionValue","_registerOption","_i","_a","from","has","compareWith","_element","_select","_setElementValue","delete","ngValue","optionSelectedStateSetter","ids_1","opt","_setSelected","selected","options","selectedOptions","item","val","_value","_checkParentType","addFormGroup","formDirective","removeFormGroup","getFormGroup","_validators","_asyncValidators","cd","_cd","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","_onCollectionChange","_pristine","_touched","_onDisabledChange","_status","_errors","_valueChanges","_statusChanges","setValidators","newValidator","setAsyncValidators","clearValidators","clearAsyncValidators","opts","onlySelf","markAsUntouched","_forEachChild","_updateTouched","markAsPristine","_updatePristine","markAsPending","disable","_updateValue","emitEvent","emit","_updateAncestors","changeFn","enable","setParent","patchValue","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_asyncValidationSubscription","subscribe","setErrors","unsubscribe","_updateControlsErrors","x","_initObservables","_anyControlsHaveStatus","cb","_anyControls","condition","status","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_registerOnCollectionChange","_onChange","_applyFormState","emitViewToModelChange","_setUpControls","registerControl","addControl","removeControl","setControl","contains","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","acc","k","_reduceValue","initValue","_registerControl","insert","removeAt","resolvedPromise","Promise","resolve","asyncValidators","_submitted","ngSubmit","form","then","container","_findContainer","getControl","group","updateModel","onSubmit","$event","onReset","resetForm","pop","(submit)","(reset)","outputs","exportAs","FormErrorExamples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","TemplateDrivenErrors","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","resolvedPromise$1","_registered","update","ngOnChanges","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","disabledValue","ReactiveErrors","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","console","warn","_isControlChanged","directives","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","addFormArray","removeFormArray","getFormArray","newCtrl","_oldForm","sync","_added","_required","[attr.required]","_enabled","_createValidator","_validator","parseInt","[attr.minlength]","[attr.maxlength]","[attr.pattern]","controlsConfig","extra","_reduceControls","array","_createControl","controlConfig","novalidate","declarations","Observable_1","Notification","kind","error","hasValue","observe","observer","next","complete","do","accept","nextOrObserver","Observable","of","throw","empty","createNext","undefinedValueNotification","createError","err","createComplete","completeNotification","project","thisArg","TypeError","lift","MapOperator","tslib_1","Subscriber_1","subscriber","source","MapSubscriber","destination","count","__extends","_next","result","Subscriber","root_1","Action_1","scheduler","work","schedule","state","delay","closed","recycleAsyncId","requestAsyncId","root","setInterval","flush","bind","clearInterval","execute","_execute","errored","errorValue","e","_unsubscribe","actions","Action","Scheduler_1","active","scheduled","action","shift","Scheduler","ArgumentOutOfRangeError","setPrototypeOf","EmptyError","core_1","rxjs_1","AppState","useSums","BehaviorSubject","usePercentage","calcWrapperData","faqData","use","heart-axis","title","is-arrhythmia","data","toggle","direction","getValue","getStream","asObservable","getDataStream","__decorate","Injectable","__metadata","Subject_1","Subscription_1","AsyncSubject","hasNext","hasCompleted","_subscribe","thrownError","Subscription","EMPTY","Subject","queue_1","observeOn_1","ObjectUnsubscribedError_1","SubjectSubscription_1","ReplaySubject","bufferSize","windowTime","Number","POSITIVE_INFINITY","_events","_bufferSize","_windowTime","now","_getNow","ReplayEvent","_trimBufferThenGetEvents","subscription","ObjectUnsubscribedError","isStopped","observers","SubjectSubscription","ObserveOnSubscriber","len","queue","eventsCount","spliceCount","time","Math","accumulator","seed","hasSeed","ReduceOperator","ReduceSubscriber","_tryReduce","_complete","isDate","Date","isNumeric","isArray_1","convertToParamMap","params","ParamsAsMap","navigationCancelingError","NAVIGATION_CANCELING_ERROR","isNavigationCancelingError","defaultUrlMatcher","segments","segmentGroup","route","parts","pathMatch","hasChildren","posParams","part","segment","startsWith","substring","consumed","validateConfig","config","parentPath","validateNode","getFullPath","fullPath","component","outlet","PRIMARY_OUTLET","redirectTo","children","loadChildren","matcher","charAt","currentRoute","shallowEqualArrays","b","shallowEqual","k1","k2","key","flatten","arr","last$1","map$$1","callback","prop","waitForMap","obj","__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__","waitHead","waitTail","mapped","__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__","concat$","__WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__","last$","__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__","andObservables","merged$","__WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__","__WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__","wrapIntoObservable","__WEBPACK_IMPORTED_MODULE_2__angular_core__","__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__","createEmptyUrlTree","UrlTree","UrlSegmentGroup","containsTree","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","containsQueryParams","containsSegmentGroup","equalPath","numberOfChildren","every","containsSegmentGroupHelper","containeePaths","current","equalSegments","as","bs","parameters","mapChildrenIntoArray","child","childOutlet","serializePaths","p","serializePath","serializeSegment","primary","children_1","encode","s","encodeURIComponent","replace","decode","decodeURIComponent","serializeParams","serializeQueryParams","strParams","matchSegments","str","match","SEGMENT_RE","matchQueryParams","QUERY_PARAM_RE","matchUrlQueryParamValue","QUERY_PARAM_VALUE_RE","noMatch","__WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__","NoMatch","absoluteRedirect","newTree","AbsoluteRedirect","namedOutletsRedirect","canLoadFails","applyRedirects","moduleInjector","configLoader","urlSerializer","urlTree","ApplyRedirects","runCanLoadGuard","canLoad","__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__","injectionToken","guard","matched","consumedSegments","lastChild","positionalParamSegments","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes","routes_1","isEmptyPathRedirect","getOutlet","primarySegmentGroup","routes_2","findNode","node","node_1","findPath","unshift","createEmptyState","rootComponent","snapshot","createEmptyStateSnapshot","emptyUrl","__WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","RouterState","TreeNode","ActivatedRouteSnapshot","RouterStateSnapshot","inheritedParamsDataResolve","pathToRoot","pathFromRoot","inhertingStartingFrom","routeConfig","curr","_resolvedData","setRouterState","_routerState","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","_futureSnapshot","url","equalParamsAndUrlSegments","equalUrlParams","parentsMismatch","createRouterState","routeReuseStrategy","prevState","createNode","_root","shouldReuseRoute","createOrReuseChildren","retrieve","tree_1","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","createUrlTree","commands","tree","nav","computeNavigation","toRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","outletName","Navigation","numberOfDoubleDots","isAbsolute","cmd","cmdIdx","outlets_1","urlPart","partIndex","Position","_lastPathIndex","_urlSegment","modifier","createPositionApplyingDoubleDots","g","ci","dd","getPath","getOutlets","_b","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","outlets_2","children_2","currentCommandIndex","currentPathIndex","compare","paths","createNewSegmentChildren","recognize","rootComponentType","Recognizer","sortActivatedRouteSnapshots","nodes","sort","localeCompare","getChildConfig","match$1","NoMatch$1","checkOutletNameUniqueness","names","routeWithSameOutletName","getSourceSegmentGroup","_sourceSegment","getPathIndexShift","_segmentIndexShift","split$1","containsEmptyPathMatchesWithNamedOutlets","s_1","createChildrenForEmptyPaths","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","routes_3","emptyPathMatch","getOutlet$1","primarySegment","routes_4","getData","getResolve","defaultErrorHandler","defaultRouterHook","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","_routeConfig","_loadedConfig","closestLoadedConfig","nodeChildrenAsMap","validateCommands","attrBoolValue","routerNgProbeToken","Router","provideLocationStrategy","platformLocationStrategy","baseHref","useHash","__WEBPACK_IMPORTED_MODULE_1__angular_common__","provideForRootGuard","router","provideRoutes","useValue","ROUTES","setupRouter","ref","contexts","location","injector","loader","compiler","urlHandlingStrategy","errorHandler","enableTracing","dom_1","__WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__","events","logGroup","log","logGroupEnd","rootRoute","routerState","getAppInitializer","appInitializer","getBootstrapListener","bootstrapListener","provideRouterInitializer","RouterInitializer","useFactory","deps","ROUTER_INITIALIZER","RouterLink","RouterLinkWithHref","RouterLinkActive","RouterOutlet","GuardsCheckEnd","GuardsCheckStart","NavigationCancel","NavigationEnd","NavigationError","NavigationStart","ResolveEnd","ResolveStart","RouteConfigLoadEnd","RouteConfigLoadStart","RoutesRecognized","RouteReuseStrategy","ROUTER_CONFIGURATION","RouterModule","ChildrenOutletContexts","OutletContext","NoPreloading","PreloadAllModules","PreloadingStrategy","RouterPreloader","UrlHandlingStrategy","DefaultUrlSerializer","UrlSerializer","ROUTER_PROVIDERS","ROUTER_FORROOT_GUARD","Tree","__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__","__WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__","__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__","__WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__","__WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__","__WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__","__WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__","__WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__","urlAfterRedirects","reason","shouldActivate","getAll","LoadedRouterConfig","_queryParamMap","DEFAULT_SERIALIZER","serialize","_parameterMap","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","encodeURI","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","decodeURI","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","substr","allowRedirects","ngModule","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","routes$","processedRoutes$","expandSegmentAgainstRoute","concattedProcessedRoutes$","first$","noLeftoversInUrl","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","newSegments","rawSegmentGroup","load","cfg","rawSlicedSegments","childConfig$","routerConfig","childModule","childConfig","expanded$_1","cs","shouldLoad","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","idx","actualSegments_1","t","firstChild","siblings","cc","futureSnapshot","_paramMap","urlSegment","lastPathIndex","_resolve","cmdWithOutlet","find","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","config_1","processSegmentAgainstRoute","rawSegment","snapshot_1","children_3","shouldDetach","store","handle","shouldAttach","future","DefaultRouteReuseStrategy","detachedTree","RouterConfigLoader","onLoadStartListener","onLoadEndListener","parentInjector","moduleFactory$","loadModuleFactory","factory","create","compileModuleAsync","shouldProcessUrl","extract","merge","newUrlPart","rawUrl","DefaultUrlHandlingStrategy","wholeUrl","rootContexts","navigations","routerEvents","navigationId","navigated","hooks","beforePreactivation","afterPreactivation","onLoadStart","triggerEvent","onLoadEnd","resetConfig","currentUrlTree","rawUrlTree","currentRouterState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","Zone","wrap","setTimeout","scheduleNavigation","serializeUrl","dispose","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","f","q","extras","skipLocationChange","parseUrl","mergedTree","navigate","removeEmptyProps","isActive","executeScheduledNavigation","promise","catch","lastNavigation","reject","rej","urlTransition","runNavigate","shouldPreventPushState","shouldReplaceUrl","precreatedState","go","resolvePromise","rejectPromise","urlAndSnapshot$","appliedUrl","redirectsApplied$","preActivation","navigationIsSuccessful","beforePreactivationDone$","preactivationTraverse$","PreActivation","traverse","preactivationCheckGuards$","checkGuards","preactivationResolveData$","isActivating","resolveData","preactivationDone$","routerState$","storedState","storedUrl","isCurrentPathEqualTo","replaceState","ActivateRoutes","activate","resetUrlToCurrentUrlTree","ee","CanActivate","CanDeactivate","canActivateChecks","canDeactivateChecks","parentContexts","futureRoot","currRoot","traverseChildRoutes","isDeactivating","canDeactivate$","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","checks$","runningChecks$","check","runResolve","__","futureNode","currNode","futurePath","prevChildren","traverseRoutes","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","runCanActivateChild","runCanActivate","canActivate","observable","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","runningResolvers$","resolver","token","futureState","currState","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","activateRoutes","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","cmpFactoryResolver","componentFactoryResolver","activateWith","tabIndex","renderer","setAttribute","preserve","onClick","routerLink","locationStrategy","updateTargetUrlAndHref","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","element","cdr","classes","routerLinkActiveOptions","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","descendants","routerLinkActive","onChildOutletCreated","onChildOutletDestroyed","changeDetector","_activatedRoute","activateEvents","deactivateEvents","instance","cmp","activatedRoute","hostView","destroy","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","notFoundValue","preload","moduleLoader","preloadingStrategy","onStartLoad","onEndLoad","setUpPreloading","navigations$","processRoutes","routes_5","preloadConfig","loaded$","ROUTER_DIRECTIVES","useClass","forRoot","forChild","initNavigation","resultOfPreactivationDone","isLegacyDisabled","isLegacyEnabled","bootstrappedComponentRef","preloader","components","componentTypes","PromiseObservable_1","fromPromise","PromiseObservable","combineLatest","ArrayObservable_1","ArrayObservable","CombineLatestOperator","OuterSubscriber_1","subscribeToResult_1","none","CombineLatestSubscriber","values","toRespond","subscribeToResult","notifyComplete","unused","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","oldVal","_tryProject","OuterSubscriber","concatStatic","isScheduler_1","isScheduler","mergeAll_1","MergeAllOperator","predicate","FilterOperator","FilterSubscriber","mergeMap","resultSelector","concurrent","MergeMapOperator","MergeMapSubscriber","buffer","_tryNext","_innerSub","ish","_notifyResultSelector","observeOn","ObserveOnOperator","Notification_1","dispatch","arg","notification","scheduleMessage","ObserveOnMessage","_error","zipProto","zipStatic","ZipOperator","iterator_1","ZipSubscriber","iterators","StaticArrayIterator","iterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","done","nextResult","isComplete","router_1","app_state_service_1","FaqComponent","calculatorType","Component","template","checkMinimum","minimum","invalidMinimum","checkMaximum","maximum","invalidMaximum","verifyNum","isFinite","invalidNumber","allValuesNotZero","controlsKeys","elem","allValueIsZero","sumOfValuesNotZero","controlCouples","couple","allSumsIsZero","isArrayLike_1","isPromise_1","IteratorObservable_1","ArrayLikeObservable_1","observable_1","FromObservable","isPromise","IteratorObservable","isArrayLike","ArrayLikeObservable","dispatchNext","dispatchError","_isScalar","getCORSRequest","XMLHttpRequest","XDomainRequest","getXMLHttpRequest","progId","progIds","ActiveXObject","ajaxGet","headers","AjaxObservable","method","ajaxPost","body","ajaxDelete","ajaxPut","ajaxPatch","ajaxGetJSON","responseType","map_1","response","tryCatch_1","errorObject_1","urlOrRequest","request","createXHR","crossDomain","withCredentials","timeout","AjaxSubscriber","post","put","patch","getJSON","FormData","serializeBody","send","xhr","AjaxResponse","user","password","tryCatch","errorObject","setupEvents","open","setHeaders","contentType","splitIndex","setRequestHeader","xhrTimeout","progressSubscriber","AjaxTimeoutError","xhrReadyStateChange","readyState","status_1","responseText","AjaxError","ontimeout","upload","xhrProgress_1","onprogress","xhrError_1","onerror","onreadystatechange","abort","originalEvent","responseXML","ForkJoinObservable_1","forkJoin","ForkJoinObservable","FromObservable_1","_catch","operator","CatchOperator","caught","CatchSubscriber","err2","_unsubscribeAndRecycle","concatAll","concatMap","mergeMap_1","distinctUntilChanged","keySelector","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","Boolean","EveryOperator","EverySubscriber","everyValueMatch","FindValueOperator","yieldIndex","FindValueSubscriber","first","defaultValue","FirstOperator","EmptyError_1","FirstSubscriber","_emitted","_tryPredicate","_emit","_tryResultSelector","_emitFinal","last","LastOperator","LastSubscriber","lastValue","mergeMapTo","innerObservable","MergeMapToOperator","MergeMapToSubscriber","trySelectResult","notifyError","onErrorResumeNext","nextSources","OnErrorResumeNextOperator","onErrorResumeNextStatic","OnErrorResumeNextSubscriber","subscribeToNextSource","race","raceStatic","RaceOperator","RaceSubscriber","hasFirst","subscriptions","throttle","durationSelector","defaultThrottleConfig","ThrottleOperator","leading","trailing","ThrottleSubscriber","_leading","_trailing","_hasTrailingValue","throttled","_trailingValue","duration","tryDurationSelector","_sendTrailing","timeInterval","async_1","TimeIntervalOperator","TimeInterval","interval","TimeIntervalSubscriber","lastTime","span","timestamp","TimestampOperator","Timestamp","TimestampSubscriber","VirtualTimeScheduler","SchedulerAction","maxFrames","VirtualAction","frame","frameTimeFactor","sortActions","AsapAction_1","AsapScheduler_1","asap","AsapScheduler","AsapAction","QueueAction_1","QueueScheduler_1","QueueScheduler","QueueAction","SubscriptionLog","subscribedFrame","unsubscribedFrame","SubscriptionLog_1","SubscriptionLoggable","logSubscribedFrame","logUnsubscribedFrame","subscriptionLogs","oldSubscriptionLog","TimeoutError","applyMixins","derivedCtor","baseCtors","baseCtor","propertyKeys","getOwnPropertyNames","j","len2","name_1","noop","Timeout","clearFn","_id","_clearFn","Function","window","clearTimeout","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","setImmediate","clearImmediate","AxisCalculator","settings","accuracy","default","maxSum","maxWave","AxisCalculator_1","_instance","setAccuracy","setMaxSum","setMaxWave","countAngle","sumI","sumIII","tanAlfa","cos","PI","sin","alfa","atan","toFixed","countSumsThenAngle","rI","qsI","rIII","qsIII","ArrhythmiaService","coefficient","init","difference","moreThenOnly","countProportion","pp1","pp2","maxPP","minPP","delta","countDifferenceTime","isArrhythmia","baseDelta","common_1","forms_1","faq_component_1","btn_plus_component_1","sum_field_component_1","settings_field_component_1","SharedModule","NgModule","BtnPlus","SumFieldComponent","SettingsFieldComponent","imports","CommonModule","_loop","_delayBeforeLoop","increment","input","step","incrementStart","event","preventDefault","incrementStop","Input","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","process","nextTick","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","AnonymousSubject","AsyncSubject_1","ReplaySubject_1","BehaviorSubject_1","ConnectableObservable_1","ConnectableObservable","ArgumentOutOfRangeError_1","TimeoutError_1","UnsubscriptionError_1","UnsubscriptionError","timeInterval_1","timestamp_1","TestScheduler_1","TestScheduler","VirtualTimeScheduler_1","AjaxObservable_1","asap_1","animationFrame_1","rxSubscriber_1","animationFrame","Symbol","rxSubscriber","bindCallback_1","bindCallback","bindNodeCallback_1","bindNodeCallback","combineLatest_1","concat_1","defer_1","defer","ajax_1","ajax","webSocket_1","webSocket","empty_1","forkJoin_1","from_1","fromEvent_1","fromEvent","fromEventPattern_1","fromEventPattern","fromPromise_1","GenerateObservable_1","generate","GenerateObservable","if_1","if","_if","interval_1","merge_1","never_1","never","of_1","onErrorResumeNext_1","pairs_1","pairs","race_1","range_1","range","throw_1","_throw","timer_1","timer","using_1","using","zip_1","zip","audit_1","audit","auditTime_1","auditTime","buffer_1","bufferCount_1","bufferCount","bufferTime_1","bufferTime","bufferToggle_1","bufferToggle","bufferWhen_1","bufferWhen","catch_1","combineAll_1","combineAll","concatAll_1","concatMap_1","concatMapTo_1","concatMapTo","count_1","debounce_1","debounce","debounceTime_1","debounceTime","defaultIfEmpty_1","defaultIfEmpty","delay_1","delayWhen_1","delayWhen","dematerialize_1","dematerialize","distinct_1","distinct","distinctUntilChanged_1","distinctUntilKeyChanged_1","distinctUntilKeyChanged","do_1","_do","elementAt_1","elementAt","every_1","exhaust_1","exhaust","exhaustMap_1","exhaustMap","expand_1","expand","filter_1","finally_1","finally","_finally","find_1","findIndex_1","findIndex","first_1","groupBy_1","groupBy","ignoreElements_1","ignoreElements","isEmpty_1","isEmpty","last_1","let_1","let","letProto","letBind","mapTo_1","mapTo","materialize_1","materialize","max_1","mergeAll","flatMap","mergeMapTo_1","flatMapTo","mergeScan_1","mergeScan","min_1","multicast_1","multicast","pairwise_1","pairwise","partition_1","partition","pluck_1","pluck","publish_1","publish","publishBehavior_1","publishBehavior","publishLast_1","publishLast","publishReplay_1","publishReplay","reduce_1","repeat_1","repeat","repeatWhen_1","repeatWhen","retry_1","retry","retryWhen_1","retryWhen","sample_1","sample","sampleTime_1","sampleTime","scan_1","scan","sequenceEqual_1","sequenceEqual","share_1","share","shareReplay_1","shareReplay","single_1","single","skip_1","skip","skipLast_1","skipLast","skipUntil_1","skipUntil","skipWhile_1","skipWhile","startWith_1","startWith","subscribeOn_1","subscribeOn","switch_1","switch","_switch","switchMap_1","switchMap","switchMapTo_1","switchMapTo","take_1","take","takeLast_1","takeLast","takeUntil_1","takeUntil","takeWhile_1","takeWhile","throttle_1","throttleTime_1","throttleTime","timeout_1","timeoutWith_1","timeoutWith","toArray_1","toArray","toPromise_1","toPromise","window_1","windowCount_1","windowCount","windowTime_1","windowToggle_1","windowToggle","windowWhen_1","windowWhen","withLatestFrom_1","withLatestFrom","zipAll_1","zipAll","ScalarObservable_1","EmptyObservable_1","arrayLike","EmptyObservable","ScalarObservable","subject","BoundCallbackObservable","callbackFunc","func","handler","handlerFn","innerArgs","result_1","self","result_2","BoundNodeCallbackObservable","DeferObservable","observableFactory","DeferSubscriber","tryDefer","_callFactory","ErrorObservable","syncErrorThrowable","sources","ForkJoinSubscriber","completed","haveValues","total","innerSubscription","_hasValue","isNodeStyleEventEmitter","sourceObj","isJQueryStyleEventEmitter","isNodeList","isHTMLCollection","isEventTarget","addEventListener","removeEventListener","isFunction_1","FromEventObservable","eventName","isFunction","setupSubscription","source_1","source_2","source_3","FromEventPatternObservable","addHandler","removeHandler","_callSelector","retValue","_callAddHandler","errorSubscriber","selfSelector","initialState","iterate","initialStateOrOptions","resultSelectorOrObservable","conditionResult","needIterate","IfObservable","thenSource","elseSource","IfSubscriber","tryIf","isNumeric_1","IntervalObservable","period","getIterator","StringIterator","ArrayIterator","toLength","numberIsFinite","sign","floor","abs","maxSafeInteger","valueAsNumber","return","pow","noop_1","NeverObservable","PairsObservable","RangeObservable","start","_count","SubscribeOnObservable","delayTime","isDate_1","TimerObservable","dueTime","initialDelay","UsingObservable","resourceFactory","resource","UsingSubscriber","tryUse","BoundCallbackObservable_1","BoundNodeCallbackObservable_1","DeferObservable_1","assign_1","WebSocketSubject","urlConfigOrSource","WebSocketCtor","WebSocket","_output","sock","_resetState","socket","multiplex","subMsg","unsubMsg","messageFilter","_connectSocket","protocol","binaryType","onopen","openObserver","closingObserver","code","onclose","closeObserver","wasClean","onmessage","WebSocketSubject_1","FromEventObservable_1","FromEventPatternObservable_1","IfObservable_1","IntervalObservable_1","NeverObservable_1","PairsObservable_1","RangeObservable_1","ErrorObservable_1","TimerObservable_1","UsingObservable_1","AuditOperator","AuditSubscriber","clearThrottle","AuditTimeOperator","AuditTimeSubscriber","closingNotifier","BufferOperator","bufferSubscriber","BufferSubscriber","subscribeToClosingNotifier","startBufferEvery","BufferCountOperator","subscriberClass","BufferSkipCountSubscriber","BufferCountSubscriber","buffers","bufferTimeSpan","bufferCreationInterval","maxBufferSize","BufferTimeOperator","dispatchBufferTimeSpanOnly","prevContext","closeContext","openContext","closeAction","dispatchBufferCreation","dispatchBufferClose","BufferTimeSubscriber","Context","timespanOnly","timeSpanOnlyState","closeState","creationState","filledBufferContext","context_1","onBufferFull","context_2","openings","closingSelector","BufferToggleOperator","BufferToggleSubscriber","closeBuffer","openBuffer","trySubscribe","BufferWhenOperator","BufferWhenSubscriber","subscribing","closingSubscription","CountOperator","CountSubscriber","DebounceOperator","DebounceSubscriber","durationSubscription","emitValue","DebounceTimeOperator","debouncedNext","DebounceTimeSubscriber","debouncedSubscription","clearDebounce","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","absoluteDelay","delayFor","DelayOperator","DelaySubscriber","_schedule","scheduleNotification","DelayMessage","delayDurationSelector","subscriptionDelay","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","DeMaterializeOperator","DeMaterializeSubscriber","flushes","DistinctOperator","Set_1","DistinctSubscriber","Set","clear","_useKeySelector","_finalizeNext","DoOperator","DoSubscriber","safeSubscriber","syncErrorThrown","syncErrorValue","ElementAtOperator","ElementAtSubscriber","SwitchFirstOperator","SwitchFirstSubscriber","hasSubscription","SwitchFirstMapOperator","SwitchFirstMapSubscriber","tryNext","ExpandOperator","ExpandSubscriber","subscribeToProjection","FinallyOperator","FinallySubscriber","elementSelector","subjectSelector","GroupByOperator","Map_1","FastMap_1","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","FastMap","groupedObservable","GroupedObservable","GroupDurationSubscriber","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptyOperator","IsEmptySubscriber","MapToOperator","MapToSubscriber","MaterializeOperator","MaterializeSubscriber","comparer","MergeScanOperator","MergeScanSubscriber","PairwiseOperator","PairwiseSubscriber","hasPrev","prev","not_1","not","properties","plucker","props","currentProp","RepeatOperator","RepeatSubscriber","notifier","RepeatWhenOperator","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","retriesSubscription","subscribeToRetries","notifications","RetryOperator","RetrySubscriber","RetryWhenOperator","RetryWhenSubscriber","SampleOperator","sampleSubscriber","SampleSubscriber","SampleTimeOperator","dispatchNotification","SampleTimeSubscriber","ScanOperator","ScanSubscriber","_seed","compareTo","comparor","SequenceEqualOperator","SequenceEqualSubscriber","_oneComplete","SequenceEqualCompareToSubscriber","checkValues","_c","areEqual","nextB","_isComplete","refCount","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipOperator","SkipSubscriber","SkipLastOperator","_skipCount","SkipLastSubscriber","_ring","skipCount","currentIndex","ring","oldValue","SkipUntilOperator","SkipUntilSubscriber","isInnerStopped","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","SubscribeOnOperator","SubscribeOnObservable_1","SwitchOperator","SwitchSubscriber","unsubscribeInner","SwitchMapOperator","SwitchMapSubscriber","_tryNotifyNext","SwitchMapToOperator","SwitchMapToSubscriber","inner","tryResultSelector","TakeOperator","TakeSubscriber","TakeLastOperator","TakeLastSubscriber","TakeUntilOperator","TakeUntilSubscriber","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","ThrottleTimeOperator","ThrottleTimeSubscriber","due","absoluteTimeout","waitFor","TimeoutOperator","errorInstance","TimeoutSubscriber","scheduleTimeout","dispatchTimeout","withObservable","TimeoutWithOperator","TimeoutWithSubscriber","ToArrayOperator","ToArraySubscriber","PromiseCtor","Rx","windowBoundaries","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","windowSize","startWindowEvery","WindowCountOperator","WindowCountSubscriber","windows","windowTimeSpan","windowCreationInterval","maxWindowSize","WindowTimeOperator","dispatchWindowTimeSpanOnly","closeWindow","dispatchWindowCreation","timeSpanState","dispatchWindowClose","WindowTimeSubscriber","CountedSubject","_numberOfNextedValues","numberOfNextedValues","window_2","WindowToggleOperator","WindowToggleSubscriber","openSubscription","context_3","context_4","unsubscribeClosingNotification","closingNotification","WithLatestFromOperator","WithLatestFromSubscriber","found","AnimationFrame_1","AnimationFrameAction","AnimationFrame","requestAnimationFrame","cancelAnimationFrame","AnimationFrameScheduler","Immediate_1","Immediate","AnimationFrameAction_1","AnimationFrameScheduler_1","SubscriptionLoggable_1","applyMixins_1","ColdObservable","messages","scheduleMessages","messagesLength","HotObservable","setup","ColdObservable_1","HotObservable_1","defaultMaxFrame","assertDeepEqual","hotObservables","coldObservables","flushTests","createTime","marbles","createColdObservable","parseMarbles","cold","createHotObservable","materializeInnerObservable","outerFrame","expectObservable","unsubscriptionMarbles","flushTest","ready","unsubscriptionFrame","parseMarblesAsSubscriptions","toBe","expected","expectSubscriptions","actualSubscriptionLogs","marblesArray","readyFlushTests","test_1","groupStart","subscriptionFrame","materializeInnerObservables","testMessages","subIndex","frameOffset","RequestAnimationFrameDefinition","mozRequestAnimationFrame","mozCancelAnimationFrame","webkitRequestAnimationFrame","webkitCancelAnimationFrame","msRequestAnimationFrame","msCancelAnimationFrame","oRequestAnimationFrame","oCancelAnimationFrame","ImmediateDefinition","nextHandle","tasksByHandle","currentlyRunningATask","canUseProcessNextTick","createProcessNextTickSetImmediate","canUsePostMessage","createPostMessageSetImmediate","canUseMessageChannel","createMessageChannelSetImmediate","canUseReadyStateChange","createReadyStateChangeSetImmediate","createSetTimeoutSetImmediate","identify","MessageChannel","document","createElement","postMessage","importScripts","postMessageIsAsynchronous_1","oldOnMessage","partiallyApplied","addFromSetImmediateArguments","runIfPresent","messagePrefix","random","onGlobalMessage","globalMessageHandler","task","channel","port1","port2","doc","html","documentElement","script","removeChild","appendChild","MapPolyfill_1","MapPolyfill","size","_values","_keys","minimalSetImpl","MinimalSet","assignImpl","getAssign","pred","notPred","global","registerImmediate","attachTo","getPrototypeOf","postMessageIsAsynchronous","attachEvent","axis_calculator_service_1","calculator_component_1","axis_settings_component_1","_1","CalculatorComponent","AxisSettingsComponent","AxisHeartModule","axisCalculatorSettings","initR","initQS","arrhythmia_service_1","arrhythmia_component_1","arrhythmia_settings_component_1","ArrhythmiaComponent","ArrhythmiaSettingsComponent","IsArrhythmiaModule","validators_1","fb","axisCalculatorModel","settingsForm","useSumsField","formChanged","checkFormChanges","changeInputs","formValue","sessionStorage","getItem","setSettings","setItem","showResult","messageLoop","calculatorForm","r1","qs1","r3","qs3","displayValue","resetWaves","resetSums","outputValue","arrhythmiaModel","arrhythmiaForm","output","service","usePercentageField","moreThenOnlyField","CalcWrapperComponent","FAQListComponent","IndexComponent","NotFoundComponent","AppComponent","styles","encapsulation","ViewEncapsulation","None","not_found_component_1","calc_wrapper_component_1","index_component_1","faq_list_component_1","require","oe","platform_browser_1","platform_browser_dynamic_1","app_routes_1","app_component_1","index_1","index_2","AppModule","BrowserModule","bootstrap","LocationStrategy","HashLocationStrategy","APP_BASE_HREF","platformBrowserDynamic","bootstrapModule"],"mappings":"AAAAA,cAAc,EAAE,EAAE,IACX,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACC,CAEF,SAAUC,EAAQC,EAASC,GAEjC,YCdAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAC,GAAAJ,EAAA,IACAK,EAAAL,EAAA,GA2CAD,GAAAO,MAAA,GAAAD,GAAAE,eAAAH,EAAAI,cDoBQ,CACA,CACA,CAEF,SAAUV,EAAQW,EAAqBT,GAE7C;;;;;;;AE2NA,QAAAU,GAAAP,GAEA,aAAAA,GAAA,IAAAA,EAAAQ,OAgMA,QAAAC,GAAAC,GACA,aAAAA,EAMA,QAAAC,GAAAC,GACA,GAAqBC,GAAAhB,EAAAiB,EAAAC,EAAA,eAAAH,GAAAf,EAAAiB,EAAAE,EAAA,aAAAJ,IACrB,KAAAf,EAAAiB,EAAAC,EAAA,kBAAAF,GACA,SAAAI,OAAA,sDAEA,OAAAJ,GAOA,QAAAK,GAAAC,EAAAC,GACA,MAAAA,GAAAC,IAAA,SAAAC,GAAwC,MAAAA,GAAAH,KAOxC,QAAAI,GAAAJ,EAAAC,GACA,MAAAA,GAAAC,IAAA,SAAAC,GAAwC,MAAAA,GAAAH,KAMxC,QAAAK,GAAAC,GACA,GAAqBC,GAAAD,EAAAE,OAAA,SAAAD,EAAAE,GACrB,aAAAA,EAAA9B,OAAA+B,UAA+D,EAAAD,GAAA,MAE/D,YAAA9B,OAAAgC,KAAAJ,GAAAlB,OAAA,KAAAkB,EA0GA,QAAAK,KAEA,sBAAAC,MADqBnC,EAAAiB,EAAAmB,EAAA,cAAApC,EAAAiB,EAAAmB,EAAA,cAAAC,eAAA,IACrBC;;;;;;;AA2HA,QAAAC,GAAAC,GACA,SAAAC,SACA,SAAAC,GAA6B,SAAAD,SAAAC,IAG7B,EAOA,QAAAC,GAAAH,GACA,SAAAC,SACA,SAAAC,GAA6B,SAAAD,SAAAC,IAG7B;;;;;;;AA6FA,QAAAE,KACA,SAAAxB,OAAA,iBAiWA,QAAAyB,GAAAC,EAAA3C,GACA,aAAA2C,EACA,GAAA3C,GACAA,GAAA,gBAAAA,KACAA,EAAA,WACA2C,EAAA,KAAA3C,GAAA4C,MAAA,OAMA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,MAAA,QA0RA,QAAAC,GAAAL,EAAA3C,GACA,aAAA2C,EACA,GAAA3C,GACA,gBAAAA,KACAA,EAAA,IAAAA,EAAA,KACAA,GAAA,gBAAAA,KACAA,EAAA,WACA2C,EAAA,KAAA3C,GAAA4C,MAAA,OAMA,QAAAK,GAAAH,GACA,MAAAA,GAAAC,MAAA;;;;;;;AAiSA,QAAAG,GAAAC,EAAAC,GACA,MAAAA,GAAA,KAAAC,QAAAF,IAOA,QAAAG,GAAAnC,EAAAoC,GACApC,GACAqC,EAAAD,EAAA,4BACAA,EAAAE,eACAD,EAAAD,EAAA,2CACApC,EAAAkB,UAAAqB,EAAAC,SAAyDxC,EAAA,UAAAoC,EAAAlB,YACzDlB,EAAAyC,eAAAF,EAAAG,cAAmE1C,EAAA,eAAAoC,EAAAK,iBACnEL,EAAA,cAAAO,WAAA3C,EAAAnB,OAGAuD,EAAA,cAAAQ,iBAAA,SAAAC,GACAT,EAAAU,kBAAAD,GACA7C,EAAA+C,cACA/C,EAAAgD,SAAAH,GAAoCI,uBAAA,MAIpCb,EAAA,cAAAc,kBAAA,WAAuD,MAAAlD,GAAAmD,kBACvDnD,EAAA4C,iBAAA,SAAAC,EAAAO,GAGAhB,EAAA,cAAAO,WAAAE,GAEAO,GACAhB,EAAAU,kBAAAD,KAEAT,EAAA,cAAAiB,kBACArD,EAAAsD,yBAAA,SAAAC,GAA8EnB,EAAA,+BAAAmB,KAG9EnB,EAAAoB,eAAAC,QAAA,SAAAvC,GACA,EAAAwC,2BACA,uCAAqE,MAAA1D,GAAA2D,6BAErEvB,EAAAwB,oBAAAH,QAAA,SAAAvC,GACA,EAAAwC,2BACA,uCAAqE,MAAA1D,GAAA2D,6BAQrE,QAAAE,GAAA7D,EAAAoC,GACAA,EAAA,cAAAQ,iBAAA,WAAwD,MAAAkB,GAAA1B,KACxDA,EAAA,cAAAc,kBAAA,WAAyD,MAAAY,GAAA1B,KACzDA,EAAAoB,eAAAC,QAAA,SAAAvC,GACAA,EAAAwC,2BACAxC,EAAAwC,0BAAA,QAGAtB,EAAAwB,oBAAAH,QAAA,SAAAvC,GACAA,EAAAwC,2BACAxC,EAAAwC,0BAAA,QAGA1D,GACAA,EAAA+D,kBAOA,QAAAC,GAAAhE,EAAAoC,GACA,MAAApC,GACAqC,EAAAD,EAAA,4BACApC,EAAAkB,UAAAqB,EAAAC,SAAAxC,EAAAkB,UAAAkB,EAAAlB,YACAlB,EAAAyC,eAAAF,EAAAG,cAAA1C,EAAAyC,eAAAL,EAAAK,iBAMA,QAAAqB,GAAA1B,GACA,MAAAC,GAAAD,EAAA,0EAOA,QAAAC,GAAAD,EAAA6B,GACA,GAAqBC,EAUrB,MARAA,GADA9B,EAAA,KAAA/C,OAAA,EACA,UAAA+C,EAAA,KAAA+B,KAAA,YAEA/B,EAAA,QACA,UAAAA,EAAAgC,KAAA,IAGA,6BAEA,GAAAtE,OAAAmE,EAAA,IAAAC,GAMA,QAAAG,GAAApE,GACA,aAAAA,EAAAsC,EAAAC,QAAAvC,EAAAC,IAAAe,IAAA,KAMA,QAAAqD,GAAArE,GACA,aAAAA,EAAAsC,EAAAG,aAAAzC,EAAAC,IAAAmB,IACA,KAOA,QAAAkD,GAAAC,EAAAC,GACA,IAAAD,EAAAE,eAAA,SACA,QACA,IAAqBC,GAAAH,EAAA,KACrB,SAAAG,EAAAC,kBAEAlG,EAAAiB,EAAAC,EAAA,oBAAA6E,EAAAE,EAAAE,cAcA,QAAAC,GAAAxC,GACA,MAAAyC,IAAAC,KAAA,SAAAC,GAAgD,MAAA3C,GAAA4C,cAAAD,IAOhD,QAAAE,GAAA/C,EAAAgD,GACA,IAAAA,EACA,WACA,IAAqBC,OAAAC,GACAC,MAAAD,GACAE,MAAAF,EAgBrB,OAfAF,GAAA3B,QAAA,SAAAtD,GACAA,EAAA+E,cAAAO,EACAJ,EAAAlF,EAEA2E,EAAA3E,IACAoF,GACAlD,EAAAD,EAAA,mEACAmD,EAAApF,IAGAqF,GACAnD,EAAAD,EAAA,iEACAoD,EAAArF,KAGAqF,IAEAD,IAEAF,IAEAhD,EAAAD,EAAA,iDACA,QAoQA,QAAAsD,GAAA1F,EAAAoE,EAAAuB,GACA,aAAAvB,EACA,MACAA,YAAAwB,SACAxB,EAAA,EAAAxC,MAAA+D,IAEAvB,YAAAwB,QAAA,IAAAxB,EAAA/E,OACA,KACA,EAAAmB,OAAA,SAAAL,EAAA6B,GACA,MAAA7B,aAAA0F,IACA1F,EAAA2F,SAAA9D,IAAA,KAEA7B,YAAA4F,IACA5F,EAAA6F,GAAqC,SAErC,MACKhG,IAML,QAAAiG,GAAA/E,GACA,MAAA0E,OAAAM,QAAAhF,GAAAmD,EAAAnD,MAAA,KAMA,QAAAiF,GAAA1D,GACA,MAAAmD,OAAAM,QAAAzD,GAAA6B,EAAA7B,GACAA,GAAA,KAonFA,QAAA2D,GAAAC,EAAAC,GACA,GAAqBC,GAAAF,EAAAG,QAAAF,EACrBC,IAAA,GACAF,EAAAI,OAAAF,EAAA,GAyPA,QAAAG,GAAAzE,GACA,QAAAA,YAAA0E,KAAA1E,YAAA2E,KACA3E,YAAA4E,KFvhKAlI,OAAOC,eAAeO,EAAqB,cAAgBN,OAAO,IACnCH,EAAoBoI,EAAE3H,EAAqB,2BAA4B,WAAa,MAAO4H,KAC3FrI,EAAoBoI,EAAE3H,EAAqB,6BAA8B,WAAa,MAAO6H,MAC7FtI,EAAoBoI,EAAE3H,EAAqB,+BAAgC,WAAa,MAAO8H,KAC/FvI,EAAoBoI,EAAE3H,EAAqB,mBAAoB,WAAa,MAAO+H,KACnFxI,EAAoBoI,EAAE3H,EAAqB,oBAAqB,WAAa,MAAOgI,KACpFzI,EAAoBoI,EAAE3H,EAAqB,0BAA2B,WAAa,MAAOiI,KAC1F1I,EAAoBoI,EAAE3H,EAAqB,uBAAwB,WAAa,MAAOsG,KACvF/G,EAAoBoI,EAAE3H,EAAqB,YAAa,WAAa,MAAOkI,KAC5E3I,EAAoBoI,EAAE3H,EAAqB,kBAAmB,WAAa,MAAOmI,MAClF5I,EAAoBoI,EAAE3H,EAAqB,uBAAwB,WAAa,MAAOoI,MACvF7I,EAAoBoI,EAAE3H,EAAqB,SAAU,WAAa,MAAOqI,MACzE9I,EAAoBoI,EAAE3H,EAAqB,UAAW,WAAa,MAAOsI,MAC1E/I,EAAoBoI,EAAE3H,EAAqB,eAAgB,WAAa,MAAOuI,MAC/EhJ,EAAoBoI,EAAE3H,EAAqB,4BAA6B,WAAa,MAAOwI,MAC5FjJ,EAAoBoI,EAAE3H,EAAqB,uBAAwB,WAAa,MAAOyI,MACvFlJ,EAAoBoI,EAAE3H,EAAqB,kBAAmB,WAAa,MAAO0I,MAClFnJ,EAAoBoI,EAAE3H,EAAqB,qBAAsB,WAAa,MAAOyH,MACrFlI,EAAoBoI,EAAE3H,EAAqB,gBAAiB,WAAa,MAAO0H,MAChFnI,EAAoBoI,EAAE3H,EAAqB,gBAAiB,WAAa,MAAOwH,MAChFjI,EAAoBoI,EAAE3H,EAAqB,iBAAkB,WAAa,MAAO2I,MACjFpJ,EAAoBoI,EAAE3H,EAAqB,6BAA8B,WAAa,MAAO4I,MAC7FrJ,EAAoBoI,EAAE3H,EAAqB,qCAAsC,WAAa,MAAO6I,MACrGtJ,EAAoBoI,EAAE3H,EAAqB,4BAA6B,WAAa,MAAO8I,MAC5FvJ,EAAoBoI,EAAE3H,EAAqB,iBAAkB,WAAa,MAAO+I,MACjFxJ,EAAoBoI,EAAE3H,EAAqB,qBAAsB,WAAa,MAAOgJ,MACrFzJ,EAAoBoI,EAAE3H,EAAqB,qBAAsB,WAAa,MAAOiJ,MACrF1J,EAAoBoI,EAAE3H,EAAqB,mBAAoB,WAAa,MAAOkJ,MACnF3J,EAAoBoI,EAAE3H,EAAqB,oBAAqB,WAAa,MAAOmJ,MACpF5J,EAAoBoI,EAAE3H,EAAqB,cAAe,WAAa,MAAOoJ,MAC9E7J,EAAoBoI,EAAE3H,EAAqB,kBAAmB,WAAa,MAAOqJ,MAClF9J,EAAoBoI,EAAE3H,EAAqB,YAAa,WAAa,MAAO4G,MAC5ErH,EAAoBoI,EAAE3H,EAAqB,cAAe,WAAa,MAAOsJ,MAC9E/J,EAAoBoI,EAAE3H,EAAqB,YAAa,WAAa,MAAO0G,MAC5EnH,EAAoBoI,EAAE3H,EAAqB,sBAAuB,WAAa,MAAOuJ,KACtFhK,EAAoBoI,EAAE3H,EAAqB,gBAAiB,WAAa,MAAOwJ,KAChFjK,EAAoBoI,EAAE3H,EAAqB,aAAc,WAAa,MAAOoD,KAC7E7D,EAAoBoI,EAAE3H,EAAqB,UAAW,WAAa,MAAOyJ,MAC1ElK,EAAoBoI,EAAE3H,EAAqB,cAAe,WAAa,MAAO0J,MAC9EnK,EAAoBoI,EAAE3H,EAAqB,sBAAuB,WAAa,MAAO2J,MACtFpK,EAAoBoI,EAAE3H,EAAqB,MAAO,WAAa,MAAO4J,MACtErK,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO6J,MACrEtK,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO8J,MACrEvK,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO+J,MACrExK,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOgK,KACrEzK,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOiK,KACrE1K,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOkK,MACrE3K,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOmK,MACrE5K,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOoK,MACrE7K,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOqK,MACrE9K,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOsK,MACrE/K,EAAoBoI,EAAE3H,EAAqB,MAAO,WAAa,MAAOuK,MACtEhL,EAAoBoI,EAAE3H,EAAqB,MAAO,WAAa,MAAOwK,KACtEjL,EAAoBoI,EAAE3H,EAAqB,MAAO,WAAa,MAAOyK,KACtElL,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO0K,MACrEnL,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO2K,MACrEpL,EAAoBoI,EAAE3H,EAAqB,MAAO,WAAa,MAAO4K,MACtErL,EAAoBoI,EAAE3H,EAAqB,MAAO,WAAa,MAAO6K,MACtEtL,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO8K,MACrEvL,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO+K,MACrExL,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOgL,MACrEzL,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOiL,MACrE1L,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOkL,MACrE3L,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOmL,MACrE5L,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOoL,MACrE7L,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOqL,MACrE9L,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOsL,MACrE/L,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOuL,MACrEhM,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOwL,MACrEjM,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOyL,MACrElM,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO0L,MACrEnM,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO2L,KAC/E,IAAIC,GAAsCrM,EAAoB,GAC1DkB,EAA8ClB,EAAoB,GAClEsM,EAAyDtM,EAAoB,IAE7EmB,GADiEnB,EAAoBuM,EAAED,GAC3BtM,EAAoB,KAEhFwM,GADoExM,EAAoBuM,EAAEpL,GACxCnB,EAAoB,KAEtEoC,GAD0DpC,EAAoBuM,EAAEC,GACtBxM,EAAoB,KE/HvGqI,EAAA,WACA,QAAAA,MAmNA,MA1MAA,GAAAoE,UAAAnL,QAAA,aACArB,OAAAC,eAAAmI,EAAAoE,UAAA,SAKAC,IAAA,WAA0B,MAAAC,MAAArL,QAAAqL,KAAArL,QAAAnB,MAAA,MAC1ByM,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,SAQAC,IAAA,WAA0B,MAAAC,MAAArL,QAAAqL,KAAArL,QAAAwL,MAAA,MAC1BF,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,WAQAC,IAAA,WAA0B,MAAAC,MAAArL,QAAAqL,KAAArL,QAAAyL,QAAA,MAC1BH,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,WAQAC,IAAA,WAA0B,MAAAC,MAAArL,QAAAqL,KAAArL,QAAA0L,QAAA,MAC1BJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,YASAC,IAAA,WAA0B,MAAAC,MAAArL,QAAAqL,KAAArL,QAAA2L,SAAA,MAC1BL,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,WAQAC,IAAA,WAA0B,MAAAC,MAAArL,QAAAqL,KAAArL,QAAA4L,QAAA,MAC1BN,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,UAMAC,IAAA,WAA0B,MAAAC,MAAArL,QAAAqL,KAAArL,QAAAS,OAAA,MAC1B6K,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,YASAC,IAAA,WAA0B,MAAAC,MAAArL,QAAAqL,KAAArL,QAAA6L,SAAA,MAC1BP,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,SASAC,IAAA,WAA0B,MAAAC,MAAArL,QAAAqL,KAAArL,QAAA8L,MAAA,MAC1BR,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,WAMAC,IAAA,WAA0B,MAAAC,MAAArL,QAAAqL,KAAArL,QAAA+L,QAAA,MAC1BT,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,aAMAC,IAAA,WAA0B,MAAAC,MAAArL,QAAAqL,KAAArL,QAAAgM,UAAA,MAC1BV,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,iBAMAC,IAAA,WACA,MAAAC,MAAArL,QAAAqL,KAAArL,QAAAiM,cAAA,MAEAX,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,gBAMAC,IAAA,WACA,MAAAC,MAAArL,QAAAqL,KAAArL,QAAAkM,aAAA,MAEAZ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAmI,EAAAoE,UAAA,QAOAC,IAAA,WAA0B,aAC1BE,YAAA,EACAC,cAAA,IAaAxE,EAAAoE,UAAAgB,MAAA,SAAAtN,OACA,KAAAA,IAA+BA,MAAAyG,IAC/B+F,KAAArL,SACAqL,KAAArL,QAAAmM,MAAAtN,IAWAkI,EAAAoE,UAAAiB,SAAA,SAAAC,EAAAjI,GACA,QAAAiH,KAAArL,SAAAqL,KAAArL,QAAAoM,SAAAC,EAAAjI,IAWA2C,EAAAoE,UAAAmB,SAAA,SAAAD,EAAAjI,GACA,MAAAiH,MAAArL,QAAAqL,KAAArL,QAAAsM,SAAAD,EAAAjI,GAAA,MAEA2C,KAiBAG,EAAA,SAAAqF,GAEA,QAAArF,KACA,cAAAqF,KAAAC,MAAAnB,KAAAoB,YAAApB,KAoBA,MAtBAN,GAAA,UAAA7D,EAAAqF,GAIA5N,OAAAC,eAAAsI,EAAAiE,UAAA,iBAKAC,IAAA,WAA0B,aAC1BE,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAsI,EAAAiE,UAAA,QAKAC,IAAA,WAA0B,aAC1BE,YAAA,EACAC,cAAA,IAEArE,GACCH,GAuBD4B,EAAA,GAAA/I,GAAA,+BAWA8I,EAAA,GAAA9I,GAAA,oCACA8M,EAAA,+LAeAnK,EAAA,WACA,QAAAA,MAqJA,MA9IAA,GAAAoK,IAAA,SAAAA,GACA,gBAAA3M,GACA,GAAAZ,EAAAY,EAAAnB,QAAAO,EAAAuN,GACA,WAEA,IAA6B9N,GAAA+N,WAAA5M,EAAAnB,MAG7B,QAAAgO,MAAAhO,MAAA8N,GAAmDA,KAASA,MAAAG,OAAA9M,EAAAnB,QAAwC,OAQpG0D,EAAAwK,IAAA,SAAAA,GACA,gBAAA/M,GACA,GAAAZ,EAAAY,EAAAnB,QAAAO,EAAA2N,GACA,WAEA,IAA6BlO,GAAA+N,WAAA5M,EAAAnB,MAG7B,QAAAgO,MAAAhO,MAAAkO,GAAmDA,KAASA,MAAAD,OAAA9M,EAAAnB,QAAwC,OAQpG0D,EAAAyK,SAAA,SAAAhN,GACA,MAAAZ,GAAAY,EAAAnB,QAAmDmO,UAAA,GAAmB,MAOtEzK,EAAA0K,aAAA,SAAAjN,GACA,WAAAA,EAAAnB,MAAA,MAAgDmO,UAAA,IAOhDzK,EAAA2K,MAAA,SAAAlN,GACA,MAAA0M,GAAA7L,KAAAb,EAAAnB,OAAA,MAA0DqO,OAAA,IAO1D3K,EAAA4K,UAAA,SAAAA,GACA,gBAAAnN,GACA,GAAAZ,EAAAY,EAAAnB,OACA,WAEA,IAA6BQ,GAAAW,EAAAnB,MAAAmB,EAAAnB,MAAAQ,OAAA,CAC7B,OAAAA,GAAA8N,GACiBC,WAAeC,eAAAF,EAAAG,aAAAjO,IAChC,OAQAkD,EAAAgL,UAAA,SAAAA,GACA,gBAAAvN,GACA,GAA6BX,GAAAW,EAAAnB,MAAAmB,EAAAnB,MAAAQ,OAAA,CAC7B,OAAAA,GAAAkO,GACiBC,WAAeH,eAAAE,EAAAD,aAAAjO,IAChC,OAQAkD,EAAAkL,QAAA,SAAAA,GACA,IAAAA,EACA,MAAAlL,GAAAmL,aACA,IAAyBC,GACAC,CASzB,OARA,gBAAAH,IACAG,EAAA,IAAAH,EAAA,IACAE,EAAA,GAAAE,QAAAD,KAGAA,EAAAH,EAAAK,WACAH,EAAAF,GAEA,SAAAzN,GACA,GAAAZ,EAAAY,EAAAnB,OACA,WAEA,IAA6BA,GAAAmB,EAAAnB,KAC7B,OAAA8O,GAAA9M,KAAAhC,GAAA,MACiB4O,SAAaM,gBAAAH,EAAAI,YAAAnP,MAQ9B0D,EAAAmL,cAAA,SAAAtM,GAA6C,aAK7CmB,EAAAC,QAAA,SAAAvC,GACA,IAAAA,EACA,WACA,IAAyBgO,GAAAhO,EAAAiO,OAAA5O,EACzB,WAAA2O,EAAA5O,OACA,KACA,SAAAW,GACA,MAAAK,GAAAN,EAAAC,EAAAiO,MAOA1L,EAAAG,aAAA,SAAAzC,GACA,IAAAA,EACA,WACA,IAAyBgO,GAAAhO,EAAAiO,OAAA5O,EACzB,WAAA2O,EAAA5O,OACA,KACA,SAAAW,GACA,GAA6BmO,GAAA/N,EAAAJ,EAAAiO,GAAA/N,IAAAV,EAC7B,OAAA0L,GAAA,IAAAkD,KAAA1P,EAAAiB,EAAAqL,EAAA,UAAAmD,GAAA9N,KAGAkC,KA2DA4E,EAAA,GAAAvH,GAAA,kCAQAuJ,GACAkF,QAAAlH,EACAmH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAqH,KACzCsH,OAAA,GAYAtH,EAAA,WAKA,QAAAA,GAAAuH,EAAAC,GACApD,KAAAmD,YACAnD,KAAAoD,cACApD,KAAAqD,SAAA,SAAAC,KACAtD,KAAAuD,UAAA,aA0BA,MApBA3H,GAAAkE,UAAAxI,WAAA,SAAA9D,GACAwM,KAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,UAAAjQ,IAMAoI,EAAAkE,UAAAvI,iBAAA,SAAAmM,GAA6E1D,KAAAqD,SAAAK,GAK7E9H,EAAAkE,UAAAjI,kBAAA,SAAA6L,GAA8E1D,KAAAuD,UAAAG,GAK9E9H,EAAAkE,UAAA9H,iBAAA,SAAAE,GACA8H,KAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,WAAAvL,IAEA0D,IAEAA,GAAA+H,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,wGACAC,MAAuBC,WAAA,kCAAAC,SAAA,eACvBC,WAAApG,OAMAlC,EAAAuI,eAAA,WAA2D,QACtDP,KAAArP,EAAA,YACAqP,KAAArP,EAAA;;;;;;;AASL,GAAAwJ,IACAiF,QAAAlH,EACAmH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAA6F,KACzC8I,OAAA,GAeAnH,EAAA,GAAAxH,GAAA,uCAYA6F,EAAA,WAMA,QAAAA,GAAA+I,EAAAC,EAAAgB,GACApE,KAAAmD,YACAnD,KAAAoD,cACApD,KAAAoE,mBACApE,KAAAqD,SAAA,SAAAC,KACAtD,KAAAuD,UAAA,aAIAvD,KAAAqE,YAAA,EACA,MAAArE,KAAAoE,mBACApE,KAAAoE,kBAAA7O,KAoDA,MA7CA6E,GAAA0F,UAAAxI,WAAA,SAAA9D,GACA,GAAyB8Q,GAAA,MAAA9Q,EAAA,GAAAA,CACzBwM,MAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,QAAAa,IAMAlK,EAAA0F,UAAAvI,iBAAA,SAAAmM,GAAqE1D,KAAAqD,SAAAK,GAKrEtJ,EAAA0F,UAAAjI,kBAAA,SAAA6L,GAAsE1D,KAAAuD,UAAAG,GAKtEtJ,EAAA0F,UAAA9H,iBAAA,SAAAE,GACA8H,KAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,WAAAvL,IAOAkC,EAAA0F,UAAAyE,aAAA,SAAA/Q,KACAwM,KAAAoE,kBAAApE,KAAAoE,mBAAApE,KAAAqE,aACArE,KAAAqD,SAAA7P,IAOA4G,EAAA0F,UAAA0E,kBAAA,WAAoExE,KAAAqE,YAAA,GAMpEjK,EAAA0F,UAAA2E,gBAAA,SAAAjR,GACAwM,KAAAqE,YAAA,EACArE,KAAAoE,kBAAApE,KAAAqD,SAAA7P,IAEA4G,IAEAA,GAAAuJ,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,+MAIAC,MACAW,UAAA,oCACAT,SAAA,cACAU,qBAAA,sBACAC,mBAAA,wCAEAV,WAAAnG,OAMA3D,EAAA+J,eAAA,WAAmD,QAC9CP,KAAArP,EAAA,YACAqP,KAAArP,EAAA,aACAqP,SAAA3J,GAAA0J,aAAgCC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAAsP,MAAA9H;;;;;;;AAwCzD,GAAAuC,IACA0E,QAAAlH,EACAmH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAgK,KACzC2E,OAAA,GAWA3E,EAAA,WAKA,QAAAA,GAAA4E,EAAAC,GACApD,KAAAmD,YACAnD,KAAAoD,cACApD,KAAAqD,SAAA,SAAAC,KACAtD,KAAAuD,UAAA,aA8BA,MAxBAhF,GAAAuB,UAAAxI,WAAA,SAAA9D,GAEA,GAAyB8Q,GAAA,MAAA9Q,EAAA,GAAAA,CACzBwM,MAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,QAAAa,IAMA/F,EAAAuB,UAAAvI,iBAAA,SAAAmM,GACA1D,KAAAqD,SAAA,SAAA7P,GAA0CkQ,EAAA,IAAAlQ,EAAA,KAAA+N,WAAA/N,MAM1C+K,EAAAuB,UAAAjI,kBAAA,SAAA6L,GAAqE1D,KAAAuD,UAAAG,GAKrEnF,EAAAuB,UAAA9H,iBAAA,SAAAE,GACA8H,KAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,WAAAvL,IAEAqG,IAEAA,GAAAoF,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,kGACAC,MACAC,WAAA,gCACAU,UAAA,gCACAT,SAAA,eAEAC,WAAA5F,OAMAC,EAAA4F,eAAA,WAAkD,QAC7CP,KAAArP,EAAA,YACAqP,KAAArP,EAAA,aAwBL,IAAAyH,GAAA,SAAAkF,GAEA,QAAAlF,KACA,GAAA6I,GAAA3D,EAAAC,MAAAnB,KAAAoB,YAAApB,IAeA,OAXA6E,GAAAC,QAAA,KACAD,EAAAlO,KAAA,KACAkO,EAAA5N,cAAA,KAIA4N,EAAA1M,kBAIA0M,EAAAtM,uBACAsM,EAwBA,MAzCAnF,GAAA,UAAA1D,EAAAkF,GAmBA5N,OAAAC,eAAAyI,EAAA8D,UAAA,aAIAC,IAAA,WAA0B,MAAA9J,MAC1BgK,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAyI,EAAA8D,UAAA,kBAIAC,IAAA,WAA0B,MAAA9J,MAC1BgK,YAAA,EACAC,cAAA,IAOAlE,EAAA8D,UAAArI,kBAAA,SAAAD,KACAwE,GACCN,GAQD8C,IACAwE,QAAAlH,EACAmH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAA+H,MACzC4G,OAAA,GAKAzE,GAAA,WACA,QAAAA,KACAuB,KAAA+E,cA6CA,MAtCAtG,GAAAqB,UAAAkF,IAAA,SAAArQ,EAAAsQ,GACAjF,KAAA+E,WAAAG,MAAAvQ,EAAAsQ,KAMAxG,EAAAqB,UAAA/E,OAAA,SAAAkK,GACA,OAA8B3Q,GAAA0L,KAAA+E,WAAA/Q,OAAA,EAAmCM,GAAA,IAAQA,EACzE,GAAA0L,KAAA+E,WAAAzQ,GAAA,KAAA2Q,EAEA,WADAjF,MAAA+E,WAAA3J,OAAA9G,EAAA,IASAmK,EAAAqB,UAAAqF,OAAA,SAAAF,GACA,GAAAJ,GAAA7E,IACAA,MAAA+E,WAAA3M,QAAA,SAAArC,GACA8O,EAAAO,aAAArP,EAAAkP,IAAAlP,EAAA,KAAAkP,GACAlP,EAAA,GAAAsP,YAAAJ,EAAAzR,UASAiL,EAAAqB,UAAAsF,aAAA,SAAAE,EAAAL,GACA,QAAAK,EAAA,GAAA3Q,UAEA2Q,EAAA,GAAAR,UAAAG,EAAAM,SAAAT,SACAQ,EAAA,GAAA3O,OAAAsO,EAAAtO,OAEA8H,IAEAA,IAAAkF,aACKC,KAAArP,EAAA,aAKLkK,GAAA0F,eAAA,WAAmD,SA8BnD,IAAA7H,IAAA,WAOA,QAAAA,GAAA6G,EAAAC,EAAAoC,EAAAC,GACAzF,KAAAmD,YACAnD,KAAAoD,cACApD,KAAAwF,YACAxF,KAAAyF,YACAzF,KAAAqD,SAAA,aACArD,KAAAuD,UAAA,aAmEA,MA9DAjH,GAAAwD,UAAA4F,SAAA,WACA1F,KAAAuF,SAAAvF,KAAAyF,UAAA1F,IAAA/D,GACAgE,KAAA2F,aACA3F,KAAAwF,UAAAR,IAAAhF,KAAAuF,SAAAvF,OAKA1D,EAAAwD,UAAA8F,YAAA,WAAmE5F,KAAAwF,UAAAzK,OAAAiF,OAKnE1D,EAAAwD,UAAAxI,WAAA,SAAA9D,GACAwM,KAAA6F,OAAArS,IAAAwM,KAAAxM,MACAwM,KAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,UAAAzD,KAAA6F,SAMAvJ,EAAAwD,UAAAvI,iBAAA,SAAAmM,GACA,GAAAmB,GAAA7E,IACAA,MAAA8F,IAAApC,EACA1D,KAAAqD,SAAA,WACAK,EAAAmB,EAAArR,OACAqR,EAAAW,UAAAL,OAAAN,KAOAvI,EAAAwD,UAAAuF,YAAA,SAAA7R,GAAwEwM,KAAA1I,WAAA9D,IAKxE8I,EAAAwD,UAAAjI,kBAAA,SAAA6L,GAA2E1D,KAAAuD,UAAAG,GAK3EpH,EAAAwD,UAAA9H,iBAAA,SAAAE,GACA8H,KAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,WAAAvL,IAKAoE,EAAAwD,UAAA6F,WAAA,WACA3F,KAAArJ,MAAAqJ,KAAA+F,iBAAA/F,KAAArJ,OAAAqJ,KAAA+F,iBACA/F,KAAAgG,mBAEAhG,KAAArJ,MAAAqJ,KAAA+F,kBACA/F,KAAArJ,KAAAqJ,KAAA+F,kBAKAzJ,EAAAwD,UAAAkG,gBAAA,WACA,SAAAvR,OAAA,8LAEA6H,IAEAA,IAAAqH,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,+FACAC,MAAuBC,WAAA,aAAAC,SAAA,eACvBC,WAAA1F,QAMAlC,GAAA6H,eAAA,WAAwD,QACnDP,KAAArP,EAAA,YACAqP,KAAArP,EAAA,aACAqP,KAAAnF,KACAmF,KAAArP,EAAA,YAEL+H,GAAA2J,gBACAtP,OAAciN,KAAArP,EAAA,QACdwR,kBAAyBnC,KAAArP,EAAA,QACzBf,QAAeoQ,KAAArP,EAAA;;;;;;;AASf,GAAAmK,KACAsE,QAAAlH,EACAmH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAoK,MACzCuE,OAAA,GAWAvE,GAAA,WAKA,QAAAA,GAAAwE,EAAAC,GACApD,KAAAmD,YACAnD,KAAAoD,cACApD,KAAAqD,SAAA,SAAAC,KACAtD,KAAAuD,UAAA,aA4BA,MAtBA5E,GAAAmB,UAAAxI,WAAA,SAAA9D,GACAwM,KAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,QAAAlC,WAAA/N,KAMAmL,EAAAmB,UAAAvI,iBAAA,SAAAmM,GACA1D,KAAAqD,SAAA,SAAA7P,GAA0CkQ,EAAA,IAAAlQ,EAAA,KAAA+N,WAAA/N,MAM1CmL,EAAAmB,UAAAjI,kBAAA,SAAA6L,GAAoE1D,KAAAuD,UAAAG,GAKpE/E,EAAAmB,UAAA9H,iBAAA,SAAAE,GACA8H,KAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,WAAAvL,IAEAyG,IAEAA,IAAAgF,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,+FACAC,MACAC,WAAA,gCACAU,UAAA,gCACAT,SAAA,eAEAC,WAAAxF,QAMAC,GAAAwF,eAAA,WAAiD,QAC5CP,KAAArP,EAAA,YACAqP,KAAArP,EAAA;;;;;;;AASL,GAAA0K,KACA+D,QAAAlH,EACAmH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAmI,MACzCwG,OAAA,GAoFAxG,GAAA,WAKA,QAAAA,GAAAyG,EAAAC,GACApD,KAAAmD,YACAnD,KAAAoD,cAIApD,KAAAkG,WAAA,GAAAC,KAIAnG,KAAAoG,WAAA,EACApG,KAAAqD,SAAA,SAAAC,KACAtD,KAAAuD,UAAA,aACAvD,KAAAqG,aAAA9R,EAAA,mBA+EA,MA7EAjB,QAAAC,eAAAmJ,EAAAoD,UAAA,eAKAwG,IAAA,SAAA5C,GACA,qBAAAA,GACA,SAAAjP,OAAA,gDAAA8R,KAAAC,UAAA9C,GAEA1D,MAAAqG,aAAA3C,GAEAzD,YAAA,EACAC,cAAA,IAMAxD,EAAAoD,UAAAxI,WAAA,SAAA9D,GACAwM,KAAAxM,OACA,IAAyB2C,GAAA6J,KAAAyG,aAAAjT,EACzB,OAAA2C,GACA6J,KAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,mBAEA,IAAyBnN,GAAAJ,EAAAC,EAAA3C,EACzBwM,MAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,QAAAnN,IAMAoG,EAAAoD,UAAAvI,iBAAA,SAAAmM,GACA,GAAAmB,GAAA7E,IACAA,MAAAqD,SAAA,SAAA/M,GACAuO,EAAArR,MAAAqR,EAAA6B,gBAAApQ,GACAoN,EAAAmB,EAAArR,SAOAkJ,EAAAoD,UAAAjI,kBAAA,SAAA6L,GAA4E1D,KAAAuD,UAAAG,GAK5EhH,EAAAoD,UAAA9H,iBAAA,SAAAE,GACA8H,KAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,WAAAvL,IAMAwE,EAAAoD,UAAA6G,gBAAA,WAAwE,OAAA3G,KAAAoG,cAAA3D,YAMxE/F,EAAAoD,UAAA2G,aAAA,SAAAjT,GACA,OAAAoT,GAAA,EAAAC,EAAAtM,MAAAuM,KAAA9G,KAAAkG,WAAA5Q,QAAiEsR,EAAAC,EAAA7S,OAAgB4S,IAAA,CACjF,GAAAzQ,GAAA0Q,EAAAD,EACA,IAAA5G,KAAAqG,aAAArG,KAAAkG,WAAAnG,IAAA5J,GAAA3C,GACA,MAAA2C,GAEA,aAOAuG,EAAAoD,UAAA4G,gBAAA,SAAApQ,GACA,GAAyBH,GAAAE,EAAAC,EACzB,OAAA0J,MAAAkG,WAAAa,IAAA5Q,GAAA6J,KAAAkG,WAAAnG,IAAA5J,GAAAG,GAEAoG,IAEAA,IAAAiH,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,8GACAC,MAAuBC,WAAA,gCAAAC,SAAA,eACvBC,WAAAjF,QAMAvC,GAAAyH,eAAA,WAAyD,QACpDP,KAAArP,EAAA,YACAqP,KAAArP,EAAA,cAELmI,GAAAuJ,gBACAe,cAAqBpD,KAAArP,EAAA,QAWrB,IAAAkI,IAAA,WAMA,QAAAA,GAAAwK,EAAA9D,EAAA+D,GACAlH,KAAAiH,WACAjH,KAAAmD,YACAnD,KAAAkH,UACAlH,KAAAkH,UACAlH,KAAA7J,GAAA6J,KAAAkH,QAAAP,mBA+CA,MA7CArT,QAAAC,eAAAkJ,EAAAqD,UAAA,WAKAwG,IAAA,SAAA9S,GACA,MAAAwM,KAAAkH,UAEAlH,KAAAkH,QAAAhB,WAAAI,IAAAtG,KAAA7J,GAAA3C,GACAwM,KAAAmH,iBAAAjR,EAAA8J,KAAA7J,GAAA3C,IACAwM,KAAAkH,QAAA5P,WAAA0I,KAAAkH,QAAA1T,SAEAyM,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAkJ,EAAAqD,UAAA,SAKAwG,IAAA,SAAA9S,GACAwM,KAAAmH,iBAAA3T,GACAwM,KAAAkH,SACAlH,KAAAkH,QAAA5P,WAAA0I,KAAAkH,QAAA1T,QAEAyM,YAAA,EACAC,cAAA,IAOAzD,EAAAqD,UAAAqH,iBAAA,SAAA3T,GACAwM,KAAAmD,UAAAK,YAAAxD,KAAAiH,SAAAxD,cAAA,QAAAjQ,IAKAiJ,EAAAqD,UAAA8F,YAAA,WACA5F,KAAAkH,UACAlH,KAAAkH,QAAAhB,WAAAkB,OAAApH,KAAA7J,IACA6J,KAAAkH,QAAA5P,WAAA0I,KAAAkH,QAAA1T,SAGAiJ,IAEAA,IAAAkH,aACKC,KAAArP,EAAA,UAAAsP,OAA0BC,SAAA,aAK/BrH,GAAA0H,eAAA,WAA6C,QACxCP,KAAArP,EAAA,aACAqP,KAAArP,EAAA,YACAqP,KAAAlH,GAAAiH,aAAiDC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,UAE1EkI,GAAAwJ,gBACAoB,UAAiBzD,KAAArP,EAAA,MAAAsP,MAAA,aACjBrQ,QAAeoQ,KAAArP,EAAA,MAAAsP,MAAA;;;;;;;AASf,GAAA1E,KACA6D,QAAAlH,EACAmH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAoI,MACzCuG,OAAA,GAqDAvG,GAAA,WAKA,QAAAA,GAAAwG,EAAAC,GACApD,KAAAmD,YACAnD,KAAAoD,cAIApD,KAAAkG,WAAA,GAAAC,KAIAnG,KAAAoG,WAAA,EACApG,KAAAqD,SAAA,SAAAC,KACAtD,KAAAuD,UAAA,aACAvD,KAAAqG,aAAA9R,EAAA,mBA4GA,MA1GAjB,QAAAC,eAAAoJ,EAAAmD,UAAA,eAKAwG,IAAA,SAAA5C,GACA,qBAAAA,GACA,SAAAjP,OAAA,gDAAA8R,KAAAC,UAAA9C,GAEA1D,MAAAqG,aAAA3C,GAEAzD,YAAA,EACAC,cAAA,IAMAvD,EAAAmD,UAAAxI,WAAA,SAAA9D,GACA,GAAAqR,GAAA7E,IACAA,MAAAxM,OACA,IAAyB8T,EACzB,IAAA/M,MAAAM,QAAArH,GAAA,CAEA,GAA6B+T,GAAA/T,EAAAqB,IAAA,SAAAC,GAAoC,MAAA+P,GAAA4B,aAAA3R,IACjEwS,GAAA,SAAAE,EAAAtT,GAA2DsT,EAAAC,aAAAF,EAAApM,QAAAjH,EAAAuO,aAAA,QAG3D6E,GAAA,SAAAE,EAAAtT,GAA2DsT,EAAAC,cAAA,GAE3DzH,MAAAkG,WAAA9N,QAAAkP,IAMA3K,EAAAmD,UAAAvI,iBAAA,SAAAmM,GACA,GAAAmB,GAAA7E,IACAA,MAAAqD,SAAA,SAAAC,GACA,GAA6BoE,KAC7B,IAAApE,EAAAjK,eAAA,mBAEA,OADiCsO,GAAArE,EAAAsE,gBACKtT,EAAA,EAAUA,EAAAqT,EAAA3T,OAAoBM,IAAA,CACpE,GAAqCkT,GAAAG,EAAAE,KAAAvT,GACAwT,EAAAjD,EAAA6B,gBAAAc,EAAAhU,MACrCkU,GAAAxC,KAAA4C,OAKA,QADiCH,GAAArE,EAAA,QACKhP,EAAA,EAAUA,EAAAqT,EAAA3T,OAAoBM,IAAA,CACpE,GAAqCkT,GAAAG,EAAAE,KAAAvT,EACrC,IAAAkT,EAAAE,SAAA,CACA,GAAyCI,GAAAjD,EAAA6B,gBAAAc,EAAAhU,MACzCkU,GAAAxC,KAAA4C,IAIAjD,EAAArR,MAAAkU,EACAhE,EAAAgE,KAOA/K,EAAAmD,UAAAjI,kBAAA,SAAA6L,GAAoF1D,KAAAuD,UAAAG,GAKpF/G,EAAAmD,UAAA9H,iBAAA,SAAAE,GACA8H,KAAAmD,UAAAK,YAAAxD,KAAAoD,YAAAK,cAAA,WAAAvL,IAOAyE,EAAAmD,UAAA6G,gBAAA,SAAAnT,GACA,GAAyB2C,IAAA6J,KAAAoG,cAAA3D,UAEzB,OADAzC,MAAAkG,WAAAI,IAAAnQ,EAAA3C,GACA2C,GAOAwG,EAAAmD,UAAA2G,aAAA,SAAAjT,GACA,OAAAoT,GAAA,EAAAC,EAAAtM,MAAAuM,KAAA9G,KAAAkG,WAAA5Q,QAAiEsR,EAAAC,EAAA7S,OAAgB4S,IAAA,CACjF,GAAAzQ,GAAA0Q,EAAAD,EACA,IAAA5G,KAAAqG,aAA+CrG,KAAAkG,WAAAnG,IAAA5J,GAAA4R,OAAAvU,GAC/C,MAAA2C,GAEA,aAOAwG,EAAAmD,UAAA4G,gBAAA,SAAApQ,GACA,GAAyBH,GAAAM,EAAAH,EACzB,OAAA0J,MAAAkG,WAAAa,IAAA5Q,GAAA6J,KAAAkG,WAAAnG,IAAA5J,GAAA4R,OAAAzR,GAEAqG,IAEAA,IAAAgH,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,4FACAC,MAAuBC,WAAA,0BAAAC,SAAA,eACvBC,WAAA/E,QAMAxC,GAAAwH,eAAA,WAAiE,QAC5DP,KAAArP,EAAA,YACAqP,KAAArP,EAAA,cAELoI,GAAAsJ,gBACAe,cAAqBpD,KAAArP,EAAA,QAarB,IAAA2K,IAAA,WAMA,QAAAA,GAAA+H,EAAA9D,EAAA+D,GACAlH,KAAAiH,WACAjH,KAAAmD,YACAnD,KAAAkH,UACAlH,KAAAkH,UACAlH,KAAA7J,GAAA6J,KAAAkH,QAAAP,gBAAA3G,OA6DA,MA1DA1M,QAAAC,eAAA2L,EAAAY,UAAA,WAKAwG,IAAA,SAAA9S,GACA,MAAAwM,KAAAkH,UAEAlH,KAAA+H,OAAAvU,EACAwM,KAAAmH,iBAAA3Q,EAAAwJ,KAAA7J,GAAA3C,IACAwM,KAAAkH,QAAA5P,WAAA0I,KAAAkH,QAAA1T,SAEAyM,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA2L,EAAAY,UAAA,SAKAwG,IAAA,SAAA9S,GACAwM,KAAAkH,SACAlH,KAAA+H,OAAAvU,EACAwM,KAAAmH,iBAAA3Q,EAAAwJ,KAAA7J,GAAA3C,IACAwM,KAAAkH,QAAA5P,WAAA0I,KAAAkH,QAAA1T,QAGAwM,KAAAmH,iBAAA3T,IAGAyM,YAAA,EACAC,cAAA,IAOAhB,EAAAY,UAAAqH,iBAAA,SAAA3T,GACAwM,KAAAmD,UAAAK,YAAAxD,KAAAiH,SAAAxD,cAAA,QAAAjQ,IAOA0L,EAAAY,UAAA2H,aAAA,SAAAC,GACA1H,KAAAmD,UAAAK,YAAAxD,KAAAiH,SAAAxD,cAAA,WAAAiE,IAKAxI,EAAAY,UAAA8F,YAAA,WACA5F,KAAAkH,UACAlH,KAAAkH,QAAAhB,WAAAkB,OAAApH,KAAA7J,IACA6J,KAAAkH,QAAA5P,WAAA0I,KAAAkH,QAAA1T,SAGA0L,IAEAA,IAAAyE,aACKC,KAAArP,EAAA,UAAAsP,OAA0BC,SAAA,aAK/B5E,GAAAiF,eAAA,WAAqD,QAChDP,KAAArP,EAAA,aACAqP,KAAArP,EAAA,YACAqP,KAAAjH,GAAAgH,aAAyDC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,UAElF2K,GAAA+G,gBACAoB,UAAiBzD,KAAArP,EAAA,MAAAsP,MAAA,aACjBrQ,QAAeoQ,KAAArP,EAAA,MAAAsP,MAAA,WAkJf,IAAAnK,KACAkC,EACA+C,GACAJ,EACA7B,GACAC,GACAL,IAwDAX,GAAA,SAAAuF,GAEA,QAAAvF,KACA,cAAAuF,KAAAC,MAAAnB,KAAAoB,YAAApB,KAmEA,MArEAN,GAAA,UAAA/D,EAAAuF,GAOAvF,EAAAmE,UAAA4F,SAAA,WACA1F,KAAAgI,mBACAhI,KAAA,cAAAiI,aAAAjI,OAKArE,EAAAmE,UAAA8F,YAAA,WACA5F,KAAAkI,eACAlI,KAAAkI,cAAAC,gBAAAnI,OAGA1M,OAAAC,eAAAoI,EAAAmE,UAAA,WAKAC,IAAA,WAA0B,MAAAC,MAAA,cAAAoI,aAAApI,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAoI,EAAAmE,UAAA,QAKAC,IAAA,WAA0B,MAAArJ,GAAAsJ,KAAArJ,KAAAqJ,KAAA8E,UAC1B7E,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAoI,EAAAmE,UAAA,iBAKAC,IAAA,WAA0B,MAAAC,MAAA8E,QAAA9E,KAAA8E,QAAAoD,cAAA,MAC1BjI,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAoI,EAAAmE,UAAA,aAIAC,IAAA,WAA0B,MAAA/G,GAAAgH,KAAAqI,cAC1BpI,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAoI,EAAAmE,UAAA,kBAIAC,IAAA,WACA,MAAA9G,GAAA+G,KAAAsI,mBAEArI,YAAA,EACAC,cAAA,IAMAvE,EAAAmE,UAAAkI,iBAAA,aACArM,GACCE,GAQDmC,GAAA,WAIA,QAAAA,GAAAuK,GACAvI,KAAAwI,IAAAD,EA0DA,MAxDAjV,QAAAC,eAAAyK,EAAA8B,UAAA,oBAIAC,IAAA,WAA0B,QAAAC,KAAAwI,IAAA7T,SAAAqL,KAAAwI,IAAA7T,QAAAgM,WAC1BV,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAyK,EAAA8B,UAAA,kBAIAC,IAAA,WAA0B,QAAAC,KAAAwI,IAAA7T,SAAAqL,KAAAwI,IAAA7T,QAAA+L,SAC1BT,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAyK,EAAA8B,UAAA,mBAIAC,IAAA,WAA0B,QAAAC,KAAAwI,IAAA7T,SAAAqL,KAAAwI,IAAA7T,QAAA6L,UAC1BP,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAyK,EAAA8B,UAAA,gBAIAC,IAAA,WAA0B,QAAAC,KAAAwI,IAAA7T,SAAAqL,KAAAwI,IAAA7T,QAAA8L,OAC1BR,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAyK,EAAA8B,UAAA,gBAIAC,IAAA,WAA0B,QAAAC,KAAAwI,IAAA7T,SAAAqL,KAAAwI,IAAA7T,QAAAwL,OAC1BF,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAyK,EAAA8B,UAAA,kBAIAC,IAAA,WAA0B,QAAAC,KAAAwI,IAAA7T,SAAAqL,KAAAwI,IAAA7T,QAAAyL,SAC1BH,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAyK,EAAA8B,UAAA,kBAIAC,IAAA,WAA0B,QAAAC,KAAAwI,IAAA7T,SAAAqL,KAAAwI,IAAA7T,QAAA0L,SAC1BJ,YAAA,EACAC,cAAA,IAEAlC,KAEAC,IACAwK,uBAAA,mBACAC,qBAAA,iBACAC,sBAAA,kBACAC,mBAAA,eACAC,mBAAA,eACAC,qBAAA,iBACAC,qBAAA,kBAiBA9M,GAAA,SAAAiF,GAKA,QAAAjF,GAAAsM,GACA,MAAArH,GAAA6B,KAAA/C,KAAAuI,IAAAvI,KAEA,MAPAN,GAAA,UAAAzD,EAAAiF,GAOAjF,GACC+B,GACD/B,IAAA0H,aACKC,KAAArP,EAAA,UAAAsP,OAA0BC,SAAA,4CAAAC,KAAA9F,OAK/BhC,GAAAkI,eAAA,WAA8C,QACzCP,KAAA5H,EAAA2H,aAAgCC,KAAArP,EAAA,SAQrC,IAAA2H,IAAA,SAAAgF,GAKA,QAAAhF,GAAAqM,GACA,MAAArH,GAAA6B,KAAA/C,KAAAuI,IAAAvI,KAEA,MAPAN,GAAA,UAAAxD,EAAAgF,GAOAhF,GACC8B,GACD9B,IAAAyH,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,2FACAC,KAAA9F,OAMA/B,GAAAiI,eAAA,WAAmD,QAC9CP,KAAA/H,EAAA8H,aAAuCC,KAAArP,EAAA;;;;;;;AAY5C,GAkEA4I,IAAA,WAKA,QAAAA,GAAAtH,EAAAuB,GACA4I,KAAAnK,YACAmK,KAAA5I,iBAIA4I,KAAAgJ,oBAAA,aACAhJ,KAAAiJ,WAAA,EACAjJ,KAAAkJ,UAAA,EAIAlJ,KAAAmJ,qBAynBA,MAvnBA7V,QAAAC,eAAA4J,EAAA2C,UAAA,SAKAC,IAAA,WAA0B,MAAAC,MAAA+H,QAC1B9H,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,UAKAC,IAAA,WAA0B,MAAAC,MAAA8E,SAC1B7E,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,UAcAC,IAAA,WAA0B,MAAAC,MAAAoJ,SAC1BnJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,SAQAC,IAAA,WAA0B,MAjI1B,UAiI0BC,KAAAoJ,SAC1BnJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,WAQAC,IAAA,WAA0B,MAzI1B,YAyI0BC,KAAAoJ,SAC1BnJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,WAQAC,IAAA,WAA0B,MAhJ1B,WAgJ0BC,KAAAoJ,SAC1BnJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,YASAC,IAAA,WAA0B,MAxJ1B,aAwJ0BC,KAAAoJ,SAC1BnJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,WAQAC,IAAA,WAA0B,MApK1B,aAoK0BC,KAAAoJ,SAC1BnJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,UAMAC,IAAA,WAA0B,MAAAC,MAAAqJ,SAC1BpJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,YASAC,IAAA,WAA0B,MAAAC,MAAAiJ,WAC1BhJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,SASAC,IAAA,WAA0B,OAAAC,KAAAQ,UAC1BP,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,WAMAC,IAAA,WAA0B,MAAAC,MAAAkJ,UAC1BjJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,aAMAC,IAAA,WAA0B,OAAAC,KAAAkJ,UAC1BjJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,gBAMAC,IAAA,WAA0B,MAAAC,MAAAsJ,eAC1BrJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4J,EAAA2C,UAAA,iBAMAC,IAAA,WAA0B,MAAAC,MAAAuJ,gBAC1BtJ,YAAA,EACAC,cAAA,IAQA/C,EAAA2C,UAAA0J,cAAA,SAAAC,GACAzJ,KAAAnK,UAAA+E,EAAA6O,IAQAtM,EAAA2C,UAAA4J,mBAAA,SAAAD,GACAzJ,KAAA5I,eAAA0D,EAAA2O,IAMAtM,EAAA2C,UAAA6J,gBAAA,WAA6D3J,KAAAnK,UAAA,MAK7DsH,EAAA2C,UAAA8J,qBAAA,WAAkE5J,KAAA5I,eAAA,MASlE+F,EAAA2C,UAAAhI,cAAA,SAAA+R,OACA,KAAAA,IAA8BA,MAC9B7J,KAAAkJ,UAAA,EACAlJ,KAAA8E,UAAA+E,EAAAC,UACA9J,KAAA8E,QAAAhN,cAAA+R,IAYA1M,EAAA2C,UAAAiK,gBAAA,SAAAF,OACA,KAAAA,IAA8BA,MAC9B7J,KAAAkJ,UAAA,EACAlJ,KAAAgK,cAAA,SAAArV,GAA+CA,EAAAoV,iBAA0BD,UAAA,MACzE9J,KAAA8E,UAAA+E,EAAAC,UACA9J,KAAA8E,QAAAmF,eAAAJ,IAWA1M,EAAA2C,UAAApI,YAAA,SAAAmS,OACA,KAAAA,IAA8BA,MAC9B7J,KAAAiJ,WAAA,EACAjJ,KAAA8E,UAAA+E,EAAAC,UACA9J,KAAA8E,QAAApN,YAAAmS,IAYA1M,EAAA2C,UAAAoK,eAAA,SAAAL,OACA,KAAAA,IAA8BA,MAC9B7J,KAAAiJ,WAAA,EACAjJ,KAAAgK,cAAA,SAAArV,GAA+CA,EAAAuV,gBAAyBJ,UAAA,MACxE9J,KAAA8E,UAAA+E,EAAAC,UACA9J,KAAA8E,QAAAqF,gBAAAN,IAQA1M,EAAA2C,UAAAsK,cAAA,SAAAP,OACA,KAAAA,IAA8BA,MAC9B7J,KAAAoJ,QA5VA,UA6VApJ,KAAA8E,UAAA+E,EAAAC,UACA9J,KAAA8E,QAAAsF,cAAAP,IAWA1M,EAAA2C,UAAAuK,QAAA,SAAAR,OACA,KAAAA,IAA8BA,MAC9B7J,KAAAoJ,QAtWA,WAuWApJ,KAAAqJ,QAAA,KACArJ,KAAAgK,cAAA,SAAArV,GAA+CA,EAAA0V,SAAkBP,UAAA,MACjE9J,KAAAsK,gBACA,IAAAT,EAAAU,YACAvK,KAAAsJ,cAAAkB,KAAAxK,KAAA+H,QACA/H,KAAAuJ,eAAAiB,KAAAxK,KAAAoJ,UAEApJ,KAAAyK,mBAAAZ,EAAAC,UACA9J,KAAAmJ,kBAAA/Q,QAAA,SAAAsS,GAA4D,MAAAA,IAAA,MAW5DvN,EAAA2C,UAAA6K,OAAA,SAAAd,OACA,KAAAA,IAA8BA,MAC9B7J,KAAAoJ,QA1YA,QA2YApJ,KAAAgK,cAAA,SAAArV,GAA+CA,EAAAgW,QAAiBb,UAAA,MAChE9J,KAAA1H,wBAAqCwR,UAAA,EAAAS,UAAAV,EAAAU,YACrCvK,KAAAyK,mBAAAZ,EAAAC,UACA9J,KAAAmJ,kBAAA/Q,QAAA,SAAAsS,GAA4D,MAAAA,IAAA,MAM5DvN,EAAA2C,UAAA2K,iBAAA,SAAAX,GACA9J,KAAA8E,UAAAgF,IACA9J,KAAA8E,QAAAxM,yBACA0H,KAAA8E,QAAAqF,kBACAnK,KAAA8E,QAAAmF,mBAOA9M,EAAA2C,UAAA8K,UAAA,SAAAhU,GAA6DoJ,KAAA8E,QAAAlO,GAQ7DuG,EAAA2C,UAAAnI,SAAA,SAAAnE,EAAAmU,KAQAxK,EAAA2C,UAAA+K,WAAA,SAAArX,EAAAmU,KAQAxK,EAAA2C,UAAAgB,MAAA,SAAAtN,EAAAmU,KAQAxK,EAAA2C,UAAAxH,uBAAA,SAAAuR,OACA,KAAAA,IAA8BA,MAC9B7J,KAAA8K,oBACA9K,KAAAsK,eACAtK,KAAAO,UACAP,KAAA+K,8BACA/K,KAAAqJ,QAAArJ,KAAAgL,gBACAhL,KAAAoJ,QAAApJ,KAAAiL,mBAtcA,UAucAjL,KAAAoJ,SA9bA,YA8bApJ,KAAAoJ,SACApJ,KAAAkL,mBAAArB,EAAAU,aAGA,IAAAV,EAAAU,YACAvK,KAAAsJ,cAAAkB,KAAAxK,KAAA+H,QACA/H,KAAAuJ,eAAAiB,KAAAxK,KAAAoJ,UAEApJ,KAAA8E,UAAA+E,EAAAC,UACA9J,KAAA8E,QAAAxM,uBAAAuR,IAQA1M,EAAA2C,UAAAqL,oBAAA,SAAAtB,OACA,KAAAA,IAA8BA,GAASU,WAAA,IACvCvK,KAAAgK,cAAA,SAAAoB,GAA4C,MAAAA,GAAAD,oBAAAtB,KAC5C7J,KAAA1H,wBAAqCwR,UAAA,EAAAS,UAAAV,EAAAU,aAKrCpN,EAAA2C,UAAAgL,kBAAA,WAA+D9K,KAAAoJ,QAAApJ,KAAAqL,uBAld/D,WAdA,SAoeAlO,EAAA2C,UAAAkL,cAAA,WACA,MAAAhL,MAAAnK,UAAAmK,KAAAnK,UAAAmK,MAAA,MAMA7C,EAAA2C,UAAAoL,mBAAA,SAAAX,GACA,GAAA1F,GAAA7E,IACA,IAAAA,KAAA5I,eAAA,CACA4I,KAAAoJ,QAreA,SAseA,IAA6B/U,GAAAF,EAAA6L,KAAA5I,eAAA4I,MAC7BA,MAAAsL,6BACAjX,EAAAkX,UAAA,SAAAnW,GAAiD,MAAAyP,GAAA2G,UAAApW,GAAiCmV,kBAMlFpN,EAAA2C,UAAAiL,4BAAA,WACA/K,KAAAsL,8BACAtL,KAAAsL,6BAAAG,eA6BAtO,EAAA2C,UAAA0L,UAAA,SAAApW,EAAAyU,OACA,KAAAA,IAA8BA,MAC9B7J,KAAAqJ,QAAAjU,EACA4K,KAAA0L,uBAAA,IAAA7B,EAAAU,YAiBApN,EAAA2C,UAAAC,IAAA,SAAAhH,GAAqD,MAAAsB,GAAA2F,KAAAjH,EAAA,MAUrDoE,EAAA2C,UAAAmB,SAAA,SAAAD,EAAAjI,GACA,GAAyBpE,GAAAoE,EAAAiH,KAAAD,IAAAhH,GAAAiH,IACzB,OAAArL,MAAA0U,QAAA1U,EAAA0U,QAAArI,GAAA,MAWA7D,EAAA2C,UAAAiB,SAAA,SAAAC,EAAAjI,GAAqE,QAAAiH,KAAAiB,SAAAD,EAAAjI,IACrEzF,OAAAC,eAAA4J,EAAA2C,UAAA,QAKAC,IAAA,WAEA,IADA,GAA6B4L,GAAA3L,KAC7B2L,EAAA7G,SACA6G,IAAA7G,OAEA,OAAA6G,IAEA1L,YAAA,EACAC,cAAA,IAOA/C,EAAA2C,UAAA4L,sBAAA,SAAAnB,GACAvK,KAAAoJ,QAAApJ,KAAAiL,mBACAV,GACAvK,KAAAuJ,eAAAiB,KAAAxK,KAAAoJ,SAEApJ,KAAA8E,SACA9E,KAAA8E,QAAA4G,sBAAAnB,IAOApN,EAAA2C,UAAA8L,iBAAA,WACA5L,KAAAsJ,cAAA,GAAA/U,GAAA,aACAyL,KAAAuJ,eAAA,GAAAhV,GAAA,cAKA4I,EAAA2C,UAAAmL,iBAAA,WACA,MAAAjL,MAAAqL,uBA7lBA,WA+lBArL,KAAAqJ,QAzmBA,UA2mBArJ,KAAA6L,uBAtmBA,qBAwmBA7L,KAAA6L,uBA7mBA,qBAJA,SA0nBA1O,EAAA2C,UAAAwK,aAAA,aAOAnN,EAAA2C,UAAAkK,cAAA,SAAA8B,KAOA3O,EAAA2C,UAAAiM,aAAA,SAAAC,KAMA7O,EAAA2C,UAAAuL,qBAAA,aAMAlO,EAAA2C,UAAA+L,uBAAA,SAAAI,GACA,MAAAjM,MAAA+L,aAAA,SAAApX,GAAqD,MAAAA,GAAAsX,cAMrD9O,EAAA2C,UAAAoM,kBAAA,WACA,MAAAlM,MAAA+L,aAAA,SAAApX,GAAqD,MAAAA,GAAA8L,SAMrDtD,EAAA2C,UAAAqM,oBAAA,WACA,MAAAnM,MAAA+L,aAAA,SAAApX,GAAqD,MAAAA,GAAA+L,WAOrDvD,EAAA2C,UAAAqK,gBAAA,SAAAN,OACA,KAAAA,IAA8BA,MAC9B7J,KAAAiJ,WAAAjJ,KAAAkM,oBACAlM,KAAA8E,UAAA+E,EAAAC,UACA9J,KAAA8E,QAAAqF,gBAAAN,IAQA1M,EAAA2C,UAAAmK,eAAA,SAAAJ,OACA,KAAAA,IAA8BA,MAC9B7J,KAAAkJ,SAAAlJ,KAAAmM,sBACAnM,KAAA8E,UAAA+E,EAAAC,UACA9J,KAAA8E,QAAAmF,eAAAJ,IAQA1M,EAAA2C,UAAAsM,cAAA,SAAAC,GACA,sBAAAA,IAAA,OAAAA,GACA,IAAA/Y,OAAAgC,KAAA+W,GAAArY,QAAA,SAAAqY,IAAA,YAAAA,IAOAlP,EAAA2C,UAAAwM,4BAAA,SAAA5I,GAA2E1D,KAAAgJ,oBAAAtF,GAC3EvG,KA6CAC,GAAA,SAAA8D,GAOA,QAAA9D,GAAAiP,EAAAxW,EAAAuB,OACA,KAAAiV,IAAmCA,EAAA,KACnC,IAAAxH,GAAA3D,EAAA6B,KAAA/C,KAAApF,EAAA/E,GAAAiF,EAAA1D,KAAA4I,IAQA,OAJA6E,GAAA0H,aACA1H,EAAA2H,gBAAAH,GACAxH,EAAAvM,wBAAsCwR,UAAA,EAAAS,WAAA,IACtC1F,EAAA+G,mBACA/G,EA+IA,MA/JAnF,GAAA,UAAAtC,EAAA8D,GAsCA9D,EAAA0C,UAAAnI,SAAA,SAAAnE,EAAAmU,GACA,GAAA9C,GAAA7E,SACA,KAAA2H,IAAiCA,MACjC3H,KAAA+H,OAAAvU,EACAwM,KAAAuM,UAAAvY,SAAA,IAAA2T,EAAA/P,uBACAoI,KAAAuM,UAAAnU,QAAA,SAAAsS,GAAwD,MAAAA,GAAA7F,EAAAkD,QAAA,IAAAJ,EAAA8E,yBAExDzM,KAAA1H,uBAAAqP,IAYAvK,EAAA0C,UAAA+K,WAAA,SAAArX,EAAAmU,OACA,KAAAA,IAAiCA,MACjC3H,KAAArI,SAAAnE,EAAAmU,IAiCAvK,EAAA0C,UAAAgB,MAAA,SAAAuL,EAAA1E,OACA,KAAA0E,IAAmCA,EAAA,UACnC,KAAA1E,IAAiCA,MACjC3H,KAAAwM,gBAAAH,GACArM,KAAAkK,eAAAvC,GACA3H,KAAA+J,gBAAApC,GACA3H,KAAArI,SAAAqI,KAAA+H,OAAAJ,IAMAvK,EAAA0C,UAAAwK,aAAA,aAMAlN,EAAA0C,UAAAiM,aAAA,SAAAC,GAA+D,UAK/D5O,EAAA0C,UAAAuL,qBAAA,WAA8D,MAAArL,MAAAM,UAM9DlD,EAAA0C,UAAAvI,iBAAA,SAAAmM,GAA4D1D,KAAAuM,UAAArH,KAAAxB,IAK5DtG,EAAA0C,UAAApH,gBAAA,WACAsH,KAAAuM,aACAvM,KAAAmJ,qBACAnJ,KAAAgJ,oBAAA,cAOA5L,EAAA0C,UAAA7H,yBAAA,SAAAyL,GACA1D,KAAAmJ,kBAAAjE,KAAAxB,IAOAtG,EAAA0C,UAAAkK,cAAA,SAAA8B,KAKA1O,EAAA0C,UAAA0M,gBAAA,SAAAH,GACArM,KAAAoM,cAAAC,IACArM,KAAA+H,OAAAsE,EAAA7Y,MACA6Y,EAAA/L,SAAAN,KAAAqK,SAA+CP,UAAA,EAAAS,WAAA,IAC/CvK,KAAA2K,QAA6Bb,UAAA,EAAAS,WAAA,KAG7BvK,KAAA+H,OAAAsE,GAGAjP,GACCD,IAqDD3C,GAAA,SAAA0G,GAOA,QAAA1G,GAAAC,EAAA5E,EAAAuB,GACA,GAAAyN,GAAA3D,EAAA6B,KAAA/C,KAAAnK,GAAA,KAAAuB,GAAA,OAAA4I,IAKA,OAJA6E,GAAApK,WACAoK,EAAA+G,mBACA/G,EAAA6H,iBACA7H,EAAAvM,wBAAsCwR,UAAA,EAAAS,WAAA,IACtC1F,EAuSA,MAnTAnF,GAAA,UAAAlF,EAAA0G,GAuBA1G,EAAAsF,UAAA6M,gBAAA,SAAAhW,EAAAhC,GACA,MAAAqL,MAAAvF,SAAA9D,GACAqJ,KAAAvF,SAAA9D,IACAqJ,KAAAvF,SAAA9D,GAAAhC,EACAA,EAAAiW,UAAA5K,MACArL,EAAA2X,4BAAAtM,KAAAgJ,qBACArU,IAQA6F,EAAAsF,UAAA8M,WAAA,SAAAjW,EAAAhC,GACAqL,KAAA2M,gBAAAhW,EAAAhC,GACAqL,KAAA1H,yBACA0H,KAAAgJ,uBAOAxO,EAAAsF,UAAA+M,cAAA,SAAAlW,GACAqJ,KAAAvF,SAAA9D,IACAqJ,KAAAvF,SAAA9D,GAAA2V,4BAAA,oBACAtM,MAAAvF,SAAA9D,GACAqJ,KAAA1H,yBACA0H,KAAAgJ,uBAQAxO,EAAAsF,UAAAgN,WAAA,SAAAnW,EAAAhC,GACAqL,KAAAvF,SAAA9D,IACAqJ,KAAAvF,SAAA9D,GAAA2V,4BAAA,oBACAtM,MAAAvF,SAAA9D,GACAhC,GACAqL,KAAA2M,gBAAAhW,EAAAhC,GACAqL,KAAA1H,yBACA0H,KAAAgJ,uBAUAxO,EAAAsF,UAAAiN,SAAA,SAAAC,GACA,MAAAhN,MAAAvF,SAAApB,eAAA2T,IAAAhN,KAAAvF,SAAAuS,GAAAzM,SA2BA/F,EAAAsF,UAAAnI,SAAA,SAAAnE,EAAAmU,GACA,GAAA9C,GAAA7E,SACA,KAAA2H,IAAiCA,MACjC3H,KAAAiN,uBAAAzZ,GACAF,OAAAgC,KAAA9B,GAAA4E,QAAA,SAAAzB,GACAkO,EAAAqI,uBAAAvW,GACAkO,EAAApK,SAAA9D,GAAAgB,SAAAnE,EAAAmD,IAAwDmT,UAAA,EAAAS,UAAA5C,EAAA4C,cAExDvK,KAAA1H,uBAAAqP,IA0BAnN,EAAAsF,UAAA+K,WAAA,SAAArX,EAAAmU,GACA,GAAA9C,GAAA7E,SACA,KAAA2H,IAAiCA,MACjCrU,OAAAgC,KAAA9B,GAAA4E,QAAA,SAAAzB,GACAkO,EAAApK,SAAA9D,IACAkO,EAAApK,SAAA9D,GAAAkU,WAAArX,EAAAmD,IAA8DmT,UAAA,EAAAS,UAAA5C,EAAA4C,cAG9DvK,KAAA1H,uBAAAqP,IAqCAnN,EAAAsF,UAAAgB,MAAA,SAAAtN,EAAAmU,OACA,KAAAnU,IAA+BA,UAC/B,KAAAmU,IAAiCA,MACjC3H,KAAAgK,cAAA,SAAArV,EAAAgC,GACAhC,EAAAmM,MAAAtN,EAAAmD,IAAwCmT,UAAA,EAAAS,UAAA5C,EAAA4C,cAExCvK,KAAA1H,uBAAAqP,GACA3H,KAAAmK,gBAAAxC,GACA3H,KAAAiK,eAAAtC,IASAnN,EAAAsF,UAAAqN,YAAA,WACA,MAAAnN,MAAAoN,mBAAsC,SAAAC,EAAA1Y,EAAAgC,GAEtC,MADA0W,GAAA1W,GAAAhC,YAAAyI,IAAAzI,EAAAnB,MAAA,EAAA2Z,cACAE,KAQA7S,EAAAsF,UAAAoN,uBAAA,SAAAvW,GACA,IAAArD,OAAAgC,KAAA0K,KAAAvF,UAAAzG,OACA,SAAAS,OAAA,yKAEA,KAAAuL,KAAAvF,SAAA9D,GACA,SAAAlC,OAAA,uCAAAkC,EAAA,MAQA6D,EAAAsF,UAAAkK,cAAA,SAAA8B,GACA,GAAAjH,GAAA7E,IACA1M,QAAAgC,KAAA0K,KAAAvF,UAAArC,QAAA,SAAAkV,GAAyD,MAAAxB,GAAAjH,EAAApK,SAAA6S,SAMzD9S,EAAAsF,UAAA4M,eAAA,WACA,GAAA7H,GAAA7E,IACAA,MAAAgK,cAAA,SAAArV,GACAA,EAAAiW,UAAA/F,GACAlQ,EAAA2X,4BAAAzH,EAAAmE,wBAOAxO,EAAAsF,UAAAwK,aAAA,WAAoDtK,KAAA+H,OAAA/H,KAAAuN,gBAMpD/S,EAAAsF,UAAAiM,aAAA,SAAAC,GACA,GAAAnH,GAAA7E,KACyB9K,GAAA,CAIzB,OAHA8K,MAAAgK,cAAA,SAAArV,EAAAgC,GACAzB,KAAA2P,EAAAkI,SAAApW,IAAAqV,EAAArX,KAEAO,GAMAsF,EAAAsF,UAAAyN,aAAA,WACA,GAAA1I,GAAA7E,IACA,OAAAA,MAAAoN,mBAAsC,SAAAC,EAAA1Y,EAAAgC,GAItC,OAHAhC,EAAA4L,SAAAsE,EAAAvE,YACA+M,EAAA1W,GAAAhC,EAAAnB,OAEA6Z,KASA7S,EAAAsF,UAAAsN,gBAAA,SAAAI,EAAA9J,GACA,GAAyBxO,GAAAsY,CAEzB,OADAxN,MAAAgK,cAAA,SAAArV,EAAAgC,GAAqDzB,EAAAwO,EAAAxO,EAAAP,EAAAgC,KACrDzB,GAMAsF,EAAAsF,UAAAuL,qBAAA,WACA,OAAAzE,GAAA,EAAAC,EAAAvT,OAAAgC,KAAA0K,KAAAvF,UAAyDmM,EAAAC,EAAA7S,OAAgB4S,IAAA,CACzE,GAAAoG,GAAAnG,EAAAD,EACA,IAAA5G,KAAAvF,SAAAuS,GAAAzM,QACA,SAGA,MAAAjN,QAAAgC,KAAA0K,KAAAvF,UAAAzG,OAAA,GAAAgM,KAAAM,UAOA9F,EAAAsF,UAAAmN,uBAAA,SAAAzZ,GACAwM,KAAAgK,cAAA,SAAArV,EAAAgC,GACA,OAAAsD,KAAAzG,EAAAmD,GACA,SAAAlC,OAAA,oDAAAkC,EAAA,SAIA6D,GACC2C,IA6CDzC,GAAA,SAAAwG,GAOA,QAAAxG,GAAAD,EAAA5E,EAAAuB,GACA,GAAAyN,GAAA3D,EAAA6B,KAAA/C,KAAAnK,GAAA,KAAAuB,GAAA,OAAA4I,IAKA,OAJA6E,GAAApK,WACAoK,EAAA+G,mBACA/G,EAAA6H,iBACA7H,EAAAvM,wBAAsCwR,UAAA,EAAAS,WAAA,IACtC1F,EA8QA,MA1RAnF,GAAA,UAAAhF,EAAAwG,GAmBAxG,EAAAoF,UAAAnF,GAAA,SAAAO,GAA+C,MAAA8E,MAAAvF,SAAAS,IAM/CR,EAAAoF,UAAAoF,KAAA,SAAAvQ,GACAqL,KAAAvF,SAAAyK,KAAAvQ,GACAqL,KAAAyN,iBAAA9Y,GACAqL,KAAA1H,yBACA0H,KAAAgJ,uBAQAtO,EAAAoF,UAAA4N,OAAA,SAAAxS,EAAAvG,GACAqL,KAAAvF,SAAAW,OAAAF,EAAA,EAAAvG,GACAqL,KAAAyN,iBAAA9Y,GACAqL,KAAA1H,yBACA0H,KAAAgJ,uBAOAtO,EAAAoF,UAAA6N,SAAA,SAAAzS,GACA8E,KAAAvF,SAAAS,IACA8E,KAAAvF,SAAAS,GAAAoR,4BAAA,cACAtM,KAAAvF,SAAAW,OAAAF,EAAA,GACA8E,KAAA1H,yBACA0H,KAAAgJ,uBAQAtO,EAAAoF,UAAAgN,WAAA,SAAA5R,EAAAvG,GACAqL,KAAAvF,SAAAS,IACA8E,KAAAvF,SAAAS,GAAAoR,4BAAA,cACAtM,KAAAvF,SAAAW,OAAAF,EAAA,GACAvG,IACAqL,KAAAvF,SAAAW,OAAAF,EAAA,EAAAvG,GACAqL,KAAAyN,iBAAA9Y,IAEAqL,KAAA1H,yBACA0H,KAAAgJ,uBAEA1V,OAAAC,eAAAmH,EAAAoF,UAAA,UAKAC,IAAA,WAA0B,MAAAC,MAAAvF,SAAAzG,QAC1BiM,YAAA,EACAC,cAAA,IA0BAxF,EAAAoF,UAAAnI,SAAA,SAAAnE,EAAAmU,GACA,GAAA9C,GAAA7E,SACA,KAAA2H,IAAiCA,MACjC3H,KAAAiN,uBAAAzZ,GACAA,EAAA4E,QAAA,SAAAZ,EAAA0D,GACA2J,EAAAqI,uBAAAhS,GACA2J,EAAAlK,GAAAO,GAAAvD,SAAAH,GAAgDsS,UAAA,EAAAS,UAAA5C,EAAA4C,cAEhDvK,KAAA1H,uBAAAqP,IAyBAjN,EAAAoF,UAAA+K,WAAA,SAAArX,EAAAmU,GACA,GAAA9C,GAAA7E,SACA,KAAA2H,IAAiCA,MACjCnU,EAAA4E,QAAA,SAAAZ,EAAA0D,GACA2J,EAAAlK,GAAAO,IACA2J,EAAAlK,GAAAO,GAAA2P,WAAArT,GAAsDsS,UAAA,EAAAS,UAAA5C,EAAA4C,cAGtDvK,KAAA1H,uBAAAqP,IAoCAjN,EAAAoF,UAAAgB,MAAA,SAAAtN,EAAAmU,OACA,KAAAnU,IAA+BA,UAC/B,KAAAmU,IAAiCA,MACjC3H,KAAAgK,cAAA,SAAArV,EAAAuG,GACAvG,EAAAmM,MAAAtN,EAAA0H,IAAyC4O,UAAA,EAAAS,UAAA5C,EAAA4C,cAEzCvK,KAAA1H,uBAAAqP,GACA3H,KAAAmK,gBAAAxC,GACA3H,KAAAiK,eAAAtC,IASAjN,EAAAoF,UAAAqN,YAAA,WACA,MAAAnN,MAAAvF,SAAA5F,IAAA,SAAAF,GACA,MAAAA,aAAAyI,IAAAzI,EAAAnB,MAAA,EAAA2Z,iBAQAzS,EAAAoF,UAAAoN,uBAAA,SAAAhS,GACA,IAAA8E,KAAAvF,SAAAzG,OACA,SAAAS,OAAA,yKAEA,KAAAuL,KAAArF,GAAAO,GACA,SAAAzG,OAAA,qCAAAyG,IAQAR,EAAAoF,UAAAkK,cAAA,SAAA8B,GACA9L,KAAAvF,SAAArC,QAAA,SAAAzD,EAAAuG,GAAyD4Q,EAAAnX,EAAAuG,MAMzDR,EAAAoF,UAAAwK,aAAA,WACA,GAAAzF,GAAA7E,IACAA,MAAA+H,OAAA/H,KAAAvF,SAAAoI,OAAA,SAAAlO,GAA+D,MAAAA,GAAA4L,SAAAsE,EAAAvE,WAC/DzL,IAAA,SAAAF,GAAqC,MAAAA,GAAAnB,SAOrCkH,EAAAoF,UAAAiM,aAAA,SAAAC,GACA,MAAAhM,MAAAvF,SAAAd,KAAA,SAAAhF,GAAsD,MAAAA,GAAA4L,SAAAyL,EAAArX,MAMtD+F,EAAAoF,UAAA4M,eAAA,WACA,GAAA7H,GAAA7E,IACAA,MAAAgK,cAAA,SAAArV,GAA+C,MAAAkQ,GAAA4I,iBAAA9Y,MAO/C+F,EAAAoF,UAAAmN,uBAAA,SAAAzZ,GACAwM,KAAAgK,cAAA,SAAArV,EAAAL,GACA,OAAA2F,KAAAzG,EAAAc,GACA,SAAAG,OAAA,kDAAAH,EAAA,QAQAoG,EAAAoF,UAAAuL,qBAAA,WACA,OAAAzE,GAAA,EAAAC,EAAA7G,KAAAvF,SAA4CmM,EAAAC,EAAA7S,OAAgB4S,IAAA,CAE5D,GADAC,EAAAD,GACArG,QACA,SAEA,MAAAP,MAAAvF,SAAAzG,OAAA,GAAAgM,KAAAM,UAMA5F,EAAAoF,UAAA2N,iBAAA,SAAA9Y,GACAA,EAAAiW,UAAA5K,MACArL,EAAA2X,4BAAAtM,KAAAgJ,sBAEAtO,GACCyC,IAQDe,IACA8E,QAAAnH,EACAoH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAA4H,OAEzCyR,GAAAC,QAAAC,QAAA,MAgCA3R,GAAA,SAAA+E,GAMA,QAAA/E,GAAAvH,EAAAmZ,GACA,GAAAlJ,GAAA3D,EAAA6B,KAAA/C,WAKA,OAJA6E,GAAAmJ,YAAA,EACAnJ,EAAAoJ,SAAA,GAAA1Z,GAAA,aACAsQ,EAAAqJ,KACA,GAAA1T,OAA4BxB,EAAApE,GAAAqE,EAAA8U,IAC5BlJ,EAyJA,MApKAnF,GAAA,UAAAvD,EAAA+E,GAaA5N,OAAAC,eAAA4I,EAAA2D,UAAA,aAIAC,IAAA,WAA0B,MAAAC,MAAAgO,YAC1B/N,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4I,EAAA2D,UAAA,iBAIAC,IAAA,WAA0B,MAAAC,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4I,EAAA2D,UAAA,WAIAC,IAAA,WAA0B,MAAAC,MAAAkO,MAC1BjO,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4I,EAAA2D,UAAA,QAIAC,IAAA,WAA0B,UAC1BE,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA4I,EAAA2D,UAAA,YAIAC,IAAA,WAA0B,MAAAC,MAAAkO,KAAAzT,UAC1BwF,YAAA,EACAC,cAAA,IAMA/D,EAAA2D,UAAA8M,WAAA,SAAA7V,GACA,GAAA8N,GAAA7E,IACA4N,IAAAO,KAAA,WACA,GAA6BC,GAAAvJ,EAAAwJ,eAAAtX,EAAAgC,KAC7BhC,GAAAwO,SAAA6I,EAAAzB,gBAAA5V,EAAAJ,KAAAI,EAAApC,SACAmC,EAAAC,EAAApC,QAAAoC,GACAA,EAAApC,QAAA2D,wBAAgDiS,WAAA,OAOhDpO,EAAA2D,UAAAwO,WAAA,SAAAvX,GAAkD,MAAAiJ,MAAAkO,KAAAnO,IAAAhJ,EAAAgC,OAKlDoD,EAAA2D,UAAA+M,cAAA,SAAA9V,GACA,GAAA8N,GAAA7E,IACA4N,IAAAO,KAAA,WACA,GAA6BC,GAAAvJ,EAAAwJ,eAAAtX,EAAAgC,KAC7BqV,IACAA,EAAAvB,cAAA9V,EAAAJ,SAQAwF,EAAA2D,UAAAmI,aAAA,SAAAlR,GACA,GAAA8N,GAAA7E,IACA4N,IAAAO,KAAA,WACA,GAA6BC,GAAAvJ,EAAAwJ,eAAAtX,EAAAgC,MACAwV,EAAA,GAAA/T,OAC7B7B,GAAA4V,EAAAxX,GACAqX,EAAAzB,gBAAA5V,EAAAJ,KAAA4X,GACAA,EAAAjW,wBAA0CiS,WAAA,OAO1CpO,EAAA2D,UAAAqI,gBAAA,SAAApR,GACA,GAAA8N,GAAA7E,IACA4N,IAAAO,KAAA,WACA,GAA6BC,GAAAvJ,EAAAwJ,eAAAtX,EAAAgC,KAC7BqV,IACAA,EAAAvB,cAAA9V,EAAAJ,SAQAwF,EAAA2D,UAAAsI,aAAA,SAAArR,GAAoD,MAAAiJ,MAAAkO,KAAAnO,IAAAhJ,EAAAgC,OAMpDoD,EAAA2D,UAAA0O,YAAA,SAAAzX,EAAAvD,GACA,GAAAqR,GAAA7E,IACA4N,IAAAO,KAAA,WAC6BtJ,EAAAqJ,KAAAnO,IAAwChJ,EAAA,MACrEY,SAAAnE,MAOA2I,EAAA2D,UAAAnI,SAAA,SAAAnE,GAAkDwM,KAAArL,QAAAgD,SAAAnE,IAKlD2I,EAAA2D,UAAA2O,SAAA,SAAAC,GAGA,MAFA1O,MAAAgO,YAAA,EACAhO,KAAAiO,SAAAzD,KAAAkE,IACA,GAKAvS,EAAA2D,UAAA6O,QAAA,WAA4C3O,KAAA4O,aAK5CzS,EAAA2D,UAAA8O,UAAA,SAAApb,OACA,KAAAA,IAA+BA,MAAAyG,IAC/B+F,KAAAkO,KAAApN,MAAAtN,GACAwM,KAAAgO,YAAA,GAOA7R,EAAA2D,UAAAuO,eAAA,SAAAtV,GAEA,MADAA,GAAA8V,MACA9V,EAAA/E,OAAAgM,KAAAkO,KAAAnO,IAAAhH,GAAAiH,KAAAkO,MAEA/R,GACCN,EACDM,IAAAwH,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,wDACAI,WAAAhG,IACA6F,MAAuB+K,WAAA,mBAAAC,UAAA,aACvBC,SAAA,YACAC,SAAA,aAMA9S,GAAAgI,eAAA,WAAqC,QAChCP,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAvG,OAChEsG,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAxG;;;;;;;AASrE,GAAA6R,KACAnJ,gBAAA,qMACAoJ,cAAA,wRACAC,cAAA,iYACAC,aAAA,6IACAC,qBAAA,sLASAC,GAAA,WACA,QAAAA,MA0BA,MArBAA,GAAAC,qBAAA,WACA,SAAA/a,OAAA,8LAAAya,GAAAnJ,gBAAA,mJAAAmJ,GAAAI,uBAKAC,EAAAE,uBAAA,WACA,SAAAhb,OAAA,4MAAAya,GAAAC,cAAA,qGAAAD,GAAAG,eAKAE,EAAAG,qBAAA,WACA,SAAAjb,OAAA,uUAKA8a,EAAAI,0BAAA,WACA,SAAAlb,OAAA,qKAAAya,GAAAC,cAAA,uHAAAD,GAAAG,eAEAE,KASAnR,IACA4E,QAAAnH,EACAoH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAA8H,OA2BzCA,GAAA,SAAA6E,GAOA,QAAA7E,GAAAzF,EAAAhC,EAAAmZ,GACA,GAAAlJ,GAAA3D,EAAA6B,KAAA/C,WAIA,OAHA6E,GAAAC,QAAAlO,EACAiO,EAAAwD,YAAAzT,EACAiQ,EAAAyD,iBAAAyF,EACAlJ,EAWA,MAtBAnF,GAAA,UAAArD,EAAA6E,GAiBA7E,EAAAyD,UAAAkI,iBAAA,WACAhI,KAAA8E,kBAAAzI,IAAA2D,KAAA8E,kBAAA3I,KACAoT,GAAAI,6BAGAtT,GACCV,GACDU,IAAAsH,aACKC,KAAArP,EAAA,UAAAsP,OAA0BC,SAAA,iBAAAI,WAAA9F,IAAA6Q,SAAA,mBAK/B5S,GAAA8H,eAAA,WAA2C,QACtCP,KAAA/H,EAAA8H,aAAuCC,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,aACvDqP,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAvG,OAChEsG,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAxG,QAErEhB,GAAA4J,gBACAtP,OAAciN,KAAArP,EAAA,MAAAsP,MAAA;;;;;;;AASd,GAAA1F,KACA6E,QAAAhH,EACAiH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAA6H,OAmBzCwT,GAAA/B,QAAAC,QAAA,MA2DA1R,GAAA,SAAA8E,GAQA,QAAA9E,GAAAxF,EAAAhC,EAAAmZ,EAAAhU,GACA,GAAA8K,GAAA3D,EAAA6B,KAAA/C,WAcA,OAVA6E,GAAAU,SAAA,GAAAnI,IAIAyH,EAAAgL,aAAA,EACAhL,EAAAiL,OAAA,GAAAvb,GAAA,aACAsQ,EAAAC,QAAAlO,EACAiO,EAAA1M,eAAAvD,MACAiQ,EAAAtM,oBAAAwV,MACAlJ,EAAA5N,cAAA6C,EAAA+K,EAAA9K,GACA8K,EAuJA,MA7KAnF,GAAA,UAAAtD,EAAA8E,GA4BA9E,EAAA0D,UAAAiQ,YAAA,SAAA5W,GACA6G,KAAAgQ,kBACAhQ,KAAA6P,aACA7P,KAAAiQ,gBACA,cAAA9W,IACA6G,KAAAkQ,gBAAA/W,GAEAD,EAAAC,EAAA6G,KAAA5G,aACA4G,KAAAsK,aAAAtK,KAAAmQ,OACAnQ,KAAA5G,UAAA4G,KAAAmQ,QAMA/T,EAAA0D,UAAA8F,YAAA,WAAiD5F,KAAAkI,eAAAlI,KAAAkI,cAAA2E,cAAA7M,OACjD1M,OAAAC,eAAA6I,EAAA0D,UAAA,WAIAC,IAAA,WAA0B,MAAAC,MAAAuF,UAC1BtF,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA6I,EAAA0D,UAAA,QAIAC,IAAA,WACA,MAAAC,MAAA8E,QAAApO,EAAAsJ,KAAArJ,KAAAqJ,KAAA8E,UAAA9E,KAAArJ,OAEAsJ,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA6I,EAAA0D,UAAA,iBAIAC,IAAA,WAA0B,MAAAC,MAAA8E,QAAA9E,KAAA8E,QAAAoD,cAAA,MAC1BjI,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA6I,EAAA0D,UAAA,aAIAC,IAAA,WAA0B,MAAA/G,GAAAgH,KAAA7H,iBAC1B8H,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA6I,EAAA0D,UAAA,kBAIAC,IAAA,WACA,MAAA9G,GAAA+G,KAAAzH,sBAEA0H,YAAA,EACAC,cAAA,IAMA9D,EAAA0D,UAAArI,kBAAA,SAAAD,GACAwI,KAAA5G,UAAA5B,EACAwI,KAAA8P,OAAAtF,KAAAhT,IAKA4E,EAAA0D,UAAAmQ,cAAA,WACAjQ,KAAAoQ,gBAAApQ,KAAAqQ,mBACArQ,KAAAkI,cAAA0E,WAAA5M,MACAA,KAAA6P,aAAA,GAKAzT,EAAA0D,UAAAsQ,cAAA,WACA,OAAApQ,KAAA8E,YAAA9E,KAAA2H,UAAA3H,KAAA2H,QAAA2I,aAKAlU,EAAA0D,UAAAuQ,iBAAA,WACAvZ,EAAAkJ,KAAAuF,SAAAvF,MACAA,KAAAuF,SAAAjN,wBAA8CiS,WAAA,KAK9CnO,EAAA0D,UAAAkQ,gBAAA,WACAhQ,KAAAoQ,iBACApQ,KAAAgI,mBAEAhI,KAAA2F,cAKAvJ,EAAA0D,UAAAkI,iBAAA,aACAhI,KAAA8E,kBAAAzI,MACA2D,KAAA8E,kBAAAnJ,IACA4T,GAAAE,yBAEAzP,KAAA8E,kBAAAzI,KAAA2D,KAAA8E,kBAAA3I,KACAoT,GAAAC,wBAMApT,EAAA0D,UAAA6F,WAAA,WACA3F,KAAA2H,SAAA3H,KAAA2H,QAAAhR,OACAqJ,KAAArJ,KAAAqJ,KAAA2H,QAAAhR,MACAqJ,KAAAoQ,iBAAApQ,KAAArJ,MACA4Y,GAAAG,wBAOAtT,EAAA0D,UAAAwK,aAAA,SAAA9W,GACA,GAAAqR,GAAA7E,IACA4P,IAAAzB,KAAA,WAA4CtJ,EAAAlQ,QAAAgD,SAAAnE,GAAgCiZ,uBAAA,OAM5ErQ,EAAA0D,UAAAoQ,gBAAA,SAAA/W,GACA,GAAA0L,GAAA7E,KACyBuQ,EAAApX,EAAA,WAAAK,aACAtB,EAAA,KAAAqY,MAAA,UAAAA,CACzBX,IAAAzB,KAAA,WACAjW,IAAA2M,EAAAlQ,QAAA2L,SACAuE,EAAAlQ,QAAA0V,WAEAnS,GAAA2M,EAAAlQ,QAAA2L,UACAuE,EAAAlQ,QAAAgW,YAIAvO,GACCJ,EACDI,IAAAuH,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,sDACAI,WAAA/F,IACA8Q,SAAA,cAMA7S,GAAA+H,eAAA,WAAsC,QACjCP,KAAA/H,EAAA8H,aAAuCC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,SAC3DqP,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAvG,OAChEsG,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAxG,OAChEuG,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAA/H,QAErEM,GAAA6J,gBACAtP,OAAciN,KAAArP,EAAA,QACd2D,aAAoB0L,KAAArP,EAAA,MAAAsP,MAAA,cACpBsM,QAAevM,KAAArP,EAAA,MAAAsP,MAAA,aACf8D,UAAiB/D,KAAArP,EAAA,MAAAsP,MAAA,oBACjBiM,SAAgBlM,KAAArP,EAAA,OAAAsP,MAAA;;;;;;;AAShB,GAAA2M,IAAA,WACA,QAAAA,MAsCA,MAjCAA,GAAAC,uBAAA,WACA,SAAAhc,OAAA,+NAAAya,GAAAnJ,kBAKAyK,EAAAE,sBAAA,WACA,SAAAjc,OAAA,qRAAAya,GAAAC,cAAA,sGAAAD,GAAAG,eAKAmB,EAAAG,qBAAA,WACA,SAAAlc,OAAA,4FAAAya,GAAAnJ,kBAKAyK,EAAAI,qBAAA,WACA,SAAAnc,OAAA,4NAAAya,GAAAC,gBAKAqB,EAAAK,qBAAA,WACA,SAAApc,OAAA,iOAAAya,GAAAE,gBAKAoB,EAAAM,oBAAA,WACAC,QAAAC,KAAA,qiBAEAR,KASA5R,IACAoE,QAAAhH,EACAiH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAgI,OA4CzCA,GAAA,SAAA2E,GAOA,QAAA3E,GAAA3H,EAAAmZ,EAAAhU,GACA,GAAA8K,GAAA3D,EAAA6B,KAAA/C,WAKA,OAJA6E,GAAAiL,OAAA,GAAAvb,GAAA,aACAsQ,EAAA1M,eAAAvD,MACAiQ,EAAAtM,oBAAAwV,MACAlJ,EAAA5N,cAAA6C,EAAA+K,EAAA9K,GACA8K,EA6EA,MAzFAnF,GAAA,UAAAnD,EAAA2E,GAcA5N,OAAAC,eAAAgJ,EAAAuD,UAAA,cAKAwG,IAAA,SAAApO,GAAoCsY,GAAAM,uBACpC7Q,YAAA,EACAC,cAAA,IAMA3D,EAAAuD,UAAAiQ,YAAA,SAAA5W,GACA6G,KAAAiR,kBAAA9X,KACArC,EAAAkJ,KAAAkO,KAAAlO,MACAA,KAAArL,QAAA2L,UAAAN,KAAA,cAAAhI,kBACAgI,KAAA,mCAEAA,KAAAkO,KAAA5V,wBAA8CiS,WAAA,KAE9CrR,EAAAC,EAAA6G,KAAA5G,aACA4G,KAAAkO,KAAAvW,SAAAqI,KAAAmQ,OACAnQ,KAAA5G,UAAA4G,KAAAmQ,QAGA7c,OAAAC,eAAAgJ,EAAAuD,UAAA,QAIAC,IAAA,WAA0B,UAC1BE,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAgJ,EAAAuD,UAAA,aAIAC,IAAA,WAA0B,MAAA/G,GAAAgH,KAAA7H,iBAC1B8H,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAgJ,EAAAuD,UAAA,kBAIAC,IAAA,WACA,MAAA9G,GAAA+G,KAAAzH,sBAEA0H,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAgJ,EAAAuD,UAAA,WAIAC,IAAA,WAA0B,MAAAC,MAAAkO,MAC1BjO,YAAA,EACAC,cAAA,IAMA3D,EAAAuD,UAAArI,kBAAA,SAAAD,GACAwI,KAAA5G,UAAA5B,EACAwI,KAAA8P,OAAAtF,KAAAhT,IAMA+E,EAAAuD,UAAAmR,kBAAA,SAAA9X,GACA,MAAAA,GAAAE,eAAA,SAEAkD,GACCP,EACDO,IAAAoH,aACKC,KAAArP,EAAA,UAAAsP,OAA0BC,SAAA,gBAAAI,WAAAtF,IAAAqQ,SAAA,aAK/B1S,GAAA4H,eAAA,WAAmD,QAC9CP,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAvG,OAChEsG,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAxG,OAChEuG,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAA/H,QAErES,GAAA0J,gBACAiI,OAActK,KAAArP,EAAA,MAAAsP,MAAA,iBACdsM,QAAevM,KAAArP,EAAA,MAAAsP,MAAA,aACfiM,SAAgBlM,KAAArP,EAAA,OAAAsP,MAAA,mBAChB3L,aAAoB0L,KAAArP,EAAA,MAAAsP,MAAA;;;;;;;AASpB,GAAA/E,KACAkE,QAAAnH,EACAoH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAgH,OAqCzCA,GAAA,SAAA2F,GAMA,QAAA3F,GAAA8M,EAAAC,GACA,GAAAzD,GAAA3D,EAAA6B,KAAA/C,WAOA,OANA6E,GAAAwD,cACAxD,EAAAyD,mBACAzD,EAAAmJ,YAAA,EACAnJ,EAAAqM,cACArM,EAAAqJ,KAAA,KACArJ,EAAAoJ,SAAA,GAAA1Z,GAAA,aACAsQ,EAoLA,MAjMAnF,GAAA,UAAAnE,EAAA2F,GAmBA3F,EAAAuE,UAAAiQ,YAAA,SAAA5W,GACA6G,KAAAmR,oBACAhY,EAAAE,eAAA,UACA2G,KAAAoR,oBACApR,KAAAqR,kBACArR,KAAAsR,yBAGAhe,OAAAC,eAAAgI,EAAAuE,UAAA,aAIAC,IAAA,WAA0B,MAAAC,MAAAgO,YAC1B/N,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAgI,EAAAuE,UAAA,iBAIAC,IAAA,WAA0B,MAAAC,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAgI,EAAAuE,UAAA,WAIAC,IAAA,WAA0B,MAAAC,MAAAkO,MAC1BjO,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAgI,EAAAuE,UAAA,QAIAC,IAAA,WAA0B,UAC1BE,YAAA,EACAC,cAAA,IAMA3E,EAAAuE,UAAA8M,WAAA,SAAA7V,GACA,GAAyBqU,GAAApL,KAAAkO,KAAAnO,IAAAhJ,EAAAgC,KAIzB,OAHAjC,GAAAsU,EAAArU,GACAqU,EAAA9S,wBAAqCiS,WAAA,IACrCvK,KAAAkR,WAAAhM,KAAAnO,GACAqU,GAMA7P,EAAAuE,UAAAwO,WAAA,SAAAvX,GAA8D,MAAAiJ,MAAAkO,KAAAnO,IAAAhJ,EAAAgC,OAK9DwC,EAAAuE,UAAA+M,cAAA,SAAA9V,GAAiEgE,EAAAiF,KAAAkR,WAAAna,IAKjEwE,EAAAuE,UAAAmI,aAAA,SAAAlR,GACA,GAAyBqU,GAAApL,KAAAkO,KAAAnO,IAAAhJ,EAAAgC,KACzBJ,GAAAyS,EAAArU,GACAqU,EAAA9S,wBAAqCiS,WAAA,KAMrChP,EAAAuE,UAAAqI,gBAAA,SAAApR,KAKAwE,EAAAuE,UAAAsI,aAAA,SAAArR,GAAgE,MAAAiJ,MAAAkO,KAAAnO,IAAAhJ,EAAAgC,OAKhEwC,EAAAuE,UAAAyR,aAAA,SAAAxa,GACA,GAAyBqU,GAAApL,KAAAkO,KAAAnO,IAAAhJ,EAAAgC,KACzBJ,GAAAyS,EAAArU,GACAqU,EAAA9S,wBAAqCiS,WAAA,KAMrChP,EAAAuE,UAAA0R,gBAAA,SAAAza,KAKAwE,EAAAuE,UAAA2R,aAAA,SAAA1a,GAAgE,MAAAiJ,MAAAkO,KAAAnO,IAAAhJ,EAAAgC,OAMhEwC,EAAAuE,UAAA0O,YAAA,SAAAzX,EAAAvD,GACyBwM,KAAAkO,KAAAnO,IAAAhJ,EAAAgC,MACzBpB,SAAAnE,IAMA+H,EAAAuE,UAAA2O,SAAA,SAAAC,GAGA,MAFA1O,MAAAgO,YAAA,EACAhO,KAAAiO,SAAAzD,KAAAkE,IACA,GAKAnT,EAAAuE,UAAA6O,QAAA,WAAwD3O,KAAA4O,aAKxDrT,EAAAuE,UAAA8O,UAAA,SAAApb,OACA,KAAAA,IAA+BA,MAAAyG,IAC/B+F,KAAAkO,KAAApN,MAAAtN,GACAwM,KAAAgO,YAAA,GAMAzS,EAAAuE,UAAAuR,gBAAA,WACA,GAAAxM,GAAA7E,IACAA,MAAAkR,WAAA9Y,QAAA,SAAArB,GACA,GAA6B2a,GAAA7M,EAAAqJ,KAAAnO,IAAAhJ,EAAAgC,KAC7BhC,GAAAwO,WAAAmM,IACAlZ,EAAAzB,EAAAwO,SAAAxO,GACA2a,GACA5a,EAAA4a,EAAA3a,GACAA,EAAAwO,SAAAmM,KAGA1R,KAAAkO,KAAA/C,qBAAuCZ,WAAA,KAKvChP,EAAAuE,UAAAwR,qBAAA,WACA,GAAAzM,GAAA7E,IACAA,MAAAkO,KAAA5B,4BAAA,WAA2D,MAAAzH,GAAAwM,oBAC3DrR,KAAA2R,UACA3R,KAAA2R,SAAArF,4BAAA,cACAtM,KAAA2R,SAAA3R,KAAAkO,MAKA3S,EAAAuE,UAAAsR,kBAAA,WACA,GAAyBQ,GAAA5Y,EAAAgH,KAAAqI,YACzBrI,MAAAkO,KAAArY,UAAAqB,EAAAC,SAA+D6I,KAAAkO,KAAA,UAA0C,GACzG,IAAyBva,GAAAsF,EAAA+G,KAAAsI,iBACzBtI,MAAAkO,KAAA9W,eAAAF,EAAAG,cAAyE2I,KAAAkO,KAAA,eAA+C,KAKxH3S,EAAAuE,UAAAqR,kBAAA,WACAnR,KAAAkO,MACAsC,GAAAG,wBAGApV,GACCM,EACDN,IAAAoI,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,cACAI,WAAApF,IACAiF,MAAuB+K,WAAA,mBAAAC,UAAA,aACvBE,SAAA,aAMA1T,GAAA4I,eAAA,WAAiD,QAC5CP,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAvG,OAChEsG,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAxG,QAErE9B,GAAA0K,gBACAiI,OAActK,KAAArP,EAAA,MAAAsP,MAAA,eACdoK,WAAkBrK,KAAArP,EAAA;;;;;;;AAqBlB,GAAAyK,KACAgE,QAAAnH,EACAoH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAA+G,OA8CzCA,GAAA,SAAA4F,GAOA,QAAA5F,GAAA1E,EAAAhC,EAAAmZ,GACA,GAAAlJ,GAAA3D,EAAA6B,KAAA/C,WAIA,OAHA6E,GAAAC,QAAAlO,EACAiO,EAAAwD,YAAAzT,EACAiQ,EAAAyD,iBAAAyF,EACAlJ,EAWA,MAtBAnF,GAAA,UAAApE,EAAA4F,GAiBA5F,EAAAwE,UAAAkI,iBAAA,WACA3M,EAAA2E,KAAA8E,UACA0L,GAAAI,wBAGAtV,GACCK,GACDL,IAAAqI,aACKC,KAAArP,EAAA,UAAAsP,OAA0BC,SAAA,kBAAAI,WAAAlF,QAK/B1D,GAAA6I,eAAA,WAA4C,QACvCP,KAAA/H,EAAA8H,aAAuCC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,aAC3EqP,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAvG,OAChEsG,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAxG,QAErE/B,GAAA2K,gBACAtP,OAAciN,KAAArP,EAAA,MAAAsP,MAAA,mBAEd,IAAA9E,KACAiE,QAAAnH,EACAoH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAiH,OAiDzCA,GAAA,SAAA0F,GAOA,QAAA1F,GAAA5E,EAAAhC,EAAAmZ,GACA,GAAAlJ,GAAA3D,EAAA6B,KAAA/C,WAIA,OAHA6E,GAAAC,QAAAlO,EACAiO,EAAAwD,YAAAzT,EACAiQ,EAAAyD,iBAAAyF,EACAlJ,EAqEA,MAhFAnF,GAAA,UAAAlE,EAAA0F,GAgBA1F,EAAAsE,UAAA4F,SAAA,WACA1F,KAAAgI,mBACAhI,KAAA,cAAAuR,aAAAvR,OAKAxE,EAAAsE,UAAA8F,YAAA,WACA5F,KAAAkI,eACAlI,KAAAkI,cAAAsJ,gBAAAxR,OAGA1M,OAAAC,eAAAiI,EAAAsE,UAAA,WAIAC,IAAA,WAA0B,MAAAC,MAAA,cAAAyR,aAAAzR,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAiI,EAAAsE,UAAA,iBAIAC,IAAA,WACA,MAAAC,MAAA8E,QAAA9E,KAAA8E,QAAA,oBAEA7E,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAiI,EAAAsE,UAAA,QAIAC,IAAA,WAA0B,MAAArJ,GAAAsJ,KAAArJ,KAAAqJ,KAAA8E,UAC1B7E,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAiI,EAAAsE,UAAA,aAIAC,IAAA,WAA0B,MAAA/G,GAAAgH,KAAAqI,cAC1BpI,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAiI,EAAAsE,UAAA,kBAIAC,IAAA,WACA,MAAA9G,GAAA+G,KAAAsI,mBAEArI,YAAA,EACAC,cAAA,IAKA1E,EAAAsE,UAAAkI,iBAAA,WACA3M,EAAA2E,KAAA8E,UACA0L,GAAAK,wBAGArV,GACCK,EACDL,IAAAmI,aACKC,KAAArP,EAAA,UAAAsP,OAA0BC,SAAA,kBAAAI,WAAAnF,QAK/BvD,GAAA2I,eAAA,WAA4C,QACvCP,KAAA/H,EAAA8H,aAAuCC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,aAC3EqP,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAvG,OAChEsG,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAxG,QAErE7B,GAAAyK,gBACAtP,OAAciN,KAAArP,EAAA,MAAAsP,MAAA;;;;;;;AAiBd,GAAAhF,KACAmE,QAAAhH,EACAiH,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAiI,OAqDzCA,GAAA,SAAA0E,GAQA,QAAA1E,GAAA5F,EAAAhC,EAAAmZ,EAAAhU,GACA,GAAA8K,GAAA3D,EAAA6B,KAAA/C,WAOA,OANA6E,GAAAgN,QAAA,EACAhN,EAAAiL,OAAA,GAAAvb,GAAA,aACAsQ,EAAAC,QAAAlO,EACAiO,EAAA1M,eAAAvD,MACAiQ,EAAAtM,oBAAAwV,MACAlJ,EAAA5N,cAAA6C,EAAA+K,EAAA9K,GACA8K,EAyGA,MAxHAnF,GAAA,UAAAlD,EAAA0E,GAiBA5N,OAAAC,eAAAiJ,EAAAsD,UAAA,cAKAwG,IAAA,SAAApO,GAAoCsY,GAAAM,uBACpC7Q,YAAA,EACAC,cAAA,IAMA1D,EAAAsD,UAAAiQ,YAAA,SAAA5W,GACA6G,KAAA6R,QACA7R,KAAAiQ,gBACA/W,EAAAC,EAAA6G,KAAA5G,aACA4G,KAAA5G,UAAA4G,KAAAmQ,MACAnQ,KAAAkI,cAAAsG,YAAAxO,UAAAmQ,SAMA3T,EAAAsD,UAAA8F,YAAA,WACA5F,KAAAkI,eACAlI,KAAAkI,cAAA2E,cAAA7M,OAOAxD,EAAAsD,UAAArI,kBAAA,SAAAD,GACAwI,KAAA5G,UAAA5B,EACAwI,KAAA8P,OAAAtF,KAAAhT,IAEAlE,OAAAC,eAAAiJ,EAAAsD,UAAA,QAIAC,IAAA,WAA0B,MAAArJ,GAAAsJ,KAAArJ,KAA4CqJ,KAAA,UACtEC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAiJ,EAAAsD,UAAA,iBAIAC,IAAA,WAA0B,MAAAC,MAAA8E,QAAA9E,KAAA8E,QAAAoD,cAAA,MAC1BjI,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAiJ,EAAAsD,UAAA,aAIAC,IAAA,WAA0B,MAAA/G,GAAAgH,KAAA7H,iBAC1B8H,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAiJ,EAAAsD,UAAA,kBAIAC,IAAA,WACA,MAAA9G,GAAA+G,KAAAzH,sBAEA0H,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAiJ,EAAAsD,UAAA,WAIAC,IAAA,WAA0B,MAAAC,MAAAuF,UAC1BtF,YAAA,EACAC,cAAA,IAKA1D,EAAAsD,UAAAkI,iBAAA,aACAhI,KAAA8E,kBAAAxJ,MACA0E,KAAA8E,kBAAAnJ,IACA6U,GAAAE,wBAEA1Q,KAAA8E,kBAAAxJ,KAAA0E,KAAA8E,kBAAAvJ,KACAyE,KAAA8E,kBAAAtJ,KACAgV,GAAAC,0BAMAjU,EAAAsD,UAAAmQ,cAAA,WACAjQ,KAAAgI,mBACAhI,KAAAuF,SAAAvF,KAAAkI,cAAA0E,WAAA5M,MACAA,KAAArL,QAAA2L,UAAAN,KAAA,cAAAhI,kBACAgI,KAAA,mCAEAA,KAAA6R,QAAA,GAEArV,GACCR,EACDQ,IAAAmH,aACKC,KAAArP,EAAA,UAAAsP,OAA0BC,SAAA,oBAAAI,WAAArF,QAK/BrC,GAAA2H,eAAA,WAA8C,QACzCP,KAAA/H,EAAA8H,aAAuCC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,aAC3EqP,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAvG,OAChEsG,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAAxG,OAChEuG,KAAArJ,MAAAoJ,aAA4BC,KAAArP,EAAA,WAAoBqP,KAAArP,EAAA,OAAgBqP,KAAArP,EAAA,OAAAsP,MAAA/H,QAErEU,GAAAyJ,gBACAtP,OAAciN,KAAArP,EAAA,MAAAsP,MAAA,qBACdsM,QAAevM,KAAArP,EAAA,MAAAsP,MAAA,aACfiM,SAAgBlM,KAAArP,EAAA,OAAAsP,MAAA,mBAChB3L,aAAoB0L,KAAArP,EAAA,MAAAsP,MAAA;;;;;;;AASpB,GAAApE,KACAuD,QAAA1F,EACA2F,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAA0I,MACzCiG,OAAA,GAEA9D,IACA4D,QAAA1F,EACA2F,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAqI,MACzCsG,OAAA,GAcAjG,GAAA,WACA,QAAAA,MA+BA,MA7BA3J,QAAAC,eAAA0J,EAAA6C,UAAA,YAIAC,IAAA,WAA0B,MAAAC,MAAA8R,WAK1BxL,IAAA,SAAA9S,GACAwM,KAAA8R,UAAA,MAAAte,IAAA,IAAAA,GAAA,GAAAA,GAAA,QACAwM,KAAAuM,WACAvM,KAAAuM,aAEAtM,YAAA,EACAC,cAAA,IAMAjD,EAAA6C,UAAAhK,SAAA,SAAAC,GACA,MAAAiK,MAAA2B,SAAAzK,EAAAyK,SAAA5L,GAAA,MAMAkH,EAAA6C,UAAAzH,0BAAA,SAAAqL,GAA2E1D,KAAAuM,UAAA7I,GAC3EzG,IAEAA,IAAA0G,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,yIACAI,WAAAzE,IACAsE,MAAuBgO,kBAAA,4BAMvB9U,GAAAkH,eAAA,WAAgD,UAChDlH,GAAAgJ,gBACAtE,WAAkBiC,KAAArP,EAAA,QAclB,IAAAqI,IAAA,SAAAsE,GAEA,QAAAtE,KACA,cAAAsE,KAAAC,MAAAnB,KAAAoB,YAAApB,KASA,MAXAN,GAAA,UAAA9C,EAAAsE,GAQAtE,EAAAkD,UAAAhK,SAAA,SAAAC,GACA,MAAAiK,MAAA2B,SAAAzK,EAAA0K,aAAA7L,GAAA,MAEA6G,GACCK,GACDL,IAAA+G,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,sIACAI,WAAA9E,IACA2E,MAAuBgO,kBAAA,4BAMvBnV,GAAAuH,eAAA,WAAwD,SAIxD,IAAA9E,KACA2D,QAAA1F,EACA2F,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAsI,MACzCqG,OAAA,GAgBArG,GAAA,WACA,QAAAA,MA2BA,MAzBAvJ,QAAAC,eAAAsJ,EAAAiD,UAAA,SAKAwG,IAAA,SAAA9S,GACAwM,KAAAgS,SAAA,KAAAxe,IAAA,IAAAA,GAAA,SAAAA,EACAwM,KAAAuM,WACAvM,KAAAuM,aAEAtM,YAAA,EACAC,cAAA,IAMArD,EAAAiD,UAAAhK,SAAA,SAAAC,GACA,MAAAiK,MAAAgS,SAAA9a,EAAA2K,MAAA9L,GAAA,MAMA8G,EAAAiD,UAAAzH,0BAAA,SAAAqL,GAAwE1D,KAAAuM,UAAA7I,GACxE7G,IAEAA,IAAA8G,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,iEACAI,WAAA7E,QAMAxC,GAAAsH,eAAA,WAA6C,UAC7CtH,GAAAoJ,gBACApE,QAAe+B,KAAArP,EAAA,QASf,IAAAgL,KACAyD,QAAA1F,EACA2F,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAwI,MACzCmG,OAAA,GAQAnG,GAAA,WACA,QAAAA,MA+BA,MAzBAA,GAAA+C,UAAAiQ,YAAA,SAAA5W,GACA,aAAAA,KACA6G,KAAAiS,mBACAjS,KAAAuM,WACAvM,KAAAuM,cAOAxP,EAAA+C,UAAAhK,SAAA,SAAAC,GACA,aAAAiK,KAAA+B,UAAA,KAAA/B,KAAAkS,WAAAnc,IAMAgH,EAAA+C,UAAAzH,0BAAA,SAAAqL,GAA4E1D,KAAAuM,UAAA7I,GAI5E3G,EAAA+C,UAAAmS,iBAAA,WACAjS,KAAAkS,WAAAhb,EAAA4K,UAAAqQ,SAAAnS,KAAA+B,UAAA,MAEAhF,IAEAA,IAAA4G,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,6EACAI,WAAA3E,IACAwE,MAAuBqO,mBAAA,oCAMvBrV,GAAAoH,eAAA,WAAiD,UACjDpH,GAAAkJ,gBACAlE,YAAmB6B,KAAArP,EAAA,QASnB,IAAA+K,KACA0D,QAAA1F,EACA2F,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAuI,MACzCoG,OAAA,GASApG,GAAA,WACA,QAAAA,MA+BA,MAzBAA,GAAAgD,UAAAiQ,YAAA,SAAA5W,GACA,aAAAA,KACA6G,KAAAiS,mBACAjS,KAAAuM,WACAvM,KAAAuM,cAOAzP,EAAAgD,UAAAhK,SAAA,SAAAC,GACA,aAAAiK,KAAAmC,UAAAnC,KAAAkS,WAAAnc,GAAA,MAMA+G,EAAAgD,UAAAzH,0BAAA,SAAAqL,GAA4E1D,KAAAuM,UAAA7I,GAI5E5G,EAAAgD,UAAAmS,iBAAA,WACAjS,KAAAkS,WAAAhb,EAAAgL,UAAAiQ,SAAAnS,KAAAmC,UAAA,MAEArF,IAEAA,IAAA6G,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,6EACAI,WAAA5E,IACAyE,MAAuBsO,mBAAA,oCAMvBvV,GAAAqH,eAAA,WAAiD,UACjDrH,GAAAmJ,gBACA9D,YAAmByB,KAAArP,EAAA,QAEnB,IAAAiL,KACAwD,QAAA1F,EACA2F,YAAA5P,EAAAiB,EAAAC,EAAA,uBAAyC,MAAAyI,MACzCkG,OAAA,GAeAlG,GAAA,WACA,QAAAA,MA2BA,MArBAA,GAAA8C,UAAAiQ,YAAA,SAAA5W,GACA,WAAAA,KACA6G,KAAAiS,mBACAjS,KAAAuM,WACAvM,KAAAuM,cAOAvP,EAAA8C,UAAAhK,SAAA,SAAAC,GAAwD,MAAAiK,MAAAkS,WAAAnc,IAKxDiH,EAAA8C,UAAAzH,0BAAA,SAAAqL,GAA0E1D,KAAAuM,UAAA7I,GAI1E1G,EAAA8C,UAAAmS,iBAAA,WAA+DjS,KAAAkS,WAAAhb,EAAAkL,QAAApC,KAAAoC,UAC/DpF,IAEAA,IAAA2G,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,uEACAI,WAAA1E,IACAuE,MAAuBuO,iBAAA,gCAMvBtV,GAAAmH,eAAA,WAA+C,UAC/CnH,GAAAiJ,gBACA7D,UAAiBwB,KAAArP,EAAA;;;;;;;AA6BjB,GAAA2I,IAAA,WACA,QAAAA,MA+EA,MApEAA,GAAA4C,UAAAyO,MAAA,SAAAgE,EAAAC,OACA,KAAAA,IAA+BA,EAAA,KAC/B,IAAyB/X,GAAAuF,KAAAyS,gBAAAF,GACA1c,EAAA,MAAA2c,IAAA,eACApb,EAAA,MAAAob,IAAA,mBACzB,WAAAhY,IAAAC,EAAA5E,EAAAuB,IAcA8F,EAAA4C,UAAAnL,QAAA,SAAA0X,EAAAxW,EAAAuB,GACA,UAAAgG,IAAAiP,EAAAxW,EAAAuB,IAUA8F,EAAA4C,UAAA4S,MAAA,SAAAH,EAAA1c,EAAAuB,GACA,GAAAyN,GAAA7E,KACyBvF,EAAA8X,EAAA1d,IAAA,SAAAkB,GAAgD,MAAA8O,GAAA8N,eAAA5c,IACzE,WAAA2E,IAAAD,EAAA5E,EAAAuB,IAOA8F,EAAA4C,UAAA2S,gBAAA,SAAAF,GACA,GAAA1N,GAAA7E,KACyBvF,IAIzB,OAHAnH,QAAAgC,KAAAid,GAAAna,QAAA,SAAA4U,GACAvS,EAAAuS,GAAAnI,EAAA8N,eAAAJ,EAAAvF,MAEAvS,GAOAyC,EAAA4C,UAAA6S,eAAA,SAAAC,GACA,GAAAA,YAAAxV,KAAAwV,YAAApY,KACAoY,YAAAlY,IACA,MAAAkY,EAEA,IAAArY,MAAAM,QAAA+X,GAAA,CACA,GAA6Bpf,GAAAof,EAAA,GACA/c,EAAA+c,EAAA5e,OAAA,EAAA4e,EAAA,QACAxb,EAAAwb,EAAA5e,OAAA,EAAA4e,EAAA,OAC7B,OAAA5S,MAAArL,QAAAnB,EAAAqC,EAAAuB,GAGA,MAAA4I,MAAArL,QAAAie,IAGA1V,IAEAA,IAAAyG,aACKC,KAAArP,EAAA,aAKL2I,GAAAiH,eAAA,WAA0C;;;;;;;AAgB1C,GAAA5G,IAAA,GAAAhJ,GAAA,iBAqBA8J,GAAA,WACA,QAAAA,MAEA,MAAAA,KAEAA,IAAAsF,aACKC,KAAArP,EAAA,UAAAsP,OACLC,SAAA,+CACAC,MAAuB8O,WAAA,QAMvBxU,GAAA8F,eAAA,WAA2C;;;;;;;AAQ3C,GAAAvG,KACAS,GACA5B,GACAyC,GACA9E,EACAmE,EACAI,GACA/C,EACAc,GACAC,GACAL,GACAL,GACAC,GACAe,GACAF,GACAD,GACAE,GACAJ,GACAC,IAEAgB,IAAAzB,GAAAC,GAAAF,IACAwB,IAAApB,GAAAhB,GAAAiB,GAAAlB,GAAAE,IAIAkC,GAAA,WACA,QAAAA,MAEA,MAAAA,KAEAA,IAAAiG,aACKC,KAAArP,EAAA,SAAAsP,OACLiP,aAAAlV,GACAxK,QAAAwK,OAMAF,GAAAyG,eAAA,WAAwD;;;;;;;AAYxD,GAAA3G,IAAA,WACA,QAAAA,MAEA,MAAAA,KAEAA,IAAAmG,aACKC,KAAArP,EAAA,SAAAsP,OACLiP,aAAAjV,GACAqG,WAAAzF,IACArL,SAAAsK,GAAAG,QAMAL,GAAA2G,eAAA,WAA0C,SAK1C,IAAA1G,IAAA,WACA,QAAAA,MAEA,MAAAA,KAEAA,IAAAkG,aACKC,KAAArP,EAAA,SAAAsP,OACLiP,cAAAnV,IACAuG,WAAAhH,GAAAuB,IACArL,SAAAsK,GAAAC,QAMAF,GAAA0G,eAAA,WAAkD,WFiM1C,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEF,SAAUhR,EAAQC,EAASC,GAEjC,YGpnMAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GAeA2f,EAAA,WACA,QAAAA,GAAAC,EAAAzf,EAAA0f,GACAlT,KAAAiT,OACAjT,KAAAxM,QACAwM,KAAAkT,QACAlT,KAAAmT,SAAA,MAAAF,EAoGA,MA7FAD,GAAAlT,UAAAsT,QAAA,SAAAC,GACA,OAAArT,KAAAiT,MACA,QACA,MAAAI,GAAAC,MAAAD,EAAAC,KAAAtT,KAAAxM,MACA,SACA,MAAA6f,GAAAH,OAAAG,EAAAH,MAAAlT,KAAAkT,MACA,SACA,MAAAG,GAAAE,UAAAF,EAAAE,aAWAP,EAAAlT,UAAA0T,GAAA,SAAAF,EAAAJ,EAAAK,GAEA,OADAvT,KAAAiT,MAEA,QACA,MAAAK,MAAAtT,KAAAxM,MACA,SACA,MAAA0f,MAAAlT,KAAAkT,MACA,SACA,MAAAK,UAYAP,EAAAlT,UAAA2T,OAAA,SAAAC,EAAAR,EAAAK,GACA,MAAAG,IAAA,kBAAAA,GAAAJ,KACAtT,KAAAoT,QAAAM,GAGA1T,KAAAwT,GAAAE,EAAAR,EAAAK,IAQAP,EAAAlT,UAAA3L,aAAA,WAEA,OADA6L,KAAAiT,MAEA,QACA,MAAAF,GAAAY,WAAAC,GAAA5T,KAAAxM,MACA,SACA,MAAAuf,GAAAY,WAAAE,MAAA7T,KAAAkT,MACA,SACA,MAAAH,GAAAY,WAAAG,QAEA,SAAArf,OAAA,uCASAue,EAAAe,WAAA,SAAAvgB,GACA,gBAAAA,EACA,GAAAwf,GAAA,IAAAxf,GAEAwM,KAAAgU,4BASAhB,EAAAiB,YAAA,SAAAC,GACA,UAAAlB,GAAA,QAAA/Y,GAAAia,IAMAlB,EAAAmB,eAAA,WACA,MAAAnU,MAAAoU,sBAEApB,IAEAA,GAAAoB,qBAAA,GAAApB,GAAA,KACAA,EAAAgB,2BAAA,GAAAhB,GAAA,QAAA/Y,IACA7G,EAAA4f,gBH2nMM,SAAU7f,EAAQC,EAASC,GAEjC,YIttMA,SAAAwB,GAAAwf,EAAAC,GACA,qBAAAD,GACA,SAAAE,WAAA,6DAEA,OAAAvU,MAAAwU,KAAA,GAAAC,GAAAJ,EAAAC,IAxCAhhB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAwCAD,GAAAyB,KACA,IAAA4f,GAAA,WACA,QAAAA,GAAAJ,EAAAC,GACAtU,KAAAqU,UACArU,KAAAsU,UAKA,MAHAG,GAAA3U,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAuJ,GAAAF,EAAA5U,KAAAqU,QAAArU,KAAAsU,WAEAG,IAEArhB,GAAAqhB,aAMA,IAAAK,GAAA,SAAA5T,GAEA,QAAA4T,GAAAC,EAAAV,EAAAC,GACA,GAAAzP,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAAwP,UACAxP,EAAAmQ,MAAA,EACAnQ,EAAAyP,WAAAzP,EACAA,EAeA,MArBA6P,GAAAO,UAAAH,EAAA5T,GAUA4T,EAAAhV,UAAAoV,MAAA,SAAA1hB,GACA,GAAA2hB,EACA,KACAA,EAAAnV,KAAAqU,QAAAtR,KAAA/C,KAAAsU,QAAA9gB,EAAAwM,KAAAgV,SAEA,MAAAd,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAlU,KAAA+U,YAAAzB,KAAA6B,IAEAL,GACCH,EAAAS,aJiwMK,SAAUjiB,EAAQC,EAASC,GAEjC,YKr1MAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAgiB,EAAAhiB,EAAA,IACAiiB,EAAAjiB,EAAA,KAMAQ,EAAA,SAAAqN,GAEA,QAAArN,GAAA0hB,EAAAC,GACA,GAAA3Q,GAAA3D,EAAA6B,KAAA/C,KAAAuV,EAAAC,IAAAxV,IAIA,OAHA6E,GAAA0Q,YACA1Q,EAAA2Q,OACA3Q,EAAAxE,SAAA,EACAwE,EAuHA,MA7HA6P,GAAAO,UAAAphB,EAAAqN,GAQArN,EAAAiM,UAAA2V,SAAA,SAAAC,EAAAC,GAEA,OADA,KAAAA,IAA+BA,EAAA,GAC/B3V,KAAA4V,OACA,MAAA5V,KAGAA,MAAA0V,QAGA1V,KAAAK,SAAA,CACA,IAAAlK,GAAA6J,KAAA7J,GACAof,EAAAvV,KAAAuV,SA4BA,OANA,OAAApf,IACA6J,KAAA7J,GAAA6J,KAAA6V,eAAAN,EAAApf,EAAAwf,IAEA3V,KAAA2V,QAEA3V,KAAA7J,GAAA6J,KAAA7J,IAAA6J,KAAA8V,eAAAP,EAAAvV,KAAA7J,GAAAwf,GACA3V,MAEAnM,EAAAiM,UAAAgW,eAAA,SAAAP,EAAApf,EAAAwf,GAEA,WADA,KAAAA,IAA+BA,EAAA,GAC/BN,EAAAU,KAAAC,YAAAT,EAAAU,MAAAC,KAAAX,EAAAvV,MAAA2V,IAEA9hB,EAAAiM,UAAA+V,eAAA,SAAAN,EAAApf,EAAAwf,GAGA,WAFA,KAAAA,IAA+BA,EAAA,GAE/B,OAAAA,GAAA3V,KAAA2V,YAAA,IAAA3V,KAAAK,QACAlK,EAIAkf,EAAAU,KAAAI,cAAAhgB,QAAA8D,YAMApG,EAAAiM,UAAAsW,QAAA,SAAAV,EAAAC,GACA,GAAA3V,KAAA4V,OACA,UAAAnhB,OAAA,+BAEAuL,MAAAK,SAAA,CACA,IAAA6S,GAAAlT,KAAAqW,SAAAX,EAAAC,EACA,IAAAzC,EACA,MAAAA,IAEA,IAAAlT,KAAAK,SAAA,MAAAL,KAAA7J,KAcA6J,KAAA7J,GAAA6J,KAAA6V,eAAA7V,KAAAuV,UAAAvV,KAAA7J,GAAA,QAGAtC,EAAAiM,UAAAuW,SAAA,SAAAX,EAAAC,GACA,GAAAW,IAAA,EACAC,MAAAtc,EACA,KACA+F,KAAAwV,KAAAE,GAEA,MAAAc,GACAF,GAAA,EACAC,IAAAC,MAAA,GAAA/hB,OAAA+hB,GAEA,GAAAF,EAEA,MADAtW,MAAAyL,cACA8K,GAGA1iB,EAAAiM,UAAA2W,aAAA,WACA,GAAAtgB,GAAA6J,KAAA7J,GACAof,EAAAvV,KAAAuV,UACAmB,EAAAnB,EAAAmB,QACAxb,EAAAwb,EAAAvb,QAAA6E,KACAA,MAAAwV,KAAA,KACAxV,KAAA0V,MAAA,KACA1V,KAAAK,SAAA,EACAL,KAAAuV,UAAA,MACA,IAAAra,GACAwb,EAAAtb,OAAAF,EAAA,GAEA,MAAA/E,IACA6J,KAAA7J,GAAA6J,KAAA6V,eAAAN,EAAApf,EAAA,OAEA6J,KAAA2V,MAAA,MAEA9hB,GACCyhB,EAAAqB,OACDvjB,GAAAS,eL41MM,SAAUV,EAAQC,EAASC,GAEjC,YMv+MAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAujB,EAAAvjB,EAAA,KACAO,EAAA,SAAAsN,GAEA,QAAAtN,KACA,GAAAiR,GAAA,OAAA3D,KAAAC,MAAAnB,KAAAoB,YAAApB,IAeA,OAdA6E,GAAA6R,WAMA7R,EAAAgS,QAAA,EAOAhS,EAAAiS,cAAA7c,GACA4K,EAuBA,MAxCA6P,GAAAO,UAAArhB,EAAAsN,GAmBAtN,EAAAkM,UAAAmW,MAAA,SAAAc,GACA,GAAAL,GAAA1W,KAAA0W,OACA,IAAA1W,KAAA6W,OAEA,WADAH,GAAAxR,KAAA6R,EAGA,IAAA7D,EACAlT,MAAA6W,QAAA,CACA,IACA,GAAA3D,EAAA6D,EAAAX,QAAAW,EAAArB,MAAAqB,EAAApB,OACA,YAESoB,EAAAL,EAAAM,QAET,IADAhX,KAAA6W,QAAA,EACA3D,EAAA,CACA,KAAA6D,EAAAL,EAAAM,SACAD,EAAAtL,aAEA,MAAAyH,KAGAtf,GACCgjB,EAAAK,UACD7jB,GAAAQ,kBN8+MM,SAAUT,EAAQC,EAASC,GAEjC,YO9hNAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GAWA6jB,EAAA,SAAAhW,GAEA,QAAAgW,KACA,GAAArS,GAAA3D,EAAA6B,KAAA/C,KAAA,0BAAAA,IAGA,OAFA6E,GAAAlO,KAAA,0BACArD,OAAA6jB,eAAAtS,EAAAqS,EAAApX,WACA+E,EAEA,MAPA6P,GAAAO,UAAAiC,EAAAhW,GAOAgW,GACCziB,MACDrB,GAAA8jB,2BPqiNM,SAAU/jB,EAAQC,EAASC,GAEjC,YQ7jNAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GAWA+jB,EAAA,SAAAlW,GAEA,QAAAkW,KACA,GAAAvS,GAAA3D,EAAA6B,KAAA/C,KAAA,4BAAAA,IAGA,OAFA6E,GAAAlO,KAAA,aACArD,OAAA6jB,eAAAtS,EAAAuS,EAAAtX,WACA+E,EAEA,MAPA6P,GAAAO,UAAAmC,EAAAlW,GAOAkW,GACC3iB,MACDrB,GAAAgkB,cRmkNQ,CAEF,SAAUjkB,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GShmNtD,IAAA6jB,GAAAhkB,EAAA,GACAikB,EAAAjkB,EAAA,KAOAkkB,EAAA,WAME,QAAAA,KALQvX,KAAAwX,QAAoC,GAAIF,GAAAG,gBAAyB,MACjEzX,KAAA0X,cAA0C,GAAIJ,GAAAG,gBAAyB,MACvEzX,KAAA2X,gBAA4C,GAAIL,GAAAG,gBAAyB,MACzEzX,KAAA4X,QAAoC,GAAIN,GAAAG,gBAAyB,MAGvEzX,KAAK0X,cAAcpE,MAAQuE,KAAK,IAChC7X,KAAKwX,QAAQlE,MAAQuE,KAAK,IAC1B7X,KAAK2X,gBAAgBrE,MACnBwE,cAAgBC,MAAO,oCACvBC,iBAAmBD,MAAO,sCAE5B/X,KAAK4X,QAAQtE,MACXwE,cAAgBG,KAAM,kBACtBD,iBAAmBC,KAAM,uBA8B/B,MA1BEV,GAAAzX,UAAAoY,OAAA,SAAQD,EAAcE,GACpB,GAAI3kB,EAWJ,OATEA,OADuB,KAAd2kB,GAEPN,IAAKM,IAILN,KAAM7X,KAAKoY,SAAUH,GAAMJ,KAG/B7X,KAAKiY,GAAM3E,KAAM9f,GACVwM,MAGTuX,EAAAzX,UAAAsY,SAAA,SAAUH,GACR,MAAOjY,MAAKiY,GAAMG,YAGpBb,EAAAzX,UAAAuY,UAAA,SAAWJ,GACT,MAAOjY,MAAKiY,GAAMK,gBAGpBf,EAAAzX,UAAAyY,cAAA,SAAeN,GACb,MAAOjY,MAAKiY,GAAMK,gBA3CTf,EAAQiB,YADpBnB,EAAAoB,aTuoNOC,WAAW,yBStoNNnB,KAAAnkB,GAAAmkB,YT8oNL,CAEF,SAAUpkB,EAAQC,EAASC,GAEjC,YUzpNAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAslB,EAAAtlB,EAAA,GACAulB,EAAAvlB,EAAA,GAIAwlB,EAAA,SAAA3X,GAEA,QAAA2X,KACA,GAAAhU,GAAA,OAAA3D,KAAAC,MAAAnB,KAAAoB,YAAApB,IAIA,OAHA6E,GAAArR,MAAA,KACAqR,EAAAiU,SAAA,EACAjU,EAAAkU,cAAA,EACAlU,EAgCA,MAtCA6P,GAAAO,UAAA4D,EAAA3X,GAQA2X,EAAA/Y,UAAAkZ,WAAA,SAAApE,GACA,MAAA5U,MAAAe,UACA6T,EAAA1B,MAAAlT,KAAAiZ,aACAL,EAAAM,aAAAC,OAEAnZ,KAAA+Y,cAAA/Y,KAAA8Y,SACAlE,EAAAtB,KAAAtT,KAAAxM,OACAohB,EAAArB,WACAqF,EAAAM,aAAAC,OAEAjY,EAAApB,UAAAkZ,WAAAjW,KAAA/C,KAAA4U,IAEAiE,EAAA/Y,UAAAwT,KAAA,SAAA9f,GACAwM,KAAA+Y,eACA/Y,KAAAxM,QACAwM,KAAA8Y,SAAA,IAGAD,EAAA/Y,UAAAoT,MAAA,SAAAA,GACAlT,KAAA+Y,cACA7X,EAAApB,UAAAoT,MAAAnQ,KAAA/C,KAAAkT,IAGA2F,EAAA/Y,UAAAyT,SAAA,WACAvT,KAAA+Y,cAAA,EACA/Y,KAAA8Y,SACA5X,EAAApB,UAAAwT,KAAAvQ,KAAA/C,UAAAxM,OAEA0N,EAAApB,UAAAyT,SAAAxQ,KAAA/C,OAEA6Y,GACCF,EAAAS,QACDhmB,GAAAylB,gBVgqNM,SAAU1lB,EAAQC,EAASC,GAEjC,YWltNAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAslB,EAAAtlB,EAAA,GACAgmB,EAAAhmB,EAAA,IACAulB,EAAAvlB,EAAA,GACAimB,EAAAjmB,EAAA,IACAkmB,EAAAlmB,EAAA,IACAmmB,EAAAnmB,EAAA,KAIAomB,EAAA,SAAAvY,GAEA,QAAAuY,GAAAC,EAAAC,EAAApE,OACA,KAAAmE,IAAoCA,EAAAE,OAAAC,uBACpC,KAAAF,IAAoCA,EAAAC,OAAAC,kBACpC,IAAAhV,GAAA3D,EAAA6B,KAAA/C,WAKA,OAJA6E,GAAA0Q,YACA1Q,EAAAiV,WACAjV,EAAAkV,YAAAL,EAAA,IAAAA,EACA7U,EAAAmV,YAAAL,EAAA,IAAAA,EACA9U,EAmEA,MA5EA6P,GAAAO,UAAAwE,EAAAvY,GAWAuY,EAAA3Z,UAAAwT,KAAA,SAAA9f,GACA,GAAAymB,GAAAja,KAAAka,SACAla,MAAA8Z,QAAA5U,KAAA,GAAAiV,GAAAF,EAAAzmB,IACAwM,KAAAoa,2BACAlZ,EAAApB,UAAAwT,KAAAvQ,KAAA/C,KAAAxM,IAEAimB,EAAA3Z,UAAAkZ,WAAA,SAAApE,GACA,GAEAyF,GAFAP,EAAA9Z,KAAAoa,2BACA7E,EAAAvV,KAAAuV,SAEA,IAAAvV,KAAA4V,OACA,SAAA2D,GAAAe,uBAEAta,MAAAe,SACAsZ,EAAAzB,EAAAM,aAAAC,MAEAnZ,KAAAua,UACAF,EAAAzB,EAAAM,aAAAC,OAGAnZ,KAAAwa,UAAAtV,KAAA0P,GACAyF,EAAA,GAAAb,GAAAiB,oBAAAza,KAAA4U,IAEAW,GACAX,EAAA5P,IAAA4P,EAAA,GAAA0E,GAAAoB,oBAAA9F,EAAAW,GAGA,QADAoF,GAAAb,EAAA9lB,OACAM,EAAA,EAAuBA,EAAAqmB,IAAA/F,EAAAgB,OAA+BthB,IACtDsgB,EAAAtB,KAAAwG,EAAAxlB,GAAAd,MAQA,OANAwM,MAAAe,SACA6T,EAAA1B,MAAAlT,KAAAiZ,aAEAjZ,KAAAua,WACA3F,EAAArB,WAEA8G,GAEAZ,EAAA3Z,UAAAoa,QAAA,WACA,OAAAla,KAAAuV,WAAA8D,EAAAuB,OAAAX,OAEAR,EAAA3Z,UAAAsa,yBAAA,WAUA,IATA,GAAAH,GAAAja,KAAAka,UACAH,EAAA/Z,KAAA+Z,YACAC,EAAAha,KAAAga,YACAF,EAAA9Z,KAAA8Z,QACAe,EAAAf,EAAA9lB,OACA8mB,EAAA,EAIAA,EAAAD,KACAZ,EAAAH,EAAAgB,GAAAC,KAAAf,IAGAc,GAQA,OANAD,GAAAd,IACAe,EAAAE,KAAAtZ,IAAAoZ,EAAAD,EAAAd,IAEAe,EAAA,GACAhB,EAAA1e,OAAA,EAAA0f,GAEAhB,GAEAL,GACCd,EAAAS,QACDhmB,GAAAqmB,eACA,IAAAU,GAAA,WACA,QAAAA,GAAAY,EAAAvnB,GACAwM,KAAA+a,OACA/a,KAAAxM,QAEA,MAAA2mB,OX0tNM,SAAUhnB,EAAQC,EAASC,GAEjC,YY5wNA,SAAA8B,GAAA8lB,EAAAC,GACA,GAAAC,IAAA,CASA,OAHA/Z,WAAApN,QAAA,IACAmnB,GAAA,GAEAnb,KAAAwU,KAAA,GAAA4G,GAAAH,EAAAC,EAAAC,IA1DA7nB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EA0DAD,GAAA+B,QACA,IAAAimB,GAAA,WACA,QAAAA,GAAAH,EAAAC,EAAAC,OACA,KAAAA,IAAiCA,GAAA,GACjCnb,KAAAib,cACAjb,KAAAkb,OACAlb,KAAAmb,UAKA,MAHAC,GAAAtb,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA8P,GAAAzG,EAAA5U,KAAAib,YAAAjb,KAAAkb,KAAAlb,KAAAmb,WAEAC,IAEAhoB,GAAAgoB,gBAMA,IAAAC,GAAA,SAAAna,GAEA,QAAAma,GAAAtG,EAAAkG,EAAAC,EAAAC,GACA,GAAAtW,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IASA,OARA6E,GAAAoW,cACApW,EAAAsW,UACAtW,EAAA3J,MAAA,EACA2J,EAAAsO,UAAA,EACAtO,EAAAwI,IAAA6N,EACArW,EAAAsW,SACAtW,EAAA3J,QAEA2J,EA4BA,MAvCA6P,GAAAO,UAAAoG,EAAAna,GAaAma,EAAAvb,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAmT,WAAAnT,KAAAmT,SAAAnT,KAAAmb,SACAnb,KAAAsb,WAAA9nB,IAGAwM,KAAAqN,IAAA7Z,EACAwM,KAAAmT,UAAA,IAGAkI,EAAAvb,UAAAwb,WAAA,SAAA9nB,GACA,GAAA2hB,EACA,KACAA,EAAAnV,KAAAib,YAAAjb,KAAAqN,IAAA7Z,EAAAwM,KAAA9E,SAEA,MAAAgZ,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAlU,KAAAqN,IAAA8H,GAEAkG,EAAAvb,UAAAyb,UAAA,YACAvb,KAAAmT,UAAAnT,KAAAmb,UACAnb,KAAA+U,YAAAzB,KAAAtT,KAAAqN,KAEArN,KAAA+U,YAAAxB,YAEA8H,GACC1G,EAAAS,WACDhiB,GAAAioB,oBZm0NM,SAAUloB,EAAQC,EAASC,GAEjC,Ya77NA,SAAAmoB,GAAAhoB,GACA,MAAAA,aAAAioB,QAAAja,OAAAhO,GAFAF,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,IAI9CJ,EAAAooB,Ubq8NM,SAAUroB,EAAQC,EAASC,GAEjC,Ycz8NA,SAAAqoB,GAAA5T,GAKA,OAAA6T,EAAA9gB,QAAAiN,MAAAvG,WAAAuG,GAAA,KAPAxU,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAmoB,GAAAtoB,EAAA,GAQAD,GAAAsoB,adk9NM,SAAUvoB,EAAQW,EAAqBT,GAE7C,YejnNA,SAAAuoB,GAAAC,GACA,UAAAC,IAAAD,GAOA,QAAAE,GAAAnjB,GACA,GAAqBsa,GAAAze,MAAA,6BAAAmE,EAErB,OADA,GAAAojB,KAAA,EACA9I,EAMA,QAAA+I,GAAA/I,GACA,SAAA8I,IAQA,QAAAE,GAAAC,EAAAC,EAAAC,GACA,GAAqBC,GAAAD,EAAA,KAAA9lB,MAAA,IACrB,IAAA+lB,EAAAtoB,OAAAmoB,EAAAnoB,OAEA,WAEA,aAAAqoB,EAAAE,YACAH,EAAAI,eAAAF,EAAAtoB,OAAAmoB,EAAAnoB,QAEA,WAIA,QAFqByoB,MAEKvhB,EAAA,EAAcA,EAAAohB,EAAAtoB,OAAsBkH,IAAA,CAC9D,GAAyBwhB,GAAAJ,EAAAphB,GACAyhB,EAAAR,EAAAjhB,EAEzB,IADyBwhB,EAAAE,WAAA,KAEzBH,EAAAC,EAAAG,UAAA,IAAAF,MAEA,IAAAD,IAAAC,EAAA5jB,KAEA,YAGA,OAAY+jB,SAAAX,EAAA/lB,MAAA,EAAAkmB,EAAAtoB,QAAAyoB,aAyBZ,QAAAM,GAAAC,EAAAC,OACA,KAAAA,IAAgCA,EAAA,GAEhC,QAA0B3oB,GAAA,EAAUA,EAAA0oB,EAAAhpB,OAAmBM,IAAA,CACvD,GAAyB+nB,GAAAW,EAAA1oB,EAEzB4oB,GAAAb,EADyBc,EAAAF,EAAAZ,KASzB,QAAAa,GAAAb,EAAAe,GACA,IAAAf,EACA,SAAA5nB,OAAA,2CAAA2oB,EAAA,kWAEA,IAAA7iB,MAAAM,QAAAwhB,GACA,SAAA5nB,OAAA,mCAAA2oB,EAAA,+BAEA,KAAAf,EAAAgB,WAAAhB,EAAAiB,QAAAjB,EAAAiB,SAAAC,GACA,SAAA9oB,OAAA,mCAAA2oB,EAAA,0DAEA,IAAAf,EAAAmB,YAAAnB,EAAAoB,SACA,SAAAhpB,OAAA,mCAAA2oB,EAAA,qDAEA,IAAAf,EAAAmB,YAAAnB,EAAAqB,aACA,SAAAjpB,OAAA,mCAAA2oB,EAAA,yDAEA,IAAAf,EAAAoB,UAAApB,EAAAqB,aACA,SAAAjpB,OAAA,mCAAA2oB,EAAA,uDAEA,IAAAf,EAAAmB,YAAAnB,EAAAgB,UACA,SAAA5oB,OAAA,mCAAA2oB,EAAA,sDAEA,IAAAf,EAAAtjB,MAAAsjB,EAAAsB,QACA,SAAAlpB,OAAA,mCAAA2oB,EAAA,8CAEA,aAAAf,EAAAmB,aAAAnB,EAAAgB,YAAAhB,EAAAoB,WAAApB,EAAAqB,aACA,SAAAjpB,OAAA,mCAAA2oB,EAAA,4FAEA,aAAAf,EAAAtjB,UAAA,KAAAsjB,EAAAsB,QACA,SAAAlpB,OAAA,mCAAA2oB,EAAA,2DAEA,oBAAAf,GAAAtjB,MAAA,MAAAsjB,EAAAtjB,KAAA6kB,OAAA,GACA,SAAAnpB,OAAA,mCAAA2oB,EAAA,oCAEA,SAAAf,EAAAtjB,UAAA,KAAAsjB,EAAAmB,gBAAA,KAAAnB,EAAAE,UAAA,CAEA,SAAA9nB,OAAA,4CAA0D2oB,EAAA,mBAAAf,EAAAmB,WAAA,0HAE1D,YAAAnB,EAAAE,WAAA,SAAAF,EAAAE,WAAA,WAAAF,EAAAE,UACA,SAAA9nB,OAAA,mCAAA2oB,EAAA,qDAEAf,GAAAoB,UACAV,EAAAV,EAAAoB,SAAAL,GAQA,QAAAD,GAAAF,EAAAY,GACA,MAAAA,GAGAZ,GAAAY,EAAA9kB,KAGAkkB,IAAAY,EAAA9kB,KACAkkB,EAAA,KAEAA,GAAAY,EAAA9kB,KACA8kB,EAAA9kB,KAGAkkB,EAAA,IAAAY,EAAA9kB,KATA,GAHAkkB;;;;;;;AA2BA,QAAAa,GAAAlkB,EAAAmkB,GACA,GAAAnkB,EAAA5F,SAAA+pB,EAAA/pB,OACA,QACA,QAA0BM,GAAA,EAAUA,EAAAsF,EAAA5F,SAAcM,EAClD,IAAA0pB,EAAApkB,EAAAtF,GAAAypB,EAAAzpB,IACA,QAEA,UAOA,QAAA0pB,GAAApkB,EAAAmkB,GACA,GAAqBE,GAAA3qB,OAAAgC,KAAAsE,GACAskB,EAAA5qB,OAAAgC,KAAAyoB,EACrB,IAAAE,EAAAjqB,QAAAkqB,EAAAlqB,OACA,QAGA,QADqBmqB,GACK7pB,EAAA,EAAUA,EAAA2pB,EAAAjqB,OAAeM,IAEnD,GADA6pB,EAAAF,EAAA3pB,GACAsF,EAAAukB,KAAAJ,EAAAI,GACA,QAGA,UAOA,QAAAC,GAAAC,GACA,MAAA9jB,OAAAuF,UAAAjJ,OAAAsK,SAAAkd,GAOA,QAAAC,GAAA1kB,GACA,MAAAA,GAAA5F,OAAA,EAAA4F,IAAA5F,OAAA,QAYA,QAAAoE,GAAAmmB,EAAAC,GACA,OAA0BC,KAAAF,GAC1BA,EAAAllB,eAAAolB,IACAD,EAAAD,EAAAE,MAUA,QAAAC,GAAAC,EAAAjb,GACA,OAAApQ,OAAAgC,KAAAqpB,GAAA3qB,OACA,MAAAX,GAAAiB,EAAAsqB,GAAA,OAEA,IAAqBC,MACAC,KACA5pB,IACrBkD,GAAAumB,EAAA,SAAA/kB,EAAA0T,GACA,GAAyByR,GAAAC,GAAA,IAAAjc,KAAAW,EAAA4J,EAAA1T,GAAA,SAAAxF,GAA8C,MAAAc,GAAAoY,GAAAlZ,GACvEkZ,KAAAiQ,GACAsB,EAAA3Z,KAAA6Z,GAGAD,EAAA5Z,KAAA6Z,IAGA,IAAqBE,GAAAC,GAAA,UAAAnc,KAAA6b,GAAA,GAAAzd,UAAA,GAAA0d,EAAAhoB,OAAAioB,KACAK,EAAAC,GAAA,KAAArc,KAAAkc,EACrB,OAAAD,IAAA,IAAAjc,KAAAoc,EAAA,WAAwC,MAAAjqB,KAMxC,QAAAmqB,GAAAvc,GACA,GAAqBwc,GAAAC,GAAA,SAAAxc,KAAAD,EACrB,OAAA0c,IAAA,MAAAzc,KAAAuc,EAAA,SAAAnK,GAAkD,WAAAA,IAOlD,QAAAsK,GAAAjsB,GACA,MAAAH,GAAAiB,EAAAorB,GAAA,kBAAAlsB,GACAA,EAEAH,EAAAiB,EAAAorB,GAAA,eAAAlsB,GAIAH,EAAAiB,EAAAqrB,GAAA,aAAA9R,QAAAC,QAAAta,IAEAH,EAAAiB,EAAAsqB,GAAA,IAA2B;;;;;;;AAY3B,QAAAgB,KACA,UAAAC,IAAA,GAAAC,cAAsD,MAQtD,QAAAC,GAAA3R,EAAA4R,EAAAC,GACA,MAAAA,GACAC,EAAA9R,EAAA+R,YAAAH,EAAAG,cACAC,EAAAhS,EAAA2H,KAAAiK,EAAAjK,MAEAsK,EAAAjS,EAAA+R,YAAAH,EAAAG,cACAG,EAAAlS,EAAA2H,KAAAiK,EAAAjK,MAOA,QAAAmK,GAAA9R,EAAA4R,GACA,MAAAhC,GAAA5P,EAAA4R,GAOA,QAAAI,GAAAhS,EAAA4R,GACA,IAAAO,EAAAnS,EAAA+N,SAAA6D,EAAA7D,UACA,QACA,IAAA/N,EAAAoS,mBAAAR,EAAAQ,iBACA,QACA,QAA0BzqB,KAAAiqB,GAAAvC,SAAA,CAC1B,IAAArP,EAAAqP,SAAA1nB,GACA,QACA,KAAAqqB,EAAAhS,EAAAqP,SAAA1nB,GAAAiqB,EAAAvC,SAAA1nB,IACA,SAEA,SAOA,QAAAsqB,GAAAjS,EAAA4R,GACA,MAAA1sB,QAAAgC,KAAA0qB,GAAAhsB,QAAAV,OAAAgC,KAAA8Y,GAAApa,QACAV,OAAAgC,KAAA0qB,GAAAS,MAAA,SAAAtC,GAAqD,MAAA6B,GAAA7B,KAAA/P,EAAA+P,KAOrD,QAAAmC,GAAAlS,EAAA4R,GACA,MAAAU,GAAAtS,EAAA4R,IAAA7D,UAQA,QAAAuE,GAAAtS,EAAA4R,EAAAW,GACA,GAAAvS,EAAA+N,SAAAnoB,OAAA2sB,EAAA3sB,OAAA,CACA,GAAyB4sB,GAAAxS,EAAA+N,SAAA/lB,MAAA,EAAAuqB,EAAA3sB,OACzB,SAAAusB,EAAAK,EAAAD,KAEAX,EAAAxD,cAIA,GAAApO,EAAA+N,SAAAnoB,SAAA2sB,EAAA3sB,OAAA,CACA,IAAAusB,EAAAnS,EAAA+N,SAAAwE,GACA,QACA,QAA8B5qB,KAAAiqB,GAAAvC,SAAA,CAC9B,IAAArP,EAAAqP,SAAA1nB,GACA,QACA,KAAAuqB,EAAAlS,EAAAqP,SAAA1nB,GAAAiqB,EAAAvC,SAAA1nB,IACA,SAEA,SAGA,GAAyB6qB,GAAAD,EAAAvqB,MAAA,EAAAgY,EAAA+N,SAAAnoB,QACAsf,EAAAqN,EAAAvqB,MAAAgY,EAAA+N,SAAAnoB,OACzB,SAAAusB,EAAAnS,EAAA+N,SAAAyE,OAEAxS,EAAAqP,SAAAF,KAEAmD,EAAAtS,EAAAqP,SAAAF,IAAAyC,EAAA1M,IAsKA,QAAAuN,GAAAC,EAAAC,GACA,MAAAR,GAAAO,EAAAC,IAAAD,EAAAL,MAAA,SAAA7mB,EAAAtF,GAA0D,MAAA0pB,GAAApkB,EAAAonB,WAAAD,EAAAzsB,GAAA0sB,cAO1D,QAAAT,GAAAO,EAAAC,GACA,MAAAD,GAAA9sB,SAAA+sB,EAAA/sB,QAEA8sB,EAAAL,MAAA,SAAA7mB,EAAAtF,GAAqC,MAAAsF,GAAAb,OAAAgoB,EAAAzsB,GAAAyE,OAQrC,QAAAkoB,GAAAtE,EAAAjZ,GACA,GAAqBxO,KAWrB,OAVAkD,GAAAukB,EAAAc,SAAA,SAAAyD,EAAAC,GACAA,IAAA5D,KACAroB,IAAA2B,OAAA6M,EAAAwd,EAAAC,OAGA/oB,EAAAukB,EAAAc,SAAA,SAAAyD,EAAAC,GACAA,IAAA5D,KACAroB,IAAA2B,OAAA6M,EAAAwd,EAAAC,OAGAjsB,EAgFA,QAAAksB,GAAAzE,GACA,MAAAA,GAAAR,SAAAtnB,IAAA,SAAAwsB,GAA8C,MAAAC,GAAAD,KAA2BvoB,KAAA,KAOzE,QAAAyoB,GAAA5E,EAAA5G,GACA,IAAA4G,EAAAH,cACA,MAAA4E,GAAAzE,EAEA,IAAA5G,EAAA,CACA,GAAyByL,GAAA7E,EAAAc,SAAAF,IACzBgE,EAAA5E,EAAAc,SAAAF,KAAA,GACA,GACyBkE,IAMzB,OALArpB,GAAAukB,EAAAc,SAAA,SAAA3oB,EAAAwY,GACAA,IAAAiQ,IACAkE,EAAAvc,KAAAoI,EAAA,IAAAiU,EAAAzsB,GAAA,MAGA2sB,EAAAztB,OAAA,EAAAwtB,EAAA,IAAAC,EAAA3oB,KAAA,UAAA0oB,EAGA,GAAyB/D,GAAAwD,EAAAtE,EAAA,SAAA7nB,EAAAwY,GACzB,MAAAA,KAAAiQ,IACAgE,EAAA5E,EAAAc,SAAAF,KAAA,KAEAjQ,EAAA,IAAAiU,EAAAzsB,GAAA,KAEA,OAAAssB,GAAAzE,GAAA,KAAAc,EAAA3kB,KAAA,UAgBA,QAAA4oB,GAAAC,GACA,MAAAC,oBAAAD,GACAE,QAAA,YACAA,QAAA,aACAA,QAAA,YACAA,QAAA,aACAA,QAAA,aAMA,QAAAC,GAAAH,GACA,MAAAI,oBAAAJ,GAMA,QAAAL,GAAAvoB,GACA,SAAA2oB,EAAA3oB,QAAAipB,EAAAjpB,EAAAioB,YAMA,QAAAgB,GAAAnG,GACA,MAAAvoB,QAAAgC,KAAAumB,GAAAhnB,IAAA,SAAAspB,GAAmD,UAAUuD,EAAAvD,GAAA,IAAAuD,EAAA7F,EAAAsC,MAA8CrlB,KAAA,IAM3G,QAAAmpB,GAAApG,GACA,GAAqBqG,GAAA5uB,OAAAgC,KAAAumB,GAAAhnB,IAAA,SAAA8B,GACrB,GAAyBnD,GAAAqoB,EAAAllB,EACzB,OAAA4D,OAAAM,QAAArH,KAAAqB,IAAA,SAAAC,GAA8D,MAAA4sB,GAAA/qB,GAAA,IAAA+qB,EAAA5sB,KAAyCgE,KAAA,KACvG4oB,EAAA/qB,GAAA,IAAA+qB,EAAAluB,IAEA,OAAA0uB,GAAAluB,OAAA,IAAAkuB,EAAAppB,KAAA,QAOA,QAAAqpB,GAAAC,GACA,GAAqBC,GAAAD,EAAAC,MAAAC,GACrB,OAAAD,KAAA,MAOA,QAAAE,GAAAH,GACA,GAAqBC,GAAAD,EAAAC,MAAAG,GACrB,OAAAH,KAAA,MAOA,QAAAI,GAAAL,GACA,GAAqBC,GAAAD,EAAAC,MAAAK,GACrB,OAAAL,KAAA,MAuOA,QAAAM,GAAAvG,GACA,UAAAwG,IAAA,oBAAAvuB,GAA0C,MAAAA,GAAA6e,MAAA,GAAA2P,IAAAzG,MAM1C,QAAA0G,GAAAC,GACA,UAAAH,IAAA,oBAAAvuB,GAA0C,MAAAA,GAAA6e,MAAA,GAAA8P,IAAAD,MAM1C,QAAAE,GAAAzF,GACA,UAAAoF,IAAA,oBAAAvuB,GAA0C,MAAAA,GAAA6e,MAAA,GAAAze,OAAA,gEAAA+oB,EAAA,QAM1C,QAAA0F,GAAA7G,GACA,UAAAuG,IAAA,oBAAAvuB,GAA0C,MAAAA,GAAA6e,MAAA6I,EAAA,gEAAAM,EAAAtjB,KAAA,yBAa1C,QAAAoqB,GAAAC,EAAAC,EAAAC,EAAAC,EAAAvG,GACA,UAAAwG,IAAAJ,EAAAC,EAAAC,EAAAC,EAAAvG,GAAA7b,QAmZA,QAAAsiB,GAAAL,EAAA/G,GACA,GAAqBqH,GAAArH,EAAAqH,OACrB,OAAAA,IAAA,IAAAA,EAAA1vB,OAMAqrB,EAJqBL,GAAA,IAAAjc,KAAA1P,EAAAiB,EAAAqvB,GAAA,MAAAD,GAAA,SAAAE,GACrB,GAAyBC,GAAAT,EAAArjB,IAAA6jB,EACzB,OAAAnE,GAAAoE,EAAAH,QAAAG,EAAAH,QAAArH,GAAAwH,EAAAxH,OAHAhpB,EAAAiB,EAAAsqB,GAAA,QAaA,QAAAyD,GAAAjG,EAAAC,EAAAF,GACA,QAAAE,EAAAtjB,KACA,eAAAsjB,EAAAE,YAAAH,EAAAI,eAAAL,EAAAnoB,OAAA,IACoB8vB,SAAA,EAAAC,oBAAAC,UAAA,EAAAC,6BAEJH,SAAA,EAAAC,oBAAAC,UAAA,EAAAC,2BAEhB,IAAqBtG,GAAAtB,EAAAsB,SAAAzB,EACAhnB,EAAAyoB,EAAAxB,EAAAC,EAAAC,EACrB,OAAAnnB,IASA4uB,SAAA,EACAC,iBAAuC7uB,EAAA,SACvC8uB,UAAgC9uB,EAAA4nB,SAAA,OAChCmH,wBAA8C/uB,EAAA,YAV9C4uB,SAAA,EACAC,oBACAC,UAAA,EACAC,4BAiBA,QAAA1tB,GAAA6lB,EAAA2H,EAAAG,EAAAlH,GACA,GAAAkH,EAAAlwB,OAAA,GACAmwB,EAAA/H,EAAA8H,EAAAlH,GAAA,CACA,GAAyB2E,GAAA,GAAA7B,IAAAiE,EAAAK,EAAApH,EAAA,GAAA8C,IAAAoE,EAAA9H,EAAAqB,WACzB,QAAgBrB,aAAAiI,EAAA1C,GAAAuC,mBAEhB,OAAAA,EAAAlwB,QACAswB,EAAAlI,EAAA8H,EAAAlH,GAAA,CACA,GAAyB2E,GAAA,GAAA7B,IAAA1D,EAAAD,SAAAoI,EAAAnI,EAAA8H,EAAAlH,EAAAZ,EAAAqB,UACzB,QAAgBrB,aAAAiI,EAAA1C,GAAAuC,kBAEhB,OAAY9H,eAAA8H,kBAMZ,QAAAG,GAAA1C,GACA,OAAAA,EAAAnB,kBAAAmB,EAAAlE,SAAAF,IAAA,CACA,GAAyBxnB,GAAA4rB,EAAAlE,SAAAF,GACzB,WAAAuC,IAAA6B,EAAAxF,SAAAtlB,OAAAd,EAAAomB,UAAApmB,EAAA0nB,UAEA,MAAAkE,GASA,QAAA4C,GAAAnI,EAAA8H,EAAAM,EAAA/G,GAEA,OADqBvoB,MACrB0R,EAAA,EAAA6d,EAAAD,EAAuC5d,EAAA6d,EAAAzwB,OAAsB4S,IAAA,CAC7D,GAAAxS,GAAAqwB,EAAA7d,EACA8d,GAAAtI,EAAA8H,EAAA9vB,KAAAqpB,EAAAkH,EAAAvwB,MACAc,EAAAyvB,EAAAvwB,IAAA,GAAA0rB,YAGA,MAAAxsB,QAAA+B,UAA2BooB,EAAAvoB,GAO3B,QAAAkvB,GAAAI,EAAAI,GACA,GAAqB1vB,KACrBA,GAAAqoB,IAAAqH,CACA,QAAAhe,GAAA,EAAAie,EAAAL,EAAuC5d,EAAAie,EAAA7wB,OAAsB4S,IAAA,CAC7D,GAAAxS,GAAAywB,EAAAje,EACA,MAAAxS,EAAA2E,MAAA4rB,EAAAvwB,KAAAmpB,KACAroB,EAAAyvB,EAAAvwB,IAAA,GAAA0rB,YAGA,MAAA5qB,GAQA,QAAAivB,GAAA/H,EAAAD,EAAAqI,GACA,MAAAA,GAAA7qB,KAAA,SAAAvF,GAAqC,MAAAswB,GAAAtI,EAAAD,EAAA/nB,IAAAuwB,EAAAvwB,KAAAmpB,KAQrC,QAAA+G,GAAAlI,EAAAD,EAAAqI,GACA,MAAAA,GAAA7qB,KAAA,SAAAvF,GAAqC,MAAAswB,GAAAtI,EAAAD,EAAA/nB,KAQrC,QAAAswB,GAAAtI,EAAAD,EAAA/nB,GACA,SAAAgoB,EAAAI,eAAAL,EAAAnoB,OAAA,aAAAI,EAAAmoB,aAGA,KAAAnoB,EAAA2E,UAAAkB,KAAA7F,EAAAopB,YAMA,QAAAmH,GAAAtI,GACA,MAAAA,GAAAiB,QAAAC,GA6EA,QAAAuH,GAAAtxB,EAAAuxB,GACA,GAAAvxB,IAAAuxB,EAAAvxB,MACA,MAAAuxB,EACA,QAAAne,GAAA,EAAAC,EAAAke,EAAAtH,SAAwC7W,EAAAC,EAAA7S,OAAgB4S,IAAA,CACxD,GAAAsa,GAAAra,EAAAD,GACyBoe,EAAAF,EAAAtxB,EAAA0tB,EACzB,IAAA8D,EACA,MAAAA,GAEA,YAQA,QAAAC,IAAAzxB,EAAAuxB,GACA,GAAAvxB,IAAAuxB,EAAAvxB,MACA,OAAAuxB,EACA,QAAAne,GAAA,EAAAC,EAAAke,EAAAtH,SAAwC7W,EAAAC,EAAA7S,OAAgB4S,IAAA,CACxD,GAAAsa,GAAAra,EAAAD,GACyB7N,EAAAksB,GAAAzxB,EAAA0tB,EACzB,IAAAnoB,EAAA/E,OAEA,MADA+E,GAAAmsB,QAAAH,GACAhsB,EAGA,SA0EA,QAAAosB,IAAA5B,EAAA6B,GACA,GAAqBC,GAAAC,GAAA/B,EAAA6B,GACAG,EAAA,GAAAC,IAAA,oBAAAC,IAAA,SACAC,EAAA,GAAAF,IAAA,oBACAG,EAAA,GAAAH,IAAA,oBACAI,EAAA,GAAAJ,IAAA,oBACAK,EAAA,GAAAL,IAAA,oBACAM,EAAA,GAAAC,IAAAR,EAAAG,EAAAE,EAAAC,EAAAF,EAAApI,GAAA6H,EAAAC,EAAAtP,KAErB,OADA+P,GAAAT,WAAAtP,KACA,GAAAiQ,IAAA,GAAAC,IAAAH,MAAAT,GAOA,QAAAC,IAAA/B,EAAA6B,GACA,GAAqBM,MACAC,KACAC,KAEAE,EAAA,GAAAI,OAAAR,EAAAE,EADA,GACAD,EAAApI,GAAA6H,EAAA,KAAA7B,EAAAxN,MAAA,KACrB,WAAAoQ,IAAA,MAAAF,IAAAH,OA2IA,QAAAM,IAAA/J,GAGA,IAFA,GAAqBgK,GAAAhK,EAAAiK,aACAC,EAAAF,EAAAryB,OAAA,EACrBuyB,GAAA,IACA,GAAyB3F,GAAAyF,EAAAE,GACA3vB,EAAAyvB,EAAAE,EAAA,EAEzB,IAAA3F,EAAA4F,aAAA,KAAA5F,EAAA4F,YAAAztB,KACAwtB,QAGA,IAAA3vB,EAAAymB,UAIA,KAHAkJ,MAMA,MAAAF,GAAAjwB,MAAAmwB,GAAApxB,OAAA,SAAAD,EAAAuxB,GAIA,OAAgB5K,OAHSvoB,OAAA+B,UAA6BH,EAAA2mB,OAAA4K,EAAA5K,QAGtC5D,KAFS3kB,OAAA+B,UAA2BH,EAAA+iB,KAAAwO,EAAAxO,MAEpCnK,QADSxa,OAAA+B,UAA8BH,EAAA4Y,QAAA2Y,EAAAC,kBAE7B7K,UAAW5D,QAAUnK,aA+L/C,QAAA6Y,IAAAjR,EAAAqP,GACAA,EAAAvxB,MAAAozB,aAAAlR,EACAqP,EAAAtH,SAAArlB,QAAA,SAAArC,GAAwC,MAAA4wB,IAAAjR,EAAA3f,KAMxC,QAAA8wB,IAAA9B,GACA,GAAqBhvB,GAAAgvB,EAAAtH,SAAAzpB,OAAA,QAAsC+wB,EAAAtH,SAAA5oB,IAAAgyB,IAAA/tB,KAAA,YAAsD,EACjH,UAAAisB,EAAAvxB,MAAAuC,EASA,QAAA+wB,IAAAzK,GACA,GAAAA,EAAAgJ,SAAA,CACA,GAAyB0B,GAAA1K,EAAAgJ,SACA2B,EAAA3K,EAAA4K,eACzB5K,GAAAgJ,SAAA2B,EACAhJ,EAAA+I,EAAA5G,YAAA6G,EAAA7G,cACA9D,EAAA,YAAA/I,KAAA0T,EAAA7G,aAEA4G,EAAAlB,WAAAmB,EAAAnB,UACAxJ,EAAA,SAAA/I,KAAA0T,EAAAnB,UAEA7H,EAAA+I,EAAAlL,OAAAmL,EAAAnL,SACAQ,EAAA,OAAA/I,KAAA0T,EAAAnL,QAEAiC,EAAAiJ,EAAAG,IAAAF,EAAAE,MACA7K,EAAA,IAAA/I,KAAA0T,EAAAE,KAEAlJ,EAAA+I,EAAA9O,KAAA+O,EAAA/O,OACAoE,EAAA,KAAA/I,KAAA0T,EAAA/O,UAIAoE,GAAAgJ,SAAAhJ,EAAA4K,gBAEA5K,EAAA,KAAA/I,KAAA+I,EAAA4K,gBAAAhP,MAQA,QAAAkP,IAAAvtB,EAAAmkB,GACA,GAAqBqJ,GAAApJ,EAAApkB,EAAAiiB,OAAAkC,EAAAlC,SAAAgF,EAAAjnB,EAAAstB,IAAAnJ,EAAAmJ,KACAG,GAAAztB,EAAAhD,SAAAmnB,EAAAnnB,MACrB,OAAAwwB,KAAAC,KACAztB,EAAAhD,QAAAuwB,GAAAvtB,EAAAhD,OAAuEmnB,EAAA;;;;;;;AAevE,QAAAuJ,IAAAC,EAAAd,EAAAe,GACA,GAAqBzR,GAAA0R,GAAAF,EAAAd,EAAAiB,MAAAF,IAAAE,UAAAztB,GACrB,WAAA+rB,IAAAjQ,EAAA0Q,GAQA,QAAAgB,IAAAF,EAAAd,EAAAe,GAEA,GAAAA,GAAAD,EAAAI,iBAAAlB,EAAAjzB,MAAAg0B,EAAAh0B,MAAA6xB,UAAA,CACA,GAAyB7xB,GAAAg0B,EAAAh0B,KACzBA,GAAAyzB,gBAAAR,EAAAjzB,KACA,IAAyBiqB,GAAAmK,GAAAL,EAAAd,EAAAe,EACzB,WAAAvB,IAAAzyB,EAAAiqB,GAGA,GAAA8J,EAAAM,SAAApB,EAAAjzB,OAAA,CACA,GAAyBs0B,GAAAP,EAAAM,SAAApB,EAAAjzB,OAAA6oB,KAEzB,OADA0L,IAAAtB,EAAAqB,GACAA,EAGA,GAAyBt0B,GAAAw0B,GAAAvB,EAAAjzB,OACAiqB,EAAAgJ,EAAAhJ,SAAA5oB,IAAA,SAAAkB,GAA+C,MAAA0xB,IAAAF,EAAAxxB,IACxE,WAAAkwB,IAAAzyB,EAAAiqB,GAQA,QAAAsK,IAAAtB,EAAAtR,GACA,GAAAsR,EAAAjzB,MAAAgzB,cAAArR,EAAA3hB,MAAAgzB,YACA,SAAA/xB,OAAA,wEAEA,IAAAgyB,EAAAhJ,SAAAzpB,SAAAmhB,EAAAsI,SAAAzpB,OACA,SAAAS,OAAA,6EAEA0gB,GAAA3hB,MAAAyzB,gBAAAR,EAAAjzB,KACA,QAA0Bc,GAAA,EAAUA,EAAAmyB,EAAAhJ,SAAAzpB,SAA0BM,EAC9DyzB,GAAAtB,EAAAhJ,SAAAnpB,GAAA6gB,EAAAsI,SAAAnpB,IASA,QAAAszB,IAAAL,EAAAd,EAAAe,GACA,MAAAf,GAAAhJ,SAAA5oB,IAAA,SAAAqsB,GACA,OAAAta,GAAA,EAAAC,EAAA2gB,EAAA/J,SAAiD7W,EAAAC,EAAA7S,OAAgB4S,IAAA,CACjE,GAAAya,GAAAxa,EAAAD,EACA,IAAA2gB,EAAAI,iBAAAtG,EAAA7tB,MAAA6xB,SAAAnE,EAAA1tB,OACA,MAAAi0B,IAAAF,EAAArG,EAAAG,GAGA,MAAAoG,IAAAF,EAAArG,KAOA,QAAA8G,IAAAjyB,GACA,UAAAgwB,IAAA,GAAAP,IAAA,gBAAAzvB,EAAAmxB,KAAA,GAAA1B,IAAA,gBAAAzvB,EAAA8lB,QAAA,GAAA2J,IAAA,gBAAAzvB,EAAAoqB,aAAA,GAAAqF,IAAA,gBAAAzvB,EAAA8vB,UAAA,GAAAL,IAAA,gBAAAzvB,EAAAkiB,MAAAliB,EAAAunB,OAAAvnB,EAAAsnB,UAAAtnB;;;;;;;AAiBA,QAAAkyB,IAAA5L,EAAAkH,EAAA2E,EAAA/H,EAAA0F,GACA,OAAAqC,EAAAl0B,OACA,MAAAm0B,IAAA5E,EAAAxN,KAAAwN,EAAAxN,KAAAwN,EAAApD,EAAA0F,EAEA,IAAqBuC,GAAAC,GAAAH,EACrB,IAAAE,EAAAE,SACA,MAAAH,IAAA5E,EAAAxN,KAAA,GAAA+J,WAA4DyD,EAAApD,EAAA0F,EAE5D,IAAqB0C,GAAAC,GAAAJ,EAAA7E,EAAAlH,GACAD,EAAAmM,EAAAE,gBACrBC,GAAAH,EAAAnM,aAAAmM,EAAArtB,MAAAktB,EAAAF,UACAS,GAAAJ,EAAAnM,aAAAmM,EAAArtB,MAAAktB,EAAAF,SACA,OAAAC,IAAAI,EAAAnM,eAAAmH,EAAApD,EAAA0F,GAMA,QAAA+C,IAAAC,GACA,sBAAAA,IAAA,MAAAA,MAAAC,UAAAD,EAAAE,YAUA,QAAAZ,IAAAa,EAAAC,EAAA1F,EAAApD,EAAA0F,GACA,GAAqBqD,KAMrB,OALA/I,IACA/nB,EAAA+nB,EAAA,SAAA3sB,EAAAmD,GACAuyB,EAAAvyB,GAAA4D,MAAAM,QAAArH,KAAAqB,IAAA,SAAAC,GAAsE,SAAAA,IAAiB,GAAAtB,IAGvF+vB,EAAAxN,OAAAiT,EACA,GAAAnJ,IAAAoJ,EAAAC,EAAArD,GAEA,GAAAhG,IAAAsJ,GAAA5F,EAAAxN,KAAAiT,EAAAC,GAAAC,EAAArD,GAQA,QAAAsD,IAAAvI,EAAAwI,EAAAC,GACA,GAAqB5L,KASrB,OARArlB,GAAAwoB,EAAAnD,SAAA,SAAA1nB,EAAAuzB,GAEA7L,EAAA6L,GADAvzB,IAAAqzB,EACAC,EAGAF,GAAApzB,EAAAqzB,EAAAC,KAGA,GAAAvJ,IAAAc,EAAAzE,SAAAsB,GAiCA,QAAA4K,IAAAH,GACA,mBAAAA,GAAA,QAAAA,EAAAl0B,QAAA,MAAAk0B,EAAA,GACA,UAAAqB,KAAA,IAAArB,EAEA,IAAqBsB,GAAA,EACAC,GAAA,EACAv0B,EAAAgzB,EAAA/yB,OAAA,SAAAD,EAAAw0B,EAAAC,GACrB,mBAAAD,IAAA,MAAAA,EAAA,CACA,GAAAA,EAAAZ,QAAA,CACA,GAAiCc,KAIjC,OAHAxxB,GAAAsxB,EAAAZ,QAAA,SAAAZ,EAAAvxB,GACAizB,EAAAjzB,GAAA,gBAAAuxB,KAAA3xB,MAAA,KAAA2xB,IAEAhzB,EAAA2B,SAAoCiyB,QAAAc,KAEpC,GAAAF,EAAAX,YACA,MAAA7zB,GAAA2B,QAAA6yB,EAAAX,cAGA,sBAAAW,GACAx0B,EAAA2B,QAAA6yB,IAEA,IAAAC,GACAD,EAAAnzB,MAAA,KAAA6B,QAAA,SAAAyxB,EAAAC,GACA,GAAAA,GAAA,MAAAD,IAGA,GAAAC,GAAA,KAAAD,EACAJ,GAAA,EAEA,OAAAI,EACAL,IAEA,IAAAK,GACA30B,EAAAgQ,KAAA2kB,MAGA30B,GAEAA,EAAA2B,QAAA6yB,QAEA,WAAAH,IAAAE,EAAAD,EAAAt0B,GAqBA,QAAAszB,IAAAJ,EAAAD,EAAA9L,GACA,GAAA+L,EAAAqB,WACA,UAAAM,IAAA5B,EAAApS,MAAA,IAEA,SAAAsG,EAAAgJ,SAAA2E,eACA,UAAAD,IAAA1N,EAAAgJ,SAAA4E,aAAA,IAEA,IAAqBC,GAAAtB,GAAAR,EAAAF,SAAA,QACAhtB,EAAAmhB,EAAAgJ,SAAA2E,eAAAE,CACrB,OAAAC,IAAA9N,EAAAgJ,SAAA4E,YAAA/uB,EAAAktB,EAAAoB,oBAQA,QAAAW,IAAA5b,EAAArT,EAAAsuB,GAIA,IAHA,GAAqBY,GAAA7b,EACA8b,EAAAnvB,EACAovB,EAAAd,EACrBc,EAAAD,GAAA,CAGA,GAFAC,GAAAD,IACAD,IAAA,QAEA,SAAA31B,OAAA,0BAEA41B,GAAAD,EAAAjO,SAAAnoB,OAEA,UAAA+1B,IAAAK,GAAA,EAAAC,EAAAC,GAMA,QAAAC,IAAA1B,GACA,sBAAAA,IAAA,MAAAA,KAAAC,QACAD,EAAAC,QAAAvL,IAEA,GAAAsL,EAMA,QAAA2B,IAAAtC,GACA,sBAAAA,GAAA,IACArhB,KAAsBA,EAAA0W,IAAA2K,EAAArhB,OACtB5M,KAAAiuB,EAAA,GAAAY,SACA2B,KAAsBA,EAAAlN,IAAA2K,EAAAuC,GACtBvC,EAAA,GAAAY,OACA,IAAAjiB,GAAA4jB,EAQA,QAAA9B,IAAAvM,EAAAsO,EAAAxC,GAIA,GAHA9L,IACAA,EAAA,GAAA0D,YAEA,IAAA1D,EAAAD,SAAAnoB,QAAAooB,EAAAI,cACA,MAAAkM,IAAAtM,EAAAsO,EAAAxC,EAEA,IAAqByC,GAAAC,GAAAxO,EAAAsO,EAAAxC,GACA2C,EAAA3C,EAAA9xB,MAAAu0B,EAAAG,aACrB,IAAAH,EAAAtI,OAAAsI,EAAAI,UAAA3O,EAAAD,SAAAnoB,OAAA,CACA,GAAyBo2B,GAAA,GAAAtK,IAAA1D,EAAAD,SAAA/lB,MAAA,EAAAu0B,EAAAI,cAGzB,OAFAX,GAAA3M,SAAAF,IACA,GAAAuC,IAAA1D,EAAAD,SAAA/lB,MAAAu0B,EAAAI,WAAA3O,EAAAqB,UACAiL,GAAA0B,EAAA,EAAAS,GAEA,MAAAF,GAAAtI,OAAA,IAAAwI,EAAA72B,OACA,GAAA8rB,IAAA1D,EAAAD,aAEAwO,EAAAtI,QAAAjG,EAAAI,cACAwO,GAAA5O,EAAAsO,EAAAxC,GAEAyC,EAAAtI,MACAqG,GAAAtM,EAAA,EAAAyO,GAGAG,GAAA5O,EAAAsO,EAAAxC,GASA,QAAAQ,IAAAtM,EAAAsO,EAAAxC,GACA,OAAAA,EAAAl0B,OACA,UAAA8rB,IAAA1D,EAAAD,YAGA,IAAyB8O,GAAAT,GAAAtC,GACAgD,IAWzB,OAVA9yB,GAAA6yB,EAAA,SAAA/C,EAAA5K,GACA,OAAA4K,IACAgD,EAAA5N,GAAAqL,GAAAvM,EAAAqB,SAAAH,GAAAoN,EAAAxC,MAGA9vB,EAAAgkB,EAAAqB,SAAA,SAAAyD,EAAAC,OACAlnB,KAAAgxB,EAAA9J,KACA+J,EAAA/J,GAAAD,KAGA,GAAApB,IAAA1D,EAAAD,SAAA+O,GASA,QAAAN,IAAAxO,EAAAsO,EAAAxC,GAIA,IAHA,GAAqBiD,GAAA,EACAC,EAAAV,EACA/H,GAAeN,OAAA,EAAA0I,UAAA,EAAAD,aAAA,GACpCM,EAAAhP,EAAAD,SAAAnoB,QAAA,CACA,GAAAm3B,GAAAjD,EAAAl0B,OACA,MAAA2uB,EACA,IAAyB5pB,GAAAqjB,EAAAD,SAAAiP,GACA3E,EAAA8D,GAAArC,EAAAiD,IACA7X,EAAA6X,EAAAjD,EAAAl0B,OAAA,EAAAk0B,EAAAiD,EAAA,OACzB,IAAAC,EAAA,OAAAnxB,KAAAwsB,EACA,KACA,IAAAA,GAAAnT,GAAA,gBAAAA,QAAArZ,KAAAqZ,EAAAwV,QAAA,CACA,IAAAuC,GAAA5E,EAAAnT,EAAAva,GACA,MAAA4pB,EACAwI,IAAA,MAEA,CACA,IAAAE,GAAA5E,KAAiC1tB,GACjC,MAAA4pB,EACAwI,KAEAC,IAEA,OAAY/I,OAAA,EAAA0I,UAAAK,EAAAN,aAAAK,GAQZ,QAAAH,IAAA5O,EAAAsO,EAAAxC,GAGA,IAFA,GAAqBoD,GAAAlP,EAAAD,SAAA/lB,MAAA,EAAAs0B,GACAp2B,EAAA,EACrBA,EAAA4zB,EAAAl0B,QAAA,CACA,mBAAAk0B,GAAA5zB,QAAA2F,KAAAiuB,EAAA5zB,GAAAw0B,QAAA,CACA,GAA6BrL,GAAA8N,GAAArD,EAAA5zB,GAAAw0B,QAC7B,WAAAhJ,IAAAwL,EAAA7N,GAGA,OAAAnpB,GAAAs0B,GAAAV,EAAA,KACA,GAA6B7G,GAAAjF,EAAAD,SAAAuO,EAC7BY,GAAApmB,KAAA,GAAAugB,IAAApE,EAAAtoB,KAAAmvB,EAAA,KACA5zB,QAHA,CAMA,GAAyBmyB,GAAA8D,GAAArC,EAAA5zB,IACAgf,EAAAhf,EAAA4zB,EAAAl0B,OAAA,EAAAk0B,EAAA5zB,EAAA,OACzBmyB,IAAAnT,GAAAsV,GAAAtV,IACAgY,EAAApmB,KAAA,GAAAugB,IAAAgB,EAAAjgB,GAAA8M,KACAhf,GAAA,IAGAg3B,EAAApmB,KAAA,GAAAugB,IAAAgB,OACAnyB,MAGA,UAAAwrB,IAAAwL,MAMA,QAAAC,IAAAzC,GACA,GAAqBrL,KAMrB,OALArlB,GAAA0wB,EAAA,SAAAZ,EAAA5K,GACA,OAAA4K,IACAzK,EAAAH,GAAA0N,GAAA,GAAAlL,WAA+E,EAAAoI,MAG/EzK,EAMA,QAAAjX,IAAAqV,GACA,GAAqB3mB,KAErB,OADAkD,GAAAyjB,EAAA,SAAA/mB,EAAAwY,GAAqC,MAAApY,GAAAoY,GAAA,GAAAxY,IACrCI,EAQA,QAAAm2B,IAAAtyB,EAAA8iB,EAAAc,GACA,MAAA5jB,IAAA4jB,EAAA5jB,MAAAilB,EAAAnC,EAAAc,EAAAqE,YAqBA,QAAAwK,IAAAC,EAAAzO,EAAAuG,EAAA2D,GACA,UAAAwE,IAAAD,EAAAzO,EAAAuG,EAAA2D,GAAAsE,YA0IA,QAAAG,IAAAC,GACAA,EAAAC,KAAA,SAAAjyB,EAAAmkB,GACA,MAAAnkB,GAAApG,MAAA8pB,SAAAC,IACA,EACAQ,EAAAvqB,MAAA8pB,SAAAC,GACA,EACA3jB,EAAApG,MAAA8pB,OAAAwO,cAAA/N,EAAAvqB,MAAA8pB,UAOA,QAAAyO,IAAA1P,GACA,MAAAA,GAAAoB,SACApB,EAAAoB,SAEApB,EAAAqB,aACArB,EAAA,cAAAmI,UAUA,QAAAwH,IAAA5P,EAAAC,EAAAF,GACA,QAAAE,EAAAtjB,KAAA,CACA,YAAAsjB,EAAAE,YAAAH,EAAAI,eAAAL,EAAAnoB,OAAA,GACA,SAAAi4B,GAEA,QAAgBlI,oBAAAC,UAAA,EAAAhD,eAEhB,GAAqBrD,GAAAtB,EAAAsB,SAAAzB,EACAhnB,EAAAyoB,EAAAxB,EAAAC,EAAAC,EACrB,KAAAnnB,EACA,SAAA+2B,GACA,IAAqBxP,KACrBrkB,GAAyBlD,EAAA,mBAAAJ,EAAAwY,GAAwCmP,EAAAnP,GAAAxY,EAAAiE,MACjE,IAAqBioB,GAAA9rB,EAAA4nB,SAAA9oB,OAAA,EAAAV,OAAA+B,UAA2DonB,EAAAvnB,EAAA4nB,SAAA5nB,EAAA4nB,SAAA9oB,OAAA,GAAAgtB,YAChFvE,CACA,QAAYsH,iBAAA7uB,EAAA4nB,SAAAkH,UAAA9uB,EAAA4nB,SAAA9oB,OAAAgtB,cAMZ,QAAAkL,IAAAN,GACA,GAAqBO,KACrBP,GAAAxzB,QAAA,SAAAwH,GACA,GAAyBwsB,GAAAD,EAAAvsB,EAAApM,MAAA8pB,OACzB,IAAA8O,EAAA,CACA,GAA6B/K,GAAA+K,EAAAlF,IAAAryB,IAAA,SAAA8sB,GAAsD,MAAAA,GAAAlf,aAAuB3J,KAAA,KAC7E/C,EAAA6J,EAAApM,MAAA0zB,IAAAryB,IAAA,SAAA8sB,GAAsC,MAAAA,GAAAlf,aAAuB3J,KAAA,IAC1F,UAAArE,OAAA,mDAAA4sB,EAAA,UAAAtrB,EAAA,MAEAo2B,EAAAvsB,EAAApM,MAAA8pB,QAAA1d,EAAApM,QAOA,QAAA64B,IAAAjQ,GAEA,IADA,GAAqBuF,GAAAvF,EACrBuF,EAAA2K,gBACA3K,IAAA2K,cAEA,OAAA3K,GAMA,QAAA4K,IAAAnQ,GAGA,IAFA,GAAqBuF,GAAAvF,EACAlnB,EAAAysB,EAAA6K,mBAAA7K,EAAA6K,mBAAA,EACrB7K,EAAA2K,gBACA3K,IAAA2K,eACAp3B,GAAAysB,EAAA6K,mBAAA7K,EAAA6K,mBAAA,CAEA,OAAAt3B,GAAA,EASA,QAAAu3B,IAAArQ,EAAA2H,EAAAG,EAAAlH,GACA,GAAAkH,EAAAlwB,OAAA,GACA04B,GAAAtQ,EAAA8H,EAAAlH,GAAA,CACA,GAAyB2P,GAAA,GAAA7M,IAAAiE,EAAA6I,GAAAxQ,EAAA2H,EAAA/G,EAAA,GAAA8C,IAAAoE,EAAA9H,EAAAqB,WAGzB,OAFAkP,GAAAL,eAAAlQ,EACAuQ,EAAAH,mBAAAzI,EAAA/vB,QACgBooB,aAAAuQ,EAAAzI,mBAEhB,OAAAA,EAAAlwB,QACA64B,GAAAzQ,EAAA8H,EAAAlH,GAAA,CACA,GAAyB8P,GAAA,GAAAhN,IAAA1D,EAAAD,SAAA4Q,GAAA3Q,EAAA8H,EAAAlH,EAAAZ,EAAAqB,UAGzB,OAFAqP,GAAAR,eAAAlQ,EACA0Q,EAAAN,mBAAAzI,EAAA/vB,QACgBooB,aAAA0Q,EAAA5I,kBAEhB,GAAqBvC,GAAA,GAAA7B,IAAA1D,EAAAD,SAAAC,EAAAqB,SAGrB,OAFAkE,GAAA2K,eAAAlQ,EACAuF,EAAA6K,mBAAAzI,EAAA/vB,QACYooB,aAAAuF,EAAAuC,kBASZ,QAAA6I,IAAA3Q,EAAA8H,EAAAM,EAAA/G,GAEA,OADqBvoB,MACrB0R,EAAA,EAAAomB,EAAAxI,EAAuC5d,EAAAomB,EAAAh5B,OAAsB4S,IAAA,CAC7D,GAAAxS,GAAA44B,EAAApmB,EACA,IAAAqmB,GAAA7Q,EAAA8H,EAAA9vB,KAAAqpB,EAAAyP,GAAA94B,IAAA,CACA,GAA6ButB,GAAA,GAAA7B,UAC7B6B,GAAA2K,eAAAlQ,EACAuF,EAAA6K,mBAAApQ,EAAAD,SAAAnoB,OACAkB,EAAAg4B,GAAA94B,IAAAutB,GAGA,MAAAruB,QAAA+B,UAA2BooB,EAAAvoB,GAS3B,QAAA03B,IAAAxQ,EAAA2H,EAAAS,EAAA2I,GACA,GAAqBj4B,KACrBA,GAAAqoB,IAAA4P,EACAA,EAAAb,eAAAlQ,EACA+Q,EAAAX,mBAAAzI,EAAA/vB,MACA,QAAA4S,GAAA,EAAAwmB,EAAA5I,EAAuC5d,EAAAwmB,EAAAp5B,OAAsB4S,IAAA,CAC7D,GAAAxS,GAAAg5B,EAAAxmB,EACA,SAAAxS,EAAA2E,MAAAm0B,GAAA94B,KAAAmpB,GAAA,CACA,GAA6BoE,GAAA,GAAA7B,UAC7B6B,GAAA2K,eAAAlQ,EACAuF,EAAA6K,mBAAAzI,EAAA/vB,OACAkB,EAAAg4B,GAAA94B,IAAAutB,GAGA,MAAAzsB,GAQA,QAAAw3B,IAAAtQ,EAAA8H,EAAAM,GACA,MAAAA,GAAA7qB,KAAA,SAAAvF,GAAqC,MAAA64B,IAAA7Q,EAAA8H,EAAA9vB,IAAA84B,GAAA94B,KAAAmpB,KAQrC,QAAAsP,IAAAzQ,EAAA8H,EAAAM,GACA,MAAAA,GAAA7qB,KAAA,SAAAvF,GAAqC,MAAA64B,IAAA7Q,EAAA8H,EAAA9vB,KAQrC,QAAA64B,IAAA7Q,EAAA8H,EAAA9vB,GACA,SAAAgoB,EAAAI,eAAA0H,EAAAlwB,OAAA,aAAAI,EAAAmoB,aAGA,KAAAnoB,EAAA2E,UAAAkB,KAAA7F,EAAAopB,YAMA,QAAA0P,IAAA7Q,GACA,MAAAA,GAAAiB,QAAAC,GAMA,QAAA8P,IAAAhR,GACA,MAAAA,GAAApE,SAMA,QAAAqV,IAAAjR,GACA,MAAAA,GAAAvO;;;;;;;AAmPA,QAAAyf,IAAAra,GACA,KAAAA,GAOA,QAAAsa,IAAAnI,GACA,MAAAhyB,GAAAiB,EAAAsqB,GAAA,UA0mCA,QAAA6O,IAAA1I,GACA+B,GAAA/B,EAAAvxB,OACAuxB,EAAAtH,SAAArlB,QAAAq1B,IAMA,QAAAC,IAAArI,GACA,OAA0B1D,GAAA0D,EAAAzuB,OAAwB+qB,EAAGA,IAAA/qB,OAAA,CACrD,GAAyBylB,GAAAsF,EAAAgM,YACzB,IAAAtR,KAAAuR,cACA,MAAAvR,GAAAuR,aACA,IAAAvR,KAAAgB,UACA,YAEA,YAMA,QAAAwQ,IAAAxI,GACA,IAAAA,EACA,WACA,QAA0B1D,GAAA0D,EAAAzuB,OAAwB+qB,EAAGA,IAAA/qB,OAAA,CACrD,GAAyBylB,GAAAsF,EAAAgM,YACzB,IAAAtR,KAAAuR,cACA,MAAAvR,GAAAuR,cAEA,YAOA,QAAAE,IAAA/I,GACA,GAAqBxG,KAIrB,OAHAwG,IACAA,EAAAtH,SAAArlB,QAAA,SAAA8oB,GAAgD,MAAA3C,GAAA2C,EAAA1tB,MAAA8pB,QAAA4D,IAEhD3C,EAMA,QAAAwP,IAAA7F,GACA,OAA0B5zB,GAAA,EAAUA,EAAA4zB,EAAAl0B,OAAqBM,IAAA,CACzD,GAAyBo1B,GAAAxB,EAAA5zB,EACzB,UAAAo1B,EACA,SAAAj1B,OAAA,+BAAAi1B,EAAA,qBAAAp1B,IAyUA,QAAA05B,IAAArM,GACA,WAAAA,OAiuBA,QAAAsM,MACA,UAAAvO,IAAA,sBAAAwO,IAiIA,QAAAC,IAAAC,EAAAC,EAAA1mB,GAEA,WADA,KAAAA,IAA6BA,MAC7BA,EAAA2mB,QAAA,GAAAC,IAAA,qBAAAH,EAAAC,GACA,GAAAE,IAAA,qBAAAH,EAAAC,GAMA,QAAAG,IAAAC,GACA,GAAAA,EACA,SAAAh6B,OAAA,uGAEA,iBAmBA,QAAAi6B,IAAAlK,GACA,QACSxhB,QAAA0c,GAAA,6BAAAxc,OAAA,EAAAyrB,SAAAnK,IACAxhB,QAAA4rB,GAAA1rB,OAAA,EAAAyrB,SAAAnK,IAiBT,QAAAqK,IAAAC,EAAAxL,EAAAyL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnS,EAAAnT,EAAAulB,EAAA7H,OACA,KAAA1d,IAA0BA,KAC1B,IAAqB4kB,GAAA,GAAAP,IAAA,KAAA5K,EAAAyL,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/Q,EAAApB,GAUrB,IATAoS,IACAX,EAAAW,uBAEA7H,IACAkH,EAAAlH,sBAEA1d,EAAAwlB,eACAZ,EAAAY,aAAAxlB,EAAAwlB,cAEAxlB,EAAAylB,cAAA,CACA,GAAyBC,GAAAl8B,EAAAiB,EAAAk7B,GAAA,aACzBf,GAAAgB,OAAAlkB,UAAA,SAAAiL,GACA+Y,EAAAG,SAAA,iBAAAlZ,EAAA,YAAA7f,MACA44B,EAAAI,IAAAnZ,EAAA/T,YACA8sB,EAAAI,IAAAnZ,GACA+Y,EAAAK,gBAGA,MAAAnB,GAMA,QAAAoB,IAAApB,GACA,MAAAA,GAAAqB,YAAA/Z,KAkHA,QAAAga,IAAA37B,GACA,MAAAA,GAAA47B,eAAA9Z,KAAA9hB,GAMA,QAAA67B,IAAA77B,GACA,MAAAA,GAAA87B,kBAAAha,KAAA9hB,GAWA,QAAA+7B,MACA,OACAC,IAEAptB,QAAA0c,GAAA,gBACAxc,OAAA,EACAmtB,WAAAN,GACAO,MAAAF,MAESptB,QAAAutB,GAAAF,WAAAJ,GAAAK,MAAAF,MACAptB,QAAA0c,GAAA,uBAAAxc,OAAA,EAAAD,YAAAstB,Kfk4BTj9B,OAAOC,eAAeO,EAAqB,cAAgBN,OAAO,IACnCH,EAAoBoI,EAAE3H,EAAqB,aAAc,WAAa,MAAO08B,MAC7En9B,EAAoBoI,EAAE3H,EAAqB,qBAAsB,WAAa,MAAO28B,MACrFp9B,EAAoBoI,EAAE3H,EAAqB,mBAAoB,WAAa,MAAO48B,MACnFr9B,EAAoBoI,EAAE3H,EAAqB,eAAgB,WAAa,MAAO68B,MAC/Et9B,EAAoBoI,EAAE3H,EAAqB,iBAAkB,WAAa,MAAO88B,MACjFv9B,EAAoBoI,EAAE3H,EAAqB,mBAAoB,WAAa,MAAO+8B,MACnFx9B,EAAoBoI,EAAE3H,EAAqB,mBAAoB,WAAa,MAAOg9B,MACnFz9B,EAAoBoI,EAAE3H,EAAqB,gBAAiB,WAAa,MAAOi9B,MAChF19B,EAAoBoI,EAAE3H,EAAqB,kBAAmB,WAAa,MAAOk9B,MAClF39B,EAAoBoI,EAAE3H,EAAqB,kBAAmB,WAAa,MAAOm9B,MAClF59B,EAAoBoI,EAAE3H,EAAqB,aAAc,WAAa,MAAOo9B,MAC7E79B,EAAoBoI,EAAE3H,EAAqB,eAAgB,WAAa,MAAOq9B,MAC/E99B,EAAoBoI,EAAE3H,EAAqB,qBAAsB,WAAa,MAAOs9B,MACrF/9B,EAAoBoI,EAAE3H,EAAqB,uBAAwB,WAAa,MAAOu9B,MACvFh+B,EAAoBoI,EAAE3H,EAAqB,mBAAoB,WAAa,MAAOw9B,MACnFj+B,EAAoBoI,EAAE3H,EAAqB,qBAAsB,WAAa,MAAOy9B,MACrFl+B,EAAoBoI,EAAE3H,EAAqB,SAAU,WAAa,MAAOo6B,MACzE76B,EAAoBoI,EAAE3H,EAAqB,SAAU,WAAa,MAAO86B,MACzEv7B,EAAoBoI,EAAE3H,EAAqB,uBAAwB,WAAa,MAAO09B,MACvFn+B,EAAoBoI,EAAE3H,EAAqB,qBAAsB,WAAa,MAAOy8B,MACrFl9B,EAAoBoI,EAAE3H,EAAqB,eAAgB,WAAa,MAAO29B,MAC/Ep+B,EAAoBoI,EAAE3H,EAAqB,gBAAiB,WAAa,MAAO46B,MAChFr7B,EAAoBoI,EAAE3H,EAAqB,yBAA0B,WAAa,MAAO49B,MACzFr+B,EAAoBoI,EAAE3H,EAAqB,gBAAiB,WAAa,MAAO69B,MAChFt+B,EAAoBoI,EAAE3H,EAAqB,eAAgB,WAAa,MAAO89B,MAC/Ev+B,EAAoBoI,EAAE3H,EAAqB,oBAAqB,WAAa,MAAO+9B,MACpFx+B,EAAoBoI,EAAE3H,EAAqB,qBAAsB,WAAa,MAAOg+B,MACrFz+B,EAAoBoI,EAAE3H,EAAqB,kBAAmB,WAAa,MAAOi+B,MAClF1+B,EAAoBoI,EAAE3H,EAAqB,iBAAkB,WAAa,MAAOiyB,MACjF1yB,EAAoBoI,EAAE3H,EAAqB,yBAA0B,WAAa,MAAOoyB,MACzF7yB,EAAoBoI,EAAE3H,EAAqB,cAAe,WAAa,MAAOkyB,MAC9E3yB,EAAoBoI,EAAE3H,EAAqB,sBAAuB,WAAa,MAAOqyB,MACtF9yB,EAAoBoI,EAAE3H,EAAqB,iBAAkB,WAAa,MAAOypB,MACjFlqB,EAAoBoI,EAAE3H,EAAqB,oBAAqB,WAAa,MAAO8nB,KACpFvoB,EAAoBoI,EAAE3H,EAAqB,sBAAuB,WAAa,MAAOk+B,MACtF3+B,EAAoBoI,EAAE3H,EAAqB,uBAAwB,WAAa,MAAOm+B,MACvF5+B,EAAoBoI,EAAE3H,EAAqB,aAAc,WAAa,MAAO2xB,MAC7EpyB,EAAoBoI,EAAE3H,EAAqB,kBAAmB,WAAa,MAAOgsB,MAClFzsB,EAAoBoI,EAAE3H,EAAqB,gBAAiB,WAAa,MAAOo+B,MAChF7+B,EAAoBoI,EAAE3H,EAAqB,UAAW,WAAa,MAAO+rB,MAC1ExsB,EAAoBoI,EAAE3H,EAAqB,UAAW,WAAa,MAAOyJ,MAC1ElK,EAAoBoI,EAAE3H,EAAqB,oBAAqB,WAAa,MAAOq+B,MACpF9+B,EAAoBoI,EAAE3H,EAAqB,WAAY,WAAa,MAAOsqB,KAC3E/qB,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOs+B,MACrE/+B,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOs8B,MACrE/8B,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOi8B,MACrE18B,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOm8B,MACrE58B,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO06B,MACrEn7B,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOq6B,MACrE96B,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOq8B,MACrE98B,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO+7B,MACrEx8B,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOm6B,MACrE56B,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAO+6B,MACrEx7B,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOu+B,MACrEh/B,EAAoBoI,EAAE3H,EAAqB,KAAM,WAAa,MAAOmyB,KAC/E,IAAIvmB,IAAsCrM,EAAoB,GAC1Dk7B,GAAgDl7B,EAAoB,IACpEqsB,GAA8CrsB,EAAoB,GAClEmyB,GAAqDnyB,EAAoB,IAEzEi/B,IAD6Dj/B,EAAoBuM,EAAE4lB,IACtCnyB,EAAoB,IAEjEswB,IADqDtwB,EAAoBuM,EAAE0yB,IACtBj/B,EAAoB,KAEzEurB,IAD6DvrB,EAAoBuM,EAAE+jB,IAChCtwB,EAAoB,KAEvEk/B,IAD2Dl/B,EAAoBuM,EAAEgf,IACzBvrB,EAAoB,KAE5EmsB,IADgEnsB,EAAoBuM,EAAE2yB,IAClCl/B,EAAoB,KAExEm/B,IAD4Dn/B,EAAoBuM,EAAE4f,IAC9BnsB,EAAoB,KAExE+rB,IAD4D/rB,EAAoBuM,EAAE4yB,IAC9Bn/B,EAAoB,KAExE2rB,IAD4D3rB,EAAoBuM,EAAEwf,IAC/B/rB,EAAoB,KAEvEo/B,IAD2Dp/B,EAAoBuM,EAAEof,IACzB3rB,EAAoB,KAE5Eq/B,IADgEr/B,EAAoBuM,EAAE6yB,IAChCp/B,EAAoB,KAE1EuvB,IAD8DvvB,EAAoBuM,EAAE8yB,IACnCr/B,EAAoB,IAErEs/B,IADyDt/B,EAAoBuM,EAAEgjB,IAC1BvvB,EAAoB,KAEzE6rB,IAD6D7rB,EAAoBuM,EAAE+yB,IAC1Bt/B,EAAoB,KAE7Eu/B,IADiEv/B,EAAoBuM,EAAEsf,IACjC7rB,EAAoB,KAE1EssB,IAD8DtsB,EAAoBuM,EAAEgzB,IACvBv/B,EAAoB,KAEjFksB,IADqElsB,EAAoBuM,EAAE+f,IACnCtsB,EAAoB,KAE5Em8B,IADgEn8B,EAAoBuM,EAAE2f,IAC3BlsB,EAAoB,KAC/Ew/B,GAAsDx/B,EAAoB,IethOnG49B,IfuhOuF59B,EAAoBuM,EAAEizB,IevhO7G,WAKA,QAAA5B,GAAA96B,EAAA+wB,GACAlnB,KAAA7J,KACA6J,KAAAknB,MAOA,MADA+J,GAAAnxB,UAAA2C,SAAA,WAAsD,6BAAAzC,KAAA7J,GAAA,WAAA6J,KAAAknB,IAAA,MACtD+J,MAOAF,GAAA,WAMA,QAAAA,GAAA56B,EAAA+wB,EAAA4L,GACA9yB,KAAA7J,KACA6J,KAAAknB,MACAlnB,KAAA8yB,oBASA,MAHA/B,GAAAjxB,UAAA2C,SAAA,WACA,2BAAAzC,KAAA7J,GAAA,WAAA6J,KAAAknB,IAAA,0BAAAlnB,KAAA8yB,kBAAA,MAEA/B,KAOAD,GAAA,WAMA,QAAAA,GAAA36B,EAAA+wB,EAAA6L,GACA/yB,KAAA7J,KACA6J,KAAAknB,MACAlnB,KAAA+yB,SAOA,MADAjC,GAAAhxB,UAAA2C,SAAA,WAAuD,8BAAAzC,KAAA7J,GAAA,WAAA6J,KAAAknB,IAAA,MACvD4J,KAOAE,GAAA,WAMA,QAAAA,GAAA76B,EAAA+wB,EAAAhU,GACAlT,KAAA7J,KACA6J,KAAAknB,MACAlnB,KAAAkT,QASA,MAHA8d,GAAAlxB,UAAA2C,SAAA,WACA,6BAAAzC,KAAA7J,GAAA,WAAA6J,KAAAknB,IAAA,aAAAlnB,KAAAkT,MAAA,KAEA8d,KAOAM,GAAA,WAOA,QAAAA,GAAAn7B,EAAA+wB,EAAA4L,EAAApd,GACA1V,KAAA7J,KACA6J,KAAAknB,MACAlnB,KAAA8yB,oBACA9yB,KAAA0V,QASA,MAHA4b,GAAAxxB,UAAA2C,SAAA,WACA,8BAAAzC,KAAA7J,GAAA,WAAA6J,KAAAknB,IAAA,0BAAAlnB,KAAA8yB,kBAAA,aAAA9yB,KAAA0V,MAAA,KAEA4b,KAOAD,GAAA,WAIA,QAAAA,GAAAhV,GACArc,KAAAqc,QAMA,MADAgV,GAAAvxB,UAAA2C,SAAA,WAA2D,oCAAAzC,KAAAqc,MAAAtjB,KAAA,KAC3Ds4B,KAOAD,GAAA,WAIA,QAAAA,GAAA/U,GACArc,KAAAqc,QAMA,MADA+U,GAAAtxB,UAAA2C,SAAA,WAAyD,kCAAAzC,KAAAqc,MAAAtjB,KAAA,KACzDq4B,KAOAP,GAAA,WAOA,QAAAA,GAAA16B,EAAA+wB,EAAA4L,EAAApd,GACA1V,KAAA7J,KACA6J,KAAAknB,MACAlnB,KAAA8yB,oBACA9yB,KAAA0V,QAQA,MAHAmb,GAAA/wB,UAAA2C,SAAA,WACA,8BAAAzC,KAAA7J,GAAA,WAAA6J,KAAAknB,IAAA,0BAAAlnB,KAAA8yB,kBAAA,aAAA9yB,KAAA0V,MAAA,KAEAmb,KAOAD,GAAA,WAQA,QAAAA,GAAAz6B,EAAA+wB,EAAA4L,EAAApd,EAAAsd,GACAhzB,KAAA7J,KACA6J,KAAAknB,MACAlnB,KAAA8yB,oBACA9yB,KAAA0V,QACA1V,KAAAgzB,iBAQA,MAHApC,GAAA9wB,UAAA2C,SAAA,WACA,4BAAAzC,KAAA7J,GAAA,WAAA6J,KAAAknB,IAAA,0BAAAlnB,KAAA8yB,kBAAA,aAAA9yB,KAAA0V,MAAA,qBAAA1V,KAAAgzB,eAAA,KAEApC,KAUAO,GAAA,WAOA,QAAAA,GAAAh7B,EAAA+wB,EAAA4L,EAAApd,GACA1V,KAAA7J,KACA6J,KAAAknB,MACAlnB,KAAA8yB,oBACA9yB,KAAA0V,QAQA,MAHAyb,GAAArxB,UAAA2C,SAAA,WACA,0BAAAzC,KAAA7J,GAAA,WAAA6J,KAAAknB,IAAA,0BAAAlnB,KAAA8yB,kBAAA,aAAA9yB,KAAA0V,MAAA,KAEAyb,KAQAD,GAAA,WAOA,QAAAA,GAAA/6B,EAAA+wB,EAAA4L,EAAApd,GACA1V,KAAA7J,KACA6J,KAAAknB,MACAlnB,KAAA8yB,oBACA9yB,KAAA0V,QAQA,MAHAwb,GAAApxB,UAAA2C,SAAA,WACA,wBAAAzC,KAAA7J,GAAA,WAAA6J,KAAAknB,IAAA,0BAAAlnB,KAAA8yB,kBAAA,aAAA9yB,KAAA0V,MAAA,KAEAwb,KAcA3T,GAAA,UACAzB,GAAA,WAIA,QAAAA,GAAAD,GACA7b,KAAA6b,aAqCA,MA/BAC,GAAAhc,UAAAiH,IAAA,SAAApQ,GAAiD,MAAAqJ,MAAA6b,OAAAxiB,eAAA1C,IAKjDmlB,EAAAhc,UAAAC,IAAA,SAAApJ,GACA,GAAAqJ,KAAA+G,IAAApQ,GAAA,CACA,GAA6B7B,GAAAkL,KAAA6b,OAAAllB,EAC7B,OAAA4D,OAAAM,QAAA/F,KAAA,GAAAA,EAEA,aAMAgnB,EAAAhc,UAAAmzB,OAAA,SAAAt8B,GACA,GAAAqJ,KAAA+G,IAAApQ,GAAA,CACA,GAA6B7B,GAAAkL,KAAA6b,OAAAllB,EAC7B,OAAA4D,OAAAM,QAAA/F,SAEA,UAEAxB,OAAAC,eAAAuoB,EAAAhc,UAAA,QAIAC,IAAA,WAA0B,MAAAzM,QAAAgC,KAAA0K,KAAA6b,SAC1B5b,YAAA,EACAC,cAAA,IAEA4b,KAYAE,GAAA,6BAyDAkX,GAAA,WAKA,QAAAA,GAAA1O,EAAArxB,GACA6M,KAAAwkB,SACAxkB,KAAA7M,SAEA,MAAA+/B,MA4VArT,GAAA,WAOA,QAAAA,GAAA9J,EAAAoK,EAAA0F,GACA7lB,KAAA+V,OACA/V,KAAAmgB,cACAngB,KAAA6lB,WAoBA,MAlBAvyB,QAAAC,eAAAssB,EAAA/f,UAAA,iBAIAC,IAAA,WAIA,MAHAC,MAAAmzB,iBACAnzB,KAAAmzB,eAAAvX,EAAA5b,KAAAmgB,cAEAngB,KAAAmzB,gBAEAlzB,YAAA,EACAC,cAAA,IAMA2f,EAAA/f,UAAA2C,SAAA,WAA8C,MAAA2wB,IAAAC,UAAArzB,OAC9C6f,KASAC,GAAA,WAKA,QAAAA,GAAA3D,EAAAsB,GACA,GAAA5Y,GAAA7E,IACAA,MAAAmc,WACAnc,KAAAyd,WAIAzd,KAAApJ,OAAA,KACAwB,EAAAqlB,EAAA,SAAA3oB,EAAAwY,GAA2C,MAAAxY,GAAA8B,OAAAiO,IAqB3C,MAfAib,GAAAhgB,UAAA0c,YAAA,WAAyD,MAAAxc,MAAAwgB,iBAAA,GACzDltB,OAAAC,eAAAusB,EAAAhgB,UAAA,oBAKAC,IAAA,WAA0B,MAAAzM,QAAAgC,KAAA0K,KAAAyd,UAAAzpB,QAC1BiM,YAAA,EACAC,cAAA,IAMA4f,EAAAhgB,UAAA2C,SAAA,WAAsD,MAAA2e,GAAAphB,OACtD8f,KA2BA2F,GAAA,WAKA,QAAAA,GAAA1sB,EAAAioB,GACAhhB,KAAAjH,OACAiH,KAAAghB,aAoBA,MAlBA1tB,QAAAC,eAAAkyB,EAAA3lB,UAAA,gBAIAC,IAAA,WAIA,MAHAC,MAAAszB,gBACAtzB,KAAAszB,cAAA1X,EAAA5b,KAAAghB,aAEAhhB,KAAAszB,eAEArzB,YAAA,EACAC,cAAA,IAMAulB,EAAA3lB,UAAA2C,SAAA,WAAiD,MAAA6e,GAAAthB,OACjDylB,KAmDAyM,GAAA,WACA,QAAAA,MAgBA,MARAA,GAAApyB,UAAAyzB,MAAA,SAAArM,KAOAgL,EAAApyB,UAAAuzB,UAAA,SAAAlL,KACA+J,KAoBAD,GAAA,WACA,QAAAA,MAsBA,MAfAA,GAAAnyB,UAAAyzB,MAAA,SAAArM,GACA,GAAyB7F,GAAA,GAAAmS,IAAAtM,EACzB,WAAArH,IAAAwB,EAAAoS,mBAAApS,EAAAqS,mBAAArS,EAAAsS,kBAOA1B,EAAAnyB,UAAAuzB,UAAA,SAAAlL,GAIA,MAHyB,IAAA5G,EAAA4G,EAAApS,MAAA,GACAkM,EAAAkG,EAAAhI,cACA,gBAAAgI,GAAAtC,SAAA,IAAA+N,UAAgFzL,EAAA,eAGzG8J,KAEAmB,GAAA,GAAAnB,IA6FA3P,GAAA,iBASAE,GAAA,YASAE,GAAA,WASA8Q,GAAA,WAIA,QAAAA,GAAAtM,GACAlnB,KAAAknB,MACAlnB,KAAA6zB,UAAA3M,EAgMA,MA3LAsM,GAAA1zB,UAAA2zB,iBAAA,WAEA,MADAzzB,MAAA8zB,gBAAA,KACA,KAAA9zB,KAAA6zB,WAAA7zB,KAAA+zB,eAAA,MAAA/zB,KAAA+zB,eAAA,KACA,GAAAjU,WAGA,GAAAA,OAAA9f,KAAAg0B,kBAKAR,EAAA1zB,UAAA4zB,iBAAA,WACA,GAAyB7X,KACzB,IAAA7b,KAAA8zB,gBAAA,KACA,GACA9zB,KAAAi0B,gBAAApY,SACa7b,KAAA8zB,gBAAA,KAEb,OAAAjY,IAKA2X,EAAA1zB,UAAA6zB,cAAA,WACA,MAAA3zB,MAAA8zB,gBAAA,KAAAI,UAAAl0B,KAAA6zB,WAAA,MAKAL,EAAA1zB,UAAAk0B,cAAA,WACA,QAAAh0B,KAAA6zB,UACA,QAEA7zB,MAAA8zB,gBAAA,IACA,IAAyB3X,KAIzB,KAHAnc,KAAA+zB,eAAA,MACA5X,EAAAjX,KAAAlF,KAAAm0B,gBAEAn0B,KAAA+zB,eAAA,OAAA/zB,KAAA+zB,eAAA,QAAA/zB,KAAA+zB,eAAA,OACA/zB,KAAAo0B,QAAA,KACAjY,EAAAjX,KAAAlF,KAAAm0B,eAEA,IAAyB1W,KACzBzd,MAAA+zB,eAAA,QACA/zB,KAAAo0B,QAAA,KACA3W,EAAAzd,KAAAq0B,aAAA,GAEA,IAAyBn/B,KAOzB,OANA8K,MAAA+zB,eAAA,OACA7+B,EAAA8K,KAAAq0B,aAAA,KAEAlY,EAAAnoB,OAAA,GAAAV,OAAAgC,KAAAmoB,GAAAzpB,OAAA,KACAkB,EAAAqoB,IAAA,GAAAuC,IAAA3D,EAAAsB,IAEAvoB,GAKAs+B,EAAA1zB,UAAAq0B,aAAA,WACA,GAAyBp7B,GAAAopB,EAAAniB,KAAA6zB,UACzB,SAAA96B,GAAAiH,KAAA+zB,eAAA,KACA,SAAAt/B,OAAA,mDAAAuL,KAAA6zB,UAAA,KAGA,OADA7zB,MAAAo0B,QAAAr7B,GACA,GAAA0sB,IAAA3D,EAAA/oB,GAAAiH,KAAAs0B,sBAKAd,EAAA1zB,UAAAw0B,kBAAA,WAEA,IADA,GAAyBzY,MACzB7b,KAAA8zB,gBAAA,MACA9zB,KAAAu0B,WAAA1Y,EAEA,OAAAA,IAMA2X,EAAA1zB,UAAAy0B,WAAA,SAAA1Y,GACA,GAAyBsC,GAAAgE,EAAAniB,KAAA6zB,UACzB,IAAA1V,EAAA,CAGAne,KAAAo0B,QAAAjW,EACA,IAAyB3qB,GAAA,EACzB,IAAAwM,KAAA8zB,gBAAA,MACA,GAA6BU,GAAArS,EAAAniB,KAAA6zB,UAC7BW,KACAhhC,EAAAghC,EACAx0B,KAAAo0B,QAAA5gC,IAGAqoB,EAAAiG,EAAA3D,IAAA2D,EAAAtuB,KAMAggC,EAAA1zB,UAAAm0B,gBAAA,SAAApY,GACA,GAAyBsC,GAAAoE,EAAAviB,KAAA6zB,UACzB,IAAA1V,EAAA,CAGAne,KAAAo0B,QAAAjW,EACA,IAAyB3qB,GAAA,EACzB,IAAAwM,KAAA8zB,gBAAA,MACA,GAA6BU,GAAA/R,EAAAziB,KAAA6zB,UAC7BW,KACAhhC,EAAAghC,EACAx0B,KAAAo0B,QAAA5gC,IAGA,GAAyBihC,GAAA3S,EAAA3D,GACAuW,EAAA5S,EAAAtuB,EACzB,IAAAqoB,EAAAxiB,eAAAo7B,GAAA,CAEA,GAA6BE,GAAA9Y,EAAA4Y,EAC7Bl6B,OAAAM,QAAA85B,KACAA,MACA9Y,EAAA4Y,GAAAE,GAEAA,EAAAzvB,KAAAwvB,OAIA7Y,GAAA4Y,GAAAC,IAOAlB,EAAA1zB,UAAAu0B,YAAA,SAAAO,GACA,GAAyBzY,KAEzB,KADAnc,KAAAo0B,QAAA,MACAp0B,KAAA8zB,gBAAA,MAAA9zB,KAAA6zB,UAAA7/B,OAAA,IACA,GAA6B+E,GAAAopB,EAAAniB,KAAA6zB,WACAvgB,EAAAtT,KAAA6zB,UAAA96B,EAAA/E,OAG7B,UAAAsf,GAAA,MAAAA,GAAA,MAAAA,EACA,SAAA7e,OAAA,qBAAAuL,KAAAknB,IAAA,IAEA,IAA6BoC,OAAA,EAC7BvwB,GAAAoC,QAAA,SACAmuB,EAAAvwB,EAAA87B,OAAA,EAAA97B,EAAAoC,QAAA,MACA6E,KAAAo0B,QAAA9K,GACAtpB,KAAAo0B,QAAA,MAEAQ,IACAtL,EAAA/L,GAEA,IAA6BE,GAAAzd,KAAAg0B,eAC7B7X,GAAAmN,GAAA,IAAAh2B,OAAAgC,KAAAmoB,GAAAzpB,OAAAypB,EAAAF,IACA,GAAAuC,OAAArC,GACAzd,KAAA8zB,gBAAA,MAEA,MAAA3X,IAMAqX,EAAA1zB,UAAAi0B,eAAA,SAAA3R,GAAyD,MAAApiB,MAAA6zB,UAAAjX,WAAAwF,IAKzDoR,EAAA1zB,UAAAg0B,gBAAA,SAAA1R,GACA,QAAApiB,KAAA+zB,eAAA3R,KACApiB,KAAA6zB,UAAA7zB,KAAA6zB,UAAAhX,UAAAuF,EAAApuB,SACA,IAQAw/B,EAAA1zB,UAAAs0B,QAAA,SAAAhS,GACA,IAAApiB,KAAA8zB,gBAAA1R,GACA,SAAA3tB,OAAA,aAAA2tB,EAAA,OAGAoR,KASA3Q,GAAA,WAIA,QAAAA,GAAAzG,GACApc,KAAAoc,gBAAA,KAEA,MAAAyG,MAEAG,GAAA,WAIA,QAAAA,GAAAO,GACAvjB,KAAAujB,UAEA,MAAAP,MA4CAQ,GAAA,WAQA,QAAAA,GAAAJ,EAAAC,EAAAC,EAAAC,EAAAvG,GACAhd,KAAAqjB,eACArjB,KAAAsjB,gBACAtjB,KAAAujB,UACAvjB,KAAAgd,SACAhd,KAAA80B,gBAAA,EACA90B,KAAA+0B,SAAA3R,EAAArjB,IAAA2f,GAAA,aA4XA,MAvXA8D,GAAA1jB,UAAAqB,MAAA,WACA,GAAA0D,GAAA7E,KACyBg1B,EAAAh1B,KAAAi1B,mBAAAj1B,KAAA+0B,SAAA/0B,KAAAgd,OAAAhd,KAAAujB,QAAAxN,KAAAwH,IACA2X,EAAAlW,GAAA,IAAAjc,KAAAiyB,EAAA,SAAAG,GAAiE,MAAAtwB,GAAAojB,cAAAkN,EAAAtwB,EAAA0e,QAAApD,YAAsFtb,EAAA0e,QAAA,WAChL,OAAAoP,IAAA,OAAA5vB,KAAAmyB,EAAA,SAAA1e,GACA,GAAAA,YAAAwM,IAIA,MAFAne,GAAAiwB,gBAAA,EAEAjwB,EAAAwd,MAAA7L,EAAA+M,QAEA,IAAA/M,YAAAqM,IACA,KAAAhe,GAAAuwB,aAAA5e,EAEA,MAAAA,MAOAgN,EAAA1jB,UAAAuiB,MAAA,SAAA8F,GACA,GAAAtjB,GAAA7E,KACyBg1B,EAAAh1B,KAAAi1B,mBAAAj1B,KAAA+0B,SAAA/0B,KAAAgd,OAAAmL,EAAApS,KAAAwH,IACA8X,EAAArW,GAAA,IAAAjc,KAAAiyB,EAAA,SAAAG,GAA+D,MAAAtwB,GAAAojB,cAAAkN,EAAAhN,EAAAhI,YAA6EgI,EAAA,WACrK,OAAAwK,IAAA,OAAA5vB,KAAAsyB,EAAA,SAAA7e,GACA,GAAAA,YAAAqM,IACA,KAAAhe,GAAAuwB,aAAA5e,EAEA,MAAAA,MAOAgN,EAAA1jB,UAAAs1B,aAAA,SAAA5e,GACA,UAAA/hB,OAAA,0CAAA+hB,EAAA4F,aAAA,MAQAoH,EAAA1jB,UAAAmoB,cAAA,SAAAqN,EAAAnV,EAAA0F,GACA,GAAyB9P,GAAAuf,EAAAnZ,SAAAnoB,OAAA,EACzB,GAAA8rB,QAAAjZ,KAA4CA,EAAA0W,IAAA+X,EAAAzuB,IAC5CyuB,CACA,WAAAzV,IAAA9J,EAAAoK,EAAA0F,EACA,IAAAhf,IASA2c,EAAA1jB,UAAAm1B,mBAAA,SAAAF,EAAAvQ,EAAApI,EAAAkB,GACA,WAAAlB,EAAAD,SAAAnoB,QAAAooB,EAAAI,cACAwC,GAAA,IAAAjc,KAAA/C,KAAAu1B,eAAAR,EAAAvQ,EAAApI,GAAA,SAAAqB,GAAsG,UAAAqC,OAAArC,KAEtGzd,KAAAw1B,cAAAT,EAAA3Y,EAAAoI,EAAApI,EAAAD,SAAAmB,GAAA,IAQAkG,EAAA1jB,UAAAy1B,eAAA,SAAAR,EAAAvQ,EAAApI,GACA,GAAAvX,GAAA7E,IACA,OAAA0e,GAAAtC,EAAAqB,SAAA,SAAA0D,EAAAD,GAAgF,MAAArc,GAAAowB,mBAAAF,EAAAvQ,EAAAtD,EAAAC,MAWhFqC,EAAA1jB,UAAA01B,cAAA,SAAAT,EAAA3Y,EAAAoI,EAAArI,EAAAmB,EAAAwX,GACA,GAAAjwB,GAAA7E,KACyBy1B,EAAA7W,GAAA,GAAAzd,UAAA,GAAAqjB,GACAkR,EAAA1W,GAAA,IAAAjc,KAAA0yB,EAAA,SAAArhC,GACzB,GAA6B4gC,GAAAnwB,EAAA8wB,0BAAAZ,EAAA3Y,EAAAoI,EAAApwB,EAAA+nB,EAAAmB,EAAAwX,EAC7B,OAAAnC,IAAA,OAAA5vB,KAAAiyB,EAAA,SAAAxe,GACA,GAAAA,YAAAqM,IACA,MAAAxvB,GAAAiB,EAAAsqB,GAAA,SAEA,MAAApI,OAGyBof,EAAA1W,GAAA,UAAAnc,KAAA2yB,GACAG,EAAArD,GAAA,MAAAzvB,KAAA6yB,EAAA,SAAAjU,GAAiE,QAAAA,GAC1F,OAAAgR,IAAA,OAAA5vB,KAAA8yB,EAAA,SAAArf,EAAAlT,GACA,GAAAkT,YAAAoc,IAAA,YACA,GAAA/tB,EAAAixB,iBAAA1Z,EAAAD,EAAAmB,GACA,MAAAjqB,GAAAiB,EAAAsqB,GAAA,OAAAkB,WAEA,UAAA+C,IAAAzG,GAEA,KAAA5F,MASAgN,EAAA1jB,UAAAg2B,iBAAA,SAAA1Z,EAAAD,EAAAmB,GACA,WAAAnB,EAAAnoB,SAAAooB,EAAAqB,SAAAH,IAYAkG,EAAA1jB,UAAA61B,0BAAA,SAAAZ,EAAA3Y,EAAAoI,EAAAnI,EAAAiP,EAAAhO,EAAAwX,GACA,MAAAnQ,GAAAtI,KAAAiB,EACAqF,EAAAvG,OAEAniB,KAAAoiB,EAAAmB,WACAxd,KAAA+1B,yBAAAhB,EAAA3Y,EAAAC,EAAAiP,GAEAwJ,GAAA90B,KAAA80B,eACA90B,KAAAg2B,uCAAAjB,EAAA3Y,EAAAoI,EAAAnI,EAAAiP,EAAAhO,GAEAqF,EAAAvG,IAWAoH,EAAA1jB,UAAAk2B,uCAAA,SAAAjB,EAAA3Y,EAAAoI,EAAAnI,EAAAF,EAAAmB,GACA,aAAAjB,EAAAtjB,KACAiH,KAAAi2B,kDAAAlB,EAAAvQ,EAAAnI,EAAAiB,GAEAtd,KAAAk2B,8CAAAnB,EAAA3Y,EAAAoI,EAAAnI,EAAAF,EAAAmB,IASAkG,EAAA1jB,UAAAm2B,kDAAA,SAAAlB,EAAAvQ,EAAAnI,EAAAiB,GACA,GAAAzY,GAAA7E,KACyB+iB,EAAA/iB,KAAAm2B,yBAA0D9Z,EAAA,cACnF,OAAAA,GAAA,WAAAO,WAAA,KACAkG,EAAAC,GAEA0P,GAAA,SAAA1vB,KAAA/C,KAAAo2B,mBAAA/Z,EAAA0G,GAAA,SAAAsT,GACA,GAA6B9nB,GAAA,GAAAuR,IAAAuW,KAC7B,OAAAxxB,GAAA2wB,cAAAT,EAAAxmB,EAAAiW,EAAA6R,EAAA/Y,GAAA,MAYAkG,EAAA1jB,UAAAo2B,8CAAA,SAAAnB,EAAA3Y,EAAAoI,EAAAnI,EAAAF,EAAAmB,GACA,GAAAzY,GAAA7E,KACA6G,EAAAwb,EAAAjG,EAAAC,EAAAF,GAAA2H,EAAAjd,EAAAid,QAAAC,EAAAld,EAAAkd,iBAAAC,EAAAnd,EAAAmd,UAAAC,EAAApd,EAAAod,uBACA,KAAAH,EACA,MAAAnB,GAAAvG,EACA,IAAyB2G,GAAA/iB,KAAAm2B,sBAAApS,EAAwE1H,EAAA,WAAuC,EACxI,OAAAA,GAAA,WAAAO,WAAA,KACAkG,EAAAC,GAEA0P,GAAA,SAAA1vB,KAAA/C,KAAAo2B,mBAAA/Z,EAAA0G,GAAA,SAAAsT,GACA,MAAAxxB,GAAA2wB,cAAAT,EAAA3Y,EAAAoI,EAAA6R,EAAAx/B,OAAAslB,EAAA/lB,MAAA4tB,IAAA1G,GAAA,MAUAkG,EAAA1jB,UAAAi2B,yBAAA,SAAAhB,EAAAuB,EAAAja,EAAAF,GACA,GAAAtX,GAAA7E,IACA,WAAAqc,EAAAtjB,KACA,MAAAsjB,GAAAqB,aACAsB,GAAA,IAAAjc,KAAA/C,KAAAqjB,aAAAkT,KAAAxB,EAAA9F,SAAA5S,GAAA,SAAAma,GAEA,MADAna,GAAAuR,cAAA4I,EACA,GAAA1W,IAAA3D,QAGA9oB,EAAAiB,EAAAsqB,GAAA,OAAAkB,IAAA3D,MAEA,IAAAtV,GAAAwb,EAAAiU,EAAAja,EAAAF,GAAA2H,EAAAjd,EAAAid,QAAAC,EAAAld,EAAAkd,iBAAAC,EAAAnd,EAAAmd,SACA,KAAAF,EACA,MAAAnB,GAAA2T,EACA,IAAyBG,GAAAta,EAAA/lB,MAAA4tB,GACA0S,EAAA12B,KAAA+rB,eAAAgJ,EAAA1Y,EACzB,OAAAoW,IAAA,SAAA1vB,KAAA2zB,EAAA,SAAAC,GACA,GAA6BC,GAAAD,EAAAxjC,OACA0jC,EAAAF,EAAAnS,OAC7B3d,EAAAtQ,EAAA+/B,EAAAvS,EAAA0S,EAAAI,GAAAza,EAAAvV,EAAAuV,aAAA8H,EAAArd,EAAAqd,cACA,QAAAA,EAAAlwB,QAAAooB,EAAAI,cAAA,CACA,GAAiCsa,GAAAjyB,EAAA0wB,eAAAqB,EAAAC,EAAAza,EACjC,OAAA4C,IAAA,IAAAjc,KAAA+zB,EAAA,SAAArZ,GAAkE,UAAAqC,IAAAiE,EAAAtG,KAElE,OAAAoZ,EAAA7iC,QAAA,IAAAkwB,EAAAlwB,OACA,MAAAX,GAAAiB,EAAAsqB,GAAA,OAAAkB,IAAAiE,MAEA,IAA6BiR,GAAAnwB,EAAA2wB,cAAAoB,EAAAxa,EAAAya,EAAA3S,EAAA3G,IAAA,EAC7B,OAAAyB,IAAA,IAAAjc,KAAAiyB,EAAA,SAAA+B,GAAsD,UAAAjX,IAAAiE,EAAAltB,OAAAkgC,EAAA5a,UAAA4a,EAAAtZ,eAQtD+F,EAAA1jB,UAAAisB,eAAA,SAAAgJ,EAAA1Y,GACA,GAAAxX,GAAA7E,IACA,OAAAqc,GAAAoB,SAEApqB,EAAAiB,EAAAsqB,GAAA,OAAAsU,IAAA7W,EAAAoB,SAAAsX,IAEA1Y,EAAAqB,iBAEAzjB,KAAAoiB,EAAAuR,cACAv6B,EAAAiB,EAAAsqB,GAAA,IAAAvC,EAAAuR,eAEA6E,GAAA,SAAA1vB,KAAA0gB,EAAAsR,EAAA9F,SAAA5S,GAAA,SAAA2a,GACA,MAAAA,GACAhY,GAAA,IAAAjc,KAAA8B,EAAAwe,aAAAkT,KAAAxB,EAAA9F,SAAA5S,GAAA,SAAAma,GAEA,MADAna,GAAAuR,cAAA4I,EACAA,IAGAtT,EAAA7G,KAGAhpB,EAAAiB,EAAAsqB,GAAA,OAAAsU,OAAA6B,KAOAvR,EAAA1jB,UAAAs2B,mBAAA,SAAA/Z,EAAAkH,GAGA,IAFA,GAAyBruB,MACAa,EAAAwtB,EAAAxN,OACzB,CAEA,GADA7gB,IAAA2B,OAAAd,EAAAomB,UACA,IAAApmB,EAAAyqB,iBACA,MAAAntB,GAAAiB,EAAAsqB,GAAA,IAAA1pB,EAEA,IAAAa,EAAAyqB,iBAAA,IAAAzqB,EAAA0nB,SAAAF,IACA,MAAA0F,GAAyD5G,EAAA,WAEzDtmB,KAAA0nB,SAAAF,MASAiG,EAAA1jB,UAAAq2B,sBAAA,SAAAha,EAAAqB,EAAAf,GACA,MAAAzc,MAAAi3B,4BAAAzZ,EAAAxd,KAAAsjB,cAAAiQ,MAAA/V,GAAArB,EAAAM,IASA+G,EAAA1jB,UAAAm3B,4BAAA,SAAAzZ,EAAA+F,EAAApH,EAAAM,GACA,GAAyBya,GAAAl3B,KAAAm3B,mBAAA3Z,EAAA+F,EAAAxN,KAAAoG,EAAAM,EACzB,WAAAoD,IAAAqX,EAAAl3B,KAAAo3B,kBAAA7T,EAAApD,YAAAngB,KAAAujB,QAAApD,aAAAoD,EAAAsC,WAOArC,EAAA1jB,UAAAs3B,kBAAA,SAAAC,EAAAC,GACA,GAAyBpiC,KAWzB,OAVAkD,GAAAi/B,EAAA,SAAAviC,EAAAwY,GAEA,GAD6B,gBAAAxY,MAAA8nB,WAAA,KAC7B,CACA,GAAiC2a,GAAAziC,EAAA+nB,UAAA,EACjC3nB,GAAAoY,GAAAgqB,EAAAC,OAGAriC,GAAAoY,GAAAxY,IAGAI,GASAsuB,EAAA1jB,UAAAq3B,mBAAA,SAAA3Z,EAAAjP,EAAA4N,EAAAM,GACA,GAAA5X,GAAA7E,KACyBw3B,EAAAx3B,KAAAy3B,eAAAja,EAAAjP,EAAA4N,WAAAM,GACAgB,IAIzB,OAHArlB,GAAAmW,EAAAkP,SAAA,SAAAyD,EAAAvqB,GACA8mB,EAAA9mB,GAAAkO,EAAAsyB,mBAAA3Z,EAAA0D,EAAA/E,EAAAM,KAEA,GAAAqD,IAAA0X,EAAA/Z,IASA+F,EAAA1jB,UAAA23B,eAAA,SAAAja,EAAAka,EAAAC,EAAAlb,GACA,GAAA5X,GAAA7E,IACA,OAAA03B,GAAA7iC,IAAA,SAAA8sB,GAAoD,MAAAA,GAAA5oB,KAAA6jB,WAAA,KAAA/X,EAAA+yB,aAAApa,EAAAmE,EAAAlF,GACpD5X,EAAAgzB,aAAAlW,EAAAgW,MAQAnU,EAAA1jB,UAAA83B,aAAA,SAAApa,EAAAsa,EAAArb,GACA,GAAyBsb,GAAAtb,EAAAqb,EAAA/+B,KAAA8jB,UAAA,GACzB,KAAAkb,EACA,SAAAtjC,OAAA,uBAAA+oB,EAAA,mBAAAsa,EAAA/+B,KAAA,KACA,OAAAg/B,IAOAvU,EAAA1jB,UAAA+3B,aAAA,SAAAC,EAAAH,GAEA,OADyBK,GAAA,EACzBpxB,EAAA,EAAAqxB,EAAAN,EAA2D/wB,EAAAqxB,EAAAjkC,OAA8B4S,IAAA,CACzF,GAAA+a,GAAAsW,EAAArxB,EACA,IAAA+a,EAAA5oB,OAAA++B,EAAA/+B,KAEA,MADA4+B,GAAAv8B,OAAA48B,GACArW,CAEAqW,KAEA,MAAAF,IAEAtU,KA2JA6O,GAAA,WAIA,QAAAA,GAAAtc,GACA/V,KAAA0nB,MAAA3R,EAuDA,MArDAziB,QAAAC,eAAA8+B,EAAAvyB,UAAA,QAIAC,IAAA,WAA0B,MAAAC,MAAA0nB,MAAAl0B,OAC1ByM,YAAA,EACAC,cAAA,IAOAmyB,EAAAvyB,UAAAlJ,OAAA,SAAAshC,GACA,GAAyB7W,GAAArhB,KAAAsmB,aAAA4R,EACzB,OAAA7W,GAAArtB,OAAA,EAAAqtB,IAAArtB,OAAA,SAOAq+B,EAAAvyB,UAAA2d,SAAA,SAAAya,GACA,GAAyBt4B,GAAAklB,EAAAoT,EAAAl4B,KAAA0nB,MACzB,OAAA9nB,KAAA6d,SAAA5oB,IAAA,SAAAqjC,GAAgD,MAAAA,GAAA1kC,YAOhD6+B,EAAAvyB,UAAAq4B,WAAA,SAAAD,GACA,GAAyBt4B,GAAAklB,EAAAoT,EAAAl4B,KAAA0nB,MACzB,OAAA9nB,MAAA6d,SAAAzpB,OAAA,EAAA4L,EAAA6d,SAAA,GAAAjqB,MAAA,MAOA6+B,EAAAvyB,UAAAs4B,SAAA,SAAAF,GACA,GAAyB7W,GAAA4D,GAAAiT,EAAAl4B,KAAA0nB,MACzB,OAAArG,GAAArtB,OAAA,KAEyBqtB,IAAArtB,OAAA,GAAAypB,SAAA5oB,IAAA,SAAAkB,GAAmD,MAAAA,GAAAvC,QAC5EqP,OAAA,SAAAw1B,GAAuC,MAAAA,KAAAH,KAOvC7F,EAAAvyB,UAAAwmB,aAAA,SAAA4R,GAAgD,MAAAjT,IAAAiT,EAAAl4B,KAAA0nB,OAAA7yB,IAAA,SAAA8sB,GAAkD,MAAAA,GAAAnuB,SAClG6+B,KAsCApM,GAAA,WAKA,QAAAA,GAAAzyB,EAAAiqB,GACAzd,KAAAxM,QACAwM,KAAAyd,WAMA,MADAwI,GAAAnmB,UAAA2C,SAAA,WAA+C,kBAAAzC,KAAAxM,MAAA,KAC/CyyB,KAmCAD,GAAA,SAAA9kB,GAOA,QAAA8kB,GAAAjQ,EAAAsP,GACA,GAAAxgB,GAAA3D,EAAA6B,KAAA/C,KAAA+V,IAAA/V,IAGA,OAFA6E,GAAAwgB,WACAsB,GAAA9hB,EAAAkR,GACAlR,EAMA,MAhBAnF,IAAA,UAAAsmB,EAAA9kB,GAeA8kB,EAAAlmB,UAAA2C,SAAA,WAAkD,MAAAzC,MAAAqlB,SAAA5iB,YAClDujB,GACCqM,IAmDDtM,GAAA,WAYA,QAAAA,GAAAmB,EAAArL,EAAAsE,EAAA0F,EAAA5N,EAAAqF,EAAAD,EAAAib,GACAt4B,KAAAknB,MACAlnB,KAAA6b,SACA7b,KAAAmgB,cACAngB,KAAA6lB,WACA7lB,KAAAiY,OACAjY,KAAAsd,SACAtd,KAAAqd,YACArd,KAAAinB,gBAAAqR,EAyFA,MAvFAhlC,QAAAC,eAAAwyB,EAAAjmB,UAAA,eAKAC,IAAA,WAA0B,MAAAC,MAAAinB,gBAAAT,aAC1BvmB,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAwyB,EAAAjmB,UAAA,QAKAC,IAAA,WAA0B,MAAAC,MAAA4mB,aAAA7Q,MAC1B9V,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAwyB,EAAAjmB,UAAA,UAKAC,IAAA,WAA0B,MAAAC,MAAA4mB,aAAAhwB,OAAAoJ,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAwyB,EAAAjmB,UAAA,cAKAC,IAAA,WAA0B,MAAAC,MAAA4mB,aAAAuR,WAAAn4B,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAwyB,EAAAjmB,UAAA,YAKAC,IAAA,WAA0B,MAAAC,MAAA4mB,aAAAnJ,SAAAzd,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAwyB,EAAAjmB,UAAA,gBAKAC,IAAA,WAA0B,MAAAC,MAAA4mB,aAAAN,aAAAtmB,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAwyB,EAAAjmB,UAAA,YAIAC,IAAA,WAIA,MAHAC,MAAAu4B,YACAv4B,KAAAu4B,UAAAvZ,GAAA,IAAAjc,KAAA/C,KAAA6b,OAAA,SAAAwF,GAAqE,MAAAzF,GAAAyF,MAErErhB,KAAAu4B,WAEAt4B,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAwyB,EAAAjmB,UAAA,iBAIAC,IAAA,WAKA,MAJAC,MAAAmzB,iBACAnzB,KAAAmzB,eACAnU,GAAA,IAAAjc,KAAA/C,KAAAmgB,YAAA,SAAAkB,GAA6D,MAAAzF,GAAAyF,MAE7DrhB,KAAAmzB,gBAEAlzB,YAAA,EACAC,cAAA,IAKA6lB,EAAAjmB,UAAA2C,SAAA,WACA,MAAAzC,MAAAqlB,SAAArlB,KAAAqlB,SAAA5iB,WAAA,UAAAzC,KAAAinB,gBAAA,KAEAlB,KAqDAG,GAAA,WAeA,QAAAA,GAAAgB,EAAArL,EAAAsE,EAAA0F,EAAA5N,EAAAqF,EAAAD,EAAAmJ,EAAAgS,EAAAC,EAAA3qB,GACA9N,KAAAknB,MACAlnB,KAAA6b,SACA7b,KAAAmgB,cACAngB,KAAA6lB,WACA7lB,KAAAiY,OACAjY,KAAAsd,SACAtd,KAAAqd,YACArd,KAAA2tB,aAAAnH,EACAxmB,KAAAiqB,YAAAuO,EACAx4B,KAAAgqB,eAAAyO,EACAz4B,KAAA04B,SAAA5qB,EA0FA,MAxFAxa,QAAAC,eAAA2yB,EAAApmB,UAAA,eAKAC,IAAA,WAA0B,MAAAC,MAAA2tB,cAC1B1tB,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA2yB,EAAApmB,UAAA,QAKAC,IAAA,WAA0B,MAAAC,MAAA4mB,aAAA7Q,MAC1B9V,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA2yB,EAAApmB,UAAA,UAKAC,IAAA,WAA0B,MAAAC,MAAA4mB,aAAAhwB,OAAAoJ,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA2yB,EAAApmB,UAAA,cAKAC,IAAA,WAA0B,MAAAC,MAAA4mB,aAAAuR,WAAAn4B,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA2yB,EAAApmB,UAAA,YAKAC,IAAA,WAA0B,MAAAC,MAAA4mB,aAAAnJ,SAAAzd,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA2yB,EAAApmB,UAAA,gBAKAC,IAAA,WAA0B,MAAAC,MAAA4mB,aAAAN,aAAAtmB,OAC1BC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA2yB,EAAApmB,UAAA,YAIAC,IAAA,WAIA,MAHAC,MAAAu4B,YACAv4B,KAAAu4B,UAAA3c,EAAA5b,KAAA6b,SAEA7b,KAAAu4B,WAEAt4B,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA2yB,EAAApmB,UAAA,iBAIAC,IAAA,WAIA,MAHAC,MAAAmzB,iBACAnzB,KAAAmzB,eAAAvX,EAAA5b,KAAAmgB,cAEAngB,KAAAmzB,gBAEAlzB,YAAA,EACAC,cAAA,IAKAgmB,EAAApmB,UAAA2C,SAAA,WAGA,oBAFyBzC,KAAAknB,IAAAryB,IAAA,SAAA8nB,GAA2C,MAAAA,GAAAla,aAA6B3J,KAAA,KAEjG,aADyBkH,KAAA2tB,aAAA3tB,KAAA2tB,aAAA50B,KAAA,IACzB,MAEAmtB,KA2BAC,GAAA,SAAAjlB,GAOA,QAAAilB,GAAAe,EAAAnR,GACA,GAAAlR,GAAA3D,EAAA6B,KAAA/C,KAAA+V,IAAA/V,IAGA,OAFA6E,GAAAqiB,MACAP,GAAA9hB,EAAAkR,GACAlR,EAMA,MAhBAnF,IAAA,UAAAymB,EAAAjlB,GAeAilB,EAAArmB,UAAA2C,SAAA,WAA0D,MAAAokB,IAAA7mB,KAAA0nB,QAC1DvB,GACCkM,IA8ND9I,GAAA,WAMA,QAAAA,GAAAE,EAAAD,EAAAtB,GAIA,GAHAloB,KAAAypB,aACAzpB,KAAAwpB,qBACAxpB,KAAAkoB,WACAuB,GAAAvB,EAAAl0B,OAAA,GAAA40B,GAAAV,EAAA,IACA,SAAAzzB,OAAA,6CAEA,IAAAkkC,GAAAzQ,EAAA0Q,KAAA,SAAA7iC,GAAwD,sBAAAA,IAAA,MAAAA,KAAA+yB,SACxD,IAAA6P,OAAAra,EAAA4J,GACA,SAAAzzB,OAAA,2CASA,MAHA80B,GAAAzpB,UAAAwoB,OAAA,WACA,MAAAtoB,MAAAypB,YAAA,IAAAzpB,KAAAkoB,SAAAl0B,QAAA,KAAAgM,KAAAkoB,SAAA,IAEAqB,KAkDAQ,GAAA,WAMA,QAAAA,GAAA3N,EAAAqM,EAAAvtB,GACA8E,KAAAoc,eACApc,KAAAyoB,kBACAzoB,KAAA9E,QAEA,MAAA6uB,MAiOAkC,GAAA,WACA,QAAAA,MAEA,MAAAA,MAYAP,GAAA,WAOA,QAAAA,GAAAD,EAAAzO,EAAAuG,EAAA2D,GACAlnB,KAAAyrB,oBACAzrB,KAAAgd,SACAhd,KAAAujB,UACAvjB,KAAAknB,MAuHA,MAlHAwE,GAAA5rB,UAAA0rB,UAAA,WACA,IACA,GAA6B2J,GAAA1I,GAAAzsB,KAAAujB,QAAAxN,WAAA/V,KAAAgd,QAAAZ,aACAqB,EAAAzd,KAAA64B,oBAAA74B,KAAAgd,OAAAmY,EAAA5X,IACAxH,EAAA,GAAAmQ,OAAA5yB,OAAAwlC,WAA0DxlC,OAAAwlC,OAAA94B,KAAAujB,QAAApD,aAAyDngB,KAAAujB,QAAA,YAAiChG,GAAAvd,KAAAyrB,kBAAA,KAAAzrB,KAAAujB,QAAAxN,MAAA,MACpJgjB,EAAA,GAAA9S,IAAAlQ,EAAA0H,GACAub,EAAA,GAAA7S,IAAAnmB,KAAAknB,IAAA6R,EAE7B,OADA/4B,MAAAi5B,qBAAAD,EAAAtR,OACAr0B,EAAAiB,EAAAsqB,GAAA,IAAAoa,GAEA,MAAAxiB,GACA,UAAAoM,IAAA,oBAAAvuB,GAAkD,MAAAA,GAAA6e,MAAAsD,OAOlDkV,EAAA5rB,UAAAm5B,qBAAA,SAAAC,GACA,GAAAr0B,GAAA7E,KACyBqc,EAAA6c,EAAA1lC,MACAc,EAAA8xB,GAAA/J,EACzBA,GAAAR,OAAAvoB,OAAAwlC,OAAAxkC,EAAAunB,QACAQ,EAAApE,KAAA3kB,OAAAwlC,OAAAxkC,EAAA2jB,MACAihB,EAAAzb,SAAArlB,QAAA,SAAAwH,GAAiD,MAAAiF,GAAAo0B,qBAAAr5B,MAQjD8rB,EAAA5rB,UAAA+4B,oBAAA,SAAA7b,EAAAZ,EAAAkB,GACA,WAAAlB,EAAAD,SAAAnoB,QAAAooB,EAAAI,cACAxc,KAAAyoB,gBAAAzL,EAAAZ,GAEApc,KAAAm5B,eAAAnc,EAAAZ,IAAAD,SAAAmB,IAOAoO,EAAA5rB,UAAA2oB,gBAAA,SAAAzL,EAAAZ,GACA,GAAAvX,GAAA7E,KACyByd,EAAAwD,EAAA7E,EAAA,SAAA8E,EAAAC,GAAiF,MAAAtc,GAAAg0B,oBAAA7b,EAAAkE,EAAAC,IAG1G,OAFA+K,IAAAzO,GACAkO,GAAAlO,GACAA,GASAiO,EAAA5rB,UAAAq5B,eAAA,SAAAnc,EAAAZ,EAAAD,EAAAmB,GACA,OAAA1W,GAAA,EAAAwyB,EAAApc,EAA2CpW,EAAAwyB,EAAAplC,OAAsB4S,IAAA,CACjE,GAAAxS,GAAAglC,EAAAxyB,EACA,KACA,MAAA5G,MAAAq5B,2BAAAjlC,EAAAgoB,EAAAD,EAAAmB,GAEA,MAAA9G,GACA,KAAAA,YAAAyV,KACA,KAAAzV,IAGA,GAAAxW,KAAA81B,iBAAA1Z,EAAAD,EAAAmB,GACA,QAEA,UAAA2O,KAQAP,EAAA5rB,UAAAg2B,iBAAA,SAAA1Z,EAAAD,EAAAmB,GACA,WAAAnB,EAAAnoB,SAAAooB,EAAAqB,SAAAH,IASAoO,EAAA5rB,UAAAu5B,2BAAA,SAAAhd,EAAAid,EAAAnd,EAAAmB,GACA,GAAAjB,EAAAmB,WACA,SAAAyO,GACA,KAAA5P,EAAAiB,QAAAC,MAAAD,EACA,SAAA2O,GACA,WAAA5P,EAAAtjB,KAAA,CACA,GAA6B8iB,GAAAM,EAAAnoB,OAAA,EAAAsqB,EAAAnC,GAAA6E,cACAuY,EAAA,GAAArT,IAAA/J,EAAAN,EAAAvoB,OAAAwlC,OAAA94B,KAAAujB,QAAApD,aAAoHngB,KAAAujB,QAAA,SAAA8J,GAAAhR,GAAAiB,EAAoEjB,EAAA,UAAAA,EAAAgQ,GAAAiN,GAAA/M,GAAA+M,GAAAnd,EAAAnoB,OAAAs5B,GAAAjR,GACrN,WAAA4J,IAAAsT,OAEA,GAAA1yB,GAAAmlB,GAAAsN,EAAAjd,EAAAF,GAAA4H,EAAAld,EAAAkd,iBAAA/C,EAAAna,EAAAma,WAAAgD,EAAAnd,EAAAmd,UACyByS,EAAAta,EAAA/lB,MAAA4tB,GACA6S,EAAA9K,GAAA1P,GACzBoO,EAAAgC,GAAA6M,EAAAvV,EAAA0S,EAAAI,GAAAza,EAAAqO,EAAArO,aAAA8H,EAAAuG,EAAAvG,eACyBmB,EAAA,GAAAa,IAAAnC,EAAA/C,EAAA1tB,OAAAwlC,OAAA94B,KAAAujB,QAAApD,aAA8HngB,KAAAujB,QAAA,SAAA8J,GAAAhR,GAAAiB,EAAoEjB,EAAA,UAAAA,EAAAgQ,GAAAiN,GAAA/M,GAAA+M,GAAAvV,EAAA/vB,OAAAs5B,GAAAjR,GAC3N,QAAA6H,EAAAlwB,QAAAooB,EAAAI,cAAA,CACA,GAA6Bgd,GAAAx5B,KAAAyoB,gBAAAoO,EAAAza,EAC7B,WAAA6J,IAAAZ,EAAAmU,IAEA,OAAA3C,EAAA7iC,QAAA,IAAAkwB,EAAAlwB,OACA,UAAAiyB,IAAAZ,MAEA,IAAyB5H,GAAAzd,KAAAm5B,eAAAtC,EAAAza,EAAA8H,EAAA3G,GACzB,WAAA0I,IAAAZ,EAAA5H,KAEAiO,KAiOA6F,GAAA,WACA,QAAAA,MAyCA,MAjCAA,GAAAzxB,UAAA25B,aAAA,SAAApd,KAUAkV,EAAAzxB,UAAA45B,MAAA,SAAArd,EAAAsd,KAOApI,EAAAzxB,UAAA85B,aAAA,SAAAvd,KAOAkV,EAAAzxB,UAAA+nB,SAAA,SAAAxL,KAQAkV,EAAAzxB,UAAA6nB,iBAAA,SAAAkS,EAAApT,KACA8K,KAKAuI,GAAA,WACA,QAAAA,MA+BA,MAzBAA,GAAAh6B,UAAA25B,aAAA,SAAApd,GAAyE,UAMzEyd,EAAAh6B,UAAA45B,MAAA,SAAArd,EAAA0d,KAKAD,EAAAh6B,UAAA85B,aAAA,SAAAvd,GAAyE,UAKzEyd,EAAAh6B,UAAA+nB,SAAA,SAAAxL,GAAqE,aAMrEyd,EAAAh6B,UAAA6nB,iBAAA,SAAAkS,EAAApT,GACA,MAAAoT,GAAArT,cAAAC,EAAAD,aAEAsT,KAaAlL,GAAA,GAAAlP,IAAA,yBACAsa,GAAA,WAOA,QAAAA,GAAA9K,EAAAC,EAAA8K,EAAAC,GACAl6B,KAAAkvB,SACAlvB,KAAAmvB,WACAnvB,KAAAi6B,sBACAj6B,KAAAk6B,oBAyCA,MAlCAF,GAAAl6B,UAAAy2B,KAAA,SAAA4D,EAAA9d,GACA,GAAAxX,GAAA7E,IACAA,MAAAi6B,qBACAj6B,KAAAi6B,oBAAA5d,EAEA,IAAyB+d,GAAAp6B,KAAAq6B,kBAAyDhe,EAAA,aAClF,OAAA2C,IAAA,IAAAjc,KAAAq3B,EAAA,SAAAE,GACAz1B,EAAAq1B,mBACAr1B,EAAAq1B,kBAAA7d,EAEA,IAA6BlpB,GAAAmnC,EAAAC,OAAAJ,EAC7B,WAAAjH,IAAA9U,EAAAjrB,EAAA87B,SAAAlvB,IAAA6uB,KAAAz7B,MAOA6mC,EAAAl6B,UAAAu6B,kBAAA,SAAA3c,GACA,GAAA7Y,GAAA7E,IACA,uBAAA0d,GACArqB,EAAAiB,EAAAqrB,GAAA,aAAA3f,KAAAkvB,OAAAqH,KAAA7Y,IAGA+U,GAAA,SAAA1vB,KAAA0c,EAAA/B,KAAA,SAAAwa,GACA,MAAAA,aAAAxY,IAAA,gBACArsB,EAAAiB,EAAAsqB,GAAA,IAAAsZ,GAGA7kC,EAAAiB,EAAAqrB,GAAA,aAAA9a,EAAAsqB,SAAAqL,mBAAAtC,OAKA8B,KAeAhI,GAAA,WACA,QAAAA,MA8BA,MAjBAA,GAAAlyB,UAAA26B,iBAAA,SAAAvT,KAQA8K,EAAAlyB,UAAA46B,QAAA,SAAAxT,KAQA8K,EAAAlyB,UAAA66B,MAAA,SAAAC,EAAAC,KACA7I,KAKA8I,GAAA,WACA,QAAAA,MAkBA,MAZAA,GAAAh7B,UAAA26B,iBAAA,SAAAvT,GAA4E,UAK5E4T,EAAAh7B,UAAA46B,QAAA,SAAAxT,GAAmE,MAAAA,IAMnE4T,EAAAh7B,UAAA66B,MAAA,SAAAC,EAAAG,GAAkF,MAAAH,IAClFE,KAiCA5M,GAAA,WAWA,QAAAA,GAAAzC,EAAAnI,EAAA0X,EAAAhM,EAAAC,EAAAC,EAAAC,EAAAnS,GACA,GAAAnY,GAAA7E,IACAA,MAAAyrB,oBACAzrB,KAAAsjB,gBACAtjB,KAAAg7B,eACAh7B,KAAAgvB,WACAhvB,KAAAgd,SACAhd,KAAAi7B,YAAA,GAAAzV,IAAA,gBAA4D,MAC5DxlB,KAAAk7B,aAAA,GAAA5I,IAAA,QACAtyB,KAAAm7B,aAAA,EAMAn7B,KAAAqvB,aAAA9B,GAIAvtB,KAAAo7B,WAAA,EAMAp7B,KAAAq7B,OACAC,oBAAA9N,GACA+N,mBAAA/N,IAKAxtB,KAAAovB,oBAAA,GAAA0L,IACA96B,KAAAunB,mBAAA,GAAAuS,GACA,IAAA0B,GAAA,SAAApnC,GAAwC,MAAAyQ,GAAA42B,aAAA,GAAApK,IAAAj9B,KACxCsnC,EAAA,SAAAtnC,GAAsC,MAAAyQ,GAAA42B,aAAA,GAAArK,IAAAh9B,IACtC4L,MAAA+0B,SAAA9F,EAAAlvB,IAAA2f,GAAA,aACA1f,KAAA27B,YAAA3e,GACAhd,KAAA47B,eAAAhc,IACA5f,KAAA67B,WAAA77B,KAAA47B,eACA57B,KAAAqjB,aAAA,GAAA2W,IAAA9K,EAAAC,EAAAqM,EAAAE,GACA17B,KAAA87B,mBAAA3W,GAAAnlB,KAAA47B,eAAA57B,KAAAyrB,mBACAzrB,KAAA+7B,qBAkgBA,MA1fA7N,GAAApuB,UAAAk8B,uBAAA,SAAAvQ,GACAzrB,KAAAyrB,oBAGAzrB,KAAA87B,mBAAA/lB,KAAAsH,UAAArd,KAAAyrB,mBAMAyC,EAAApuB,UAAAm8B,kBAAA,WACAj8B,KAAAk8B,8BACA,IAAAl8B,KAAAm7B,cACAn7B,KAAAm8B,cAAAn8B,KAAAgvB,SAAAj2B,MAAA,IAA0DqjC,YAAA,KAO1DlO,EAAApuB,UAAAo8B,4BAAA,WACA,GAAAr3B,GAAA7E,IAGAA,MAAAq8B,uBACAr8B,KAAAq8B,qBAAAr8B,KAAAgvB,SAAAzjB,UAAA+wB,KAAA1b,QAAA2b,KAAA,SAAAjjC,GACA,GAAiCuiC,GAAAh3B,EAAAye,cAAAiQ,MAAAj6B,EAAA,KACAub,EAAA,aAAAvb,EAAA,4BACjCkjC,YAAA,WAAwC33B,EAAA43B,mBAAAZ,EAAAhnB,GAA+CunB,YAAA,KAAuB,QAI9G9oC,OAAAC,eAAA26B,EAAApuB,UAAA,eAKAC,IAAA,WAA0B,MAAAC,MAAA87B,oBAC1B77B,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA26B,EAAApuB,UAAA,OAKAC,IAAA,WAA0B,MAAAC,MAAA08B,aAAA18B,KAAA47B,iBAC1B37B,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAA26B,EAAApuB,UAAA,UAKAC,IAAA,WAA0B,MAAAC,MAAAk7B,cAC1Bj7B,YAAA,EACAC,cAAA,IAOAguB,EAAApuB,UAAA27B,aAAA,SAAAjlB,GAAkDxW,KAAAk7B,aAAA5nB,KAAAkD,IAiBlD0X,EAAApuB,UAAA67B,YAAA,SAAA3e,GACAD,EAAAC,GACAhd,KAAAgd,SACAhd,KAAAo7B,WAAA,GAMAlN,EAAApuB,UAAA8F,YAAA,WAAgD5F,KAAA28B,WAKhDzO,EAAApuB,UAAA68B,QAAA,WACA38B,KAAAq8B,uBACAr8B,KAAAq8B,qBAAA5wB,cACAzL,KAAAq8B,qBAAA,OA+CAnO,EAAApuB,UAAAmoB,cAAA,SAAAC,EAAA0U,OACA,KAAAA,IAA0CA,KAC1C,IAAAC,GAAAD,EAAAC,WAAA1c,EAAAyc,EAAAzc,YAAA0F,EAAA+W,EAAA/W,SAAAiX,EAAAF,EAAAE,oBAAAC,EAAAH,EAAAG,oBAAAC,EAAAJ,EAAAI,gBACA3pC,GAAAiB,EAAAorB,GAAA,cAAAod,GAAA,SAAA/rB,QAAA,MACAA,QAAAC,KAAA,sEAEA,IAAyBpX,GAAAijC,GAAA78B,KAAA8vB,YAAA/Z,KACAknB,EAAAD,EAAAh9B,KAAA47B,eAAA/V,WACAqX,EAAA,IACzB,IAAAH,EACA,OAAAA,GACA,YACAG,EAAA5pC,OAAA+B,UAAwC2K,KAAA47B,eAAAzb,cACxC,MACA,gBACA+c,EAAAl9B,KAAA47B,eAAAzb,WACA,MACA,SACA+c,EAAA/c,GAAA,SAIA+c,GAAAJ,EAAA98B,KAAA47B,eAAAzb,eAAA,IAEA,OAAA8H,IAAAruB,EAAAoG,KAAA47B,eAAA1T,EAA4E,EAAwB,IAyBpGgG,EAAApuB,UAAAq8B,cAAA,SAAAjV,EAAAiW,OACA,KAAAA,IAAgCA,GAAWC,oBAAA,GAC3C,IAAyB7Z,GAAA2D,YAAArH,IAAAqH,EAAAlnB,KAAAq9B,SAAAnW,GACAoW,EAAAt9B,KAAAovB,oBAAAuL,MAAApX,EAAAvjB,KAAA67B,WACzB,OAAA77B,MAAAy8B,mBAAAa,EAAA,aAAAH,IA0BAjP,EAAApuB,UAAAy9B,SAAA,SAAArV,EAAAiV,GAMA,WALA,KAAAA,IAAgCA,GAAWC,oBAAA,IAC3CrP,GAAA7F,GACA,gBAAAiV,GAAAhd,aAAA,OAAAgd,EAAAhd,cACAgd,EAAAhd,YAAAngB,KAAAw9B,iBAAAL,EAAAhd,cAEAngB,KAAAm8B,cAAAn8B,KAAAioB,cAAAC,EAAAiV,OAOAjP,EAAApuB,UAAA48B,aAAA,SAAAxV,GAAoD,MAAAlnB,MAAAsjB,cAAA+P,UAAAnM,IAMpDgH,EAAApuB,UAAAu9B,SAAA,SAAAnW,GAAgD,MAAAlnB,MAAAsjB,cAAAiQ,MAAArM,IAOhDgH,EAAApuB,UAAA29B,SAAA,SAAAvW,EAAAjH,GACA,GAAAiH,YAAArH,IACA,MAAAE,GAAA/f,KAAA47B,eAAA1U,EAAAjH,EAEA,IAAyBsD,GAAAvjB,KAAAsjB,cAAAiQ,MAAArM,EACzB,OAAAnH,GAAA/f,KAAA47B,eAAArY,EAAAtD,IAMAiO,EAAApuB,UAAA09B,iBAAA,SAAA3hB,GACA,MAAAvoB,QAAAgC,KAAAumB,GAAA1mB,OAAA,SAAAggB,EAAAgJ,GACA,GAA6B3qB,GAAAqoB,EAAAsC,EAI7B,OAHA,QAAA3qB,OAAAyG,KAAAzG,IACA2hB,EAAAgJ,GAAA3qB,GAEA2hB,QAMA+Y,EAAApuB,UAAAi8B,mBAAA,WACA,GAAAl3B,GAAA7E,IACAuyB,IAAA,UACAxvB,KAAA/C,KAAAi7B,YAAA,SAAA7S,GACA,MAAAA,IACAvjB,EAAA64B,2BAAAtV,GAGAA,EAAAuV,QAAAC,MAAA,eAGAvqC,EAAAiB,EAAAsqB,GAAA,YAGArT,UAAA,eAQA2iB,EAAApuB,UAAA28B,mBAAA,SAAA5B,EAAAhmB,EAAAsoB,GACA,GAAyBU,GAAA79B,KAAAi7B,YAAAznC,KAIzB,IAAAqqC,GAAA,eAAAhpB,GAAA,eAAAgpB,EAAAhpB,QACAgpB,EAAAhD,OAAAp4B,aAAAo4B,EAAAp4B,WACA,MAAAoL,SAAAC,SAAA,EAKA,IAAA+vB,GAAA,cAAAhpB,GAAA,aAAAgpB,EAAAhpB,QACAgpB,EAAAhD,OAAAp4B,aAAAo4B,EAAAp4B,WACA,MAAAoL,SAAAC,SAAA,EAEA,IAAyBA,GAAA,KACAgwB,EAAA,KACAH,EAAA,GAAA9vB,SAAA,SAAA3Y,EAAA6oC,GACzBjwB,EAAA5Y,EACA4oC,EAAAC,IAEyB5nC,IAAA6J,KAAAm7B,YAIzB,OAHAn7B,MAAAi7B,YAAA3nB,MAA+Bnd,KAAA0e,SAAAgmB,SAAAsC,SAAArvB,UAAAgwB,SAAAH,YAG/BA,EAAAC,MAAA,SAAApnB,GAA2C,MAAA3I,SAAAiwB,OAAAtnB,MAM3C0X,EAAApuB,UAAA49B,2BAAA,SAAA72B,GACA,GAAAhC,GAAA7E,KACA7J,EAAA0Q,EAAA1Q,GAAA0kC,EAAAh0B,EAAAg0B,OAAAsC,EAAAt2B,EAAAs2B,OAAArvB,EAAAjH,EAAAiH,QAAAgwB,EAAAj3B,EAAAi3B,OACyB5W,EAAAlnB,KAAAovB,oBAAAsL,QAAAG,GACAmD,GAAAh+B,KAAAo7B,WAAAlU,EAAAzkB,aAAAzC,KAAA47B,eAAAn5B,UACzBu7B,IAAAh+B,KAAAovB,oBAAAqL,iBAAAI,IACA76B,KAAAk7B,aAAA5nB,KAAA,GAAA2d,IAAA96B,EAAA6J,KAAA08B,aAAAxV,KACArZ,QAAAC,UACAK,KAAA,SAAA7K,GAAoC,MAAAuB,GAAAo5B,YAAA/W,EAAA2T,IAAAsC,EAAAC,qBAAAD,EAAAf,WAAAjmC,EAAA,QACpCgY,KAAAL,EAAAgwB,IAIAE,GAAAh+B,KAAA67B,YACA77B,KAAAovB,oBAAAqL,iBAAAz6B,KAAA67B,aACA77B,KAAAk7B,aAAA5nB,KAAA,GAAA2d,IAAA96B,EAAA6J,KAAA08B,aAAAxV,KACArZ,QAAAC,UACAK,KAAA,SAAA7K,GAAoC,MAAAuB,GAAAo5B,YAAA/W,EAAA2T,GAAA,KAAA1kC,EAAAgvB,GAAA+B,EAAAriB,EAAA4mB,mBAAApG,YACpClX,KAAAL,EAAAgwB,KAGA99B,KAAA67B,WAAAhB,EACA/sB,EAAA,QAYAogB,EAAApuB,UAAAm+B,YAAA,SAAA/W,EAAA2T,EAAAqD,EAAAC,EAAAhoC,EAAAioC,GACA,GAAAv5B,GAAA7E,IACA,OAAA7J,KAAA6J,KAAAm7B,cACAn7B,KAAAgvB,SAAAqP,GAAAr+B,KAAAsjB,cAAA+P,UAAArzB,KAAA47B,iBACA57B,KAAAk7B,aAAA5nB,KAAA,GAAAwd,IAAA36B,EAAA6J,KAAA08B,aAAAxV,GAAA,iBAAA/wB,EAAA,8CAAA6J,KAAAm7B,eACAttB,QAAAC,SAAA,IAEA,GAAAD,SAAA,SAAAywB,EAAAC,GAGA,GAA6BC,EAC7B,IAAAJ,EAWAI,EAAAnrC,EAAAiB,EAAAsqB,GAAA,KAAsC6f,WAAAvX,EAAA7B,SAAA+Y,QAXtC,CACA,GAAiChb,GAAAve,EAAAkwB,SAAA9F,SACAyP,EAAAvb,EAAAC,EAAAve,EAAAwe,aAAAxe,EAAAye,cAAA4D,EAAAriB,EAAAmY,OACjCwhB,GAAA/L,GAAA,SAAA1vB,KAAA27B,EAAA,SAAAD,GACA,MAAAzf,IAAA,IAAAjc,KAAAyoB,GAAA3mB,EAAA4mB,kBAAA5mB,EAAAmY,OAAAyhB,EAAA55B,EAAA63B,aAAA+B,IAAA,SAAApZ,GAEA,MADAxgB,GAAAq2B,aAAA5nB,KAAA,GAAAge,IAAAn7B,EAAA0O,EAAA63B,aAAAxV,GAAAriB,EAAA63B,aAAA+B,GAAApZ,KACgCoZ,aAAApZ,gBAOhC,GAI6BsZ,GAkDAC,EAtDAC,EAAApM,GAAA,SAAA1vB,KAAAy7B,EAAA,SAAAnd,GAC7B,MAAArC,IAAA,IAAAjc,KAAA8B,EAAAw2B,MAAAC,oBAAAja,EAAAgE,UAAA,WAA0F,MAAAhE,OAI7Dyd,EAAA9f,GAAA,IAAAjc,KAAA87B,EAAA,SAAAh4B,GAC7B,GAAA43B,GAAA53B,EAAA43B,WAAApZ,EAAAxe,EAAAwe,SACiCjC,EAAAve,EAAAkwB,SAAA9F,QAIjC,OAHA0P,GACA,GAAAI,IAAA1Z,EAAAxgB,EAAAi3B,mBAAAzW,SAAAjC,GACAub,EAAAK,SAAAn6B,EAAAm2B,eACwByD,aAAApZ,cAEK4Z,EAAAxM,GAAA,SAAA1vB,KAAA+7B,EAAA,SAAAj4B,GAC7B,GAAA43B,GAAA53B,EAAA43B,WAAApZ,EAAAxe,EAAAwe,QACA,OAAAxgB,GAAAs2B,eAAAhlC,EACA9C,EAAAiB,EAAAsqB,GAAA,SACA/Z,EAAA42B,aAAA,GAAA5K,IAAA16B,EAAA0O,EAAA63B,aAAAxV,GAAAuX,EAAApZ,IACArG,GAAA,IAAAjc,KAAA47B,EAAAO,cAAA,SAAAlM,GAEA,MADAnuB,GAAA42B,aAAA,GAAA7K,IAAAz6B,EAAA0O,EAAA63B,aAAAxV,GAAAuX,EAAApZ,EAAA2N,KAC4ByL,aAAApZ,WAAA2N,uBAGCmM,EAAA1M,GAAA,SAAA1vB,KAAAk8B,EAAA,SAAA5d,GAC7B,MAAAxc,GAAAs2B,eAAAhlC,EACA9C,EAAAiB,EAAAsqB,GAAA,QACAyC,EAAA2R,gBAAA2L,EAAAS,gBACAv6B,EAAA42B,aAAA,GAAAtK,IAAAh7B,EAAA0O,EAAA63B,aAAAxV,GAAA7F,EAAAod,WAAApd,EAAAgE,WACArG,GAAA,IAAAjc,KAAA47B,EAAAU,cAAA,WAEA,MADAx6B,GAAA42B,aAAA,GAAAvK,IAAA/6B,EAAA0O,EAAA63B,aAAAxV,GAAA7F,EAAAod,WAAApd,EAAAgE,WACAhE,KAIAhuB,EAAAiB,EAAAsqB,GAAA,IAAAyC,KAG6Bie,EAAA7M,GAAA,SAAA1vB,KAAAo8B,EAAA,SAAA9d,GAC7B,MAAArC,IAAA,IAAAjc,KAAA8B,EAAAw2B,MAAAE,mBAAAla,EAAAgE,UAAA,WAAyF,MAAAhE,OAI5Dke,EAAAvgB,GAAA,IAAAjc,KAAAu8B,EAAA,SAAAz4B,GAC7B,GAAA43B,GAAA53B,EAAA43B,WAAApZ,EAAAxe,EAAAwe,SAAA2N,EAAAnsB,EAAAmsB,cACA,IAAAA,EAAA,CAEA,OAA4ByL,aAAA/oB,MADS4R,GAAAziB,EAAA0iB,mBAAAlC,EAAAxgB,EAAAi3B,oBACT9I,kBAG5B,OAA4ByL,aAAA/oB,MAAA,KAAAsd,oBAMCwM,EAAA36B,EAAAi3B,mBACA2D,EAAA56B,EAAA+2B,cAC7B2D,GACAnnC,QAAA,SAAAyO,GACA,GAAA43B,GAAA53B,EAAA43B,WAAA/oB,EAAA7O,EAAA6O,KACA,KADA7O,EAAAmsB,gBACA78B,IAAA0O,EAAAs2B,aAEA,YADAyD,GAAA,EAMA,IAHA/5B,EAAA+2B,eAAA6C,EACA55B,EAAAg3B,WAAAh3B,EAAAuqB,oBAAAuL,MAAA91B,EAAA+2B,eAAAf,GACAh2B,EAAAi3B,mBAAApmB,GACAwoB,EAAA,CACA,GAAqCnlC,GAAA8L,EAAAye,cAAA+P,UAAAxuB,EAAAg3B,WACrCh3B,GAAAmqB,SAAA0Q,qBAAA3mC,IAAAolC,EACAt5B,EAAAmqB,SAAA2Q,aAAA5mC,GAGA8L,EAAAmqB,SAAAqP,GAAAtlC,GAGA,GAAA6mC,IAAA/6B,EAAA0iB,mBAAA7R,EAAA8pB,GACAK,SAAAh7B,EAAAm2B,cACA4D,GAAA,IAEAzwB,KAAA,WACAywB,GACA/5B,EAAAu2B,WAAA,EACAv2B,EAAAq2B,aAAA5nB,KAAA,GAAAyd,IAAA56B,EAAA0O,EAAA63B,aAAAxV,GAAAriB,EAAA63B,aAAA73B,EAAA+2B,kBACA0C,GAAA,KAGAz5B,EAAAi7B,2BACAj7B,EAAAq2B,aAAA5nB,KAAA,GAAAwd,IAAA36B,EAAA0O,EAAA63B,aAAAxV,GAAA,KACAoX,GAAA,KAEa,SAAA9nB,GACb,GAAAyF,EAAAzF,GACA3R,EAAAi7B,2BACAj7B,EAAAu2B,WAAA,EACAv2B,EAAAq2B,aAAA5nB,KAAA,GAAAwd,IAAA36B,EAAA0O,EAAA63B,aAAAxV,GAAA1Q,EAAA5d,UACA0lC,GAAA,OAEA,CACAz5B,EAAAq2B,aAAA5nB,KAAA,GAAA0d,IAAA76B,EAAA0O,EAAA63B,aAAAxV,GAAA1Q,GACA,KACA8nB,EAAAz5B,EAAAwqB,aAAA7Y,IAEA,MAAAupB,GACAxB,EAAAwB,IAGAl7B,EAAAi3B,mBAAA0D,EACA36B,EAAA+2B,eAAA6D,EACA56B,EAAAg3B,WAAAh3B,EAAAuqB,oBAAAuL,MAAA91B,EAAA+2B,eAAAf,GACAh2B,EAAAmqB,SAAA2Q,aAAA96B,EAAA63B,aAAA73B,EAAAg3B,kBAOA3N,EAAApuB,UAAAggC,yBAAA,WACA,GAAyB/mC,GAAAiH,KAAAsjB,cAAA+P,UAAArzB,KAAA67B,WACzB77B,MAAAgvB,SAAA2Q,aAAA5mC,IAEAm1B,KAEA8R,GAAA,WAIA,QAAAA,GAAAjnC,GACAiH,KAAAjH,OAUA,MARAzF,QAAAC,eAAAysC,EAAAlgC,UAAA,SAIAC,IAAA,WAA0B,MAAAC,MAAAjH,KAAAiH,KAAAjH,KAAA/E,OAAA,IAC1BiM,YAAA,EACAC,cAAA,IAEA8/B,KAEAC,GAAA,WAKA,QAAAA,GAAA5iB,EAAAhB,GACArc,KAAAqd,YACArd,KAAAqc,QAEA,MAAA4jB,MAEAlB,GAAA,WAMA,QAAAA,GAAAlF,EAAApT,EAAArD,GACApjB,KAAA65B,SACA75B,KAAAymB,OACAzmB,KAAAojB,iBACApjB,KAAAkgC,qBACAlgC,KAAAmgC,uBA4TA,MAtTApB,GAAAj/B,UAAAk/B,SAAA,SAAAoB,GACA,GAAyBC,GAAArgC,KAAA65B,OAAAnS,MACA4Y,EAAAtgC,KAAAymB,KAAAzmB,KAAAymB,KAAAiB,MAAA,IACzB1nB,MAAAugC,oBAAAF,EAAAC,EAAAF,GAAAC,EAAA7sC,SAKAurC,EAAAj/B,UAAAo/B,YAAA,WACA,GAAAr6B,GAAA7E,IACA,KAAAA,KAAAwgC,mBAAAxgC,KAAAo/B,eACA,MAAA/rC,GAAAiB,EAAAsqB,GAAA,OAEA,IAAyB6hB,GAAAzgC,KAAA0gC,wBACzB,OAAAjO,IAAA,SAAA1vB,KAAA09B,EAAA,SAAAE,GAAuE,MAAAA,GAAA97B,EAAA+7B,uBAAAvtC,EAAAiB,EAAAsqB,GAAA,WAKvEmgB,EAAAj/B,UAAAu/B,YAAA,WACA,GAAAx6B,GAAA7E,IACA,KAAAA,KAAAo/B,eACA,MAAA/rC,GAAAiB,EAAAsqB,GAAA,SACA,IAAyBiiB,GAAAxtC,EAAAiB,EAAAqvB,GAAA,MAAA3jB,KAAAkgC,mBACAY,EAAAvO,GAAA,UAAAxvB,KAAA89B,EAAA,SAAAE,GAA+D,MAAAl8B,GAAAm8B,WAAAD,EAAA1kB,QACxF,OAAAqW,IAAA,OAAA3vB,KAAA+9B,EAAA,SAAAx9B,EAAA29B,GAA6D,MAAA39B,MAK7Dy7B,EAAAj/B,UAAA0gC,eAAA,WAA0D,WAAAxgC,KAAAmgC,oBAAAnsC,QAI1D+qC,EAAAj/B,UAAAs/B,aAAA,WAAwD,WAAAp/B,KAAAkgC,kBAAAlsC,QAQxD+qC,EAAAj/B,UAAAygC,oBAAA,SAAAW,EAAAC,EAAApS,EAAAqS,GACA,GAAAv8B,GAAA7E,KACyBqhC,EAAAvT,GAAAqT,EAEzBD,GAAAzjB,SAAArlB,QAAA,SAAArC,GACA8O,EAAAy8B,eAAAvrC,EAAAsrC,EAAAtrC,EAAAvC,MAAA8pB,QAAAyR,EAAAqS,EAAAvqC,QAAAd,EAAAvC,eACA6tC,GAAAtrC,EAAAvC,MAAA8pB,UAGAllB,EAAAipC,EAAA,SAAAvsC,EAAAwY,GAA+C,MAAAzI,GAAA08B,8BAAAzsC,EAA4D,EAAA0sC,WAAAl0B,OAS3GyxB,EAAAj/B,UAAAwhC,eAAA,SAAAJ,EAAAC,EAAAf,EAAAgB,GACA,GAAyBvH,GAAAqH,EAAA1tC,MACAizB,EAAA0a,IAAA3tC,MAAA,KACAiuC,EAAArB,IAAAoB,WAAAN,EAAA1tC,MAAA8pB,QAAA,IAEzB,IAAAmJ,GAAAoT,EAAAlM,eAAAlH,EAAAkH,aAAA,CACA,GAA6B+T,GAAA1hC,KAAA0hC,4BAAAjb,EAAAoT,EAA8FA,EAAA,aAAA8H,sBAiB3H,IAhBAD,EACA1hC,KAAAkgC,kBAAAh7B,KAAA,GAAA86B,IAAAoB,KAIAvH,EAAA5hB,KAAAwO,EAAAxO,KACA4hB,EAAAnT,cAAAD,EAAAC,eAGAmT,EAAAxc,UACArd,KAAAugC,oBAAAW,EAAAC,EAAAM,IAAAhkB,SAAA,KAAA2jB,GAIAphC,KAAAugC,oBAAAW,EAAAC,EAAAf,EAAAgB,GAEAM,EAAA,CACA,GAAiCpkB,GAAA,QACjCtd,MAAAmgC,oBAAAj7B,KAAA,GAAA+6B,IAAA3iB,EAAAD,UAAAoJ,SAIAA,IACAzmB,KAAAuhC,8BAAAJ,EAAAM,GAEAzhC,KAAAkgC,kBAAAh7B,KAAA,GAAA86B,IAAAoB,IAEAvH,EAAAxc,UACArd,KAAAugC,oBAAAW,EAAA,KAAAO,IAAAhkB,SAAA,KAAA2jB,GAIAphC,KAAAugC,oBAAAW,EAAA,KAAAd,EAAAgB,IAUArC,EAAAj/B,UAAA4hC,4BAAA,SAAAjb,EAAAoT,EAAA+H,GACA,OAAAA,GACA,aACA,QACA,iCACA,OAAAza,GAAAV,EAAAoT,KACA7b,EAAAyI,EAAAtG,YAAA0Z,EAAA1Z,YACA,oBACA,QACA,OAAAgH,GAAAV,EAAAoT,KAQAkF,EAAAj/B,UAAAyhC,8BAAA,SAAAllB,EAAAolB,GACA,GAAA58B,GAAA7E,KACyByd,EAAAqQ,GAAAzR,GACAjoB,EAAAioB,EAAA7oB,KACzB4E,GAAAqlB,EAAA,SAAAsH,EAAA8c,GACAztC,EAAAipB,UAGAokB,EACA58B,EAAA08B,8BAAAxc,EAAA0c,EAAAhkB,SAAA+jB,WAAAK,IAGAh9B,EAAA08B,8BAAAxc,EAAA,MANAlgB,EAAA08B,8BAAAxc,EAAA0c,KASArtC,EAAAipB,WAGAokB,KAAAnkB,QAAAmkB,EAAAnkB,OAAAwkB,YACA9hC,KAAAmgC,oBAAAj7B,KAAA,GAAA+6B,IAAAwB,EAAAnkB,OAAAD,UAAAjpB,IAHA4L,KAAAmgC,oBAAAj7B,KAAA,GAAA+6B,IAAA,KAAA7rC,KAYA2qC,EAAAj/B,UAAA4gC,uBAAA,WACA,GAAA77B,GAAA7E,KACyB6gC,EAAAxtC,EAAAiB,EAAAqvB,GAAA,MAAA3jB,KAAAmgC,qBACAW,EAAArO,GAAA,SAAA1vB,KAAA89B,EAAA,SAAAE,GAA8D,MAAAl8B,GAAAk9B,iBAAAhB,EAAA1jB,UAAA0jB,EAAA1kB,QACvF,OAAAmD,IAAA,MAAAzc,KAAA+9B,EAAA,SAAA3rB,GAA6D,WAAAA,KAK7D4pB,EAAAj/B,UAAA8gC,qBAAA,WACA,GAAA/7B,GAAA7E,KACyB6gC,EAAAxtC,EAAAiB,EAAAqvB,GAAA,MAAA3jB,KAAAkgC,mBACAY,EAAAvO,GAAA,UAAAxvB,KAAA89B,EAAA,SAAAE,GAA+D,MAAA1hB,GAAAhsB,EAAAiB,EAAAqvB,GAAA,OAAA9e,EAAAm9B,oBAAAjB,EAAAhoC,MAAA8L,EAAAo9B,eAAAlB,EAAA1kB,WACxF,OAAAmD,IAAA,MAAAzc,KAAA+9B,EAAA,SAAA3rB,GAA6D,WAAAA,KAM7D4pB,EAAAj/B,UAAAmiC,eAAA,SAAApI,GACA,GAAAh1B,GAAA7E,KACyBkiC,EAAArI,EAAAlM,aAAAkM,EAAAlM,aAAAuU,YAAA,IACzB,OAAAA,IAAA,IAAAA,EAAAluC,OAaAqrB,EAXyBL,GAAA,IAAAjc,KAAA1P,EAAAiB,EAAAqvB,GAAA,MAAAue,GAAA,SAAAnsC,GACzB,GAC6BosC,GADAte,EAAAhf,EAAAu9B,SAAArsC,EAAA8jC,EAQ7B,OALAsI,GAAA1iB,EADAoE,EAAAqe,YACAre,EAAAqe,YAAArI,EAAAh1B,EAAAg1B,QAGAhW,EAAAgW,EAAAh1B,EAAAg1B,SAEArH,GAAA,MAAAzvB,KAAAo/B,MAVA9uC,EAAAiB,EAAAsqB,GAAA,SAkBAmgB,EAAAj/B,UAAAkiC,oBAAA,SAAAjpC,GACA,GAAA8L,GAAA7E,KACyB65B,EAAA9gC,IAAA/E,OAAA,GACAquC,EAAAtpC,EAAA3C,MAAA,EAAA2C,EAAA/E,OAAA,GACzBsuC,UACAztC,IAAA,SAAAwsB,GAA+B,MAAAxc,GAAA09B,wBAAAlhB,KAC/Bxe,OAAA,SAAAS,GAAkC,cAAAA,GAClC,OAAA+b,GAAAL,GAAA,IAAAjc,KAAA1P,EAAAiB,EAAAqvB,GAAA,MAAA0e,GAAA,SAAA5mC,GAYA,MAAA4jB,GAX6BL,GAAA,IAAAjc,KAAA1P,EAAAiB,EAAAqvB,GAAA,MAAAloB,EAAA+mC,QAAA,SAAAzsC,GAC7B,GACiCosC,GADAte,EAAAhf,EAAAu9B,SAAArsC,EAAA0F,EAAAspB,KAQjC,OALAod,GAAA1iB,EADAoE,EAAA4e,iBACA5e,EAAA4e,iBAAA5I,EAAAh1B,EAAAg1B,QAGAhW,EAAAgW,EAAAh1B,EAAAg1B,SAEArH,GAAA,MAAAzvB,KAAAo/B,UASApD,EAAAj/B,UAAAyiC,wBAAA,SAAAlhB,GACA,GAAyBohB,GAAAphB,EAAAsM,aAAAtM,EAAAsM,aAAA8U,iBAAA,IACzB,OAAAA,IAAA,IAAAA,EAAAzuC,QAEgB+wB,KAAA1D,EAAAmhB,OAAAC,GADhB,MAQA1D,EAAAj/B,UAAAiiC,iBAAA,SAAA1kB,EAAAoJ,GACA,GAAA5hB,GAAA7E,KACyB2gC,EAAAla,KAAAkH,aAAAlH,EAAAkH,aAAAgT,cAAA,IACzB,KAAAA,GAAA,IAAAA,EAAA3sC,OACA,MAAAX,GAAAiB,EAAAsqB,GAAA,OACA,IAAyB6hB,GAAAhO,GAAA,SAAA1vB,KAAA1P,EAAAiB,EAAAqvB,GAAA,MAAAgd,GAAA,SAAA5qC,GACzB,GAC6BosC,GADAte,EAAAhf,EAAAu9B,SAAArsC,EAAA0wB,EAS7B,OANA0b,GACA1iB,EAFAoE,EAAA8c,cAEA9c,EAAA8c,cAAAtjB,EAAAoJ,EAAA5hB,EAAA4hB,KAAA5hB,EAAAg1B,QAGAhW,EAAAxG,EAAAoJ,EAAA5hB,EAAA4hB,KAAA5hB,EAAAg1B,SAEArH,GAAA,MAAAzvB,KAAAo/B,IAEA,OAAA3iB,IAAA,MAAAzc,KAAA09B,EAAA,SAAAtrB,GAA6D,WAAAA,KAM7D4pB,EAAAj/B,UAAAkhC,WAAA,SAAAnH,GACA,GAAyB/rB,GAAA+rB,EAAAnB,QACzB,OAAA1Z,IAAA,IAAAjc,KAAA/C,KAAA0iC,YAAA50B,EAAA+rB,GAAA,SAAA8I,GAGA,MAFA9I,GAAAnT,cAAAic,EACA9I,EAAA5hB,KAAA3kB,OAAA+B,UAA0CwkC,EAAA5hB,KAAAmO,GAAAyT,GAAA/rB,SAC1C,QAQAixB,EAAAj/B,UAAA4iC,YAAA,SAAA50B,EAAA+rB,GACA,GAAAh1B,GAAA7E,KACyB1K,EAAAhC,OAAAgC,KAAAwY,EACzB,QAAAxY,EAAAtB,OACA,MAAAX,GAAAiB,EAAAsqB,GAAA,OAEA,QAAAtpB,EAAAtB,OAAA,CACA,GAA6B4uC,GAAAttC,EAAA,EAC7B,OAAA0pB,IAAA,IAAAjc,KAAA/C,KAAA6iC,YAAA/0B,EAAA80B,GAAA/I,GAAA,SAAArmC,GACA,MAAAqT,MAA8BA,EAAA+7B,GAAApvC,EAAAqT,CAC9B,IAAAA,KAGA,GAAyBoR,MACA6qB,EAAArQ,GAAA,SAAA1vB,KAAA1P,EAAAiB,EAAAqvB,GAAA,MAAAruB,GAAA,SAAA6oB,GACzB,MAAAa,IAAA,IAAAjc,KAAA8B,EAAAg+B,YAAA/0B,EAAAqQ,GAAA0b,GAAA,SAAArmC,GAEA,MADAykB,GAAAkG,GAAA3qB,EACAA,KAGA,OAAAwrB,IAAA,IAAAjc,KAAAqc,GAAA,KAAArc,KAAA+/B,GAAA,WAAmE,MAAA7qB,MAOnE8mB,EAAAj/B,UAAA+iC,YAAA,SAAAjf,EAAAiW,GACA,GAAyBkJ,GAAA/iC,KAAAoiC,SAAAxe,EAAAiW,EACzB,OAAApa,GAAAsjB,EAAAj1B,QAAAi1B,EAAAj1B,QAAA+rB,EAAA75B,KAAA65B,QACAkJ,EAAAlJ,EAAA75B,KAAA65B,UAOAkF,EAAAj/B,UAAAsiC,SAAA,SAAAY,EAAA3d,GACA,GAAyBrI,GAAA6Q,GAAAxI,EAEzB,QADyBrI,IAAA7pB,OAAA87B,SAAAjvB,KAAAojB,gBACzBrjB,IAAAijC,IAEAjE,KAEAa,GAAA,WAMA,QAAAA,GAAArY,EAAA0b,EAAAC,GACAljC,KAAAunB,qBACAvnB,KAAAijC,cACAjjC,KAAAkjC,YAkLA,MA5KAtD,GAAA9/B,UAAA+/B,SAAA,SAAAO,GACA,GAAyBC,GAAArgC,KAAAijC,YAAAvb,MACA4Y,EAAAtgC,KAAAkjC,UAAAljC,KAAAkjC,UAAAxb,MAAA,IACzB1nB,MAAAmjC,sBAAA9C,EAAAC,EAAAF,GACAtZ,GAAA9mB,KAAAijC,YAAAltB,MACA/V,KAAAojC,oBAAA/C,EAAAC,EAAAF,IAQAR,EAAA9/B,UAAAqjC,sBAAA,SAAAjC,EAAAC,EAAApS,GACA,GAAAlqB,GAAA7E,KACyByd,EAAAqQ,GAAAqT,EAEzBD,GAAAzjB,SAAArlB,QAAA,SAAAirC,GACA,GAA6BC,GAAAD,EAAA7vC,MAAA8pB,MAC7BzY,GAAA0+B,iBAAAF,EAAA5lB,EAAA6lB,GAAAvU,SACAtR,GAAA6lB,KAGAlrC,EAAAqlB,EAAA,SAAA3oB,EAAA+sC,GACAh9B,EAAA08B,8BAAAzsC,EAAAi6B,MASA6Q,EAAA9/B,UAAAyjC,iBAAA,SAAArC,EAAAC,EAAAqC,GACA,GAAyB3J,GAAAqH,EAAA1tC,MACAizB,EAAA0a,IAAA3tC,MAAA,IACzB,IAAAqmC,IAAApT,EAEA,GAAAoT,EAAAxc,UAAA,CAEA,GAAiCokB,GAAA+B,EAAAhC,WAAA3H,EAAAvc,OACjCmkB,IACAzhC,KAAAmjC,sBAAAjC,EAAAC,EAAAM,EAAAhkB,cAKAzd,MAAAmjC,sBAAAjC,EAAAC,EAAAqC,OAIA/c,IAEAzmB,KAAAuhC,8BAAAJ,EAAAqC,IASA5D,EAAA9/B,UAAAyhC,8BAAA,SAAAllB,EAAA+jB,GACApgC,KAAAunB,mBAAAkS,aAAApd,EAAA7oB,MAAA6xB,UACArlB,KAAAyjC,2BAAApnB,EAAA+jB,GAGApgC,KAAA0jC,yBAAArnB,EAAA+jB,IAQAR,EAAA9/B,UAAA2jC,2BAAA,SAAApnB,EAAA+jB,GACA,GAAyBqB,GAAArB,EAAAoB,WAAAnlB,EAAA7oB,MAAA8pB,OACzB,IAAAmkB,KAAAnkB,OAAA,CACA,GAA6BqmB,GAAAlC,EAAAnkB,OAAAsmB,SACA7U,EAAA0S,EAAAhkB,SAAAomB,qBAC7B7jC,MAAAunB,mBAAAmS,MAAArd,EAAA7oB,MAAA6xB,UAAiEse,eAAAtnB,QAAA0S,eAQjE6Q,EAAA9/B,UAAA4jC,yBAAA,SAAArnB,EAAA+jB,GACA,GAAAv7B,GAAA7E,KACyByhC,EAAArB,EAAAoB,WAAAnlB,EAAA7oB,MAAA8pB,OACzB,IAAAmkB,EAAA,CACA,GAA6BhkB,GAAAqQ,GAAAzR,GACAynB,EAAAznB,EAAA7oB,MAAA6pB,UAAAokB,EAAAhkB,SAAA2iB,CAC7BhoC,GAAAqlB,EAAA,SAAA3oB,EAAAwY,GAA+C,MAAAzI,GAAA08B,8BAAAzsC,EAAAgvC,KAC/CrC,EAAAnkB,SAEAmkB,EAAAnkB,OAAAymB,aAEAtC,EAAAhkB,SAAAomB,yBAUAjE,EAAA9/B,UAAAsjC,oBAAA,SAAAlC,EAAAC,EAAApS,GACA,GAAAlqB,GAAA7E,KACyByd,EAAAqQ,GAAAqT,EACzBD,GAAAzjB,SAAArlB,QAAA,SAAArC,GAAkD8O,EAAAm/B,eAAAjuC,EAAA0nB,EAAA1nB,EAAAvC,MAAA8pB,QAAAyR,MAQlD6Q,EAAA9/B,UAAAkkC,eAAA,SAAA9C,EAAAC,EAAAf,GACA,GAAyBvG,GAAAqH,EAAA1tC,MACAizB,EAAA0a,IAAA3tC,MAAA,IAGzB,IAFAszB,GAAA+S,GAEAA,IAAApT,EACA,GAAAoT,EAAAxc,UAAA,CAEA,GAAiCokB,GAAArB,EAAA6D,mBAAApK,EAAAvc,OACjCtd,MAAAojC,oBAAAlC,EAAAC,EAAAM,EAAAhkB,cAIAzd,MAAAojC,oBAAAlC,EAAAC,EAAAf,OAIA,IAAAvG,EAAAxc,UAAA,CAEA,GAAiCokB,GAAArB,EAAA6D,mBAAApK,EAAAvc,OACjC,IAAAtd,KAAAunB,mBAAAqS,aAAAC,EAAAxU,UAAA,CACA,GAAqC6e,GAAAlkC,KAAAunB,mBAAAM,SAAAgS,EAAAxU,SACrCrlB,MAAAunB,mBAAAmS,MAAAG,EAAAxU,SAAA,MACAoc,EAAAhkB,SAAA0mB,mBAAAD,EAAAnV,UACA0S,EAAA2C,UAAAF,EAAAP,aACAlC,EAAAplB,MAAA6nB,EAAA7nB,MAAA7oB,MACAiuC,EAAAnkB,QAGAmkB,EAAAnkB,OAAA+mB,OAAAH,EAAAP,aAAAO,EAAA7nB,MAAA7oB,OAEAi6B,GAAAyW,EAAA7nB,WAEA,CACA,GAAqCW,GAAA0Q,GAAAmM,EAAAxU,UACAif,EAAAtnB,IAAA7pB,OAAAoxC,yBAAA,IACrC9C,GAAAplB,MAAAwd,EACA4H,EAAAsB,SAAAuB,EACA7C,EAAAnkB,QAGAmkB,EAAAnkB,OAAAknB,aAAA3K,EAAAyK,GAEAtkC,KAAAojC,oBAAAlC,EAAA,KAAAO,EAAAhkB,eAKAzd,MAAAojC,oBAAAlC,EAAA,KAAAd,IAIAR,KAkJApP,GAAA,WAQA,QAAAA,GAAA/B,EAAApS,EAAAooB,EAAAC,EAAAzpC,GACA+E,KAAAyuB,SACAzuB,KAAAqc,QACArc,KAAAkoB,YACA,MAAAuc,GACAC,EAAAC,aAAA1pC,EAAAwI,cAAA,gBA8DA,MA3DAnQ,QAAAC,eAAAi9B,EAAA1wB,UAAA,cAKAwG,IAAA,SAAA4hB,GAEAloB,KAAAkoB,SADA,MAAAA,EACA3tB,MAAAM,QAAAqtB,aAMAjoB,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAi9B,EAAA1wB,UAAA,uBAMAwG,IAAA,SAAA9S,GACAH,EAAAiB,EAAAorB,GAAA,uBAAA3O,QAAA,MACAA,QAAAC,KAAA,wEAEAhR,KAAA4kC,SAAApxC,GAEAyM,YAAA,EACAC,cAAA,IAKAswB,EAAA1wB,UAAA+kC,QAAA,WACA,GAAyB1H,IACzBC,mBAAApP,GAAAhuB,KAAAo9B,oBACAhB,WAAApO,GAAAhuB,KAAAo8B,YAGA,OADAp8B,MAAAyuB,OAAA0N,cAAAn8B,KAAAujB,QAAA4Z,IACA,GAEA7pC,OAAAC,eAAAi9B,EAAA1wB,UAAA,WAIAC,IAAA,WACA,MAAAC,MAAAyuB,OAAAxG,cAAAjoB,KAAAkoB,UACA2U,WAAA78B,KAAAqc,MACA8D,YAAAngB,KAAAmgB,YACA0F,SAAA7lB,KAAA6lB,SACAiX,oBAAA9O,GAAAhuB,KAAA4kC,UACA7H,oBAAA/8B,KAAA+8B,oBACAC,iBAAAhP,GAAAhuB,KAAAg9B,qBAGA/8B,YAAA,EACAC,cAAA,IAEAswB,IAEAA,IAAA7sB,aACKC,KAAA8b,GAAA,UAAA7b,OAA0BC,SAAA,0BAK/B0sB,GAAArsB,eAAA,WAAyC,QACpCP,KAAAsqB,KACAtqB,KAAAmiB,KACAniB,SAAA3J,GAAA0J,aAAgCC,KAAA8b,GAAA,UAAA7b,MAAA,gBAChCD,KAAA8b,GAAA,YACA9b,KAAA8b,GAAA,cAEL8Q,GAAAvqB,gBACAka,cAAqBvc,KAAA8b,GAAA,QACrBmG,WAAkBjiB,KAAA8b,GAAA,QAClBqd,sBAA6Bn5B,KAAA8b,GAAA,QAC7Bsd,mBAA0Bp5B,KAAA8b,GAAA,QAC1B0d,qBAA4Bx5B,KAAA8b,GAAA,QAC5B0c,aAAoBx4B,KAAA8b,GAAA,QACpBolB,aAAoBlhC,KAAA8b,GAAA,QACpBod,sBAA6Bl5B,KAAA8b,GAAA,QAC7BmlB,UAAiBjhC,KAAA8b,GAAA,aAAA7b,MAAA,WAWjB,IAAA4sB,IAAA,WAMA,QAAAA,GAAAhC,EAAApS,EAAA0oB,GACA,GAAAlgC,GAAA7E,IACAA,MAAAyuB,SACAzuB,KAAAqc,QACArc,KAAA+kC,mBACA/kC,KAAAkoB,YACAloB,KAAAqa,aAAAoU,EAAAgB,OAAAlkB,UAAA,SAAAoW,GACAA,YAAAoP,KACAlsB,EAAAmgC,2BAuFA,MAnFA1xC,QAAAC,eAAAk9B,EAAA3wB,UAAA,cAKAwG,IAAA,SAAA4hB,GAEAloB,KAAAkoB,SADA,MAAAA,EACA3tB,MAAAM,QAAAqtB,aAMAjoB,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAk9B,EAAA3wB,UAAA,uBAKAwG,IAAA,SAAA9S,GACAH,EAAAiB,EAAAorB,GAAA,uBAAA3O,QAAA,MACAA,QAAAC,KAAA,uEAEAhR,KAAA4kC,SAAApxC,GAEAyM,YAAA,EACAC,cAAA,IAMAuwB,EAAA3wB,UAAAiQ,YAAA,SAAA5W,GAAmE6G,KAAAglC,0BAInEvU,EAAA3wB,UAAA8F,YAAA,WAA4D5F,KAAAqa,aAAA5O,eAQ5DglB,EAAA3wB,UAAA+kC,QAAA,SAAAI,EAAAC,EAAAC,EAAAC,GACA,OAAAH,GAAAC,GAAAC,GAAAC,EACA,QAEA,oBAAAplC,MAAAqlC,QAAA,SAAArlC,KAAAqlC,OACA,QAEA,IAAyBlI,IACzBC,mBAAApP,GAAAhuB,KAAAo9B,oBACAhB,WAAApO,GAAAhuB,KAAAo8B,YAGA,OADAp8B,MAAAyuB,OAAA0N,cAAAn8B,KAAAujB,QAAA4Z,IACA,GAKA1M,EAAA3wB,UAAAklC,uBAAA,WACAhlC,KAAAslC,KAAAtlC,KAAA+kC,iBAAAQ,mBAAAvlC,KAAAyuB,OAAAiO,aAAA18B,KAAAujB,WAEAjwB,OAAAC,eAAAk9B,EAAA3wB,UAAA,WAIAC,IAAA,WACA,MAAAC,MAAAyuB,OAAAxG,cAAAjoB,KAAAkoB,UACA2U,WAAA78B,KAAAqc,MACA8D,YAAAngB,KAAAmgB,YACA0F,SAAA7lB,KAAA6lB,SACAiX,oBAAA9O,GAAAhuB,KAAA4kC,UACA7H,oBAAA/8B,KAAA+8B,oBACAC,iBAAAhP,GAAAhuB,KAAAg9B,qBAGA/8B,YAAA,EACAC,cAAA,IAEAuwB,IAEAA,IAAA9sB,aACKC,KAAA8b,GAAA,UAAA7b,OAA0BC,SAAA,oBAK/B2sB,GAAAtsB,eAAA,WAAiD,QAC5CP,KAAAsqB,KACAtqB,KAAAmiB,KACAniB,KAAA2qB,GAAA,oBAELkC,GAAAxqB,gBACAo/B,SAAgBzhC,KAAA8b,GAAA,YAAA7b,MAAA,iBAA+CD,KAAA8b,GAAA,QAC/DS,cAAqBvc,KAAA8b,GAAA,QACrBmG,WAAkBjiB,KAAA8b,GAAA,QAClBqd,sBAA6Bn5B,KAAA8b,GAAA,QAC7Bsd,mBAA0Bp5B,KAAA8b,GAAA,QAC1B0d,qBAA4Bx5B,KAAA8b,GAAA,QAC5B0c,aAAoBx4B,KAAA8b,GAAA,QACpB4lB,OAAc1hC,KAAA8b,GAAA,cACdolB,aAAoBlhC,KAAA8b,GAAA,QACpBod,sBAA6Bl5B,KAAA8b,GAAA,QAC7BmlB,UAAiBjhC,KAAA8b,GAAA,aAAA7b,MAAA;;;;;;;AA8EjB,GAAA6sB,IAAA,WAOA,QAAAA,GAAAjC,EAAA+W,EAAAd,EAAAe,GACA,GAAA5gC,GAAA7E,IACAA,MAAAyuB,SACAzuB,KAAAwlC,UACAxlC,KAAA0kC,WACA1kC,KAAAylC,MACAzlC,KAAA0lC,WACA1lC,KAAA6W,QAAA,EACA7W,KAAA2lC,yBAAwC1lB,OAAA,GACxCjgB,KAAAqa,aAAAoU,EAAAgB,OAAAlkB,UAAA,SAAAoW,GACAA,YAAAoP,KACAlsB,EAAAiL,WA8EA,MA1EAxc,QAAAC,eAAAm9B,EAAA5wB,UAAA,YAIAC,IAAA,WAA0B,MAAAC,MAAA6W,QAC1B5W,YAAA,EACAC,cAAA,IAKAwwB,EAAA5wB,UAAA8lC,mBAAA,WACA,GAAA/gC,GAAA7E,IACAA,MAAA6lC,MAAA1sC,QAAAoS,UAAA,SAAAjI,GAAmD,MAAAuB,GAAAiL,WACnD9P,KAAA8lC,eAAA3sC,QAAAoS,UAAA,SAAAjI,GAA4D,MAAAuB,GAAAiL,WAC5D9P,KAAA8P,UAEAxc,OAAAC,eAAAm9B,EAAA5wB,UAAA,oBAKAwG,IAAA,SAAA2R,GACA,GAA6BytB,GAAAnrC,MAAAM,QAAAod,OAAA1hB,MAAA,IAC7ByJ,MAAA0lC,UAAA7iC,OAAA,SAAA9M,GAAwD,QAAAA,KAExDkK,YAAA,EACAC,cAAA,IAMAwwB,EAAA5wB,UAAAiQ,YAAA,SAAA5W,GAAiE6G,KAAA8P,UAIjE4gB,EAAA5wB,UAAA8F,YAAA,WAA0D5F,KAAAqa,aAAA5O,eAI1DilB,EAAA5wB,UAAAgQ,OAAA,WACA,GAAAjL,GAAA7E,IACA,IAAAA,KAAA6lC,OAAA7lC,KAAA8lC,gBAAA9lC,KAAAyuB,OAAA2M,UAAA,CAEA,GAAyB2K,GAAA/lC,KAAA+lC,gBAEzB/lC,MAAA6W,SAAAkvB,IACA/lC,KAAA0lC,QAAAttC,QAAA,SAAArC,GACAgwC,EACAlhC,EAAA6/B,SAAAsB,SAAAnhC,EAAA2gC,QAAA/hC,cAAA1N,GAGA8O,EAAA6/B,SAAAuB,YAAAphC,EAAA2gC,QAAA/hC,cAAA1N,KAGA8X,QAAAC,QAAAi4B,GAAA53B,KAAA,SAAA0I,GAAoE,MAAAhS,GAAAgS,cAOpE6Z,EAAA5wB,UAAAomC,aAAA,SAAAzX,GACA,GAAA5pB,GAAA7E,IACA,iBAAAmmC,GAAgC,MAAA1X,GAAAgP,SAAA0I,EAAA5iB,QAAA1e,EAAA8gC,wBAAA1lB,SAKhCyQ,EAAA5wB,UAAAimC,eAAA,WACA,MAAA/lC,MAAA6lC,MAAAlsC,KAAAqG,KAAAkmC,aAAAlmC,KAAAyuB,UACAzuB,KAAA8lC,eAAAnsC,KAAAqG,KAAAkmC,aAAAlmC,KAAAyuB,UAEAiC,IAEAA,IAAA/sB,aACKC,KAAA8b,GAAA,UAAA7b,OACLC,SAAA,qBACAmL,SAAA,uBAMAyhB,GAAAvsB,eAAA,WAA+C,QAC1CP,KAAAsqB,KACAtqB,KAAA8b,GAAA,aACA9b,KAAA8b,GAAA,YACA9b,KAAA8b,GAAA,qBAELgR,GAAAzqB,gBACA4/B,QAAejiC,KAAA8b,GAAA,gBAAA7b,MAAA2sB,IAA4C4V,aAAA,MAC3DN,iBAAwBliC,KAAA8b,GAAA,gBAAA7b,MAAA4sB,IAAoD2V,aAAA,MAC5ET,0BAAiC/hC,KAAA8b,GAAA,QACjC2mB,mBAA0BziC,KAAA8b,GAAA;;;;;;;AAc1B,GAAAiS,IAAA,WACA,QAAAA,KACA3xB,KAAAsd,OAAA,KACAtd,KAAAqc,MAAA,KACArc,KAAA+iC,SAAA,KACA/iC,KAAAyd,SAAA,GAAAiU,IACA1xB,KAAAokC,UAAA,KAEA,MAAAzS,MAOAD,GAAA,WACA,QAAAA,KACA1xB,KAAA+uB,SAAA,GAAA5oB,KA0DA,MAlDAurB,GAAA5xB,UAAAwmC,qBAAA,SAAAzE,EAAAvkB,GACA,GAAyBmkB,GAAAzhC,KAAAikC,mBAAApC,EACzBJ,GAAAnkB,SACAtd,KAAA+uB,SAAAzoB,IAAAu7B,EAAAJ,IASA/P,EAAA5xB,UAAAymC,uBAAA,SAAA1E,GACA,GAAyBJ,GAAAzhC,KAAAwhC,WAAAK,EACzBJ,KACAA,EAAAnkB,OAAA,OAQAoU,EAAA5xB,UAAA+jC,oBAAA,WACA,GAAyB9U,GAAA/uB,KAAA+uB,QAEzB,OADA/uB,MAAA+uB,SAAA,GAAA5oB,KACA4oB,GAMA2C,EAAA5xB,UAAAqkC,mBAAA,SAAApV,GAA+E/uB,KAAA+uB,YAK/E2C,EAAA5xB,UAAAmkC,mBAAA,SAAApC,GACA,GAAyBJ,GAAAzhC,KAAAwhC,WAAAK,EAKzB,OAJAJ,KACAA,EAAA,GAAA9P,IACA3xB,KAAA+uB,SAAAzoB,IAAAu7B,EAAAJ,IAEAA,GAMA/P,EAAA5xB,UAAA0hC,WAAA,SAAAK,GAAwE,MAAA7hC,MAAA+uB,SAAAhvB,IAAA8hC,IAAA,MACxEnQ,KAiCAf,GAAA,WAQA,QAAAA,GAAAyP,EAAApR,EAAA+T,EAAApsC,EAAA6vC,GACAxmC,KAAAogC,iBACApgC,KAAAgvB,WACAhvB,KAAA+iC,WACA/iC,KAAAwmC,iBACAxmC,KAAA8lB,UAAA,KACA9lB,KAAAymC,gBAAA,KACAzmC,KAAA0mC,eAAA,GAAAhnB,IAAA,aACA1f,KAAA2mC,iBAAA,GAAAjnB,IAAA,aACA1f,KAAArJ,QAAA4mB,GACA6iB,EAAAkG,qBAAAtmC,KAAArJ,KAAAqJ,MAmJA,MA9IA2wB,GAAA7wB,UAAA8F,YAAA,WAAsD5F,KAAAogC,eAAAmG,uBAAAvmC,KAAArJ,OAItDg6B,EAAA7wB,UAAA4F,SAAA,WACA,IAAA1F,KAAA8lB,UAAA,CAGA,GAA6B2b,GAAAzhC,KAAAogC,eAAAoB,WAAAxhC,KAAArJ,KAC7B8qC,MAAAplB,QACAolB,EAAA2C,UAEApkC,KAAAqkC,OAAA5C,EAAA2C,UAAA3C,EAAAplB,OAIArc,KAAAwkC,aAAA/C,EAAAplB,MAAAolB,EAAAsB,UAAA,SAKAzvC,OAAAC,eAAAo9B,EAAA7wB,UAAA,oBAKAC,IAAA,WAA0B,MAAAC,MAAAgvB,SAAAC,UAC1BhvB,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAo9B,EAAA7wB,UAAA,2BAKAC,IAAA,WAA0B,MAAAC,MAAA+iC,UAC1B9iC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAo9B,EAAA7wB,UAAA,eAIAC,IAAA,WAA0B,QAAAC,KAAA8lB,WAC1B7lB,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAo9B,EAAA7wB,UAAA,aAIAC,IAAA,WACA,IAAAC,KAAA8lB,UACA,SAAArxB,OAAA,0BACA,OAAAuL,MAAA8lB,UAAA8gB,UAEA3mC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAo9B,EAAA7wB,UAAA,kBAIAC,IAAA,WACA,IAAAC,KAAA8lB,UACA,SAAArxB,OAAA,0BACA,OAAAuL,MAAA,iBAEAC,YAAA,EACAC,cAAA,IAEA5M,OAAAC,eAAAo9B,EAAA7wB,UAAA,sBAIAC,IAAA,WACA,MAAAC,MAAAymC,gBACAzmC,KAAAymC,gBAAAphB,SAAApN,SAIAhY,YAAA,EACAC,cAAA,IAMAywB,EAAA7wB,UAAA8jC,OAAA,WACA,IAAA5jC,KAAA8lB,UACA,SAAArxB,OAAA,0BACAuL,MAAAgvB,SAAA4U,QACA,IAAyBiD,GAAA7mC,KAAA8lB,SAGzB,OAFA9lB,MAAA8lB,UAAA,KACA9lB,KAAAymC,gBAAA,KACAI,GAQAlW,EAAA7wB,UAAAukC,OAAA,SAAAvV,EAAAgY,GACA9mC,KAAA8lB,UAAAgJ,EACA9uB,KAAAymC,gBAAAK,EACA9mC,KAAAgvB,SAAAthB,OAAAohB,EAAAiY,WAKApW,EAAA7wB,UAAAikC,WAAA,WACA,GAAA/jC,KAAA8lB,UAAA,CACA,GAA6B/vB,GAAAiK,KAAAqd,SAC7Brd,MAAA8lB,UAAAkhB,UACAhnC,KAAA8lB,UAAA,KACA9lB,KAAAymC,gBAAA,KACAzmC,KAAA2mC,iBAAAn8B,KAAAzU,KAQA46B,EAAA7wB,UAAA0kC,aAAA,SAAAsC,EAAA/D,GACA,GAAA/iC,KAAA8hC,YACA,SAAArtC,OAAA,8CAEAuL,MAAAymC,gBAAAK,CACA,IAAyBzhB,GAAAyhB,EAAA7f,gBACA5J,EAAAgI,EAAA,sBACzB0d,MAAA/iC,KAAA+iC,QACA,IAAyBzI,GAAAyI,EAAAkE,wBAAA5pB,GACA6pB,EAAAlnC,KAAAogC,eAAA6D,mBAAAjkC,KAAArJ,MAAA8mB,SACAwR,EAAA,GAAAkY,IAAAL,EAAAI,EAAAlnC,KAAAgvB,SAAAC,SACzBjvB,MAAA8lB,UAAA9lB,KAAAgvB,SAAAoY,gBAAA9M,EAAAt6B,KAAAgvB,SAAAh7B,OAAAi7B,GAGAjvB,KAAAwmC,eAAAa,eACArnC,KAAA0mC,eAAAl8B,KAAAxK,KAAA8lB,UAAA8gB,WAEAjW,IAEAA,IAAAhtB,aACKC,KAAA8b,GAAA,UAAA7b,OAA0BC,SAAA,gBAAAmL,SAAA,aAK/B0hB,GAAAxsB,eAAA,WAA2C,QACtCP,KAAA8tB,KACA9tB,KAAA8b,GAAA,mBACA9b,KAAA8b,GAAA,2BACA9b,SAAA3J,GAAA0J,aAAgCC,KAAA8b,GAAA,UAAA7b,MAAA,YAChCD,KAAA8b,GAAA,qBAELiR,GAAA1qB,gBACAygC,iBAAwB9iC,KAAA8b,GAAA,OAAA7b,MAAA,cACxB8iC,mBAA0B/iC,KAAA8b,GAAA,OAAA7b,MAAA,gBAE1B,IAAAsjC,IAAA,WAMA,QAAAA,GAAA9qB,EAAA6qB,EAAAtwC,GACAoJ,KAAAqc,QACArc,KAAAknC,gBACAlnC,KAAApJ,SAgBA,MATAuwC,GAAArnC,UAAAC,IAAA,SAAAijC,EAAAsE,GACA,MAAAtE,KAAAjd,GACA/lB,KAAAqc,MAEA2mB,IAAAtR,GACA1xB,KAAAknC,cAEAlnC,KAAApJ,OAAAmJ,IAAAijC,EAAAsE,IAEAH,KAeArV,GAAA,WACA,QAAAA,MASA,MADAA,GAAAhyB,UAAAynC,QAAA,SAAAlrB,EAAA3Y,KACAouB,KAaAD,GAAA,WACA,QAAAA,MAUA,MAHAA,GAAA/xB,UAAAynC,QAAA,SAAAlrB,EAAA3Y,GACA,MAAAivB,IAAA,OAAA5vB,KAAAW,IAAA,WAA8C,MAAArQ,GAAAiB,EAAAsqB,GAAA,aAE9CiT,KAWAD,GAAA,WACA,QAAAA,MAQA,MADAA,GAAA9xB,UAAAynC,QAAA,SAAAlrB,EAAA3Y,GAA2D,MAAArQ,GAAAiB,EAAAsqB,GAAA,WAC3DgT,KAcAG,GAAA,WAQA,QAAAA,GAAAtD,EAAA+Y,EAAArY,EAAAF,EAAAwY,GACAznC,KAAAyuB,SACAzuB,KAAAivB,WACAjvB,KAAAynC,oBACA,IAAAC,GAAA,SAAAtzC,GAAwC,MAAAq6B,GAAAgN,aAAA,GAAApK,IAAAj9B,KACxCuzC,EAAA,SAAAvzC,GAAsC,MAAAq6B,GAAAgN,aAAA,GAAArK,IAAAh9B,IACtC4L,MAAAkvB,OAAA,GAAA8K,IAAAwN,EAAArY,EAAAuY,EAAAC,GA8DA,MAxDA5V,GAAAjyB,UAAA8nC,gBAAA,WACA,GAAA/iC,GAAA7E,KACyB6nC,EAAAhV,GAAA,OAAA9vB,KAAA/C,KAAAyuB,OAAAgB,OAAA,SAAAjZ,GAAiE,MAAAA,aAAAua,KAC1F/wB,MAAAqa,aAAAkY,GAAA,UAAAxvB,KAAA8kC,EAAA,WAAsE,MAAAhjC,GAAA0iC,YAA0Bh8B,UAAA,eAKhGwmB,EAAAjyB,UAAAynC,QAAA,WACA,GAAyBxS,GAAA/0B,KAAAivB,SAAAlvB,IAAA2f,GAAA,YACzB,OAAA1f,MAAA8nC,cAAA/S,EAAA/0B,KAAAyuB,OAAAzR,SAKA+U,EAAAjyB,UAAA8F,YAAA,WAAyD5F,KAAAqa,aAAA5O,eAMzDsmB,EAAAjyB,UAAAgoC,cAAA,SAAA/S,EAAAvQ,GAEA,OADyBtvB,MACzB0R,EAAA,EAAAmhC,EAAAvjB,EAA2C5d,EAAAmhC,EAAA/zC,OAAsB4S,IAAA,CACjE,GAAAyV,GAAA0rB,EAAAnhC,EAEA,IAAAyV,EAAAqB,eAAArB,EAAAqH,SAAArH,EAAAuR,cAAA,CACA,GAAiCiJ,GAAAxa,EAAAuR,aACjC14B,GAAAgQ,KAAAlF,KAAA8nC,cAAAjR,EAAA1jC,OAAA0jC,EAAArS,aAGAnI,GAAAqB,eAAArB,EAAAqH,QACAxuB,EAAAgQ,KAAAlF,KAAAgoC,cAAAjT,EAAA1Y,IAGAA,EAAAoB,UACAvoB,EAAAgQ,KAAAlF,KAAA8nC,cAAA/S,EAAA1Y,EAAAoB,WAGA,MAAA8B,IAAA,SAAAxc,KAAA1P,EAAAiB,EAAAqvB,GAAA,MAAAzuB,KAOA68B,EAAAjyB,UAAAkoC,cAAA,SAAAjT,EAAA1Y,GACA,GAAAxX,GAAA7E,IACA,OAAAA,MAAAynC,mBAAAF,QAAAlrB,EAAA,WACA,GAA6B4rB,GAAApjC,EAAAqqB,OAAAqH,KAAAxB,EAAA9F,SAAA5S,EAC7B,OAAAoW,IAAA,SAAA1vB,KAAAklC,EAAA,SAAAjrB,GAEA,MADAX,GAAAuR,cAAA5Q,EACAnY,EAAAijC,cAAA9qB,EAAA7pB,OAAA6pB,EAAAwH,aAIAuN,IAEAA,IAAApuB,aACKC,KAAA8b,GAAA,aAKLqS,GAAA5tB,eAAA,WAA8C,QACzCP,KAAAsqB,KACAtqB,KAAA8b,GAAA,wBACA9b,KAAA8b,GAAA,WACA9b,KAAA8b,GAAA,WACA9b,KAAAkuB;;;;;;;AAaL,GAAAoW,KAAAvX,GAAAH,GAAAC,GAAAC,IAKAc,GAAA,GAAA9R,IAAA,uCAIA0S,GAAA,GAAA1S,IAAA,uCACAyS,IACA5D,GAAA,UACKvrB,QAAAkvB,GAAAiW,SAAAlW,KAELjvB,QAAAkrB,GACAmC,WAAAxB,GACAyB,MACA5Q,GAAA,eAAAwS,GAAAR,GAAAnD,GAAA,SAAA7O,GAAA,SACAA,GAAA,sBAAAA,GAAA,SAAAkP,GAAA4C,IACAQ,GAAA,GAAAtS,IAAA,WAAA6R,GAAA,GAAA7R,IAAA,YAGAgS,IACK1uB,QAAA+iB,GAAAsK,WAAAR,GAAAS,MAAApC,MACAlrB,QAAA0c,GAAA,sBAAAyoB,SAAAzoB,GAAA,wBACLqS,GACAH,GACAC,IACK7uB,QAAAwuB,GAAA7C,UAA2CW,eAAA,KA2DhDmC,GAAA,WAKA,QAAAA,GAAA5N,EAAA4K,IAqDA,MArCAgD,GAAA2W,QAAA,SAAA5jB,EAAAxH,GACA,OACA+X,SAAAtD,EACAvtB,WACAiuB,GACAzD,GAAAlK,IAEAxhB,QAAAovB,GACA/B,WAAA7B,GACA8B,OAAApC,GAAA,GAAAxO,IAAA,YAAAA,IAAA,aAEiB1c,QAAAwuB,GAAA7C,SAAA3R,QAEjBha,QAAAurB,GAAA,iBACA8B,WAAAlC,GACAmC,MACA/B,GAAA,qBAAA7O,IAAA,OAAA6O,GAAA,kBAAA7O,IAAA,UAAA8R,MAIAxuB,QAAA8uB,GACA7uB,YAAA+Z,KAAAyqB,mBAAAzqB,EAAAyqB,mBACA7V,KAEiB5uB,QAAA0c,GAAA,aAAAxc,OAAA,EAAAmtB,WAAApC,IACjBkC,QASAsB,EAAA4W,SAAA,SAAA7jB,GACA,OAAgBuQ,SAAAtD,EAAAvtB,WAAAwqB,GAAAlK,MAEhBiN,IAEAA,IAAA9tB,aACKC,KAAA8b,GAAA,SAAA7b,OAAyBiP,aAAAo1B,GAAA90C,QAAA80C,OAK9BzW,GAAAttB,eAAA,WAA2C,QACtCP,SAAA3J,GAAA0J,aAAgCC,KAAA8b,GAAA,WAAoB9b,KAAA8b,GAAA,OAAA7b,MAAAuuB,QACpDxuB,KAAAsqB,GAAAvqB,aAA6BC,KAAA8b,GAAA,aAqGlC,IAAA0Q,IAAA,WAIA,QAAAA,GAAAnB,GACAjvB,KAAAivB,WACAjvB,KAAAsoC,gBAAA,EACAtoC,KAAAuoC,0BAAA,GAAAjW,IAAA,QA+EA,MA1EAlC,GAAAtwB,UAAAkwB,eAAA,WACA,GAAAnrB,GAAA7E,IAEA,OADyBA,MAAAivB,SAAAlvB,IAAAwuB,GAAA,qBAAA1gB,QAAAC,QAAA,OACzBK,KAAA,WACA,GAA6BL,GAAA,KACA5Y,EAAA,GAAA2Y,SAAA,SAAAzZ,GAAoC,MAAA0Z,GAAA1Z,IACpCq6B,EAAA5pB,EAAAoqB,SAAAlvB,IAAAmuB,IACArkB,EAAAhF,EAAAoqB,SAAAlvB,IAAAyxB,GAC7B,IAAA3sB,EAAA2jC,iBAAA3+B,IAAAhF,EAAA4jC,gBAAA5+B,GACAiE,GAAA,OAEA,iBAAAjE,EAAAoyB,kBACAxN,EAAAyN,8BACApuB,GAAA,OAEA,gBAAAjE,EAAAoyB,kBAgBA,SAAAxnC,OAAA,uCAAAoV,EAAAoyB,kBAAA,IAfAxN,GAAA4M,MAAAE,mBAAA,WAEA,MAAA12B,GAAAyjC,eAOAj1C,EAAAiB,EAAAsqB,GAAA,WANA/Z,EAAAyjC,gBAAA,EACAx6B,GAAA,GACAjJ,EAAA0jC,4BAOA9Z,EAAAwN,oBAKA,MAAA/mC,MAOAk7B,EAAAtwB,UAAAowB,kBAAA,SAAAwY,GACA,GAAyB7+B,GAAA7J,KAAAivB,SAAAlvB,IAAAyxB,IACAmX,EAAA3oC,KAAAivB,SAAAlvB,IAAAgyB,IACAtD,EAAAzuB,KAAAivB,SAAAlvB,IAAAmuB,IACAY,EAAA9uB,KAAAivB,SAAAlvB,IAAA2f,GAAA,eACzBgpB,KAAA5Z,EAAA8Z,WAAA,KAGA5oC,KAAAyoC,gBAAA5+B,GACA4kB,EAAAwN,oBAEAj8B,KAAAwoC,iBAAA3+B,IACA4kB,EAAAyN,8BAEAyM,EAAAf,kBACAnZ,EAAAuN,uBAAAlN,EAAA+Z,eAAA,IACA7oC,KAAAuoC,0BAAAj1B,KAAyD,MACzDtT,KAAAuoC,0BAAAh1B,aAMA6c,EAAAtwB,UAAA2oC,gBAAA,SAAA5+B,GACA,yBAAAA,EAAAoyB,oBAAA,IAAApyB,EAAAoyB,uBACAhiC,KAAA4P,EAAAoyB,mBAMA7L,EAAAtwB,UAAA0oC,iBAAA,SAAA3+B,GACA,0BAAAA,EAAAoyB,oBAAA,IAAApyB,EAAAoyB,mBAEA7L,IAEAA,IAAAzsB,aACKC,KAAA8b,GAAA,aAKL0Q,GAAAjsB,eAAA,WAAgD,QAC3CP,KAAA8b,GAAA,WAqBL,IAAA6Q,IAAA,GAAA7Q,IAAA,qCAgCAniB,GAAA,GAAAmiB,IAAA,kBfmmOQ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEF,SAAUvsB,EAAQC,EAASC,GAEjC,YgB7taAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAslB,EAAAtlB,EAAA,GACAkmB,EAAAlmB,EAAA,IAIAokB,EAAA,SAAAvW,GAEA,QAAAuW,GAAA1P,GACA,GAAAlD,GAAA3D,EAAA6B,KAAA/C,WAEA,OADA6E,GAAAkD,SACAlD,EA8BA,MAlCA6P,GAAAO,UAAAwC,EAAAvW,GAMA5N,OAAAC,eAAAkkB,EAAA3X,UAAA,SACAC,IAAA,WACA,MAAAC,MAAAoY,YAEAnY,YAAA,EACAC,cAAA,IAEAuX,EAAA3X,UAAAkZ,WAAA,SAAApE,GACA,GAAAyF,GAAAnZ,EAAApB,UAAAkZ,WAAAjW,KAAA/C,KAAA4U,EAIA,OAHAyF,OAAAzE,QACAhB,EAAAtB,KAAAtT,KAAA+H,QAEAsS,GAEA5C,EAAA3X,UAAAsY,SAAA,WACA,GAAApY,KAAAe,SACA,KAAAf,MAAAiZ,WAEA,IAAAjZ,KAAA4V,OACA,SAAA2D,GAAAe,uBAGA,OAAAta,MAAA+H,QAGA0P,EAAA3X,UAAAwT,KAAA,SAAA9f,GACA0N,EAAApB,UAAAwT,KAAAvQ,KAAA/C,UAAA+H,OAAAvU,IAEAikB,GACCkB,EAAAS,QACDhmB,GAAAqkB,mBhBouaM,SAAUtkB,EAAQC,EAASC,GAEjC,YiBlxaAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAs1C,GAAAz1C,EAAA,GACAD,GAAA21C,YAAAD,EAAAE,kBAAAzO,QjByxaM,SAAUpnC,EAAQC,EAASC,GAEjC,YkB1uaA,SAAA41C,KAEA,OADAnmC,MACA8D,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C9D,EAAA8D,GAAAxF,UAAAwF,EAEA,IAAAyN,GAAA,IAUA,OATA,kBAAAvR,KAAA9O,OAAA,KACAqgB,EAAAvR,EAAA+L,OAIA,IAAA/L,EAAA9O,QAAA2nB,EAAA9gB,QAAAiI,EAAA,MACAA,IAAA,GAAA1M,SAEA0M,EAAAoiB,QAAAllB,MACAA,KAAAwU,KAAAzR,KAAA,GAAAmmC,GAAAC,gBAAArmC,GAAA,GAAAsmC,GAAA/0B,IAlEA/gB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA61C,EAAA71C,EAAA,IACAsoB,EAAAtoB,EAAA,IACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,GACAk2C,IA8DAn2C,GAAA61C,eACA,IAAAG,GAAA,WACA,QAAAA,GAAA/0B,GACArU,KAAAqU,UAKA,MAHA+0B,GAAAtpC,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAi+B,GAAA50B,EAAA5U,KAAAqU,WAEA+0B,IAEAh2C,GAAAg2C,uBAMA,IAAAI,GAAA,SAAAtoC,GAEA,QAAAsoC,GAAAz0B,EAAAV,GACA,GAAAxP,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAAwP,UACAxP,EAAAgS,OAAA,EACAhS,EAAA4kC,UACA5kC,EAAA/B,eACA+B,EAqDA,MA5DA6P,GAAAO,UAAAu0B,EAAAtoC,GASAsoC,EAAA1pC,UAAAoV,MAAA,SAAAitB,GACAniC,KAAAypC,OAAAvkC,KAAAqkC,GACAvpC,KAAA8C,YAAAoC,KAAAi9B,IAEAqH,EAAA1pC,UAAAyb,UAAA,WACA,GAAAzY,GAAA9C,KAAA8C,YACA6X,EAAA7X,EAAA9O,MACA,QAAA2mB,EACA3a,KAAA+U,YAAAxB,eAEA,CACAvT,KAAA6W,OAAA8D,EACA3a,KAAA0pC,UAAA/uB,CACA,QAAArmB,GAAA,EAA2BA,EAAAqmB,EAASrmB,IAAA,CACpC,GAAA6tC,GAAAr/B,EAAAxO,EACA0L,MAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAAmiC,IAAA7tC,OAIAk1C,EAAA1pC,UAAA8pC,eAAA,SAAAC,GACA,IAAA7pC,KAAA6W,QAAA,IACA7W,KAAA+U,YAAAxB,YAGAi2B,EAAA1pC,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAV,GAAAzpC,KAAAypC,OACAW,EAAAX,EAAAQ,GACAP,EAAA1pC,KAAA0pC,UAEAU,IAAAb,IAAAvpC,KAAA0pC,UAAA1pC,KAAA0pC,UADA,CAEAD,GAAAQ,GAAAD,EACA,IAAAN,IACA1pC,KAAAqU,QACArU,KAAAqqC,YAAAZ,GAGAzpC,KAAA+U,YAAAzB,KAAAm2B,EAAArzC,WAIAozC,EAAA1pC,UAAAuqC,YAAA,SAAAZ,GACA,GAAAt0B,EACA,KACAA,EAAAnV,KAAAqU,QAAAlT,MAAAnB,KAAAypC,GAEA,MAAAv1B,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAlU,KAAA+U,YAAAzB,KAAA6B,IAEAq0B,GACCH,EAAAiB,gBACDl3C,GAAAo2C,2BlBoyaM,SAAUr2C,EAAQC,EAASC,GAEjC,YmBl4aA,SAAAwD,KAEA,OADAiM,MACA8D,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C9D,EAAA8D,GAAAxF,UAAAwF,EAEA,OAAA5G,MAAAwU,KAAAzR,KAAAwnC,EAAAppC,UAAA,IAAAnB,MAAAnJ,OAAAiM,KAiGA,QAAAynC,KAEA,OADAznC,MACA8D,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C9D,EAAA8D,GAAAxF,UAAAwF,EAEA,IAAA2O,GAAA,KACA1R,EAAAf,CAIA,OAHA0nC,GAAAC,YAAA5mC,EAAAf,EAAA9O,OAAA,MACAuhB,EAAA1R,EAAAgL,OAEA,OAAA0G,GAAA,IAAAzS,EAAA9O,QAAA8O,EAAA,YAAAiQ,GAAAY,WACA7Q,EAAA,GAEA,GAAAomC,GAAAC,gBAAArmC,EAAAyS,GAAAf,KAAA,GAAAk2B,GAAAC,iBAAA,IA1KAr3C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAm3C,EAAAn3C,EAAA,IACA61C,EAAA71C,EAAA,IACAq3C,EAAAr3C,EAAA,GA0DAD,GAAAyD,SA8GAzD,EAAAm3C,gBnBg8aM,SAAUp3C,EAAQC,EAASC,GAEjC,YoBnkbA,SAAAwP,GAAA+nC,EAAAt2B,GACA,MAAAtU,MAAAwU,KAAA,GAAAq2B,GAAAD,EAAAt2B,IA5CAhhB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EA4CAD,GAAAyP,QACA,IAAAgoC,GAAA,WACA,QAAAA,GAAAD,EAAAt2B,GACAtU,KAAA4qC,YACA5qC,KAAAsU,UAKA,MAHAu2B,GAAA/qC,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAu/B,GAAAl2B,EAAA5U,KAAA4qC,UAAA5qC,KAAAsU,WAEAu2B,KAOAC,EAAA,SAAA5pC,GAEA,QAAA4pC,GAAA/1B,EAAA61B,EAAAt2B,GACA,GAAAzP,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAA+lC,YACA/lC,EAAAyP,UACAzP,EAAAmQ,MAAA,EACAnQ,EAAA+lC,YACA/lC,EAiBA,MAxBA6P,GAAAO,UAAA61B,EAAA5pC,GAWA4pC,EAAAhrC,UAAAoV,MAAA,SAAA1hB,GACA,GAAA2hB,EACA,KACAA,EAAAnV,KAAA4qC,UAAA7nC,KAAA/C,KAAAsU,QAAA9gB,EAAAwM,KAAAgV,SAEA,MAAAd,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAiB,GACAnV,KAAA+U,YAAAzB,KAAA9f,IAGAs3C,GACCn2B,EAAAS,apBqnbK,SAAUjiB,EAAQC,EAASC,GAEjC,YqBhpbA,SAAA03C,GAAA12B,EAAA22B,EAAAC,GAMA,WALA,KAAAA,IAAgCA,EAAArxB,OAAAC,mBAChC,gBAAAmxB,KACAC,EAAAD,EACAA,EAAA,MAEAhrC,KAAAwU,KAAA,GAAA02B,GAAA72B,EAAA22B,EAAAC,IArEA33C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAi2C,EAAAj2C,EAAA,GACAg2C,EAAAh2C,EAAA,EAoEAD,GAAA23C,UACA,IAAAG,GAAA,WACA,QAAAA,GAAA72B,EAAA22B,EAAAC,OACA,KAAAA,IAAoCA,EAAArxB,OAAAC,mBACpC7Z,KAAAqU,UACArU,KAAAgrC,iBACAhrC,KAAAirC,aAKA,MAHAC,GAAAprC,UAAAiD,KAAA,SAAAsQ,EAAAwB,GACA,MAAAA,GAAAtJ,UAAA,GAAA4/B,GAAA93B,EAAArT,KAAAqU,QAAArU,KAAAgrC,eAAAhrC,KAAAirC,cAEAC,IAEA93C,GAAA83C,kBAMA,IAAAC,GAAA,SAAAjqC,GAEA,QAAAiqC,GAAAp2B,EAAAV,EAAA22B,EAAAC,OACA,KAAAA,IAAoCA,EAAArxB,OAAAC,kBACpC,IAAAhV,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAQA,OAPA6E,GAAAwP,UACAxP,EAAAmmC,iBACAnmC,EAAAomC,aACApmC,EAAAkU,cAAA,EACAlU,EAAAumC,UACAvmC,EAAAgS,OAAA,EACAhS,EAAA3J,MAAA,EACA2J,EA8DA,MAzEA6P,GAAAO,UAAAk2B,EAAAjqC,GAaAiqC,EAAArrC,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA6W,OAAA7W,KAAAirC,WACAjrC,KAAAqrC,SAAA73C,GAGAwM,KAAAorC,OAAAlmC,KAAA1R,IAGA23C,EAAArrC,UAAAurC,SAAA,SAAA73C,GACA,GAAA2hB,GACAja,EAAA8E,KAAA9E,OACA,KACAia,EAAAnV,KAAAqU,QAAA7gB,EAAA0H,GAEA,MAAAgZ,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAlU,KAAA6W,SACA7W,KAAAsrC,UAAAn2B,EAAA3hB,EAAA0H,IAEAiwC,EAAArrC,UAAAwrC,UAAA,SAAAC,EAAA/3C,EAAA0H,GACA8E,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAAurC,EAAA/3C,EAAA0H,KAEAiwC,EAAArrC,UAAAyb,UAAA,WACAvb,KAAA+Y,cAAA,EACA,IAAA/Y,KAAA6W,QAAA,IAAA7W,KAAAorC,OAAAp3C,QACAgM,KAAA+U,YAAAxB,YAGA43B,EAAArrC,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAgrC,eACAhrC,KAAAwrC,sBAAAzB,EAAAC,EAAAC,EAAAC,GAGAlqC,KAAA+U,YAAAzB,KAAA02B,IAGAmB,EAAArrC,UAAA0rC,sBAAA,SAAAzB,EAAAC,EAAAC,EAAAC,GACA,GAAA/0B,EACA,KACAA,EAAAnV,KAAAgrC,eAAAjB,EAAAC,EAAAC,EAAAC,GAEA,MAAAh2B,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAlU,KAAA+U,YAAAzB,KAAA6B,IAEAg2B,EAAArrC,UAAA8pC,eAAA,SAAAO,GACA,GAAAiB,GAAAprC,KAAAorC,MACAprC,MAAAjF,OAAAovC,GACAnqC,KAAA6W,SACAu0B,EAAAp3C,OAAA,EACAgM,KAAAkV,MAAAk2B,EAAAp0B,SAEA,IAAAhX,KAAA6W,QAAA7W,KAAA+Y,cACA/Y,KAAA+U,YAAAxB,YAGA43B,GACC9B,EAAAiB,gBACDl3C,GAAA+3C,sBrBstbM,SAAUh4C,EAAQC,EAASC,GAEjC,YsB50bA,SAAAo4C,GAAAl2B,EAAAI,GAEA,WADA,KAAAA,IAA2BA,EAAA,GAC3B3V,KAAAwU,KAAA,GAAAk3B,GAAAn2B,EAAAI,IApDAriB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAs4C,EAAAt4C,EAAA,GAmDAD,GAAAq4C,WACA,IAAAC,GAAA,WACA,QAAAA,GAAAn2B,EAAAI,OACA,KAAAA,IAA+BA,EAAA,GAC/B3V,KAAAuV,YACAvV,KAAA2V,QAKA,MAHA+1B,GAAA5rC,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAmP,GAAA9F,EAAA5U,KAAAuV,UAAAvV,KAAA2V,SAEA+1B,IAEAt4C,GAAAs4C,mBAMA,IAAAhxB,GAAA,SAAAxZ,GAEA,QAAAwZ,GAAA3F,EAAAQ,EAAAI,OACA,KAAAA,IAA+BA,EAAA,EAC/B,IAAA9Q,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAA0Q,YACA1Q,EAAA8Q,QACA9Q,EAmBA,MAzBA6P,GAAAO,UAAAyF,EAAAxZ,GAQAwZ,EAAAkxB,SAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAC,aAAA/2B,EAAA82B,EAAA92B,WACA+2B,GAAA14B,QAAA2B,GACA/U,KAAAyL,eAEAiP,EAAA5a,UAAAisC,gBAAA,SAAAD,GACA9rC,KAAAgF,IAAAhF,KAAAuV,UAAAE,SAAAiF,EAAAkxB,SAAA5rC,KAAA2V,MAAA,GAAAq2B,GAAAF,EAAA9rC,KAAA+U,gBAEA2F,EAAA5a,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA+rC,gBAAAJ,EAAA34B,aAAAe,WAAAvgB,KAEAknB,EAAA5a,UAAAmsC,OAAA,SAAA/3B,GACAlU,KAAA+rC,gBAAAJ,EAAA34B,aAAAiB,YAAAC,KAEAwG,EAAA5a,UAAAyb,UAAA,WACAvb,KAAA+rC,gBAAAJ,EAAA34B,aAAAmB,mBAEAuG,GACC/F,EAAAS,WACDhiB,GAAAsnB,qBACA,IAAAsxB,GAAA,WACA,QAAAA,GAAAF,EAAA/2B,GACA/U,KAAA8rC,eACA9rC,KAAA+U,cAEA,MAAAi3B,KAEA54C,GAAA44C,oBtBq4bM,SAAU74C,EAAQC,EAASC,GAEjC,YuBp+bA,SAAA64C,KAEA,OADAppC,MACA8D,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C9D,EAAA8D,GAAAxF,UAAAwF,EAEA,OAAA5G,MAAAwU,KAAAzR,KAAAopC,EAAAhrC,UAAA,IAAAnB,MAAAnJ,OAAAiM,KAmCA,QAAAqpC,KAEA,OADArpC,MACA8D,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C9D,EAAA8D,GAAAxF,UAAAwF,EAEA,IAAAyN,GAAAvR,IAAA9O,OAAA,EAIA,OAHA,kBAAAqgB,IACAvR,EAAA+L,MAEA,GAAAq6B,GAAAC,gBAAArmC,GAAA0R,KAAA,GAAA43B,GAAA/3B,IAhEA/gB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA61C,EAAA71C,EAAA,IACAsoB,EAAAtoB,EAAA,IACAshB,EAAAthB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,GACAg5C,EAAAh5C,EAAA,GAeAD,GAAA84C,WA4CA94C,EAAA+4C,WACA,IAAAC,GAAA,WACA,QAAAA,GAAA/3B,GACArU,KAAAqU,UAKA,MAHA+3B,GAAAtsC,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA+gC,GAAA13B,EAAA5U,KAAAqU,WAEA+3B,IAEAh5C,GAAAg5C,aAMA,IAAAE,GAAA,SAAAprC,GAEA,QAAAorC,GAAAv3B,EAAAV,EAAAo1B,OACA,KAAAA,IAAgCA,EAAAn2C,OAAAinC,OAAA,MAChC,IAAA11B,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAA0nC,aACA1nC,EAAAgS,OAAA,EACAhS,EAAAwP,QAAA,kBAAAA,KAAA,KACAxP,EAAA4kC,SACA5kC,EAsFA,MA9FA6P,GAAAO,UAAAq3B,EAAAprC,GAUAorC,EAAAxsC,UAAAoV,MAAA,SAAA1hB,GACA,GAAA+4C,GAAAvsC,KAAAusC,SACA5wB,GAAA9gB,QAAArH,GACA+4C,EAAArnC,KAAA,GAAAsnC,GAAAh5C,IAEA,kBAAAA,GAAA64C,EAAAI,UACAF,EAAArnC,KAAA,GAAAwnC,GAAAl5C,EAAA64C,EAAAI,cAGAF,EAAArnC,KAAA,GAAAynC,GAAA3sC,KAAA+U,YAAA/U,KAAAxM,KAGA84C,EAAAxsC,UAAAyb,UAAA,WACA,GAAAgxB,GAAAvsC,KAAAusC,UACA5xB,EAAA4xB,EAAAv4C,MACA,QAAA2mB,EAEA,WADA3a,MAAA+U,YAAAxB,UAGAvT,MAAA6W,OAAA8D,CACA,QAAArmB,GAAA,EAAuBA,EAAAqmB,EAASrmB,IAAA,CAChC,GAAAm4C,GAAAF,EAAAj4C,EACAm4C,GAAAG,kBACA5sC,KAAAgF,IAAAynC,EAAAlhC,UAAAkhC,EAAAn4C,IAGA0L,KAAA6W,WAIAy1B,EAAAxsC,UAAA+sC,eAAA,WAEA,MADA7sC,KAAA6W,QAEA7W,KAAA+U,YAAAxB,YAGA+4B,EAAAxsC,UAAAgtC,eAAA,WAKA,OAJAP,GAAAvsC,KAAAusC,UACA5xB,EAAA4xB,EAAAv4C,OACA+gB,EAAA/U,KAAA+U,YAEAzgB,EAAA,EAAuBA,EAAAqmB,EAASrmB,IAAA,CAChC,GAAAm4C,GAAAF,EAAAj4C,EACA,sBAAAm4C,GAAAt5B,WAAAs5B,EAAAt5B,WACA,OAKA,OAFA45B,IAAA,EACAlpC,KACAvP,EAAA,EAAuBA,EAAAqmB,EAASrmB,IAAA,CAChC,GAAAm4C,GAAAF,EAAAj4C,GACA6gB,EAAAs3B,EAAAn5B,MAMA,IAHAm5B,EAAA1zB,iBACAg0B,GAAA,GAEA53B,EAAA63B,KAEA,WADAj4B,GAAAxB,UAGA1P,GAAAqB,KAAAiQ,EAAA3hB,OAEAwM,KAAAqU,QACArU,KAAAqqC,YAAAxmC,GAGAkR,EAAAzB,KAAAzP,GAEAkpC,GACAh4B,EAAAxB,YAGA+4B,EAAAxsC,UAAAuqC,YAAA,SAAAxmC,GACA,GAAAsR,EACA,KACAA,EAAAnV,KAAAqU,QAAAlT,MAAAnB,KAAA6D,GAEA,MAAAqQ,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAlU,KAAA+U,YAAAzB,KAAA6B,IAEAm3B,GACC33B,EAAAS,WACDhiB,GAAAk5C,eACA,IAAAI,GAAA,WACA,QAAAA,GAAAD,GACAzsC,KAAAysC,WACAzsC,KAAAitC,WAAAR,EAAAn5B,OAcA,MAZAo5B,GAAA5sC,UAAAqT,SAAA,WACA,UAEAu5B,EAAA5sC,UAAAwT,KAAA,WACA,GAAA6B,GAAAnV,KAAAitC,UAEA,OADAjtC,MAAAitC,WAAAjtC,KAAAysC,SAAAn5B,OACA6B,GAEAu3B,EAAA5sC,UAAAiZ,aAAA,WACA,GAAAk0B,GAAAjtC,KAAAitC,UACA,OAAAA,MAAAD,MAEAN,KAEAF,EAAA,WACA,QAAAA,GAAA95B,GACA1S,KAAA0S,QACA1S,KAAA9E,MAAA,EACA8E,KAAAhM,OAAA,EACAgM,KAAAhM,OAAA0e,EAAA1e,OAgBA,MAdAw4C,GAAA1sC,UAAAusC,EAAAI,UAAA,WACA,MAAAzsC,OAEAwsC,EAAA1sC,UAAAwT,KAAA,SAAA9f,GACA,GAAAc,GAAA0L,KAAA9E,QACAwX,EAAA1S,KAAA0S,KACA,OAAApe,GAAA0L,KAAAhM,QAAkCR,MAAAkf,EAAApe,GAAA04C,MAAA,IAAmCx5C,MAAA,KAAAw5C,MAAA,IAErER,EAAA1sC,UAAAqT,SAAA,WACA,MAAAnT,MAAA0S,MAAA1e,OAAAgM,KAAA9E,OAEAsxC,EAAA1sC,UAAAiZ,aAAA,WACA,MAAA/Y,MAAA0S,MAAA1e,SAAAgM,KAAA9E,OAEAsxC,KAOAG,EAAA,SAAAzrC,GAEA,QAAAyrC,GAAA53B,EAAAne,EAAAurC,GACA,GAAAt9B,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAMA,OALA6E,GAAAjO,SACAiO,EAAAs9B,aACAt9B,EAAA+nC,mBAAA,EACA/nC,EAAAumC,UACAvmC,EAAAqoC,YAAA,EACAroC,EAsCA,MA9CA6P,GAAAO,UAAA03B,EAAAzrC,GAUAyrC,EAAA7sC,UAAAusC,EAAAI,UAAA,WACA,MAAAzsC,OAIA2sC,EAAA7sC,UAAAwT,KAAA,WACA,GAAA83B,GAAAprC,KAAAorC,MACA,YAAAA,EAAAp3C,QAAAgM,KAAAktC,YACoB15C,MAAA,KAAAw5C,MAAA,IAGAx5C,MAAA43C,EAAAp0B,QAAAg2B,MAAA,IAGpBL,EAAA7sC,UAAAqT,SAAA,WACA,MAAAnT,MAAAorC,OAAAp3C,OAAA,GAEA24C,EAAA7sC,UAAAiZ,aAAA,WACA,WAAA/Y,KAAAorC,OAAAp3C,QAAAgM,KAAAktC,YAEAP,EAAA7sC,UAAA8pC,eAAA,WACA5pC,KAAAorC,OAAAp3C,OAAA,GACAgM,KAAAktC,YAAA,EACAltC,KAAApJ,OAAAi2C,kBAGA7sC,KAAA+U,YAAAxB,YAGAo5B,EAAA7sC,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAorC,OAAAlmC,KAAA8kC,GACAhqC,KAAApJ,OAAAk2C,kBAEAH,EAAA7sC,UAAAyL,UAAA,SAAA/X,EAAA0H,GACA,MAAAouC,GAAAK,kBAAA3pC,UAAAmiC,WAAAniC,KAAA9E,IAEAyxC,GACCtD,EAAAiB,kBvB0/bK,SAAUn3C,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GwBlxctD,IAAA6jB,GAAAhkB,EAAA,GACA85C,EAAA95C,EAAA,IACA+5C,EAAA/5C,EAAA,IAOAg6C,EAAA,WAIE,QAAAA,GACUhxB,EACA3G,GAFV,GAAA7Q,GAAA7E,IACUA,MAAAqc,QACArc,KAAA0V,QAER2G,EACGzlB,OACAswB,IACA3b,UAAY,SAAA/X,GAAS,MAAAqR,GAAKyoC,eAAiB95C,EAAM,GAAGuF,OACvD2c,EACG6C,cAAe,WACfhN,UAAY,SAAA/X,GAAS,MAAAqR,GAAKoT,KAAOzkB,EAAMqR,EAAKyoC,gBAAgBr1B,OAEnE,MAhBao1B,GAAY70B,YALxBnB,EAAAk2B,WACCzpC,SAAU,MACV0pC,SAAUn6C,EAAQ,OxBkycZqlB,WAAW,qBwB1xcAy0B,EAAApnB,eACAqnB,EAAA71B,YANN81B,KAAAj6C,GAAAi6C,gBxByycP,SAAUl6C,EAAQC,EAASC,GAEjC,YyB9ycA,SAAAo6C,GAA8BC,GAC5B,MAAO,UAAC/4C,GACN,GAAIA,EAAQnB,MAAQk6C,EAClB,OAASC,gBAAgB,IAK/B,QAAAC,GAA8BC,GAC5B,MAAO,UAACl5C,GACN,GAAIA,EAAQnB,MAAQq6C,EAClB,OAASC,gBAAgB,IAK/B,QAAAC,GAA2Bp5C,GACzB,GAA6B,gBAAlBA,GAAQnB,QAAuBw6C,SAAUr5C,EAAQnB,OAC1D,OAASy6C,eAAe,GAI5B,QAAAC,KzBmzcI,IyBnzc8B,GAAAC,MAAAvnC,EAAA,EAAAA,EAAAxF,UAAApN,OAAA4S,IAAAunC,EAAAvnC,GAAAxF,UAAAwF,EAChC,OAAO,UAACsH,GACN,GAAIu7B,KAMJ,IAJA0E,EAAat5C,IAAK,SAACu5C,GACjB3E,EAAOvkC,KAAMgJ,EAAKzT,SAAS2zC,GAAM56C,SAG/Bi2C,EAAOhpB,MAAO,SAAA2tB,GAAQ,MAAS,KAATA,IACxB,OAASC,gBAAgB,IAK/B,QAAAC,KzBqzcI,IyBrzcgC,GAAAC,MAAA3nC,EAAA,EAAAA,EAAAxF,UAAApN,OAAA4S,IAAA2nC,EAAA3nC,GAAAxF,UAAAwF,EAClC,OAAO,UAACsH,GACN,GAAIu7B,KAQJ,IANA8E,EAAe15C,IAAK,SAAA25C,GAClB/E,EAAOvkC,KACLgJ,EAAKzT,SAAS+zC,EAAO,IAAIh7C,MAAQ0a,EAAKzT,SAAS+zC,EAAO,IAAIh7C,SAI1Di2C,EAAOhpB,MAAO,SAAA2tB,GAAQ,MAAS,KAATA,IACxB,OAASK,eAAe,IzBiwc9Bn7C,OAAOC,eAAeH,EAAS,cAAgBI,OAAO,IyBhzctDJ,EAAAq6C,eAQAr6C,EAAAw6C,eAQAx6C,EAAA26C,YAMA36C,EAAA86C,mBAcA96C,EAAAk7C,sBzBs0cQ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEF,SAAUn7C,EAAQC,EAASC,GAEjC,Y0Bl4cAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAsoB,EAAAtoB,EAAA,IACAq7C,EAAAr7C,EAAA,KACAs7C,EAAAt7C,EAAA,KACAy1C,EAAAz1C,EAAA,IACAu7C,EAAAv7C,EAAA,KACA61C,EAAA71C,EAAA,IACAw7C,EAAAx7C,EAAA,KACAg5C,EAAAh5C,EAAA,IACA0f,EAAA1f,EAAA,GACAimB,EAAAjmB,EAAA,IACAy7C,EAAAz7C,EAAA,IAMA07C,EAAA,SAAA7tC,GAEA,QAAA6tC,GAAAxD,EAAAh2B,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA,OAAAA,IAGA,OAFA6E,GAAA0mC,MACA1mC,EAAA0Q,YACA1Q,EA2FA,MAhGA6P,GAAAO,UAAA85B,EAAA7tC,GA+DA6tC,EAAAxU,OAAA,SAAAgR,EAAAh2B,GACA,SAAAg2B,EAAA,CACA,qBAAAA,GAAAuD,EAAA3M,YACA,MAAAoJ,aAAAx4B,GAAAY,aAAA4B,EACAg2B,EAEA,GAAAwD,GAAAxD,EAAAh2B,EAEA,IAAAoG,EAAA9gB,QAAA0wC,GACA,UAAArC,GAAAC,gBAAAoC,EAAAh2B,EAEA,IAAAo5B,EAAAK,UAAAzD,GACA,UAAAzC,GAAAE,kBAAAuC,EAAAh2B,EAEA,sBAAAg2B,GAAAc,EAAAI,WAAA,gBAAAlB,GACA,UAAAqD,GAAAK,mBAAA1D,EAAAh2B,EAEA,IAAAm5B,EAAAQ,YAAA3D,GACA,UAAAsD,GAAAM,oBAAA5D,EAAAh2B,GAGA,SAAAhB,YAAA,OAAAg3B,gBAAA,uBAEAwD,EAAAjvC,UAAAkZ,WAAA,SAAApE,GACA,GAAA22B,GAAAvrC,KAAAurC,IACAh2B,EAAAvV,KAAAuV,SACA,cAAAA,EACAg2B,EAAAuD,EAAA3M,cAAA52B,UAAAqJ,GAGA22B,EAAAuD,EAAA3M,cAAA52B,UAAA,GAAA+N,GAAAoB,oBAAA9F,EAAAW,EAAA,KAGAw5B,GACCh8B,EAAAY,WACDvgB,GAAA27C,kB1By4cM,SAAU57C,EAAQC,EAASC,GAEjC,Y2Bx5cA,SAAA+7C,GAAAvD,GACA,GAAAr4C,GAAAq4C,EAAAr4C,MAAAohB,EAAAi3B,EAAAj3B,UACAA,GAAAgB,SACAhB,EAAAtB,KAAA9f,GACAohB,EAAArB,YAGA,QAAA87B,GAAAxD,GACA,GAAA33B,GAAA23B,EAAA33B,IAAAU,EAAAi3B,EAAAj3B,UACAA,GAAAgB,QACAhB,EAAA1B,MAAAgB,GAlHA5gB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAgiB,EAAAhiB,EAAA,IACA0f,EAAA1f,EAAA,GAMA21C,EAAA,SAAA9nC,GAEA,QAAA8nC,GAAArL,EAAApoB,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,WAGA,OAFA6E,GAAA84B,UACA94B,EAAA0Q,YACA1Q,EAsFA,MA3FA6P,GAAAO,UAAA+zB,EAAA9nC,GAiCA8nC,EAAAzO,OAAA,SAAAoD,EAAApoB,GACA,UAAAyzB,GAAArL,EAAApoB,IAEAyzB,EAAAlpC,UAAAkZ,WAAA,SAAApE,GACA,GAAA/P,GAAA7E,KACA29B,EAAA39B,KAAA29B,QACApoB,EAAAvV,KAAAuV,SACA,UAAAA,EACAvV,KAAAsvC,UACA16B,EAAAgB,SACAhB,EAAAtB,KAAAtT,KAAAxM,OACAohB,EAAArB,YAIAoqB,EAAAxvB,KAAA,SAAA3a,GACAqR,EAAArR,QACAqR,EAAAyqC,WAAA,EACA16B,EAAAgB,SACAhB,EAAAtB,KAAA9f,GACAohB,EAAArB,aAEiB,SAAAW,GACjBU,EAAAgB,QACAhB,EAAA1B,MAAAgB,KAGA/F,KAAA,cAAA+F,GAEAmB,EAAAU,KAAAymB,WAAA,WAAwD,KAAAtoB,WAKxD,IAAAlU,KAAAsvC,WACA,IAAA16B,EAAAgB,OACA,MAAAL,GAAAE,SAAA25B,EAAA,GAAgE57C,MAAAwM,KAAAxM,MAAAohB,mBAIhE+oB,GAAAxvB,KAAA,SAAA3a,GACAqR,EAAArR,QACAqR,EAAAyqC,WAAA,EACA16B,EAAAgB,QACAhB,EAAA5P,IAAAuQ,EAAAE,SAAA25B,EAAA,GAA4E57C,QAAAohB,iBAE3D,SAAAV,GACjBU,EAAAgB,QACAhB,EAAA5P,IAAAuQ,EAAAE,SAAA45B,EAAA,GAA6En7B,MAAAU,kBAG7EzG,KAAA,cAAA+F,GAEAmB,EAAAU,KAAAymB,WAAA,WAAwD,KAAAtoB,QAKxD80B,GACCj2B,EAAAY,WACDvgB,GAAA41C,qB3BohdM,SAAU71C,EAAQC,EAASC,GAEjC,Y4BpndA,SAAAk8C,KACA,GAAAl6B,EAAAU,KAAAy5B,eACA,UAAAn6B,GAAAU,KAAAy5B,cAEA,IAAAn6B,EAAAU,KAAA05B,eACA,UAAAp6B,GAAAU,KAAA05B,cAGA,UAAAh7C,OAAA,yCAGA,QAAAi7C,KACA,GAAAr6B,EAAAU,KAAAy5B,eACA,UAAAn6B,GAAAU,KAAAy5B,cAGA,IAAAG,OAAA,EACA,KAEA,OADAC,IAAA,2DACAt7C,EAAA,EAA2BA,EAAA,EAAOA,IAClC,IAEA,GADAq7C,EAAAC,EAAAt7C,GACA,GAAA+gB,GAAAU,KAAA85B,cAAAF,GACA,MAGA,MAAAn5B,IAIA,UAAAnB,GAAAU,KAAA85B,cAAAF,GAEA,MAAAn5B,GACA,SAAA/hB,OAAA,oDAIA,QAAAq7C,GAAA5oB,EAAA6oB,GAEA,WADA,KAAAA,IAA6BA,EAAA,MAC7B,GAAAC,IAA+BC,OAAA,MAAA/oB,MAAA6oB,YAG/B,QAAAG,GAAAhpB,EAAAipB,EAAAJ,GACA,UAAAC,IAA+BC,OAAA,OAAA/oB,MAAAipB,OAAAJ,YAG/B,QAAAK,GAAAlpB,EAAA6oB,GACA,UAAAC,IAA+BC,OAAA,SAAA/oB,MAAA6oB,YAG/B,QAAAM,GAAAnpB,EAAAipB,EAAAJ,GACA,UAAAC,IAA+BC,OAAA,MAAA/oB,MAAAipB,OAAAJ,YAG/B,QAAAO,GAAAppB,EAAAipB,EAAAJ,GACA,UAAAC,IAA+BC,OAAA,QAAA/oB,MAAAipB,OAAAJ,YAG/B,QAAAQ,GAAArpB,EAAA6oB,GACA,UAAAC,IAA+BC,OAAA,MAAA/oB,MAAAspB,aAAA,OAAAT,YAC/Bv7B,KAAA,GAAAi8B,GAAAh8B,YAAA,SAAA9I,EAAAzQ,GAAyD,MAAAyQ,GAAA+kC,UAAqB,OArE9Ep9C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAgiB,EAAAhiB,EAAA,IACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACA0f,EAAA1f,EAAA,GACAshB,EAAAthB,EAAA,GACAo9C,EAAAp9C,EAAA,GACAA,GAAA,GA0CAD,EAAA08C,UAIA18C,EAAA88C,WAIA98C,EAAAg9C,aAIAh9C,EAAAi9C,UAIAj9C,EAAAk9C,YAKAl9C,EAAAm9C,aAMA,IAAAP,GAAA,SAAA9uC,GAEA,QAAA8uC,GAAAa,GACA,GAAAhsC,GAAA3D,EAAA6B,KAAA/C,YACA8wC,GACAn9C,OAAA,EACAo9C,UAAA,WACA,MAAA/wC,MAAAgxC,YAAAzB,EAAAxsC,KAAA/C,MAAA0vC,KAEAsB,aAAA,EACAC,iBAAA,EACAlB,WACAE,OAAA,MACAO,aAAA,OACAU,QAAA,EAEA,oBAAAL,GACAC,EAAA5pB,IAAA2pB,MAGA,QAAApyB,KAAAoyB,GACAA,EAAAx3C,eAAAolB,KACAqyB,EAAAryB,GAAAoyB,EAAApyB,GAKA,OADA5Z,GAAAisC,UACAjsC,EAKA,MA/BA6P,GAAAO,UAAA+6B,EAAA9uC,GA4BA8uC,EAAAlwC,UAAAkZ,WAAA,SAAApE,GACA,UAAAu8B,GAAAv8B,EAAA5U,KAAA8wC,UAEAd,GACCj9B,EAAAY,WA2BDq8B,GAAAzV,OAAA,WACA,GAAAA,GAAA,SAAAsW,GACA,UAAAb,GAAAa,GAQA,OANAtW,GAAAx6B,IAAA+vC,EACAvV,EAAA6W,KAAAlB,EACA3V,EAAAnzB,OAAAgpC,EACA7V,EAAA8W,IAAAhB,EACA9V,EAAA+W,MAAAhB,EACA/V,EAAAgX,QAAAhB,EACAhW,KAEAnnC,EAAA48C,gBAMA,IAAAmB,GAAA,SAAAjwC,GAEA,QAAAiwC,GAAAp8B,EAAA+7B,GACA,GAAAjsC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IACA6E,GAAAisC,UACAjsC,EAAAmoC,MAAA,CACA,IAAA+C,GAAAe,EAAAf,QAAAe,EAAAf,WAYA,OAVAe,GAAAE,aAAAjB,EAAA,sBACAA,EAAA,sCAGA,gBAAAA,IAAA16B,EAAAU,KAAAy7B,UAAAV,EAAAX,eAAA96B,GAAAU,KAAAy7B,cAAA,KAAAV,EAAAX,OACAJ,EAAA,oEAGAe,EAAAX,KAAAtrC,EAAA4sC,cAAAX,EAAAX,KAAAW,EAAAf,QAAA,iBACAlrC,EAAA6sC,OACA7sC,EAkKA,MAnLA6P,GAAAO,UAAAk8B,EAAAjwC,GAmBAiwC,EAAArxC,UAAAwT,KAAA,SAAAkD,GACAxW,KAAAgtC,MAAA,CACA,IAAAnmC,GAAA7G,KAAA2xC,EAAA9qC,EAAA8qC,IAAAb,EAAAjqC,EAAAiqC,QAAA/7B,EAAAlO,EAAAkO,YACA27B,EAAA,GAAAkB,GAAAp7B,EAAAm7B,EAAAb,EACA/7B,GAAAzB,KAAAo9B,IAEAS,EAAArxC,UAAA4xC,KAAA,WACA,GAAA7qC,GAAA7G,KAAA8wC,EAAAjqC,EAAAiqC,QAAArmB,EAAA5jB,EAAAiqC,QAAAe,EAAApnB,EAAAonB,KAAA5B,EAAAxlB,EAAAwlB,OAAA/oB,EAAAuD,EAAAvD,IAAAvzB,EAAA82B,EAAA92B,MAAAm+C,EAAArnB,EAAAqnB,SAAA/B,EAAAtlB,EAAAslB,QAAAI,EAAA1lB,EAAA0lB,KACAY,EAAAD,EAAAC,UACAY,EAAAhB,EAAAoB,SAAAhB,GAAAhuC,KAAA+tC,EACA,IAAAa,IAAAf,EAAAoB,YACAhyC,KAAAkT,MAAA09B,EAAAoB,YAAAx7B,OAEA,CACAxW,KAAA2xC,MAKA3xC,KAAAiyC,YAAAN,EAAAb,EASA,KANAe,EACAlB,EAAAoB,SAAAJ,EAAAO,MAAAnvC,KAAA4uC,EAAA1B,EAAA/oB,EAAAvzB,EAAAk+C,EAAAC,GAGAnB,EAAAoB,SAAAJ,EAAAO,MAAAnvC,KAAA4uC,EAAA1B,EAAA/oB,EAAAvzB,MAEAi9C,EAAAoB,YAEA,MADAhyC,MAAAkT,MAAA09B,EAAAoB,YAAAx7B,GACA,IAcA,IAXA7iB,IACAg+C,EAAAT,QAAAJ,EAAAI,QACAS,EAAAnB,aAAAM,EAAAN,cAEA,mBAAAmB,KACAA,EAAAV,kBAAAH,EAAAG,iBAGAjxC,KAAAmyC,WAAAR,EAAA5B,IAEAI,EAAAQ,EAAAoB,SAAAJ,EAAAD,MAAA3uC,KAAA4uC,EAAAxB,GAAAQ,EAAAoB,SAAAJ,EAAAD,MAAA3uC,KAAA4uC,MACAf,EAAAoB,YAEA,MADAhyC,MAAAkT,MAAA09B,EAAAoB,YAAAx7B,GACA,KAGA,MAAAm7B,IAEAR,EAAArxC,UAAA2xC,cAAA,SAAAtB,EAAAiC,GACA,IAAAjC,GAAA,gBAAAA,GACA,MAAAA,EAEA,IAAA96B,EAAAU,KAAAy7B,UAAArB,YAAA96B,GAAAU,KAAAy7B,SACA,MAAArB,EAEA,IAAAiC,EAAA,CACA,GAAAC,GAAAD,EAAAj3C,QAAA,MACA,IAAAk3C,IACAD,IAAAv1B,UAAA,EAAAw1B,IAGA,OAAAD,GACA,wCACA,MAAA9+C,QAAAgC,KAAA66C,GAAAt7C,IAAA,SAAAspB,GAA6D,MAAAyV,WAAAzV,GAAA,IAAAyV,UAAAuc,EAAAhyB,MAAsDrlB,KAAA,IACnH,wBACA,MAAAyN,MAAAC,UAAA2pC,EACA,SACA,MAAAA,KAGAgB,EAAArxC,UAAAqyC,WAAA,SAAAR,EAAA5B,GACA,OAAA5xB,KAAA4xB,GACAA,EAAA12C,eAAA8kB,IACAwzB,EAAAW,iBAAAn0B,EAAA4xB,EAAA5xB,KAIAgzB,EAAArxC,UAAAmyC,YAAA,SAAAN,EAAAb,GAEA,QAAAyB,GAAA/7B,GACA,GAAA3P,GAAA0rC,EAAA39B,EAAA/N,EAAA+N,WAAA49B,EAAA3rC,EAAA2rC,mBAAA1B,EAAAjqC,EAAAiqC,OACA0B,IACAA,EAAAt/B,MAAAsD,GAEA5B,EAAA1B,MAAA,GAAAu/B,GAAAzyC,KAAA8wC,IAkCA,QAAA4B,GAAAl8B,GACA,GAAA3P,GAAA6rC,EAAA99B,EAAA/N,EAAA+N,WAAA49B,EAAA3rC,EAAA2rC,mBAAA1B,EAAAjqC,EAAAiqC,OACA,QAAA9wC,KAAA2yC,WAAA,CAEA,GAAAC,GAAA,OAAA5yC,KAAAiM,OAAA,IAAAjM,KAAAiM,OACAykC,EAAA,SAAA1wC,KAAAwwC,aAAAxwC,KAAA0wC,UAAA1wC,KAAA6yC,aAAA7yC,KAAA0wC,QAIA,KAAAkC,IACAA,EAAAlC,EAAA,OAEA,KAAAkC,KAAA,KACAJ,GACAA,EAAAj/B,WAEAqB,EAAAtB,KAAAkD,GACA5B,EAAArB,aAGAi/B,GACAA,EAAAt/B,MAAAsD,GAEA5B,EAAA1B,MAAA,GAAA4/B,GAAA,cAAAF,EAAA5yC,KAAA8wC,MA/DA,GAAA0B,GAAA1B,EAAA0B,kBAYA,IAJAb,EAAAoB,UAAAR,EACAA,EAAAzB,UACAyB,EAAA39B,WAAA5U,KACAuyC,EAAAC,qBACAb,EAAAqB,QAAA,mBAAArB,GAAA,CACA,GAAAa,EAAA,CACA,GAAAS,EACAA,GAAA,SAAAz8B,GACAy8B,EAAAT,mBACAl/B,KAAAkD,IAEAnB,EAAAU,KAAA05B,eACAkC,EAAAuB,WAAAD,EAGAtB,EAAAqB,OAAAE,WAAAD,EAEAA,EAAAT,qBAEA,GAAAW,EACAA,GAAA,SAAA38B,GACA,GAAA3P,GAAAssC,EAAAX,EAAA3rC,EAAA2rC,mBAAA59B,EAAA/N,EAAA+N,WAAAk8B,EAAAjqC,EAAAiqC,OACA0B,IACAA,EAAAt/B,MAAAsD,GAEA5B,EAAA1B,MAAA,GAAA4/B,GAAA,aAAA9yC,KAAA8wC,KAEAa,EAAAyB,QAAAD,EACAA,EAAArC,UACAqC,EAAAv+B,WAAA5U,KACAmzC,EAAAX,qBA6BAb,EAAA0B,mBAAAX,EACAA,EAAA99B,WAAA5U,KACA0yC,EAAAF,qBACAE,EAAA5B,WAEAK,EAAArxC,UAAA2L,YAAA,WACA,GAAA5E,GAAA7G,KAAAgtC,EAAAnmC,EAAAmmC,KAAA2E,EAAA9qC,EAAA8qC,KACA3E,GAAA2E,GAAA,IAAAA,EAAAgB,YAAA,kBAAAhB,GAAA2B,OACA3B,EAAA2B,QAEApyC,EAAApB,UAAA2L,YAAA1I,KAAA/C,OAEAmxC,GACCx8B,EAAAS,WACDhiB,GAAA+9C,gBAQA,IAAAS,GAAA,WACA,QAAAA,GAAA2B,EAAA5B,EAAAb,GAMA,OALA9wC,KAAAuzC,gBACAvzC,KAAA2xC,MACA3xC,KAAA8wC,UACA9wC,KAAAiM,OAAA0lC,EAAA1lC,OACAjM,KAAAwwC,aAAAmB,EAAAnB,cAAAM,EAAAN,aACAxwC,KAAAwwC,cACA,WAGAxwC,KAAA0wC,SAFA,YAAAiB,GAEAA,EAAAnB,aAAAmB,EAAAjB,SAAAnqC,KAAAgtB,MAAAoe,EAAAjB,UAAAiB,EAAAkB,cAAA,QAGAtsC,KAAAgtB,MAAAoe,EAAAkB,cAAA,OAEA,MACA,gBACA7yC,KAAA0wC,SAAAiB,EAAA6B,WACA,MACA,YACA,QACAxzC,KAAA0wC,SAAA,YAAAiB,KAAAjB,SAAAiB,EAAAkB,cAIA,MAAAjB,KAEAx+C,GAAAw+C,cAQA,IAAAkB,GAAA,SAAA5xC,GAEA,QAAA4xC,GAAAl6C,EAAA+4C,EAAAb,GACA,GAAAjsC,GAAA3D,EAAA6B,KAAA/C,KAAApH,IAAAoH,IAMA,OALA6E,GAAA8sC,MACA9sC,EAAAisC,UACAjsC,EAAAlO,KAAA,YACAkO,EAAAoH,OAAA0lC,EAAA1lC,OACA3Y,OAAA6jB,eAAAtS,EAAAiuC,EAAAhzC,WACA+E,EAEA,MAVA6P,GAAAO,UAAA69B,EAAA5xC,GAUA4xC,GACCr+C,MACDrB,GAAA0/C,WAMA,IAAAL,GAAA,SAAAvxC,GAEA,QAAAuxC,GAAAd,EAAAb,GACA,GAAAjsC,GAAA3D,EAAA6B,KAAA/C,KAAA,eAAA2xC,EAAAb,IAAA9wC,IAEA,OADA1M,QAAA6jB,eAAAtS,EAAA4tC,EAAA3yC,WACA+E,EAEA,MANA6P,GAAAO,UAAAw9B,EAAAvxC,GAMAuxC,GACCK,EACD1/C,GAAAq/C,oB5BoodM,SAAUt/C,EAAQC,EAASC,GAEjC,Y6B/heAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAigD,GAAApgD,EAAA,IACAD,GAAAsgD,SAAAD,EAAAE,mBAAApZ,Q7BsieM,SAAUpnC,EAAQC,EAASC,GAEjC,Y8B1ieAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAogD,GAAAvgD,EAAA,GACAD,GAAA0T,KAAA8sC,EAAA7E,eAAAxU,Q9BijeM,SAAUpnC,EAAQC,EAASC,GAEjC,Y+BrjeAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA01C,GAAA71C,EAAA,GACAD,GAAAwgB,GAAAs1B,EAAAC,gBAAAv1B,I/B4jeM,SAAUzgB,EAAQC,EAASC,GAEjC,YgCjgeA,SAAAwgD,GAAA/vC,GACA,GAAAgwC,GAAA,GAAAC,GAAAjwC,GACAkwC,EAAAh0C,KAAAwU,KAAAs/B,EACA,OAAAA,GAAAE,SAlEA1gD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAiEAD,GAAAygD,QACA,IAAAE,GAAA,WACA,QAAAA,GAAAjwC,GACA9D,KAAA8D,WAKA,MAHAiwC,GAAAj0C,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA0oC,GAAAr/B,EAAA5U,KAAA8D,SAAA9D,KAAAg0C,UAEAD,KAOAE,EAAA,SAAA/yC,GAEA,QAAA+yC,GAAAl/B,EAAAjR,EAAAkwC,GACA,GAAAnvC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAAf,WACAe,EAAAmvC,SACAnvC,EAqBA,MA1BA6P,GAAAO,UAAAg/B,EAAA/yC,GAYA+yC,EAAAn0C,UAAAoT,MAAA,SAAAgB,GACA,IAAAlU,KAAAua,UAAA,CACA,GAAApF,OAAA,EACA,KACAA,EAAAnV,KAAA8D,SAAAoQ,EAAAlU,KAAAg0C,QAEA,MAAAE,GAEA,WADAhzC,GAAApB,UAAAoT,MAAAnQ,KAAA/C,KAAAk0C,GAGAl0C,KAAAm0C,yBACAn0C,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAAmV,MAGA8+B,GACC5K,EAAAiB,kBhCukeK,SAAUn3C,EAAQC,EAASC,GAEjC,YiCroeA,SAAA+gD,KACA,MAAAp0C,MAAAwU,KAAA,GAAAk2B,GAAAC,iBAAA,IApDAr3C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAk3C,GAAAr3C,EAAA,GAqDAD,GAAAghD,ajC+reM,SAAUjhD,EAAQC,EAASC,GAEjC,YkCzreA,SAAAghD,GAAAhgC,EAAA22B,GACA,MAAAhrC,MAAAwU,KAAA,GAAA8/B,GAAApJ,iBAAA72B,EAAA22B,EAAA,IA/DA13C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA8gD,GAAAjhD,EAAA,GAgEAD,GAAAihD,alC8veM,SAAUlhD,EAAQC,EAASC,GAEjC,YmCpxeA,SAAAkhD,GAAAlpB,EAAAmpB,GACA,MAAAx0C,MAAAwU,KAAA,GAAAigC,GAAAppB,EAAAmpB,IA9CAlhD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,EA4CAD,GAAAmhD,sBACA,IAAAE,GAAA,WACA,QAAAA,GAAAppB,EAAAmpB,GACAx0C,KAAAqrB,UACArrB,KAAAw0C,cAKA,MAHAC,GAAA30C,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAmpC,GAAA9/B,EAAA5U,KAAAqrB,QAAArrB,KAAAw0C,eAEAC,KAOAC,EAAA,SAAAxzC,GAEA,QAAAwzC,GAAA3/B,EAAAsW,EAAAmpB,GACA,GAAA3vC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAMA,OALA6E,GAAA2vC,cACA3vC,EAAA8vC,QAAA,EACA,kBAAAtpB,KACAxmB,EAAAwmB,WAEAxmB,EA6BA,MArCA6P,GAAAO,UAAAy/B,EAAAxzC,GAUAwzC,EAAA50C,UAAAurB,QAAA,SAAA1f,EAAAipC,GACA,MAAAjpC,KAAAipC,GAEAF,EAAA50C,UAAAoV,MAAA,SAAA1hB,GACA,GAAAghD,GAAAx0C,KAAAw0C,YACAr2B,EAAA3qB,CACA,IAAAghD,IACAr2B,EAAAwyB,EAAAoB,SAAA/xC,KAAAw0C,aAAAhhD,MACAo9C,EAAAoB,YACA,MAAAhyC,MAAA+U,YAAA7B,MAAA09B,EAAAoB,YAAAx7B,EAGA,IAAArB,IAAA,CACA,IAAAnV,KAAA20C,QAEA,IADAx/B,EAAAw7B,EAAAoB,SAAA/xC,KAAAqrB,SAAArrB,KAAAme,UACAyyB,EAAAoB,YACA,MAAAhyC,MAAA+U,YAAA7B,MAAA09B,EAAAoB,YAAAx7B,OAIAxW,MAAA20C,QAAA,GAEA,IAAAE,QAAA1/B,KACAnV,KAAAme,MACAne,KAAA+U,YAAAzB,KAAA9f,KAGAkhD,GACC//B,EAAAS,anCw0eK,SAAUjiB,EAAQC,EAASC,GAEjC,YoCh6eA,SAAAotB,GAAAmqB,EAAAt2B,GACA,MAAAtU,MAAAwU,KAAA,GAAAsgC,GAAAlK,EAAAt2B,EAAAtU,OAlBA1M,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAkBAD,GAAAqtB,OACA,IAAAq0B,GAAA,WACA,QAAAA,GAAAlK,EAAAt2B,EAAAO,GACA7U,KAAA4qC,YACA5qC,KAAAsU,UACAtU,KAAA6U,SAKA,MAHAigC,GAAAh1C,UAAAiD,KAAA,SAAAsQ,EAAAwB,GACA,MAAAA,GAAAtJ,UAAA,GAAAwpC,GAAA1hC,EAAArT,KAAA4qC,UAAA5qC,KAAAsU,QAAAtU,KAAA6U,UAEAigC,KAOAC,EAAA,SAAA7zC,GAEA,QAAA6zC,GAAAhgC,EAAA61B,EAAAt2B,EAAAO,GACA,GAAAhQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAMA,OALA6E,GAAA+lC,YACA/lC,EAAAyP,UACAzP,EAAAgQ,SACAhQ,EAAA3J,MAAA,EACA2J,EAAAyP,WAAAzP,EACAA,EAsBA,MA9BA6P,GAAAO,UAAA8/B,EAAA7zC,GAUA6zC,EAAAj1C,UAAA8pC,eAAA,SAAAoL,GACAh1C,KAAA+U,YAAAzB,KAAA0hC,GACAh1C,KAAA+U,YAAAxB,YAEAwhC,EAAAj1C,UAAAoV,MAAA,SAAA1hB,GACA,GAAA2hB,IAAA,CACA,KACAA,EAAAnV,KAAA4qC,UAAA7nC,KAAA/C,KAAAsU,QAAA9gB,EAAAwM,KAAA9E,QAAA8E,KAAA6U,QAEA,MAAAX,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAiB,GACAnV,KAAA4pC,gBAAA,IAGAmL,EAAAj1C,UAAAyb,UAAA,WACAvb,KAAA4pC,gBAAA,IAEAmL,GACCpgC,EAAAS,apCw7eK,SAAUjiB,EAAQC,EAASC,GAEjC,YqC19eA,SAAAulC,GAAAgS,EAAAt2B,GACA,qBAAAs2B,GACA,SAAAr2B,WAAA,8BAEA,OAAAvU,MAAAwU,KAAA,GAAAygC,GAAArK,EAAA5qC,MAAA,EAAAsU,IAzCAhhB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAyCAD,GAAAwlC,MACA,IAAAqc,GAAA,WACA,QAAAA,GAAArK,EAAA/1B,EAAAqgC,EAAA5gC,GACAtU,KAAA4qC,YACA5qC,KAAA6U,SACA7U,KAAAk1C,aACAl1C,KAAAsU,UAKA,MAHA2gC,GAAAn1C,UAAAiD,KAAA,SAAAsQ,EAAAwB,GACA,MAAAA,GAAAtJ,UAAA,GAAA4pC,GAAA9hC,EAAArT,KAAA4qC,UAAA5qC,KAAA6U,OAAA7U,KAAAk1C,WAAAl1C,KAAAsU,WAEA2gC,IAEA7hD,GAAA6hD,mBAMA,IAAAE,GAAA,SAAAj0C,GAEA,QAAAi0C,GAAApgC,EAAA61B,EAAA/1B,EAAAqgC,EAAA5gC,GACA,GAAAzP,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAMA,OALA6E,GAAA+lC,YACA/lC,EAAAgQ,SACAhQ,EAAAqwC,aACArwC,EAAAyP,UACAzP,EAAA3J,MAAA,EACA2J,EA4BA,MApCA6P,GAAAO,UAAAkgC,EAAAj0C,GAUAi0C,EAAAr1C,UAAA8pC,eAAA,SAAAp2C,GACA,GAAAuhB,GAAA/U,KAAA+U,WACAA,GAAAzB,KAAA9f,GACAuhB,EAAAxB,YAEA4hC,EAAAr1C,UAAAoV,MAAA,SAAA1hB,GACA,GAAAqT,GAAA7G,KAAA4qC,EAAA/jC,EAAA+jC,UAAAt2B,EAAAzN,EAAAyN,QACApZ,EAAA8E,KAAA9E,OACA,KACA0vC,EAAA7nC,KAAAuR,GAAAtU,KAAAxM,EAAA0H,EAAA8E,KAAA6U,SAEA7U,KAAA4pC,eAAA5pC,KAAAk1C,WAAAh6C,EAAA1H,GAGA,MAAA0gB,GACAlU,KAAA+U,YAAA7B,MAAAgB,KAGAihC,EAAAr1C,UAAAyb,UAAA,WACAvb,KAAAk1C,WACAl1C,KAAA4pC,gBAAA,GAGA5pC,KAAA+U,YAAAxB,YAGA4hC,GACCxgC,EAAAS,WACDhiB,GAAA+hD,uBrCsgfM,SAAUhiD,EAAQC,EAASC,GAEjC,YsCxjfA,SAAA+hD,GAAAxK,EAAAI,EAAAqK,GACA,MAAAr1C,MAAAwU,KAAA,GAAA8gC,GAAA1K,EAAAI,EAAAqK,EAAAr1C,OAtDA1M,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAkiD,EAAAliD,EAAA,GAqDAD,GAAAgiD,OACA,IAAAE,GAAA,WACA,QAAAA,GAAA1K,EAAAI,EAAAqK,EAAAxgC,GACA7U,KAAA4qC,YACA5qC,KAAAgrC,iBACAhrC,KAAAq1C,eACAr1C,KAAA6U,SAKA,MAHAygC,GAAAx1C,UAAAiD,KAAA,SAAAsQ,EAAAwB,GACA,MAAAA,GAAAtJ,UAAA,GAAAiqC,GAAAniC,EAAArT,KAAA4qC,UAAA5qC,KAAAgrC,eAAAhrC,KAAAq1C,aAAAr1C,KAAA6U,UAEAygC,KAOAE,EAAA,SAAAt0C,GAEA,QAAAs0C,GAAAzgC,EAAA61B,EAAAI,EAAAqK,EAAAxgC,GACA,GAAAhQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAQA,OAPA6E,GAAA+lC,YACA/lC,EAAAmmC,iBACAnmC,EAAAwwC,eACAxwC,EAAAgQ,SACAhQ,EAAA3J,MAAA,EACA2J,EAAAkU,cAAA,EACAlU,EAAA4wC,UAAA,EACA5wC,EAgEA,MA1EA6P,GAAAO,UAAAugC,EAAAt0C,GAYAs0C,EAAA11C,UAAAoV,MAAA,SAAA1hB,GACA,GAAA0H,GAAA8E,KAAA9E,OACA8E,MAAA4qC,UACA5qC,KAAA01C,cAAAliD,EAAA0H,GAGA8E,KAAA21C,MAAAniD,EAAA0H,IAGAs6C,EAAA11C,UAAA41C,cAAA,SAAAliD,EAAA0H,GACA,GAAAia,EACA,KACAA,EAAAnV,KAAA4qC,UAAAp3C,EAAA0H,EAAA8E,KAAA6U,QAEA,MAAAX,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAiB,GACAnV,KAAA21C,MAAAniD,EAAA0H,IAGAs6C,EAAA11C,UAAA61C,MAAA,SAAAniD,EAAA0H,GACA,GAAA8E,KAAAgrC,eAEA,WADAhrC,MAAA41C,mBAAApiD,EAAA0H,EAGA8E,MAAA61C,WAAAriD,IAEAgiD,EAAA11C,UAAA81C,mBAAA,SAAApiD,EAAA0H,GACA,GAAAia,EACA,KACAA,EAAAnV,KAAAgrC,eAAAx3C,EAAA0H,GAEA,MAAAgZ,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAlU,KAAA61C,WAAA1gC,IAEAqgC,EAAA11C,UAAA+1C,WAAA,SAAAriD,GACA,GAAAuhB,GAAA/U,KAAA+U,WACA/U,MAAAy1C,WACAz1C,KAAAy1C,UAAA,EACA1gC,EAAAzB,KAAA9f,GACAuhB,EAAAxB,WACAvT,KAAAyL,cACAzL,KAAA+Y,cAAA,IAGAy8B,EAAA11C,UAAAyb,UAAA,WACA,GAAAxG,GAAA/U,KAAA+U,WACA/U,MAAA+Y,kBAAA,KAAA/Y,KAAAq1C,aAKAr1C,KAAA+Y,eACAhE,EAAA7B,MAAA,GAAAqiC,GAAAn+B,YACApX,KAAAyL,gBANAsJ,EAAAzB,KAAAtT,KAAAq1C,cACAtgC,EAAAxB,WACAvT,KAAAyL,gBAOA+pC,GACC7gC,EAAAS,atConfK,SAAUjiB,EAAQC,EAASC,GAEjC,YuCtvfA,SAAAyiD,GAAAlL,EAAAI,EAAAqK,GACA,MAAAr1C,MAAAwU,KAAA,GAAAuhC,GAAAnL,EAAAI,EAAAqK,EAAAr1C,OAvBA1M,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAkiD,EAAAliD,EAAA,GAsBAD,GAAA0iD,MACA,IAAAC,GAAA,WACA,QAAAA,GAAAnL,EAAAI,EAAAqK,EAAAxgC,GACA7U,KAAA4qC,YACA5qC,KAAAgrC,iBACAhrC,KAAAq1C,eACAr1C,KAAA6U,SAKA,MAHAkhC,GAAAj2C,UAAAiD,KAAA,SAAAsQ,EAAAwB,GACA,MAAAA,GAAAtJ,UAAA,GAAAyqC,GAAA3iC,EAAArT,KAAA4qC,UAAA5qC,KAAAgrC,eAAAhrC,KAAAq1C,aAAAr1C,KAAA6U,UAEAkhC,KAOAC,EAAA,SAAA90C,GAEA,QAAA80C,GAAAjhC,EAAA61B,EAAAI,EAAAqK,EAAAxgC,GACA,GAAAhQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAWA,OAVA6E,GAAA+lC,YACA/lC,EAAAmmC,iBACAnmC,EAAAwwC,eACAxwC,EAAAgQ,SACAhQ,EAAAsO,UAAA,EACAtO,EAAA3J,MAAA,MACA,KAAAm6C,IACAxwC,EAAAoxC,UAAAZ,EACAxwC,EAAAsO,UAAA,GAEAtO,EAwDA,MArEA6P,GAAAO,UAAA+gC,EAAA90C,GAeA80C,EAAAl2C,UAAAoV,MAAA,SAAA1hB,GACA,GAAA0H,GAAA8E,KAAA9E,OACA,IAAA8E,KAAA4qC,UACA5qC,KAAA01C,cAAAliD,EAAA0H,OAEA,CACA,GAAA8E,KAAAgrC,eAEA,WADAhrC,MAAA41C,mBAAApiD,EAAA0H,EAGA8E,MAAAi2C,UAAAziD,EACAwM,KAAAmT,UAAA,IAGA6iC,EAAAl2C,UAAA41C,cAAA,SAAAliD,EAAA0H,GACA,GAAAia,EACA,KACAA,EAAAnV,KAAA4qC,UAAAp3C,EAAA0H,EAAA8E,KAAA6U,QAEA,MAAAX,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGA,GAAAiB,EAAA,CACA,GAAAnV,KAAAgrC,eAEA,WADAhrC,MAAA41C,mBAAApiD,EAAA0H,EAGA8E,MAAAi2C,UAAAziD,EACAwM,KAAAmT,UAAA,IAGA6iC,EAAAl2C,UAAA81C,mBAAA,SAAApiD,EAAA0H,GACA,GAAAia,EACA,KACAA,EAAAnV,KAAAgrC,eAAAx3C,EAAA0H,GAEA,MAAAgZ,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAlU,KAAAi2C,UAAA9gC,EACAnV,KAAAmT,UAAA,GAEA6iC,EAAAl2C,UAAAyb,UAAA,WACA,GAAAxG,GAAA/U,KAAA+U,WACA/U,MAAAmT,UACA4B,EAAAzB,KAAAtT,KAAAi2C,WACAlhC,EAAAxB,YAGAwB,EAAA7B,MAAA,GAAAqiC,GAAAn+B,aAGA4+B,GACCrhC,EAAAS,avCmxfK,SAAUjiB,EAAQC,EAASC,GAEjC,YwCv1fA,SAAA6iD,GAAAC,EAAAnL,EAAAC,GAMA,WALA,KAAAA,IAAgCA,EAAArxB,OAAAC,mBAChC,gBAAAmxB,KACAC,EAAAD,EACAA,EAAA,MAEAhrC,KAAAwU,KAAA,GAAA4hC,GAAAD,EAAAnL,EAAAC,IAtDA33C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAqDAD,GAAA8iD,YAGA,IAAAE,GAAA,WACA,QAAAA,GAAA7K,EAAAP,EAAAC,OACA,KAAAA,IAAoCA,EAAArxB,OAAAC,mBACpC7Z,KAAAurC,MACAvrC,KAAAgrC,iBACAhrC,KAAAirC,aAKA,MAHAmL,GAAAt2C,UAAAiD,KAAA,SAAAsQ,EAAAwB,GACA,MAAAA,GAAAtJ,UAAA,GAAA8qC,GAAAhjC,EAAArT,KAAAurC,IAAAvrC,KAAAgrC,eAAAhrC,KAAAirC,cAEAmL,IAEAhjD,GAAAgjD,oBAMA,IAAAC,GAAA,SAAAn1C,GAEA,QAAAm1C,GAAAthC,EAAAw2B,EAAAP,EAAAC,OACA,KAAAA,IAAoCA,EAAArxB,OAAAC,kBACpC,IAAAhV,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAQA,OAPA6E,GAAA0mC,MACA1mC,EAAAmmC,iBACAnmC,EAAAomC,aACApmC,EAAAkU,cAAA,EACAlU,EAAAumC,UACAvmC,EAAAgS,OAAA,EACAhS,EAAA3J,MAAA,EACA2J,EA2DA,MAtEA6P,GAAAO,UAAAohC,EAAAn1C,GAaAm1C,EAAAv2C,UAAAoV,MAAA,SAAA1hB,GACA,GAAAwM,KAAA6W,OAAA7W,KAAAirC,WAAA,CACA,GAAAD,GAAAhrC,KAAAgrC,eACA9vC,EAAA8E,KAAA9E,QACAqwC,EAAAvrC,KAAAurC,IACAx2B,EAAA/U,KAAA+U,WACA/U,MAAA6W,SACA7W,KAAAsrC,UAAAC,EAAAx2B,EAAAi2B,EAAAx3C,EAAA0H,OAGA8E,MAAAorC,OAAAlmC,KAAA1R,IAGA6iD,EAAAv2C,UAAAwrC,UAAA,SAAAC,EAAAx2B,EAAAi2B,EAAAx3C,EAAA0H,GACA8E,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAAurC,EAAA/3C,EAAA0H,KAEAm7C,EAAAv2C,UAAAyb,UAAA,WACAvb,KAAA+Y,cAAA,EACA,IAAA/Y,KAAA6W,QAAA,IAAA7W,KAAAorC,OAAAp3C,QACAgM,KAAA+U,YAAAxB,YAGA8iC,EAAAv2C,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAtjC,GAAA7G,KAAAgrC,EAAAnkC,EAAAmkC,eAAAj2B,EAAAlO,EAAAkO,WACAi2B,GACAhrC,KAAAs2C,gBAAAvM,EAAAC,EAAAC,EAAAC,GAGAn1B,EAAAzB,KAAA02B,IAGAqM,EAAAv2C,UAAAw2C,gBAAA,SAAAvM,EAAAC,EAAAC,EAAAC,GACA,GACA/0B,GADAtO,EAAA7G,KAAAgrC,EAAAnkC,EAAAmkC,eAAAj2B,EAAAlO,EAAAkO,WAEA,KACAI,EAAA61B,EAAAjB,EAAAC,EAAAC,EAAAC,GAEA,MAAAh2B,GAEA,WADAa,GAAA7B,MAAAgB,GAGAa,EAAAzB,KAAA6B,IAEAkhC,EAAAv2C,UAAAy2C,YAAA,SAAAriC,GACAlU,KAAA+U,YAAA7B,MAAAgB,IAEAmiC,EAAAv2C,UAAA8pC,eAAA,SAAAO,GACA,GAAAiB,GAAAprC,KAAAorC,MACAprC,MAAAjF,OAAAovC,GACAnqC,KAAA6W,SACAu0B,EAAAp3C,OAAA,EACAgM,KAAAkV,MAAAk2B,EAAAp0B,SAEA,IAAAhX,KAAA6W,QAAA7W,KAAA+Y,cACA/Y,KAAA+U,YAAAxB,YAGA8iC,GACChN,EAAAiB,gBACDl3C,GAAAijD,wBxC84fM,SAAUljD,EAAQC,EAASC,GAEjC,YyCl+fA,SAAAmjD,KAEA,OADAC,MACA7vC,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C6vC,EAAA7vC,GAAAxF,UAAAwF,EAKA,OAHA,KAAA6vC,EAAAziD,QAAA2nB,EAAA9gB,QAAA47C,EAAA,MACAA,IAAA,IAEAz2C,KAAAwU,KAAA,GAAAkiC,GAAAD,IAIA,QAAAE,KAEA,OADAF,MACA7vC,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C6vC,EAAA7vC,GAAAxF,UAAAwF,EAEA,IAAAiO,GAAA,IAKA,OAJA,KAAA4hC,EAAAziD,QAAA2nB,EAAA9gB,QAAA47C,EAAA,MACAA,IAAA,IAEA5hC,EAAA4hC,EAAAz/B,QACA,GAAA48B,GAAA7E,eAAAl6B,EAAA,MAAAL,KAAA,GAAAkiC,GAAAD,IA1FAnjD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAugD,EAAAvgD,EAAA,IACAsoB,EAAAtoB,EAAA,IACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAyEAD,GAAAojD,oBAcApjD,EAAAujD,yBACA,IAAAD,GAAA,WACA,QAAAA,GAAAD,GACAz2C,KAAAy2C,cAKA,MAHAC,GAAA52C,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAqrC,GAAAhiC,EAAA5U,KAAAy2C,eAEAC,KAEAE,EAAA,SAAA11C,GAEA,QAAA01C,GAAA7hC,EAAA0hC,GACA,GAAA5xC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAAkQ,cACAlQ,EAAA4xC,cACA5xC,EAuBA,MA5BA6P,GAAAO,UAAA2hC,EAAA11C,GAOA01C,EAAA92C,UAAAy2C,YAAA,SAAArjC,EAAAi3B,GACAnqC,KAAA62C,yBAEAD,EAAA92C,UAAA8pC,eAAA,SAAAO,GACAnqC,KAAA62C,yBAEAD,EAAA92C,UAAAmsC,OAAA,SAAA/3B,GACAlU,KAAA62C,yBAEAD,EAAA92C,UAAAyb,UAAA,WACAvb,KAAA62C,yBAEAD,EAAA92C,UAAA+2C,sBAAA,WACA,GAAAvjC,GAAAtT,KAAAy2C,YAAAz/B,OACA1D,GACAtT,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAAsT,IAGAtT,KAAA+U,YAAAxB,YAGAqjC,GACCvN,EAAAiB,kBzC6igBK,SAAUn3C,EAAQC,EAASC,GAEjC,Y0CpqgBA,SAAAyjD,KAEA,OADAh0C,MACA8D,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C9D,EAAA8D,GAAAxF,UAAAwF,EAOA,OAHA,KAAA9D,EAAA9O,QAAA2nB,EAAA9gB,QAAAiI,EAAA,MACAA,IAAA,IAEA9C,KAAAwU,KAAAzR,KAAAg0C,EAAA51C,UAAA,IAAAnB,MAAAnJ,OAAAiM,KAGA,QAAAi0C,KAEA,OADAj0C,MACA8D,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C9D,EAAA8D,GAAAxF,UAAAwF,EAIA,QAAA9D,EAAA9O,OAAA,CACA,IAAA2nB,EAAA9gB,QAAAiI,EAAA,IAIA,MAAAA,GAAA,EAHAA,KAAA,GAMA,UAAAomC,GAAAC,gBAAArmC,GAAA0R,KAAA,GAAAwiC,IA3CA1jD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAsoB,EAAAtoB,EAAA,IACA61C,EAAA71C,EAAA,IACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAsBAD,GAAA0jD,OAkBA1jD,EAAA2jD,YACA,IAAAC,GAAA,WACA,QAAAA,MAKA,MAHAA,GAAAl3C,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA0rC,GAAAriC,KAEAoiC,IAEA5jD,GAAA4jD,cAMA,IAAAC,GAAA,SAAA/1C,GAEA,QAAA+1C,GAAAliC,GACA,GAAAlQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAAqyC,UAAA,EACAryC,EAAA/B,eACA+B,EAAAsyC,iBACAtyC,EAqCA,MA3CA6P,GAAAO,UAAAgiC,EAAA/1C,GAQA+1C,EAAAn3C,UAAAoV,MAAA,SAAAitB,GACAniC,KAAA8C,YAAAoC,KAAAi9B,IAEA8U,EAAAn3C,UAAAyb,UAAA,WACA,GAAAzY,GAAA9C,KAAA8C,YACA6X,EAAA7X,EAAA9O,MACA,QAAA2mB,EACA3a,KAAA+U,YAAAxB,eAEA,CACA,OAAAjf,GAAA,EAA2BA,EAAAqmB,IAAA3a,KAAAk3C,SAA2B5iD,IAAA,CACtD,GAAA6tC,GAAAr/B,EAAAxO,GACA+lB,EAAAivB,EAAAK,kBAAA3pC,KAAAmiC,IAAA7tC,EACA0L,MAAAm3C,eACAn3C,KAAAm3C,cAAAjyC,KAAAmV,GAEAra,KAAAgF,IAAAqV,GAEAra,KAAA8C,YAAA,OAGAm0C,EAAAn3C,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAnqC,KAAAk3C,SAAA,CACAl3C,KAAAk3C,UAAA,CACA,QAAA5iD,GAAA,EAA2BA,EAAA0L,KAAAm3C,cAAAnjD,OAA+BM,IAC1D,GAAAA,IAAA21C,EAAA,CACA,GAAA5vB,GAAAra,KAAAm3C,cAAA7iD,EACA+lB,GAAA5O,cACAzL,KAAAjF,OAAAsf,GAGAra,KAAAm3C,cAAA,KAEAn3C,KAAA+U,YAAAzB,KAAA02B,IAEAiN,GACC5N,EAAAiB,gBACDl3C,GAAA6jD,kB1C0rgBM,SAAU9jD,EAAQC,EAASC,GAEjC,Y2CtvgBA,SAAA+jD,GAAAC,EAAAr6B,GAEA,WADA,KAAAA,IAA4BA,EAAA5pB,EAAAkkD,uBAC5Bt3C,KAAAwU,KAAA,GAAA+iC,GAAAF,EAAAr6B,EAAAw6B,QAAAx6B,EAAAy6B,WAlDAnkD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EACAD,GAAAkkD,uBACAE,SAAA,EACAC,UAAA,GA8CArkD,EAAAgkD,UACA,IAAAG,GAAA,WACA,QAAAA,GAAAF,EAAAG,EAAAC,GACAz3C,KAAAq3C,mBACAr3C,KAAAw3C,UACAx3C,KAAAy3C,WAKA,MAHAF,GAAAz3C,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAmsC,GAAA9iC,EAAA5U,KAAAq3C,iBAAAr3C,KAAAw3C,QAAAx3C,KAAAy3C,YAEAF,KAOAG,EAAA,SAAAx2C,GAEA,QAAAw2C,GAAA3iC,EAAAsiC,EAAAM,EAAAC,GACA,GAAA/yC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAMA,OALA6E,GAAAkQ,cACAlQ,EAAAwyC,mBACAxyC,EAAA8yC,WACA9yC,EAAA+yC,YACA/yC,EAAAgzC,mBAAA,EACAhzC,EA0DA,MAlEA6P,GAAAO,UAAAyiC,EAAAx2C,GAUAw2C,EAAA53C,UAAAoV,MAAA,SAAA1hB,GACA,GAAAwM,KAAA83C,UACA93C,KAAA43C,YACA53C,KAAA63C,mBAAA,EACA73C,KAAA+3C,eAAAvkD,OAGA,CACA,GAAAwkD,GAAAh4C,KAAAi4C,oBAAAzkD,EACAwkD,IACAh4C,KAAAgF,IAAAhF,KAAA83C,UAAAxO,EAAAK,kBAAA3pC,KAAAg4C,IAEAh4C,KAAA23C,WACA33C,KAAA+U,YAAAzB,KAAA9f,GACAwM,KAAA43C,YACA53C,KAAA63C,mBAAA,EACA73C,KAAA+3C,eAAAvkD,MAKAkkD,EAAA53C,UAAAm4C,oBAAA,SAAAzkD,GACA,IACA,MAAAwM,MAAAq3C,iBAAA7jD,GAEA,MAAA0gB,GAEA,MADAlU,MAAA+U,YAAA7B,MAAAgB,GACA,OAGAwjC,EAAA53C,UAAA2W,aAAA,WACA,GAAA5P,GAAA7G,KAAA83C,EAAAjxC,EAAAixC,SAAAjxC,GAAAkxC,eAAAlxC,EAAAgxC,kBAAAhxC,EAAA+wC,SACA53C,MAAA+3C,eAAA,KACA/3C,KAAA63C,mBAAA,EACAC,IACA93C,KAAAjF,OAAA+8C,GACA93C,KAAA83C,UAAA,KACAA,EAAArsC,gBAGAisC,EAAA53C,UAAAo4C,cAAA,WACA,GAAArxC,GAAA7G,KAAA+U,EAAAlO,EAAAkO,YAAA+iC,EAAAjxC,EAAAixC,UAAAF,EAAA/wC,EAAA+wC,UAAAG,EAAAlxC,EAAAkxC,eAAAF,EAAAhxC,EAAAgxC,iBACAC,IAAAF,GAAAC,IACA9iC,EAAAzB,KAAAykC,GACA/3C,KAAA+3C,eAAA,KACA/3C,KAAA63C,mBAAA,IAGAH,EAAA53C,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAk4C,gBACAl4C,KAAAyW,gBAEAihC,EAAA53C,UAAA8pC,eAAA,WACA5pC,KAAAk4C,gBACAl4C,KAAAyW,gBAEAihC,GACCrO,EAAAiB,kB3C6ygBK,SAAUn3C,EAAQC,EAASC,GAEjC,Y4C96gBA,SAAA8kD,GAAA5iC,GAEA,WADA,KAAAA,IAA+BA,EAAA6iC,EAAAzkD,OAC/BqM,KAAAwU,KAAA,GAAA6jC,GAAA9iC,IAZAjiB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACA+kD,EAAA/kD,EAAA,GAWAD,GAAA+kD,cACA,IAAAG,GAAA,WACA,QAAAA,GAAA9kD,EAAA+kD,GACAv4C,KAAAxM,QACAwM,KAAAu4C,WAEA,MAAAD,KAEAllD,GAAAklD,cACA,IAAAD,GAAA,WACA,QAAAA,GAAA9iC,GACAvV,KAAAuV,YAKA,MAHA8iC,GAAAv4C,UAAAiD,KAAA,SAAAsQ,EAAAwB,GACA,MAAAA,GAAAtJ,UAAA,GAAAitC,GAAAnlC,EAAArT,KAAAuV,aAEA8iC,KAOAG,EAAA,SAAAt3C,GAEA,QAAAs3C,GAAAzjC,EAAAQ,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAA0Q,YACA1Q,EAAA4zC,SAAA,EACA5zC,EAAA4zC,SAAAljC,EAAA0E,MACApV,EAQA,MAdA6P,GAAAO,UAAAujC,EAAAt3C,GAQAs3C,EAAA14C,UAAAoV,MAAA,SAAA1hB,GACA,GAAAymB,GAAAja,KAAAuV,UAAA0E,MACAy+B,EAAAz+B,EAAAja,KAAAy4C,QACAz4C,MAAAy4C,SAAAx+B,EACAja,KAAA+U,YAAAzB,KAAA,GAAAglC,GAAA9kD,EAAAklD,KAEAF,GACC7jC,EAAAS,a5C+7gBK,SAAUjiB,EAAQC,EAASC,GAEjC,Y6C5+gBA,SAAAslD,GAAApjC,GAEA,WADA,KAAAA,IAA+BA,EAAA6iC,EAAAzkD,OAC/BqM,KAAAwU,KAAA,GAAAokC,GAAArjC,IAZAjiB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACA+kD,EAAA/kD,EAAA,GAWAD,GAAAulD,WACA,IAAAE,GAAA,WACA,QAAAA,GAAArlD,EAAAmlD,GACA34C,KAAAxM,QACAwM,KAAA24C,YAEA,MAAAE,KAEAzlD,GAAAylD,WACA,IAAAD,GAAA,WACA,QAAAA,GAAArjC,GACAvV,KAAAuV,YAKA,MAHAqjC,GAAA94C,UAAAiD,KAAA,SAAAsQ,EAAAwB,GACA,MAAAA,GAAAtJ,UAAA,GAAAutC,GAAAzlC,EAAArT,KAAAuV,aAEAqjC,KAEAE,EAAA,SAAA53C,GAEA,QAAA43C,GAAA/jC,EAAAQ,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAEA,OADA6E,GAAA0Q,YACA1Q,EAMA,MAVA6P,GAAAO,UAAA6jC,EAAA53C,GAMA43C,EAAAh5C,UAAAoV,MAAA,SAAA1hB,GACA,GAAAymB,GAAAja,KAAAuV,UAAA0E,KACAja,MAAA+U,YAAAzB,KAAA,GAAAulC,GAAArlD,EAAAymB,KAEA6+B,GACCnkC,EAAAS,a7C6/gBK,SAAUjiB,EAAQC,EAASC,GAEjC,Y8C3ihBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAI,EAAAJ,EAAA,IACAK,EAAAL,EAAA,IACA0lD,EAAA,SAAA73C,GAEA,QAAA63C,GAAAC,EAAAC,OACA,KAAAD,IAAyCA,EAAAE,OACzC,KAAAD,IAAmCA,EAAAr/B,OAAAC,kBACnC,IAAAhV,GAAA3D,EAAA6B,KAAA/C,KAAAg5C,EAAA,WAAoE,MAAAn0C,GAAAs0C,SAAsBn5C,IAI1F,OAHA6E,GAAAo0C,YACAp0C,EAAAs0C,MAAA,EACAt0C,EAAA3J,OAAA,EACA2J,EAsBA,MA9BA6P,GAAAO,UAAA8jC,EAAA73C,GAeA63C,EAAAj5C,UAAAmW,MAAA,WAGA,IAFA,GACA/C,GAAA6D,EADAlQ,EAAA7G,KAAA0W,EAAA7P,EAAA6P,QAAAuiC,EAAApyC,EAAAoyC,WAEAliC,EAAAL,EAAAM,WAAAhX,KAAAm5C,MAAApiC,EAAApB,QAAAsjC,KACA/lC,EAAA6D,EAAAX,QAAAW,EAAArB,MAAAqB,EAAApB,UAIA,GAAAzC,EAAA,CACA,KAAA6D,EAAAL,EAAAM,SACAD,EAAAtL,aAEA,MAAAyH,KAGA6lC,GACCrlD,EAAAE,eACDmlD,GAAAK,gBAAA,GACAhmD,EAAA2lD,sBAMA,IAAAG,GAAA,SAAAh4C,GAEA,QAAAg4C,GAAA3jC,EAAAC,EAAAta,OACA,KAAAA,IAA+BA,EAAAqa,EAAAra,OAAA,EAC/B,IAAA2J,GAAA3D,EAAA6B,KAAA/C,KAAAuV,EAAAC,IAAAxV,IAMA,OALA6E,GAAA0Q,YACA1Q,EAAA2Q,OACA3Q,EAAA3J,QACA2J,EAAAgS,QAAA,EACAhS,EAAA3J,MAAAqa,EAAAra,QACA2J,EAoDA,MA7DA6P,GAAAO,UAAAikC,EAAAh4C,GAWAg4C,EAAAp5C,UAAA2V,SAAA,SAAAC,EAAAC,GAEA,OADA,KAAAA,IAA+BA,EAAA,IAC/B3V,KAAA7J,GACA,MAAA+K,GAAApB,UAAA2V,SAAA1S,KAAA/C,KAAA0V,EAAAC,EAEA3V,MAAA6W,QAAA,CAKA,IAAAE,GAAA,GAAAmiC,GAAAl5C,KAAAuV,UAAAvV,KAAAwV,KAEA,OADAxV,MAAAgF,IAAA+R,GACAA,EAAAtB,SAAAC,EAAAC,IAEAujC,EAAAp5C,UAAAgW,eAAA,SAAAP,EAAApf,EAAAwf,OACA,KAAAA,IAA+BA,EAAA,GAC/B3V,KAAA2V,MAAAJ,EAAA4jC,MAAAxjC,CACA,IAAAe,GAAAnB,EAAAmB,OAGA,OAFAA,GAAAxR,KAAAlF,MACA0W,EAAAmV,KAAAqtB,EAAAG,cACA,GAEAH,EAAAp5C,UAAA+V,eAAA,SAAAN,EAAApf,EAAAwf,OACA,KAAAA,IAA+BA,EAAA,IAG/BujC,EAAAp5C,UAAAuW,SAAA,SAAAX,EAAAC,GACA,QAAA3V,KAAA6W,OACA,MAAA3V,GAAApB,UAAAuW,SAAAtT,KAAA/C,KAAA0V,EAAAC,IAGAujC,EAAAG,YAAA,SAAAz/C,EAAAmkB,GACA,MAAAnkB,GAAA+b,QAAAoI,EAAApI,MACA/b,EAAAsB,QAAA6iB,EAAA7iB,MACA,EAEAtB,EAAAsB,MAAA6iB,EAAA7iB,MACA,GAGA,EAGAtB,EAAA+b,MAAAoI,EAAApI,MACA,GAGA,GAGAujC,GACCzlD,EAAAI,YACDT,GAAA8lD,iB9CkjhBM,SAAU/lD,EAAQC,EAASC,GAEjC,Y+ChqhBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA8lD,GAAAjmD,EAAA,KACAkmD,EAAAlmD,EAAA,IAmCAD,GAAAomD,KAAA,GAAAD,GAAAE,cAAAH,EAAAI,a/CuqhBM,SAAUvmD,EAAQC,EAASC,GAEjC,YgD9shBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAmmD,GAAAtmD,EAAA,KACAumD,EAAAvmD,EAAA,IA8DAD,GAAAwnB,MAAA,GAAAg/B,GAAAC,eAAAF,EAAAG,chDothBQ,CAEF,SAAU3mD,EAAQC,EAASC,GAEjC,YiDxxhBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAumD,GAAA,WACA,QAAAA,GAAAC,EAAAC,OACA,KAAAA,IAA2CA,EAAArgC,OAAAC,mBAC3C7Z,KAAAg6C,kBACAh6C,KAAAi6C,oBAEA,MAAAF,KAEA3mD,GAAA2mD,mBjD+xhBM,SAAU5mD,EAAQC,EAASC,GAEjC,YkD1yhBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA0mD,GAAA7mD,EAAA,KACA8mD,EAAA,WACA,QAAAA,KACAn6C,KAAAm3C,iBAWA,MATAgD,GAAAr6C,UAAAs6C,mBAAA,WAEA,MADAp6C,MAAAm3C,cAAAjyC,KAAA,GAAAg1C,GAAAH,gBAAA/5C,KAAAuV,UAAA0E,QACAja,KAAAm3C,cAAAnjD,OAAA,GAEAmmD,EAAAr6C,UAAAu6C,qBAAA,SAAAn/C,GACA,GAAAo/C,GAAAt6C,KAAAm3C,cACAoD,EAAAD,EAAAp/C,EACAo/C,GAAAp/C,GAAA,GAAAg/C,GAAAH,gBAAAQ,EAAAP,gBAAAh6C,KAAAuV,UAAA0E,QAEAkgC,IAEA/mD,GAAA+mD,wBlDizhBM,SAAUhnD,EAAQC,EAASC,GAEjC,YmDp0hBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GAQAmnD,EAAA,SAAAt5C,GAEA,QAAAs5C,KACA,GAAA31C,GAAA3D,EAAA6B,KAAA/C,KAAA,yBAAAA,IAEA,OADA1M,QAAA6jB,eAAAtS,EAAA21C,EAAA16C,WACA+E,EAEA,MANA6P,GAAAO,UAAAulC,EAAAt5C,GAMAs5C,GACC/lD,MACDrB,GAAAonD,gBnD20hBM,SAAUrnD,EAAQC,EAASC,GAEjC,YoD91hBA,SAAAonD,GAAAC,EAAAC,GACA,OAAArmD,GAAA,EAAAqmB,EAAAggC,EAAA3mD,OAA2CM,EAAAqmB,EAASrmB,IAGpD,OAFAsmD,GAAAD,EAAArmD,GACAumD,EAAAvnD,OAAAwnD,oBAAAF,EAAA96C,WACAi7C,EAAA,EAAAC,EAAAH,EAAA7mD,OAAmD+mD,EAAAC,EAAUD,IAAA,CAC7D,GAAAE,GAAAJ,EAAAE,EACAL,GAAA56C,UAAAm7C,GAAAL,EAAA96C,UAAAm7C,IAPA3nD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,IAW9CJ,EAAAqnD,epDq2hBS,CAEH,SAAUtnD,EAAQC,EAASC,GAEjC,YqDl3hBA,SAAA6nD,MAFA5nD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,IAG9CJ,EAAA8nD,QrD23hBM,SAAU/nD,EAAQC,EAASC,GsD92hBjC,QAAA8nD,GAAAhlD,EAAAilD,GACAp7C,KAAAq7C,IAAAllD,EACA6J,KAAAs7C,SAAAF,EAnBA,GAAAj6C,GAAAo6C,SAAAz7C,UAAAqB,KAIA/N,GAAAopC,WAAA,WACA,UAAA2e,GAAAh6C,EAAA4B,KAAAy5B,WAAAgf,OAAAp6C,WAAAq6C,eAEAroD,EAAA4iB,YAAA,WACA,UAAAmlC,GAAAh6C,EAAA4B,KAAAiT,YAAAwlC,OAAAp6C,WAAA+U,gBAEA/iB,EAAAqoD,aACAroD,EAAA+iB,cAAA,SAAA+6B,GACAA,GACAA,EAAAwK,SAQAP,EAAAr7C,UAAA67C,MAAAR,EAAAr7C,UAAAgvB,IAAA,aACAqsB,EAAAr7C,UAAA47C,MAAA,WACA17C,KAAAs7C,SAAAv4C,KAAAy4C,OAAAx7C,KAAAq7C,MAIAjoD,EAAAwoD,OAAA,SAAA/zC,EAAAg0C,GACAJ,aAAA5zC,EAAAi0C,gBACAj0C,EAAAk0C,aAAAF,GAGAzoD,EAAA4oD,SAAA,SAAAn0C,GACA4zC,aAAA5zC,EAAAi0C,gBACAj0C,EAAAk0C,cAAA,GAGA3oD,EAAA6oD,aAAA7oD,EAAAyjB,OAAA,SAAAhP,GACA4zC,aAAA5zC,EAAAi0C,eAEA,IAAAD,GAAAh0C,EAAAk0C,YACAF,IAAA,IACAh0C,EAAAi0C,eAAAtf,WAAA,WACA30B,EAAAq0C,YACAr0C,EAAAq0C,cACKL,KAKLxoD,EAAA,KACAD,EAAA+oD,0BACA/oD,EAAAgpD,+BtDs4hBM,SAAUjpD,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GuD97hBtD,IAAA6jB,GAAAhkB,EAAA,GAgCAgpD,EAAA,WAcE,QAAAA,GAAcC,GAUZ,MATAt8C,MAAKs8C,SAAWA,EAChBt8C,KAAKu8C,SAAWD,EAASC,SAASC,QAClCx8C,KAAKy8C,OAASH,EAASG,OAAOD,QAC9Bx8C,KAAK08C,QAAUJ,EAASI,QAAQF,QAE3BG,EAAeC,YAClBD,EAAeC,UAAY58C,MAGtB28C,EAAeC,UA8C1B,MvDq2hBID,GuD36hBSN,EA2BXA,EAAAv8C,UAAA+8C,YAAA,SAAaN,GAEX,MADAv8C,MAAKu8C,SAAWA,EACTv8C,MAGTq8C,EAAAv8C,UAAAg9C,UAAA,SAAWx7C,EAAaI,GAKtB,MAJA1B,MAAKy8C,QACHn7C,IAAGA,EACHI,IAAGA,GAEE1B,MAGTq8C,EAAAv8C,UAAAi9C,WAAA,SAAYr7C,GAKV,MAJA1B,MAAK08C,SACHp7C,IAAKtB,KAAK08C,QAAQp7C,IAClBI,IAAGA,GAEE1B,MAGTq8C,EAAAv8C,UAAAk9C,WAAA,SAAYC,EAAcC,GACxB,GAAIC,IAAoBD,EAASD,EAAQjiC,KAAKoiC,IAAK,IAAMpiC,KAAKqiC,GAAK,MAAQriC,KAAKsiC,IAAK,IAAMtiC,KAAKqiC,GAAK,KACjGE,EAAqC,IAAtBviC,KAAKwiC,KAAML,GAAiBniC,KAAKqiC,EAWpD,OATIJ,GAAO,IACLM,GAAQ,EACVA,GAAc,IAGdA,GAAc,KAIX3jC,OAAQ2jC,EAAKE,QAAQz9C,KAAKu8C,YAGnCF,EAAAv8C,UAAA49C,mBAAA,SAAoBC,EAAYC,EAAaC,EAAcC,GACzD,GAAIb,GAAeU,EAAKC,EACpBV,EAAiBW,EAAOC,CAE5B,OAAO99C,MAAKg9C,WAAYC,EAAMC,IApErBb,EAAcM,EAAAnkC,YAD1BnB,EAAAoB,avDm9hBOC,WAAW,qBAAsBplB,UuDl9hB5B+oD,EvDq9hBT,IAAIM,KuDr9hBKvpD,GAAAipD,kBvD49hBP,SAAUlpD,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GwDhgiBtD,IAAA6jB,GAAAhkB,EAAA,GA2BA0qD,EAAA,WAOE,QAAAA,GAAa9lC,GACXjY,KAAKs8C,SAAWrkC,EAChBjY,KAAKg+C,YAAch+C,KAAKs8C,SAAS0B,YAAYC,KAC7Cj+C,KAAKk+C,WAAal+C,KAAKs8C,SAAS4B,WAAWD,KAC3Cj+C,KAAKu8C,SAAWv8C,KAAKs8C,SAASC,SAAS0B,KACvCj+C,KAAKm+C,aAAen+C,KAAKs8C,SAAS6B,aA8BtC,MA3BEJ,GAAAj+C,UAAAs+C,gBAAA,SAAiBC,EAAaC,GAC5B,GAAIC,GAAgBF,GAAOC,EAAMD,EAAMC,EACnCE,EAAgBH,EAAMC,EAAMD,EAAMC,EAClCG,GAAiBF,EAAQC,GAASA,EAAQ,GAE9C,OAAO5kC,QAAQ6kC,EAAMhB,QAAQz9C,KAAKu8C,YAGpCwB,EAAAj+C,UAAA4+C,oBAAA,SAAqBL,EAAaC,GAChC,GAAIC,GAAgBF,GAAOC,EAAMD,EAAMC,EACnCE,EAAgBH,EAAMC,EAAMD,EAAMC,EAClCG,EAAgBF,EAAQC,CAE5B,OAAO5kC,QAAQ6kC,EAAMhB,QAAQz9C,KAAKu8C,YAGpCwB,EAAAj+C,UAAA6+C,aAAA,SAAcF,EAAeG,GAS3B,MANI5+C,MAAKm+C,aACEM,EAAQG,EAERH,GAASG,GArCXb,EAAiBvlC,YAD7BnB,EAAAoB,axDwgiBOC,WAAW,qBAAsBplB,UwDvgiB5ByqD,KAAA3qD,GAAA2qD,qBxDghiBP,SAAU5qD,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GyD9iiBtD,IAAA6jB,GAAAhkB,EAAA,GACAwrD,EAAAxrD,EAAA,IACAyrD,EAAAzrD,EAAA,IAEA0rD,EAAA1rD,EAAA,IACA2rD,EAAA3rD,EAAA,KACA4rD,EAAA5rD,EAAA,KACA6rD,EAAA7rD,EAAA,KAsBA8rD,EAAA,mBAAAA,MAA2B,MAAdA,GAAY3mC,YApBxBnB,EAAA+nC,UACCtsC,cACEksC,EAAAK,QACAJ,EAAAK,kBACAJ,EAAAK,uBACAR,EAAA1R,cAEFj6C,SACE4rD,EAAAK,QACAJ,EAAAK,kBACAJ,EAAAK,uBACAR,EAAA1R,cAEFmS,SACEX,EAAAY,aACAX,EAAAthD,YACAshD,EAAArhD,wBAIS0hD,KAAA/rD,GAAA+rD,gBzDyjiBJ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUhsD,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,G0D3miBtD,IAAA6jB,GAAAhkB,EAAA,GACAyrD,EAAAzrD,EAAA,IAOAgsD,EAAA,WAME,QAAAA,KAHQr/C,KAAA0/C,MAAa,KACb1/C,KAAA2/C,iBAAwB,KAwClC,MApCEN,GAAAv/C,UAAA8/C,UAAA,WACE5/C,KAAK6/C,MAAMh1C,WAAY7K,KAAK6/C,MAAMrsD,MAAQwM,KAAK8/C,OAGjDT,EAAAv/C,UAAAigD,eAAA,SAAgBC,GAAhB,GAAAn7C,GAAA7E,IACEggD,GAAMC,iBAENjgD,KAAK4/C,YAED5/C,KAAK2/C,kBACPlE,aAAcz7C,KAAK2/C,kBAGjB3/C,KAAK0/C,OACPvpC,cAAenW,KAAK0/C,OAGtB1/C,KAAK2/C,iBAAmBnjB,WAAY,WAClC33B,EAAK66C,MAAQ1pC,YAAa,WACxBnR,EAAK+6C,aACJ,KAEF,MAGLP,EAAAv/C,UAAAogD,cAAA,SAAeF,GACbA,EAAMC,iBAEFjgD,KAAK2/C,kBACPlE,aAAcz7C,KAAK2/C,kBAGjB3/C,KAAK0/C,OACPvpC,cAAenW,KAAK0/C,QAxCflnC,YAARnB,EAAA8oC,Q1DwoiBKznC,WAAW,c0DxoiBDomC,EAAA1hD,c1DyoiBXiiD,EAAQv/C,UAAW,YAAS,I0DxoiBxB0Y,YAARnB,EAAA8oC,Q1D2oiBKznC,WAAW,cAAekB,SAC3BylC,EAAQv/C,UAAW,WAAQ,I0D9oiBrBu/C,EAAO7mC,YALnBnB,EAAAk2B,WACCzpC,SAAU,WACV0pC,SAAUn6C,EAAQ,O1DupiBZqlB,WAAW,yB0DppiBN2mC,KAAAjsD,GAAAisD,W1D6piBP,SAAUlsD,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,G2DxqiBtD,IAAA6jB,GAAAhkB,EAAA,GACAyrD,EAAAzrD,EAAA,IASAksD,EAAA,WAQE,QAAAA,MACF,MARW/mC,aAARnB,EAAA8oC,Q3DsqiBKznC,WAAW,c2DtqiBDomC,EAAA1hD,c3DuqiBXmiD,EAAuBz/C,UAAW,YAAS,I2DtqiBvC0Y,YAARnB,EAAA8oC,Q3DyqiBKznC,WAAW,cAAekB,SAC3B2lC,EAAuBz/C,UAAW,WAAQ,I2DzqiBtC0Y,YAARnB,EAAA8oC,Q3D4qiBKznC,WAAW,cAAekB,SAC3B2lC,EAAuBz/C,UAAW,cAAW,I2D5qiBzC0Y,YAARnB,EAAA8oC,Q3D+qiBKznC,WAAW,cAAekB,SAC3B2lC,EAAuBz/C,UAAW,cAAW,I2D/qiBzC0Y,YAARnB,EAAA8oC,Q3DkriBKznC,WAAW,cAAekB,SAC3B2lC,EAAuBz/C,UAAW,YAAS,I2DlriBvC0Y,YAARnB,EAAA8oC,Q3DqriBKznC,WAAW,cAAeplB,SAC3BisD,EAAuBz/C,UAAW,WAAQ,I2D5riBpCy/C,EAAsB/mC,YALlCnB,EAAAk2B,WACCzpC,SAAU,iBACV0pC,SAAUn6C,EAAQ,O3DqsiBZqlB,WAAW,yB2DlsiBN6mC,KAAAnsD,GAAAmsD,0B3D2siBP,SAAUpsD,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,G4DztiBtD,IAAA6jB,GAAAhkB,EAAA,GACAyrD,EAAAzrD,EAAA,IASAisD,EAAA,WAOE,QAAAA,MACF,MAPW9mC,aAARnB,EAAA8oC,Q5DutiBKznC,WAAW,c4DvtiBDomC,EAAA1hD,c5DwtiBXkiD,EAAkBx/C,UAAW,YAAS,I4DvtiBlC0Y,YAARnB,EAAA8oC,Q5D0tiBKznC,WAAW,cAAekB,SAC3B0lC,EAAkBx/C,UAAW,WAAQ,I4D1tiBjC0Y,YAARnB,EAAA8oC,Q5D6tiBKznC,WAAW,cAAekB,SAC3B0lC,EAAkBx/C,UAAW,cAAW,I4D7tiBpC0Y,YAARnB,EAAA8oC,Q5DguiBKznC,WAAW,cAAekB,SAC3B0lC,EAAkBx/C,UAAW,cAAW,I4DhuiBpC0Y,YAARnB,EAAA8oC,Q5DmuiBKznC,WAAW,cAAeplB,SAC3BgsD,EAAkBx/C,UAAW,WAAQ,I4DzuiB/Bw/C,EAAiB9mC,YAL7BnB,EAAAk2B,WACCzpC,SAAU,YACV0pC,SAAUn6C,EAAQ,O5DkviBZqlB,WAAW,yB4D/uiBN4mC,KAAAlsD,GAAAksD,qB5DuviBJ,CACA,CACA,CACA,CAEH,SAAUnsD,EAAQC,G6DvwiBxBD,EAAAC,QAAA,uL7D6wiBM,SAAUD,EAAQC,G8D7wiBxBD,EAAAC,QAAA,gC9DmxiBM,SAAUD,EAAQC,G+DnxiBxBD,EAAAC,QAAA,4wB/DyxiBM,SAAUD,EAAQC,GgEzxiBxBD,EAAAC,QAAA,mvBhE+xiBM,SAAUD,EAAQC,GiEpxiBxB,QAAAgtD,KACA,SAAA3rD,OAAA,mCAEA,QAAA4rD,KACA,SAAA5rD,OAAA,qCAsBA,QAAA6rD,GAAAC,GACA,GAAAC,IAAAhkB,WAEA,MAAAA,YAAA+jB,EAAA,EAGA,KAAAC,IAAAJ,IAAAI,IAAAhkB,WAEA,MADAgkB,GAAAhkB,WACAA,WAAA+jB,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAA/pC,GACL,IAEA,MAAAgqC,GAAAz9C,KAAA,KAAAw9C,EAAA,GACS,MAAA/pC,GAET,MAAAgqC,GAAAz9C,KAAA/C,KAAAugD,EAAA,KAMA,QAAAE,GAAAC,GACA,GAAAC,IAAAlF,aAEA,MAAAA,cAAAiF,EAGA,KAAAC,IAAAN,IAAAM,IAAAlF,aAEA,MADAkF,GAAAlF,aACAA,aAAAiF,EAEA,KAEA,MAAAC,GAAAD,GACK,MAAAlqC,GACL,IAEA,MAAAmqC,GAAA59C,KAAA,KAAA29C,GACS,MAAAlqC,GAGT,MAAAmqC,GAAA59C,KAAA/C,KAAA0gD,KAYA,QAAAE,KACAC,GAAAC,IAGAD,GAAA,EACAC,EAAA9sD,OACA4mB,EAAAkmC,EAAAjqD,OAAA+jB,GAEAmmC,GAAA,EAEAnmC,EAAA5mB,QACAgtD,KAIA,QAAAA,KACA,IAAAH,EAAA,CAGA,GAAA3P,GAAAoP,EAAAM,EACAC,IAAA,CAGA,KADA,GAAAlmC,GAAAC,EAAA5mB,OACA2mB,GAAA,CAGA,IAFAmmC,EAAAlmC,EACAA,OACAmmC,EAAApmC,GACAmmC,GACAA,EAAAC,GAAAE,KAGAF,IAAA,EACApmC,EAAAC,EAAA5mB,OAEA8sD,EAAA,KACAD,GAAA,EACAJ,EAAAvP,IAiBA,QAAAgQ,GAAAX,EAAA7tC,GACA1S,KAAAugD,MACAvgD,KAAA0S,QAYA,QAAAwoC,MAhKA,GAOAsF,GACAG,EARAQ,EAAAhuD,EAAAC,YAgBA,WACA,IAEAotD,EADA,kBAAAhkB,YACAA,WAEA4jB,EAEK,MAAA5pC,GACLgqC,EAAAJ,EAEA,IAEAO,EADA,kBAAAlF,cACAA,aAEA4E,EAEK,MAAA7pC,GACLmqC,EAAAN,KAuDA,IAEAS,GAFAlmC,KACAimC,GAAA,EAEAE,GAAA,CAyCAI,GAAAC,SAAA,SAAAb,GACA,GAAA18C,GAAA,GAAAtJ,OAAA6G,UAAApN,OAAA,EACA,IAAAoN,UAAApN,OAAA,EACA,OAAAM,GAAA,EAAuBA,EAAA8M,UAAApN,OAAsBM,IAC7CuP,EAAAvP,EAAA,GAAA8M,UAAA9M,EAGAsmB,GAAA1V,KAAA,GAAAg8C,GAAAX,EAAA18C,IACA,IAAA+W,EAAA5mB,QAAA6sD,GACAP,EAAAU,IASAE,EAAAphD,UAAAmhD,IAAA,WACAjhD,KAAAugD,IAAAp/C,MAAA,KAAAnB,KAAA0S,QAEAyuC,EAAAppC,MAAA,UACAopC,EAAAE,SAAA,EACAF,EAAAG,OACAH,EAAAI,QACAJ,EAAAK,QAAA,GACAL,EAAAM,YAIAN,EAAAO,GAAAxG,EACAiG,EAAAQ,YAAAzG,EACAiG,EAAAS,KAAA1G,EACAiG,EAAAU,IAAA3G,EACAiG,EAAAW,eAAA5G,EACAiG,EAAAY,mBAAA7G,EACAiG,EAAA32C,KAAA0wC,EACAiG,EAAAa,gBAAA9G,EACAiG,EAAAc,oBAAA/G,EAEAiG,EAAAe,UAAA,SAAAvrD,GAAqC,UAErCwqD,EAAAgB,QAAA,SAAAxrD,GACA,SAAAlC,OAAA,qCAGA0sD,EAAAiB,IAAA,WAA2B,WAC3BjB,EAAAkB,MAAA,SAAAtrD,GACA,SAAAtC,OAAA,mCAEA0sD,EAAAmB,MAAA,WAA4B,WjEsyiBtB,SAAUnvD,EAAQC,EAASC,GAEjC,YkE99iBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,IAE9CH,EAAA,EAIA,IAAAslB,GAAAtlB,EAAA,EACAD,GAAAgmB,QAAAT,EAAAS,QACAhmB,EAAAmvD,iBAAA5pC,EAAA4pC,gBAEA,IAAAxvC,GAAA1f,EAAA,EACAD,GAAAugB,WAAAZ,EAAAY,WAGAtgB,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAEAA,EAAA,KACAA,EAAA,KAEAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACA,IAAAulB,GAAAvlB,EAAA,EACAD,GAAA8lB,aAAAN,EAAAM,YACA,IAAAvE,GAAAthB,EAAA,EACAD,GAAAgiB,WAAAT,EAAAS,UACA,IAAAotC,GAAAnvD,EAAA,GACAD,GAAAylB,aAAA2pC,EAAA3pC,YACA,IAAA4pC,GAAApvD,EAAA,GACAD,GAAAqmB,cAAAgpC,EAAAhpC,aACA,IAAAipC,GAAArvD,EAAA,GACAD,GAAAqkB,gBAAAirC,EAAAjrC,eACA,IAAAkrC,GAAAtvD,EAAA,IACAD,GAAAwvD,sBAAAD,EAAAC,qBACA,IAAAjX,GAAAt4C,EAAA,GACAD,GAAA4f,aAAA24B,EAAA34B,YACA,IAAAuiC,GAAAliD,EAAA,GACAD,GAAAgkB,WAAAm+B,EAAAn+B,UACA,IAAAyrC,GAAAxvD,EAAA,GACAD,GAAA8jB,wBAAA2rC,EAAA3rC,uBACA,IAAAqC,GAAAlmB,EAAA,GACAD,GAAAknB,wBAAAf,EAAAe,uBACA,IAAAwoC,GAAAzvD,EAAA,IACAD,GAAAonD,aAAAsI,EAAAtI,YACA,IAAAuI,GAAA1vD,EAAA,IACAD,GAAA4vD,oBAAAD,EAAAC,mBACA,IAAAC,GAAA5vD,EAAA,GACAD,GAAAklD,aAAA2K,EAAA3K,YACA,IAAA4K,GAAA7vD,EAAA,GACAD,GAAAylD,UAAAqK,EAAArK,SACA,IAAAsK,GAAA9vD,EAAA,IACAD,GAAAgwD,cAAAD,EAAAC,aACA,IAAAC,GAAAhwD,EAAA,GACAD,GAAA2lD,qBAAAsK,EAAAtK,oBACA,IAAAuK,GAAAjwD,EAAA,GACAD,GAAAw+C,aAAA0R,EAAA1R,aACAx+C,EAAA0/C,UAAAwQ,EAAAxQ,UACA1/C,EAAAq/C,iBAAA6Q,EAAA7Q,gBACA,IAAA8Q,GAAAlwD,EAAA,IACA+kD,EAAA/kD,EAAA,IACAgmB,EAAAhmB,EAAA,IACAmwD,EAAAnwD,EAAA,KACAowD,EAAApwD,EAAA,KACAg5C,EAAAh5C,EAAA,IACAy7C,EAAAz7C,EAAA,IAeA4jB,GACAuiC,KAAA+J,EAAA/J,KACA5+B,MAAAvB,EAAAuB,MACA8oC,eAAAF,EAAAE,eACA/vD,MAAAykD,EAAAzkD,MAEAP,GAAA6jB,WAcA,IAAA0sC,IACAC,aAAAH,EAAAG,aACAzhB,WAAA2M,EAAA3M,WACAsK,SAAAJ,EAAAI,SAEAr5C,GAAAuwD,UlEq+iBM,SAAUxwD,EAAQC,EAASC,GAEjC,YmE1sjBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAiB9C,IAAAyjB,GAAA,WACA,QAAAA,GAAA+hC,EAAA/+B,OACA,KAAAA,IAA6BA,EAAAhD,EAAAgD,KAC7Bja,KAAAg5C,kBACAh5C,KAAAia,MAuBA,MAJAhD,GAAAnX,UAAA2V,SAAA,SAAAD,EAAAG,EAAAD,GAEA,WADA,KAAAC,IAA+BA,EAAA,GAC/B,GAAA3V,MAAAg5C,gBAAAh5C,KAAAwV,GAAAC,SAAAC,EAAAC,IAEAsB,IAEAA,GAAAgD,IAAAwB,KAAAxB,IAAAwB,KAAAxB,IAAA,WAAmD,UAAAwB,OACnDroB,EAAA6jB,anEitjBM,SAAU9jB,EAAQC,EAASC,GAEjC,YoElwjBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAwwD,EAAAxwD,EAAA,IACA0f,GAAAY,WAAAmwC,aAAAD,EAAAC,cpEywjBM,SAAU3wD,EAAQC,EAASC,GAEjC,YqE9wjBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA0wD,EAAA1wD,EAAA,IACA0f,GAAAY,WAAAqwC,iBAAAD,EAAAC,kBrEqxjBM,SAAU7wD,EAAQC,EAASC,GAEjC,YsE1xjBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA4wD,EAAA5wD,EAAA,IACA0f,GAAAY,WAAAs1B,cAAAgb,EAAAhb,etEiyjBM,SAAU91C,EAAQC,EAASC,GAEjC,YuEtyjBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA6wD,EAAA7wD,EAAA,IACA0f,GAAAY,WAAA9c,OAAAqtD,EAAArtD,QvE6yjBM,SAAU1D,EAAQC,EAASC,GAEjC,YwElzjBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA8wD,EAAA9wD,EAAA,IACA0f,GAAAY,WAAAywC,MAAAD,EAAAC,OxEyzjBM,SAAUjxD,EAAQC,EAASC,GAEjC,YyE9zjBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAgxD,EAAAhxD,EAAA,IACA0f,GAAAY,WAAA2wC,KAAAD,EAAAC,MzEq0jBM,SAAUnxD,EAAQC,EAASC,GAEjC,Y0E10jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAkxD,EAAAlxD,EAAA,IACA0f,GAAAY,WAAA6wC,UAAAD,EAAAC,W1Ei1jBM,SAAUrxD,EAAQC,EAASC,GAEjC,Y2Et1jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAoxD,EAAApxD,EAAA,IACA0f,GAAAY,WAAAG,MAAA2wC,EAAA3wC,O3E61jBM,SAAU3gB,EAAQC,EAASC,GAEjC,Y4El2jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAqxD,EAAArxD,EAAA,GACA0f,GAAAY,WAAA+/B,SAAAgR,EAAAhR,U5Ey2jBM,SAAUvgD,EAAQC,EAASC,GAEjC,Y6E92jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAsxD,EAAAtxD,EAAA,GACA0f,GAAAY,WAAA7M,KAAA69C,EAAA79C,M7Eq3jBM,SAAU3T,EAAQC,EAASC,GAEjC,Y8E13jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAuxD,EAAAvxD,EAAA,IACA0f,GAAAY,WAAAkxC,UAAAD,EAAAC,W9Ei4jBM,SAAU1xD,EAAQC,EAASC,GAEjC,Y+Et4jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAyxD,EAAAzxD,EAAA,IACA0f,GAAAY,WAAAoxC,iBAAAD,EAAAC,kB/E64jBM,SAAU5xD,EAAQC,EAASC,GAEjC,YgFl5jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA2xD,EAAA3xD,EAAA,GACA0f,GAAAY,WAAAo1B,YAAAic,EAAAjc,ahFy5jBM,SAAU51C,EAAQC,EAASC,GAEjC,YiF95jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA4xD,EAAA5xD,EAAA,IACA0f,GAAAY,WAAAuxC,SAAAD,EAAAE,mBAAA5qB,QjFq6jBM,SAAUpnC,EAAQC,EAASC,GAEjC,YkF16jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA+xD,EAAA/xD,EAAA,IACA0f,GAAAY,WAAA0xC,GAAAD,EAAAE,KlFi7jBM,SAAUnyD,EAAQC,EAASC,GAEjC,YmFt7jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAkyD,EAAAlyD,EAAA,IACA0f,GAAAY,WAAA4kC,SAAAgN,EAAAhN,UnF67jBM,SAAUplD,EAAQC,EAASC,GAEjC,YoFl8jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAmyD,EAAAnyD,EAAA,IACA0f,GAAAY,WAAAgnB,MAAA6qB,EAAA7qB,OpFy8jBM,SAAUxnC,EAAQC,EAASC,GAEjC,YqF98jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAoyD,EAAApyD,EAAA,IACA0f,GAAAY,WAAA+xC,MAAAD,EAAAC,OrFq9jBM,SAAUvyD,EAAQC,EAASC,GAEjC,YsF19jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAsyD,EAAAtyD,EAAA,GACA0f,GAAAY,WAAAC,GAAA+xC,EAAA/xC,ItFi+jBM,SAAUzgB,EAAQC,EAASC,GAEjC,YuFt+jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAuyD,EAAAvyD,EAAA,GACA0f,GAAAY,WAAA6iC,kBAAAoP,EAAAjP,yBvF6+jBM,SAAUxjD,EAAQC,EAASC,GAEjC,YwFl/jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAwyD,EAAAxyD,EAAA,IACA0f,GAAAY,WAAAmyC,MAAAD,EAAAC,OxFy/jBM,SAAU3yD,EAAQC,EAASC,GAEjC,YyF9/jBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA0yD,EAAA1yD,EAAA,GACA0f,GAAAY,WAAAmjC,KAAAiP,EAAAhP,YzFqgkBM,SAAU5jD,EAAQC,EAASC,GAEjC,Y0F1gkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA2yD,EAAA3yD,EAAA,IACA0f,GAAAY,WAAAsyC,MAAAD,EAAAC,O1FihkBM,SAAU9yD,EAAQC,EAASC,GAEjC,Y2FthkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA6yD,EAAA7yD,EAAA,IACA0f,GAAAY,WAAAE,MAAAqyC,EAAAC,Q3F6hkBM,SAAUhzD,EAAQC,EAASC,GAEjC,Y4FlikBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA+yD,EAAA/yD,EAAA,IACA0f,GAAAY,WAAA0yC,MAAAD,EAAAC,O5FyikBM,SAAUlzD,EAAQC,EAASC,GAEjC,Y6F9ikBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAizD,EAAAjzD,EAAA,IACA0f,GAAAY,WAAA4yC,MAAAD,EAAAC,O7FqjkBM,SAAUpzD,EAAQC,EAASC,GAEjC,Y8F1jkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAmzD,EAAAnzD,EAAA,IACA0f,GAAAY,WAAA8yC,IAAAD,EAAAC,K9FikkBM,SAAUtzD,EAAQC,EAASC,GAEjC,Y+FtkkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAqzD,EAAArzD,EAAA,IACA0f,GAAAY,WAAA7T,UAAA6mD,MAAAD,EAAAC,O/F6kkBM,SAAUxzD,EAAQC,EAASC,GAEjC,YgGllkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAuzD,EAAAvzD,EAAA,IACA0f,GAAAY,WAAA7T,UAAA+mD,UAAAD,EAAAC,WhGylkBM,SAAU1zD,EAAQC,EAASC,GAEjC,YiG9lkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAyzD,EAAAzzD,EAAA,IACA0f,GAAAY,WAAA7T,UAAAsrC,OAAA0b,EAAA1b,QjGqmkBM,SAAUj4C,EAAQC,EAASC,GAEjC,YkG1mkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA0zD,EAAA1zD,EAAA,IACA0f,GAAAY,WAAA7T,UAAAknD,YAAAD,EAAAC,alGinkBM,SAAU7zD,EAAQC,EAASC,GAEjC,YmGtnkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA4zD,EAAA5zD,EAAA,IACA0f,GAAAY,WAAA7T,UAAAonD,WAAAD,EAAAC,YnG6nkBM,SAAU/zD,EAAQC,EAASC,GAEjC,YoGlokBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA8zD,EAAA9zD,EAAA,IACA0f,GAAAY,WAAA7T,UAAAsnD,aAAAD,EAAAC,cpGyokBM,SAAUj0D,EAAQC,EAASC,GAEjC,YqG9okBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAg0D,EAAAh0D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAwnD,WAAAD,EAAAC,YrGqpkBM,SAAUn0D,EAAQC,EAASC,GAEjC,YsG1pkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAk0D,EAAAl0D,EAAA,GACA0f,GAAAY,WAAA7T,UAAA89B,MAAA2pB,EAAA1T,OACA9gC,EAAAY,WAAA7T,UAAA+zC,OAAA0T,EAAA1T,QtGiqkBM,SAAU1gD,EAAQC,EAASC,GAEjC,YuGvqkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAm0D,EAAAn0D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA2nD,WAAAD,EAAAC,YvG8qkBM,SAAUt0D,EAAQC,EAASC,GAEjC,YwGnrkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA4wD,EAAA5wD,EAAA,GACA0f,GAAAY,WAAA7T,UAAAmpC,cAAAgb,EAAAhb,exG0rkBM,SAAU91C,EAAQC,EAASC,GAEjC,YyG/rkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA6wD,EAAA7wD,EAAA,GACA0f,GAAAY,WAAA7T,UAAAjJ,OAAAqtD,EAAArtD,QzGsskBM,SAAU1D,EAAQC,EAASC,GAEjC,Y0G3skBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAq0D,EAAAr0D,EAAA,GACA0f,GAAAY,WAAA7T,UAAAs0C,UAAAsT,EAAAtT,W1GktkBM,SAAUjhD,EAAQC,EAASC,GAEjC,Y2GvtkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAs0D,EAAAt0D,EAAA,GACA0f,GAAAY,WAAA7T,UAAAu0C,UAAAsT,EAAAtT,W3G8tkBM,SAAUlhD,EAAQC,EAASC,GAEjC,Y4GnukBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAu0D,EAAAv0D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA+nD,YAAAD,EAAAC,a5G0ukBM,SAAU10D,EAAQC,EAASC,GAEjC,Y6G/ukBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAy0D,EAAAz0D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAkV,MAAA8yC,EAAA9yC,O7GsvkBM,SAAU7hB,EAAQC,EAASC,GAEjC,Y8G3vkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA00D,EAAA10D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAkoD,SAAAD,EAAAC,U9GkwkBM,SAAU70D,EAAQC,EAASC,GAEjC,Y+GvwkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA40D,EAAA50D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAooD,aAAAD,EAAAC,c/G8wkBM,SAAU/0D,EAAQC,EAASC,GAEjC,YgHnxkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA80D,EAAA90D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAsoD,eAAAD,EAAAC,gBhH0xkBM,SAAUj1D,EAAQC,EAASC,GAEjC,YiH/xkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAg1D,EAAAh1D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA6V,MAAA0yC,EAAA1yC,OjHsykBM,SAAUxiB,EAAQC,EAASC,GAEjC,YkH3ykBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAi1D,EAAAj1D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAyoD,UAAAD,EAAAC,WlHkzkBM,SAAUp1D,EAAQC,EAASC,GAEjC,YmHvzkBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAm1D,EAAAn1D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA2oD,cAAAD,EAAAC,enH8zkBM,SAAUt1D,EAAQC,EAASC,GAEjC,YoHn0kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAq1D,EAAAr1D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA6oD,SAAAD,EAAAC,UpH00kBM,SAAUx1D,EAAQC,EAASC,GAEjC,YqH/0kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAu1D,EAAAv1D,EAAA,GACA0f,GAAAY,WAAA7T,UAAAy0C,qBAAAqU,EAAArU,sBrHs1kBM,SAAUphD,EAAQC,EAASC,GAEjC,YsH31kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAw1D,EAAAx1D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAgpD,wBAAAD,EAAAC,yBtHk2kBM,SAAU31D,EAAQC,EAASC,GAEjC,YuHv2kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA01D,EAAA11D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA0T,GAAAu1C,EAAAC,IACAj2C,EAAAY,WAAA7T,UAAAkpD,IAAAD,EAAAC,KvH82kBM,SAAU71D,EAAQC,EAASC,GAEjC,YwHp3kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA41D,EAAA51D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAopD,UAAAD,EAAAC,WxH23kBM,SAAU/1D,EAAQC,EAASC,GAEjC,YyHh4kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA81D,EAAA91D,EAAA,GACA0f,GAAAY,WAAA7T,UAAA2gB,MAAA0oC,EAAA1oC,OzHu4kBM,SAAUttB,EAAQC,EAASC,GAEjC,Y0H54kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA+1D,EAAA/1D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAupD,QAAAD,EAAAC,S1Hm5kBM,SAAUl2D,EAAQC,EAASC,GAEjC,Y2Hx5kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAi2D,EAAAj2D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAypD,WAAAD,EAAAC,Y3H+5kBM,SAAUp2D,EAAQC,EAASC,GAEjC,Y4Hp6kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAm2D,EAAAn2D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA2pD,OAAAD,EAAAC,Q5H26kBM,SAAUt2D,EAAQC,EAASC,GAEjC,Y6Hh7kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAq2D,EAAAr2D,EAAA,GACA0f,GAAAY,WAAA7T,UAAA+C,OAAA6mD,EAAA7mD,Q7Hu7kBM,SAAU1P,EAAQC,EAASC,GAEjC,Y8H57kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAs2D,EAAAt2D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA8pD,QAAAD,EAAAE,SACA92C,EAAAY,WAAA7T,UAAA+pD,SAAAF,EAAAE,U9Hm8kBM,SAAU12D,EAAQC,EAASC,GAEjC,Y+Hz8kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAy2D,EAAAz2D,EAAA,GACA0f,GAAAY,WAAA7T,UAAA84B,KAAAkxB,EAAAlxB,M/Hg9kBM,SAAUzlC,EAAQC,EAASC,GAEjC,YgIr9kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA02D,EAAA12D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAkqD,UAAAD,EAAAC,WhI49kBM,SAAU72D,EAAQC,EAASC,GAEjC,YiIj+kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA42D,EAAA52D,EAAA,GACA0f,GAAAY,WAAA7T,UAAAs1C,MAAA6U,EAAA7U,OjIw+kBM,SAAUjiD,EAAQC,EAASC,GAEjC,YkI7+kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA62D,EAAA72D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAqqD,QAAAD,EAAAC,SlIo/kBM,SAAUh3D,EAAQC,EAASC,GAEjC,YmIz/kBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA+2D,EAAA/2D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAuqD,eAAAD,EAAAC,gBnIgglBM,SAAUl3D,EAAQC,EAASC,GAEjC,YoIrglBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAi3D,EAAAj3D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAyqD,QAAAD,EAAAC,SpI4glBM,SAAUp3D,EAAQC,EAASC,GAEjC,YqIjhlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAm3D,EAAAn3D,EAAA,GACA0f,GAAAY,WAAA7T,UAAAg2C,KAAA0U,EAAA1U,MrIwhlBM,SAAU3iD,EAAQC,EAASC,GAEjC,YsI7hlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAo3D,EAAAp3D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA4qD,IAAAD,EAAAE,SACA53C,EAAAY,WAAA7T,UAAA8qD,QAAAH,EAAAE,UtIoilBM,SAAUx3D,EAAQC,EAASC,GAEjC,YuI1ilBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAo9C,EAAAp9C,EAAA,GACA0f,GAAAY,WAAA7T,UAAAjL,IAAA47C,EAAA57C,KvIijlBM,SAAU1B,EAAQC,EAASC,GAEjC,YwItjlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAw3D,EAAAx3D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAgrD,MAAAD,EAAAC,OxI6jlBM,SAAU33D,EAAQC,EAASC,GAEjC,YyIlklBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA03D,EAAA13D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAkrD,YAAAD,EAAAC,azIyklBM,SAAU73D,EAAQC,EAASC,GAEjC,Y0I9klBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA43D,EAAA53D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA4B,IAAAupD,EAAAvpD,K1IqllBM,SAAUvO,EAAQC,EAASC,GAEjC,Y2I1llBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAmyD,EAAAnyD,EAAA,IACA0f,GAAAY,WAAA7T,UAAA66B,MAAA6qB,EAAA7qB,O3IimlBM,SAAUxnC,EAAQC,EAASC,GAEjC,Y4ItmlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAq3C,EAAAr3C,EAAA,GACA0f,GAAAY,WAAA7T,UAAAorD,SAAAxgB,EAAAwgB,U5I6mlBM,SAAU/3D,EAAQC,EAASC,GAEjC,Y6IlnlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAihD,EAAAjhD,EAAA,GACA0f,GAAAY,WAAA7T,UAAAirC,SAAAuJ,EAAAvJ,SACAh4B,EAAAY,WAAA7T,UAAAqrD,QAAA7W,EAAAvJ,U7IynlBM,SAAU53C,EAAQC,EAASC,GAEjC,Y8I/nlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA+3D,EAAA/3D,EAAA,GACA0f,GAAAY,WAAA7T,UAAAurD,UAAAD,EAAAlV,WACAnjC,EAAAY,WAAA7T,UAAAo2C,WAAAkV,EAAAlV,Y9IsolBM,SAAU/iD,EAAQC,EAASC,GAEjC,Y+I5olBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAi4D,EAAAj4D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAyrD,UAAAD,EAAAC,W/ImplBM,SAAUp4D,EAAQC,EAASC,GAEjC,YgJxplBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAm4D,EAAAn4D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAwB,IAAAkqD,EAAAlqD,KhJ+plBM,SAAUnO,EAAQC,EAASC,GAEjC,YiJpqlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAo4D,EAAAp4D,EAAA,GACA0f,GAAAY,WAAA7T,UAAA4rD,UAAAD,EAAAC,WjJ2qlBM,SAAUv4D,EAAQC,EAASC,GAEjC,YkJhrlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAimB,EAAAjmB,EAAA,GACA0f,GAAAY,WAAA7T,UAAA2rC,UAAAnyB,EAAAmyB,WlJurlBM,SAAUt4C,EAAQC,EAASC,GAEjC,YmJ5rlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAuyD,EAAAvyD,EAAA,GACA0f,GAAAY,WAAA7T,UAAA02C,kBAAAoP,EAAApP,mBnJmslBM,SAAUrjD,EAAQC,EAASC,GAEjC,YoJxslBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAs4D,EAAAt4D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA8rD,SAAAD,EAAAC,UpJ+slBM,SAAUz4D,EAAQC,EAASC,GAEjC,YqJptlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAw4D,EAAAx4D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAgsD,UAAAD,EAAAC,WrJ2tlBM,SAAU34D,EAAQC,EAASC,GAEjC,YsJhulBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA04D,EAAA14D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAksD,MAAAD,EAAAC,OtJuulBM,SAAU74D,EAAQC,EAASC,GAEjC,YuJ5ulBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA44D,EAAA54D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAosD,QAAAD,EAAAC,SvJmvlBM,SAAU/4D,EAAQC,EAASC,GAEjC,YwJxvlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA84D,EAAA94D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAssD,gBAAAD,EAAAC,iBxJ+vlBM,SAAUj5D,EAAQC,EAASC,GAEjC,YyJpwlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAg5D,EAAAh5D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAwsD,YAAAD,EAAAC,azJ2wlBM,SAAUn5D,EAAQC,EAASC,GAEjC,Y0JhxlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAk5D,EAAAl5D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA0sD,cAAAD,EAAAC,e1JuxlBM,SAAUr5D,EAAQC,EAASC,GAEjC,Y2J5xlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA0yD,EAAA1yD,EAAA,GACA0f,GAAAY,WAAA7T,UAAAg3C,KAAAiP,EAAAjP,M3JmylBM,SAAU3jD,EAAQC,EAASC,GAEjC,Y4JxylBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAo5D,EAAAp5D,EAAA,GACA0f,GAAAY,WAAA7T,UAAA3K,OAAAs3D,EAAAt3D,Q5J+ylBM,SAAUhC,EAAQC,EAASC,GAEjC,Y6JpzlBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAq5D,EAAAr5D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA6sD,OAAAD,EAAAC,Q7J2zlBM,SAAUx5D,EAAQC,EAASC,GAEjC,Y8Jh0lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAu5D,EAAAv5D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA+sD,WAAAD,EAAAC,Y9Ju0lBM,SAAU15D,EAAQC,EAASC,GAEjC,Y+J50lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAy5D,EAAAz5D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAitD,MAAAD,EAAAC,O/Jm1lBM,SAAU55D,EAAQC,EAASC,GAEjC,YgKx1lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA25D,EAAA35D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAmtD,UAAAD,EAAAC,WhK+1lBM,SAAU95D,EAAQC,EAASC,GAEjC,YiKp2lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA65D,EAAA75D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAqtD,OAAAD,EAAAC,QjK22lBM,SAAUh6D,EAAQC,EAASC,GAEjC,YkKh3lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA+5D,EAAA/5D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAutD,WAAAD,EAAAC,YlKu3lBM,SAAUl6D,EAAQC,EAASC,GAEjC,YmK53lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAi6D,EAAAj6D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAytD,KAAAD,EAAAC,MnKm4lBM,SAAUp6D,EAAQC,EAASC,GAEjC,YoKx4lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAm6D,EAAAn6D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA2tD,cAAAD,EAAAC,epK+4lBM,SAAUt6D,EAAQC,EAASC,GAEjC,YqKp5lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAq6D,EAAAr6D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA6tD,MAAAD,EAAAC,OrK25lBM,SAAUx6D,EAAQC,EAASC,GAEjC,YsKh6lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAu6D,EAAAv6D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA+tD,YAAAD,EAAAC,atKu6lBM,SAAU16D,EAAQC,EAASC,GAEjC,YuK56lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAy6D,EAAAz6D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAiuD,OAAAD,EAAAC,QvKm7lBM,SAAU56D,EAAQC,EAASC,GAEjC,YwKx7lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA26D,EAAA36D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAmuD,KAAAD,EAAAC,MxK+7lBM,SAAU96D,EAAQC,EAASC,GAEjC,YyKp8lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA66D,EAAA76D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAquD,SAAAD,EAAAC,UzK28lBM,SAAUh7D,EAAQC,EAASC,GAEjC,Y0Kh9lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA+6D,EAAA/6D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAuuD,UAAAD,EAAAC,W1Ku9lBM,SAAUl7D,EAAQC,EAASC,GAEjC,Y2K59lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAi7D,EAAAj7D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAyuD,UAAAD,EAAAC,W3Km+lBM,SAAUp7D,EAAQC,EAASC,GAEjC,Y4Kx+lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAm7D,EAAAn7D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA2uD,UAAAD,EAAAC,W5K++lBM,SAAUt7D,EAAQC,EAASC,GAEjC,Y6Kp/lBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAq7D,EAAAr7D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA6uD,YAAAD,EAAAC,a7K2/lBM,SAAUx7D,EAAQC,EAASC,GAEjC,Y8KhgmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAu7D,EAAAv7D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA+uD,OAAAD,EAAAE,QACA/7C,EAAAY,WAAA7T,UAAAgvD,QAAAF,EAAAE,S9KugmBM,SAAU37D,EAAQC,EAASC,GAEjC,Y+K7gmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA07D,EAAA17D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAkvD,UAAAD,EAAAC,W/KohmBM,SAAU77D,EAAQC,EAASC,GAEjC,YgLzhmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA47D,EAAA57D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAovD,YAAAD,EAAAC,ahLgimBM,SAAU/7D,EAAQC,EAASC,GAEjC,YiLrimBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA87D,EAAA97D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAsvD,KAAAD,EAAAC,MjL4imBM,SAAUj8D,EAAQC,EAASC,GAEjC,YkLjjmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAg8D,EAAAh8D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAwvD,SAAAD,EAAAC,UlLwjmBM,SAAUn8D,EAAQC,EAASC,GAEjC,YmL7jmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAk8D,EAAAl8D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA0vD,UAAAD,EAAAC,WnLokmBM,SAAUr8D,EAAQC,EAASC,GAEjC,YoLzkmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAo8D,EAAAp8D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA4vD,UAAAD,EAAAC,WpLglmBM,SAAUv8D,EAAQC,EAASC,GAEjC,YqLrlmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAs8D,EAAAt8D,EAAA,GACA0f,GAAAY,WAAA7T,UAAAs3C,SAAAuY,EAAAvY,UrL4lmBM,SAAUjkD,EAAQC,EAASC,GAEjC,YsLjmmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAu8D,EAAAv8D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA+vD,aAAAD,EAAAC,ctLwmmBM,SAAU18D,EAAQC,EAASC,GAEjC,YuL7mmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA4vD,EAAA5vD,EAAA,GACA0f,GAAAY,WAAA7T,UAAAq4C,aAAA8K,EAAA9K,cvLonmBM,SAAUhlD,EAAQC,EAASC,GAEjC,YwLznmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAy8D,EAAAz8D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAoxC,QAAA4e,EAAA5e,SxLgomBM,SAAU/9C,EAAQC,EAASC,GAEjC,YyLromBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA08D,EAAA18D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAkwD,YAAAD,EAAAC,azL4omBM,SAAU78D,EAAQC,EAASC,GAEjC,Y0LjpmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA6vD,EAAA7vD,EAAA,GACA0f,GAAAY,WAAA7T,UAAA64C,UAAAuK,EAAAvK,W1LwpmBM,SAAUxlD,EAAQC,EAASC,GAEjC,Y2L7pmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA48D,EAAA58D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAowD,QAAAD,EAAAC,S3LoqmBM,SAAU/8D,EAAQC,EAASC,GAEjC,Y4LzqmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA88D,EAAA98D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAswD,UAAAD,EAAAC,W5LgrmBM,SAAUj9D,EAAQC,EAASC,GAEjC,Y6LrrmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAg9D,EAAAh9D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA07C,OAAA6U,EAAA7U,Q7L4rmBM,SAAUroD,EAAQC,EAASC,GAEjC,Y8LjsmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAi9D,EAAAj9D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAywD,YAAAD,EAAAC,a9LwsmBM,SAAUp9D,EAAQC,EAASC,GAEjC,Y+L7smBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAm9D,EAAAn9D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA6Z,WAAA62C,EAAA72C,Y/LotmBM,SAAUxmB,EAAQC,EAASC,GAEjC,YgMztmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAo9D,EAAAp9D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA4wD,aAAAD,EAAAC,chMgumBM,SAAUv9D,EAAQC,EAASC,GAEjC,YiMrumBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAs9D,EAAAt9D,EAAA,IACA0f,GAAAY,WAAA7T,UAAA8wD,WAAAD,EAAAC,YjM4umBM,SAAUz9D,EAAQC,EAASC,GAEjC,YkMjvmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAw9D,EAAAx9D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAgxD,eAAAD,EAAAC,gBlMwvmBM,SAAU39D,EAAQC,EAASC,GAEjC,YmM7vmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACAmzD,EAAAnzD,EAAA,GACA0f,GAAAY,WAAA7T,UAAA2mD,IAAAD,EAAAta,UnMowmBM,SAAU/4C,EAAQC,EAASC,GAEjC,YoMzwmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAuf,GAAA1f,EAAA,GACA09D,EAAA19D,EAAA,IACA0f,GAAAY,WAAA7T,UAAAkxD,OAAAD,EAAAC,QpMgxmBM,SAAU79D,EAAQC,EAASC,GAEjC,YqMrxmBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACA49D,EAAA59D,EAAA,KACA69D,EAAA79D,EAAA,IAMA87C,EAAA,SAAAjuC,GAEA,QAAAiuC,GAAAgiB,EAAA57C,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,WAOA,OANA6E,GAAAssD,YACAtsD,EAAA0Q,YACAA,GAAA,IAAA47C,EAAAn9D,SACA6Q,EAAAyqC,WAAA,EACAzqC,EAAArR,MAAA29D,EAAA,IAEAtsD,EA2CA,MApDA6P,GAAAO,UAAAk6B,EAAAjuC,GAWAiuC,EAAA5U,OAAA,SAAA42B,EAAA57C,GACA,GAAAvhB,GAAAm9D,EAAAn9D,MACA,YAAAA,EACA,GAAAk9D,GAAAE,gBAEA,IAAAp9D,EACA,GAAAi9D,GAAAI,iBAAAF,EAAA,GAAA57C,GAGA,GAAA45B,GAAAgiB,EAAA57C,IAGA45B,EAAAvD,SAAA,SAAAl2B,GACA,GAAAy7C,GAAAz7C,EAAAy7C,UAAAj2D,EAAAwa,EAAAxa,MAAAlH,EAAA0hB,EAAA1hB,OAAA4gB,EAAAc,EAAAd,UACA,KAAAA,EAAAgB,OAAA,CAGA,GAAA1a,GAAAlH,EAEA,WADA4gB,GAAArB,UAGAqB,GAAAtB,KAAA69C,EAAAj2D,IACAwa,EAAAxa,QAAA,EACA8E,KAAAyV,SAAAC,KAEAy5B,EAAArvC,UAAAkZ,WAAA,SAAApE,GACA,GACA/N,GAAA7G,KAAAmxD,EAAAtqD,EAAAsqD,UAAA57C,EAAA1O,EAAA0O,UACAvhB,EAAAm9D,EAAAn9D,MACA,IAAAuhB,EACA,MAAAA,GAAAE,SAAA05B,EAAAvD,SAAA,GACAulB,YAAAj2D,MALA,EAKAlH,SAAA4gB,cAIA,QAAAtgB,GAAA,EAA2BA,EAAAN,IAAA4gB,EAAAgB,OAAkCthB,IAC7DsgB,EAAAtB,KAAA69C,EAAA78D,GAEAsgB,GAAArB,YAGA47B,GACCp8B,EAAAY,WACDvgB,GAAA+7C,uBrM4xmBM,SAAUh8C,EAAQC,EAASC,GAEjC,YsMhmmBA,SAAA+7C,GAAAvD,GACA,GAAAr4C,GAAAq4C,EAAAr4C,MAAA89D,EAAAzlB,EAAAylB,OACAA,GAAAh+C,KAAA9f,GACA89D,EAAA/9C,WAEA,QAAA87B,GAAAxD,GACA,GAAA33B,GAAA23B,EAAA33B,GAAA23B,GAAAylB,QACAp+C,MAAAgB,GAtQA5gB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACAmvD,EAAAnvD,EAAA,IAMAk+D,EAAA,SAAArwD,GAEA,QAAAqwD,GAAAC,EAAA1tD,EAAAD,EAAA49B,EAAAlsB,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,WAMA,OALA6E,GAAA2sD,eACA3sD,EAAAf,WACAe,EAAAhB,OACAgB,EAAA48B,UACA58B,EAAA0Q,YACA1Q,EAwOA,MAhPA6P,GAAAO,UAAAs8C,EAAArwD,GAsJAqwD,EAAAh3B,OAAA,SAAAk3B,EAAA3tD,EAAAyR,GAEA,WADA,KAAAzR,IAAkCA,MAAA7J,IAClC,WAEA,OADA4J,MACA+C,EAAA,EAA4BA,EAAAxF,UAAApN,OAAuB4S,IACnD/C,EAAA+C,GAAAxF,UAAAwF,EAEA,WAAA2qD,GAAAE,EAAA3tD,EAAAD,EAAA7D,KAAAuV,KAGAg8C,EAAAzxD,UAAAkZ,WAAA,SAAApE,GACA,GAAA48C,GAAAxxD,KAAAwxD,aACA3tD,EAAA7D,KAAA6D,KACA0R,EAAAvV,KAAAuV,UACA+7C,EAAAtxD,KAAAsxD,OACA,IAAA/7C,EAmCA,MAAAA,GAAAE,SAAA87C,EAAA3lB,SAAA,GAA4E/2B,OAAA7U,KAAA4U,aAAA6sB,QAAAzhC,KAAAyhC,SAlC5E,KAAA6vB,EAAA,CACAA,EAAAtxD,KAAAsxD,QAAA,GAAA9O,GAAA3pC,YACA,IAAA64C,GAAA,QAAAC,KAEA,OADAC,MACAhrD,EAAA,EAAoCA,EAAAxF,UAAApN,OAAuB4S,IAC3DgrD,EAAAhrD,GAAAxF,UAAAwF,EAEA,IAAAiO,GAAA88C,EAAA98C,OACA/Q,EAAA+Q,EAAA/Q,SAAAwtD,EAAAz8C,EAAAy8C,OACA,IAAAxtD,EAAA,CACA,GAAA+tD,GAAAlhB,EAAAoB,SAAAjuC,GAAA3C,MAAAnB,KAAA4xD,EACAC,KAAAjhB,EAAAoB,YACAsf,EAAAp+C,MAAA09B,EAAAoB,YAAAx7B,IAGA86C,EAAAh+C,KAAAu+C,GACAP,EAAA/9C,gBAIA+9C,GAAAh+C,KAAAs+C,EAAA59D,QAAA,EAAA49D,EAAA,GAAAA,GACAN,EAAA/9C,WAIAm+C,GAAA78C,OAAA7U,IACA2wC,GAAAoB,SAAAyf,GAAArwD,MAAAnB,KAAAyhC,QAAA59B,EAAAhN,OAAA66D,MACA9gB,EAAAoB,aACAsf,EAAAp+C,MAAA09B,EAAAoB,YAAAx7B,GAGA,MAAA86C,GAAA/lD,UAAAqJ,IAMA28C,EAAA3lB,SAAA,SAAAl2B,GACA,GAAAo8C,GAAA9xD,KACA6U,EAAAa,EAAAb,OAAAD,EAAAc,EAAAd,WAAA6sB,EAAA/rB,EAAA+rB,QACA+vB,EAAA38C,EAAA28C,aAAA3tD,EAAAgR,EAAAhR,KAAA0R,EAAAV,EAAAU,UACA+7C,EAAAz8C,EAAAy8C,OACA,KAAAA,EAAA,CACAA,EAAAz8C,EAAAy8C,QAAA,GAAA9O,GAAA3pC,YACA,IAAA64C,GAAA,QAAAC,KAEA,OADAC,MACAhrD,EAAA,EAAgCA,EAAAxF,UAAApN,OAAuB4S,IACvDgrD,EAAAhrD,GAAAxF,UAAAwF,EAEA,IAAAiO,GAAA88C,EAAA98C,OACA/Q,EAAA+Q,EAAA/Q,SAAAwtD,EAAAz8C,EAAAy8C,OACA,IAAAxtD,EAAA,CACA,GAAAiuD,GAAAphB,EAAAoB,SAAAjuC,GAAA3C,MAAAnB,KAAA4xD,EACAG,KAAAnhB,EAAAoB,YACA8f,EAAA9sD,IAAAuQ,EAAAE,SAAA45B,EAAA,GAAuEn7B,IAAA08B,EAAAoB,YAAAx7B,EAAA86C,aAGvEQ,EAAA9sD,IAAAuQ,EAAAE,SAAA25B,EAAA,GAAsE57C,MAAAu+D,EAAAT,iBAGtE,CACA,GAAA99D,GAAAo+D,EAAA59D,QAAA,EAAA49D,EAAA,GAAAA,CACAE,GAAA9sD,IAAAuQ,EAAAE,SAAA25B,EAAA,GAAkE57C,QAAA89D,cAIlEI,GAAA78C,QACA87B,GAAAoB,SAAAyf,GAAArwD,MAAAsgC,EAAA59B,EAAAhN,OAAA66D,MACA9gB,EAAAoB,aACAsf,EAAAp+C,MAAA09B,EAAAoB,YAAAx7B,GAGAs7C,EAAA9sD,IAAAssD,EAAA/lD,UAAAqJ,KAEA28C,GACCx+C,EAAAY,WACDvgB,GAAAm+D,2BtM+2mBM,SAAUp+D,EAAQC,EAASC,GAEjC,YuM/5mBA,SAAAu4C,GAAAl2B,GACA,GAAAo8C,GAAA9xD,KACA6U,EAAAa,EAAAb,OAAAD,EAAAc,EAAAd,WAAA6sB,EAAA/rB,EAAA+rB,QAEA56B,EAAAgO,EAAA28C,EAAA3qD,EAAA2qD,aAAA3tD,EAAAgD,EAAAhD,KAAA0R,EAAA1O,EAAA0O,UACA+7C,EAAAz8C,EAAAy8C,OACA,KAAAA,EAAA,CACAA,EAAAz8C,EAAAy8C,QAAA,GAAA9O,GAAA3pC,YACA,IAAA64C,GAAA,QAAAC,KAEA,OADAC,MACAhrD,EAAA,EAA4BA,EAAAxF,UAAApN,OAAuB4S,IACnDgrD,EAAAhrD,GAAAxF,UAAAwF,EAEA,IAAAiO,GAAA88C,EAAA98C,OACA/Q,EAAA+Q,EAAA/Q,SAAAwtD,EAAAz8C,EAAAy8C,QACAp9C,EAAA09C,EAAA56C,OACA,IAAA9C,EACA49C,EAAA9sD,IAAAuQ,EAAAE,SAAA45B,EAAA,GAA+Dn7B,MAAAo9C,iBAE/D,IAAAxtD,EAAA,CACA,GAAAiuD,GAAAphB,EAAAoB,SAAAjuC,GAAA3C,MAAAnB,KAAA4xD,EACAG,KAAAnhB,EAAAoB,YACA8f,EAAA9sD,IAAAuQ,EAAAE,SAAA45B,EAAA,GAAmEn7B,IAAA08B,EAAAoB,YAAAx7B,EAAA86C,aAGnEQ,EAAA9sD,IAAAuQ,EAAAE,SAAA25B,EAAA,GAAkE57C,MAAAu+D,EAAAT,iBAGlE,CACA,GAAA99D,GAAAo+D,EAAA59D,QAAA,EAAA49D,EAAA,GAAAA,CACAE,GAAA9sD,IAAAuQ,EAAAE,SAAA25B,EAAA,GAA8D57C,QAAA89D,cAI9DI,GAAA78C,QACA87B,GAAAoB,SAAAyf,GAAArwD,MAAAsgC,EAAA59B,EAAAhN,OAAA66D,MACA9gB,EAAAoB,aACA8f,EAAA9sD,IAAAuQ,EAAAE,SAAA45B,EAAA,GAA2Dn7B,IAAA08B,EAAAoB,YAAAx7B,EAAA86C,aAG3DQ,EAAA9sD,IAAAssD,EAAA/lD,UAAAqJ,IAEA,QAAAw6B,GAAAvD,GACA,GAAAr4C,GAAAq4C,EAAAr4C,MAAA89D,EAAAzlB,EAAAylB,OACAA,GAAAh+C,KAAA9f,GACA89D,EAAA/9C,WAEA,QAAA87B,GAAAxD,GACA,GAAA33B,GAAA23B,EAAA33B,GAAA23B,GAAAylB,QACAp+C,MAAAgB,GAjQA5gB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACAmvD,EAAAnvD,EAAA,IAMA2+D,EAAA,SAAA9wD,GAEA,QAAA8wD,GAAAR,EAAA1tD,EAAAD,EAAA49B,EAAAlsB,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,WAMA,OALA6E,GAAA2sD,eACA3sD,EAAAf,WACAe,EAAAhB,OACAgB,EAAA48B,UACA58B,EAAA0Q,YACA1Q,EAyLA,MAjMA6P,GAAAO,UAAA+8C,EAAA9wD,GAwIA8wD,EAAAz3B,OAAA,SAAAk3B,EAAA3tD,EAAAyR,GAEA,WADA,KAAAzR,IAAkCA,MAAA7J,IAClC,WAEA,OADA4J,MACA+C,EAAA,EAA4BA,EAAAxF,UAAApN,OAAuB4S,IACnD/C,EAAA+C,GAAAxF,UAAAwF,EAEA,WAAAorD,GAAAP,EAAA3tD,EAAAD,EAAA7D,KAAAuV,KAGAy8C,EAAAlyD,UAAAkZ,WAAA,SAAApE,GACA,GAAA48C,GAAAxxD,KAAAwxD,aACA3tD,EAAA7D,KAAA6D,KACA0R,EAAAvV,KAAAuV,UACA+7C,EAAAtxD,KAAAsxD,OACA,IAAA/7C,EAuCA,MAAAA,GAAAE,SAAAm2B,EAAA,GAAoD/2B,OAAA7U,KAAA4U,aAAA6sB,QAAAzhC,KAAAyhC,SAtCpD,KAAA6vB,EAAA,CACAA,EAAAtxD,KAAAsxD,QAAA,GAAA9O,GAAA3pC,YACA,IAAA64C,GAAA,QAAAC,KAEA,OADAC,MACAhrD,EAAA,EAAoCA,EAAAxF,UAAApN,OAAuB4S,IAC3DgrD,EAAAhrD,GAAAxF,UAAAwF,EAEA,IAAAiO,GAAA88C,EAAA98C,OACA/Q,EAAA+Q,EAAA/Q,SAAAwtD,EAAAz8C,EAAAy8C,QACAp9C,EAAA09C,EAAA56C,OACA,IAAA9C,EACAo9C,EAAAp+C,MAAAgB,OAEA,IAAApQ,EAAA,CACA,GAAA+tD,GAAAlhB,EAAAoB,SAAAjuC,GAAA3C,MAAAnB,KAAA4xD,EACAC,KAAAjhB,EAAAoB,YACAsf,EAAAp+C,MAAA09B,EAAAoB,YAAAx7B,IAGA86C,EAAAh+C,KAAAu+C,GACAP,EAAA/9C,gBAIA+9C,GAAAh+C,KAAAs+C,EAAA59D,QAAA,EAAA49D,EAAA,GAAAA,GACAN,EAAA/9C,WAIAm+C,GAAA78C,OAAA7U,IACA2wC,GAAAoB,SAAAyf,GAAArwD,MAAAnB,KAAAyhC,QAAA59B,EAAAhN,OAAA66D,MACA9gB,EAAAoB,aACAsf,EAAAp+C,MAAA09B,EAAAoB,YAAAx7B,GAGA,MAAA86C,GAAA/lD,UAAAqJ,IAMAo9C,GACCj/C,EAAAY,WACDvgB,GAAA4+D,+BvMyqnBM,SAAU7+D,EAAQC,EAASC,GAEjC,YwM13nBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACAi2C,EAAAj2C,EAAA,GACAg2C,EAAAh2C,EAAA,GAMA4+D,EAAA,SAAA/wD,GAEA,QAAA+wD,GAAAC,GACA,GAAArtD,GAAA3D,EAAA6B,KAAA/C,WAEA,OADA6E,GAAAqtD,oBACArtD,EAsDA,MA1DA6P,GAAAO,UAAAg9C,EAAA/wD,GAoDA+wD,EAAA13B,OAAA,SAAA23B,GACA,UAAAD,GAAAC,IAEAD,EAAAnyD,UAAAkZ,WAAA,SAAApE,GACA,UAAAu9C,GAAAv9C,EAAA5U,KAAAkyD,oBAEAD,GACCl/C,EAAAY,WACDvgB,GAAA6+D,iBACA,IAAAE,GAAA,SAAAjxD,GAEA,QAAAixD,GAAAp9C,EAAAulB,GACA,GAAAz1B,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAAy1B,UACAz1B,EAAAutD,WACAvtD,EAgBA,MArBA6P,GAAAO,UAAAk9C,EAAAjxD,GAOAixD,EAAAryD,UAAAsyD,SAAA,WACA,IACApyD,KAAAqyD,eAEA,MAAAn+C,GACAlU,KAAAisC,OAAA/3B,KAGAi+C,EAAAryD,UAAAuyD,aAAA,WACA,GAAAl9C,GAAAnV,KAAAs6B,SACAnlB,IACAnV,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAAmV,KAGAg9C,GACC9oB,EAAAiB,kBxMi4nBK,SAAUn3C,EAAQC,EAASC,GAEjC,YyMl+nBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GAMAi/D,EAAA,SAAApxD,GAEA,QAAAoxD,GAAAp/C,EAAAqC,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,WAGA,OAFA6E,GAAAqO,QACArO,EAAA0Q,YACA1Q,EA8DA,MAnEA6P,GAAAO,UAAAq9C,EAAApxD,GA+CAoxD,EAAA/3B,OAAA,SAAArnB,EAAAqC,GACA,UAAA+8C,GAAAp/C,EAAAqC,IAEA+8C,EAAA1mB,SAAA,SAAAC,GACA,GAAA34B,GAAA24B,EAAA34B,KAAA24B,GAAAj3B,WACA1B,UAEAo/C,EAAAxyD,UAAAkZ,WAAA,SAAApE,GACA,GAAA1B,GAAAlT,KAAAkT,MACAqC,EAAAvV,KAAAuV,SAEA,IADAX,EAAA29C,oBAAA,EACAh9C,EACA,MAAAA,GAAAE,SAAA68C,EAAA1mB,SAAA,GACA14B,QAAA0B,cAIAA,GAAA1B,UAGAo/C,GACCv/C,EAAAY,WACDvgB,GAAAk/D,mBzMy+nBM,SAAUn/D,EAAQC,EAASC,GAEjC,Y0MzjoBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACA69D,EAAA79D,EAAA,IACAsoB,EAAAtoB,EAAA,IACAi2C,EAAAj2C,EAAA,GACAg2C,EAAAh2C,EAAA,GAMAsgD,EAAA,SAAAzyC,GAEA,QAAAyyC,GAAA6e,EAAAxnB,GACA,GAAAnmC,GAAA3D,EAAA6B,KAAA/C,WAGA,OAFA6E,GAAA2tD,UACA3tD,EAAAmmC,iBACAnmC,EAmCA,MAxCA6P,GAAAO,UAAA0+B,EAAAzyC,GAeAyyC,EAAApZ,OAAA,WAEA,OADAi4B,MACA5rD,EAAA,EAAwBA,EAAAxF,UAAApN,OAAuB4S,IAC/C4rD,EAAA5rD,GAAAxF,UAAAwF,EAEA,WAAA4rD,GAAA,IAAApxD,UAAApN,OACA,UAAAk9D,GAAAE,eAEA,IAAApmB,GAAA,IASA,OARA,kBAAAwnB,KAAAx+D,OAAA,KACAg3C,EAAAwnB,EAAA3jD,OAIA,IAAA2jD,EAAAx+D,QAAA2nB,EAAA9gB,QAAA23D,EAAA,MACAA,IAAA,IAEA,IAAAA,EAAAx+D,OACA,GAAAk9D,GAAAE,gBAEA,GAAAzd,GAAA6e,EAAAxnB,IAEA2I,EAAA7zC,UAAAkZ,WAAA,SAAApE,GACA,UAAA69C,GAAA79C,EAAA5U,KAAAwyD,QAAAxyD,KAAAgrC,iBAEA2I,GACC5gC,EAAAY,WACDvgB,GAAAugD,oBAMA,IAAA8e,GAAA,SAAAvxD,GAEA,QAAAuxD,GAAA19C,EAAAy9C,EAAAxnB,GACA,GAAAnmC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IACA6E,GAAA2tD,UACA3tD,EAAAmmC,iBACAnmC,EAAA6tD,UAAA,EACA7tD,EAAA8tD,WAAA,CACA,IAAAh4C,GAAA63C,EAAAx+D,MACA6Q,GAAA+tD,MAAAj4C,EACA9V,EAAA4kC,OAAA,GAAAlvC,OAAAogB,EACA,QAAArmB,GAAA,EAAuBA,EAAAqmB,EAASrmB,IAAA,CAChC,GAAAugB,GAAA29C,EAAAl+D,GACAu+D,EAAAvpB,EAAAK,kBAAA9kC,EAAAgQ,EAAA,KAAAvgB,EACAu+D,KACAA,EAAA5oB,WAAA31C,EACAuQ,EAAAG,IAAA6tD,IAGA,MAAAhuD,GA2BA,MA7CA6P,GAAAO,UAAAw9C,EAAAvxD,GAoBAuxD,EAAA3yD,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAypC,OAAAQ,GAAAD,EACAG,EAAA2oB,YACA3oB,EAAA2oB,WAAA,EACA9yD,KAAA2yD,eAGAF,EAAA3yD,UAAA8pC,eAAA,SAAAO,GACA,GAAAp1B,GAAA/U,KAAA+U,YACAlO,EAAA7G,KAAA2yD,EAAA9rD,EAAA8rD,WAAA3nB,EAAAnkC,EAAAmkC,eAAAvB,EAAA5iC,EAAA4iC,OACA9uB,EAAA8uB,EAAAz1C,MACA,KAAAm2C,EAAA2oB,UAEA,WADA/9C,GAAAxB,UAIA,MADAvT,KAAA0yD,YACA/3C,EAAA,CAGA,GAAAg4C,IAAAh4C,EAAA,CACA,GAAAnnB,GAAAw3C,IAAA7pC,MAAAnB,KAAAypC,IACA10B,GAAAzB,KAAA9f,GAEAuhB,EAAAxB,aAEAk/C,GACCppB,EAAAiB,kB1MgkoBK,SAAUn3C,EAAQC,EAASC,GAEjC,Y2MtqoBA,SAAA0/D,GAAAC,GACA,QAAAA,GAAA,kBAAAA,GAAArR,aAAA,kBAAAqR,GAAAlR,eAEA,QAAAmR,GAAAD,GACA,QAAAA,GAAA,kBAAAA,GAAAtR,IAAA,kBAAAsR,GAAAnR,IAEA,QAAAqR,GAAAF,GACA,QAAAA,GAAA,sBAAAvwD,EAAAM,KAAAiwD,GAEA,QAAAG,GAAAH,GACA,QAAAA,GAAA,4BAAAvwD,EAAAM,KAAAiwD,GAEA,QAAAI,GAAAJ,GACA,QAAAA,GAAA,kBAAAA,GAAAK,kBAAA,kBAAAL,GAAAM,oBArBAhgE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACAs9C,EAAAt9C,EAAA,IACAkgE,EAAAlgE,EAAA,KACAu9C,EAAAv9C,EAAA,GACAulB,EAAAvlB,EAAA,GACAoP,EAAAnP,OAAAwM,UAAA2C,SAqBA+wD,EAAA,SAAAtyD,GAEA,QAAAsyD,GAAAR,EAAAS,EAAA3vD,EAAA6D,GACA,GAAA9C,GAAA3D,EAAA6B,KAAA/C,WAKA,OAJA6E,GAAAmuD,YACAnuD,EAAA4uD,YACA5uD,EAAAf,WACAe,EAAA8C,UACA9C,EAiGA,MAxGA6P,GAAAO,UAAAu+C,EAAAtyD,GAkDAsyD,EAAAj5B,OAAA,SAAA8K,EAAAouB,EAAA9rD,EAAA7D,GAKA,MAJAyvD,GAAAG,WAAA/rD,KACA7D,EAAA6D,EACAA,MAAA1N,IAEA,GAAAu5D,GAAAnuB,EAAAouB,EAAA3vD,EAAA6D,IAEA6rD,EAAAG,kBAAA,SAAAX,EAAAS,EAAA/B,EAAA98C,EAAAjN,GACA,GAAA8D,EACA,IAAAynD,EAAAF,IAAAG,EAAAH,GACA,OAAA1+D,GAAA,EAAAqmB,EAAAq4C,EAAAh/D,OAAmDM,EAAAqmB,EAASrmB,IAC5Dk/D,EAAAG,kBAAAX,EAAA1+D,GAAAm/D,EAAA/B,EAAA98C,EAAAjN,OAGA,IAAAyrD,EAAAJ,GAAA,CACA,GAAAY,GAAAZ,CACAA,GAAAK,iBAAAI,EAAA/B,EAAA/pD,GACA8D,EAAA,WAAuC,MAAAmoD,GAAAN,oBAAAG,EAAA/B,QAEvC,IAAAuB,EAAAD,GAAA,CACA,GAAAa,GAAAb,CACAA,GAAAtR,GAAA+R,EAAA/B,GACAjmD,EAAA,WAAuC,MAAAooD,GAAAhS,IAAA4R,EAAA/B,QAEvC,KAAAqB,EAAAC,GAMA,SAAAz+C,WAAA,uBALA,IAAAu/C,GAAAd,CACAA,GAAArR,YAAA8R,EAAA/B,GACAjmD,EAAA,WAAuC,MAAAqoD,GAAAhS,eAAA2R,EAAA/B,IAKvC98C,EAAA5P,IAAA,GAAA4T,GAAAM,aAAAzN,KAEA+nD,EAAA1zD,UAAAkZ,WAAA,SAAApE,GACA,GAAAo+C,GAAAhzD,KAAAgzD,UACAS,EAAAzzD,KAAAyzD,UACA9rD,EAAA3H,KAAA2H,QACA7D,EAAA9D,KAAA8D,SACA4tD,EAAA5tD,EAAA,WAEA,OADAD,MACA+C,EAAA,EAA4BA,EAAAxF,UAAApN,OAAuB4S,IACnD/C,EAAA+C,GAAAxF,UAAAwF,EAEA,IAAAuO,GAAAw7B,EAAAoB,SAAAjuC,GAAA3C,UAAA,GAAA0C,EACAsR,KAAAy7B,EAAAoB,YACAp9B,EAAA1B,MAAA09B,EAAAoB,YAAAx7B,GAGA5B,EAAAtB,KAAA6B,IAES,SAAAqB,GAAiB,MAAA5B,GAAAtB,KAAAkD,GAC1Bg9C,GAAAG,kBAAAX,EAAAS,EAAA/B,EAAA98C,EAAAjN,IAEA6rD,GACCzgD,EAAAY,WACDvgB,GAAAogE,uB3MqroBM,SAAUrgE,EAAQC,EAASC,GAEjC,Y4M9zoBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAkgE,EAAAlgE,EAAA,KACA0f,EAAA1f,EAAA,GACAulB,EAAAvlB,EAAA,GAMA0gE,EAAA,SAAA7yD,GAEA,QAAA6yD,GAAAC,EAAAC,EAAAnwD,GACA,GAAAe,GAAA3D,EAAA6B,KAAA/C,WAIA,OAHA6E,GAAAmvD,aACAnvD,EAAAovD,gBACApvD,EAAAf,WACAe,EAyFA,MA/FA6P,GAAAO,UAAA8+C,EAAA7yD,GAwDA6yD,EAAAx5B,OAAA,SAAAy5B,EAAAC,EAAAnwD,GACA,UAAAiwD,GAAAC,EAAAC,EAAAnwD,IAEAiwD,EAAAj0D,UAAAkZ,WAAA,SAAApE,GACA,GAAA/P,GAAA7E,KACAi0D,EAAAj0D,KAAAi0D,cACAvC,EAAA1xD,KAAA8D,SAAA,WAEA,OADAD,MACA+C,EAAA,EAA4BA,EAAAxF,UAAApN,OAAuB4S,IACnD/C,EAAA+C,GAAAxF,UAAAwF,EAEA/B,GAAAqvD,cAAAt/C,EAAA/Q,IACS,SAAA2S,GAAiB5B,EAAAtB,KAAAkD,IAC1B29C,EAAAn0D,KAAAo0D,gBAAA1C,EAAA98C,EACA2+C,GAAAG,WAAAO,IAGAr/C,EAAA5P,IAAA,GAAA4T,GAAAM,aAAA,WAEA+6C,EAAAvC,EAAAyC,OAGAJ,EAAAj0D,UAAAo0D,cAAA,SAAAt/C,EAAA/Q,GACA,IACA,GAAAsR,GAAAnV,KAAA8D,SAAA3C,MAAAnB,KAAA6D,EACA+Q,GAAAtB,KAAA6B,GAEA,MAAAqB,GACA5B,EAAA1B,MAAAsD,KAGAu9C,EAAAj0D,UAAAs0D,gBAAA,SAAA1C,EAAA2C,GACA,IACA,MAAAr0D,MAAAg0D,WAAAtC,IAAA,KAEA,MAAAl7C,GACA69C,EAAAnhD,MAAAsD,KAGAu9C,GACChhD,EAAAY,WACDvgB,GAAA2gE,8B5Mq0oBM,SAAU5gE,EAAQC,EAASC,GAEjC,Y6Mn7oBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACAm3C,EAAAn3C,EAAA,IACAihE,EAAA,SAAA9gE,GAAqC,MAAAA,IAMrC2xD,EAAA,SAAAjkD,GAEA,QAAAikD,GAAAoP,EAAAvoD,EAAAwoD,EAAAxpB,EAAAz1B,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,WAMA,OALA6E,GAAA0vD,eACA1vD,EAAAmH,YACAnH,EAAA2vD,UACA3vD,EAAAmmC,iBACAnmC,EAAA0Q,YACA1Q,EA8GA,MAtHA6P,GAAAO,UAAAkwC,EAAAjkD,GAUAikD,EAAA5qB,OAAA,SAAAk6B,EAAAzoD,EAAAwoD,EAAAE,EAAAn/C,GACA,UAAAnU,UAAApN,OACA,GAAAmxD,GAAAsP,EAAAF,aAAAE,EAAAzoD,UAAAyoD,EAAAD,QAAAC,EAAAzpB,gBAAAspB,EAAAG,EAAAl/C,eAEAtb,KAAAy6D,GAAAlqB,EAAAC,YAAAiqB,GACA,GAAAvP,GAAAsP,EAAAzoD,EAAAwoD,EAAAF,EAAAI,GAEA,GAAAvP,GAAAsP,EAAAzoD,EAAAwoD,EAAAE,EAAAn/C,IAEA4vC,EAAArlD,UAAAkZ,WAAA,SAAApE,GACA,GAAAc,GAAA1V,KAAAu0D,YACA,IAAAv0D,KAAAuV,UACA,MAAAvV,MAAAuV,UAAAE,SAAA0vC,EAAAvZ,SAAA,GACAh3B,aACA4/C,QAAAx0D,KAAAw0D,QACAxoD,UAAAhM,KAAAgM,UACAg/B,eAAAhrC,KAAAgrC,eACAt1B,SAIA,KADA,GAAA7O,GAAA7G,KAAAgM,EAAAnF,EAAAmF,UAAAg/B,EAAAnkC,EAAAmkC,eAAAwpB,EAAA3tD,EAAA2tD,UACA,CACA,GAAAxoD,EAAA,CACA,GAAA2oD,OAAA,EACA,KACAA,EAAA3oD,EAAA0J,GAEA,MAAAxB,GAEA,WADAU,GAAA1B,MAAAgB,GAGA,IAAAygD,EAAA,CACA//C,EAAArB,UACA,QAGA,GAAA/f,OAAA,EACA,KACAA,EAAAw3C,EAAAt1B,GAEA,MAAAxB,GAEA,WADAU,GAAA1B,MAAAgB,GAIA,GADAU,EAAAtB,KAAA9f,GACAohB,EAAAgB,OACA,KAEA,KACAF,EAAA8+C,EAAA9+C,GAEA,MAAAxB,GAEA,WADAU,GAAA1B,MAAAgB,MAKAixC,EAAAvZ,SAAA,SAAAl2B,GACA,GAAAd,GAAAc,EAAAd,WAAA5I,EAAA0J,EAAA1J,SACA,KAAA4I,EAAAgB,OAAA,CAGA,GAAAF,EAAAk/C,YACA,IACAl/C,UAAA8+C,QAAA9+C,SAEA,MAAAxB,GAEA,WADAU,GAAA1B,MAAAgB,OAKAwB,GAAAk/C,aAAA,CAEA,IAAA5oD,EAAA,CACA,GAAA2oD,OAAA,EACA,KACAA,EAAA3oD,EAAA0J,SAEA,MAAAxB,GAEA,WADAU,GAAA1B,MAAAgB,GAGA,IAAAygD,EAEA,WADA//C,GAAArB,UAGA,IAAAqB,EAAAgB,OACA,OAGA,GAAApiB,EACA,KACAA,EAAAkiB,EAAAs1B,eAAAt1B,SAEA,MAAAxB,GAEA,WADAU,GAAA1B,MAAAgB,GAGA,IAAAU,EAAAgB,SAGAhB,EAAAtB,KAAA9f,IACAohB,EAAAgB,QAGA,MAAA5V,MAAAyV,SAAAC,KAEAyvC,GACCpyC,EAAAY,WACDvgB,GAAA+xD,sB7M07oBM,SAAUhyD,EAAQC,EAASC,GAEjC,Y8M/jpBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACAi2C,EAAAj2C,EAAA,GACAg2C,EAAAh2C,EAAA,GAMAwhE,EAAA,SAAA3zD,GAEA,QAAA2zD,GAAA7oD,EAAA8oD,EAAAC,GACA,GAAAlwD,GAAA3D,EAAA6B,KAAA/C,WAIA,OAHA6E,GAAAmH,YACAnH,EAAAiwD,aACAjwD,EAAAkwD,aACAlwD,EASA,MAfA6P,GAAAO,UAAA4/C,EAAA3zD,GAQA2zD,EAAAt6B,OAAA,SAAAvuB,EAAA8oD,EAAAC,GACA,UAAAF,GAAA7oD,EAAA8oD,EAAAC,IAEAF,EAAA/0D,UAAAkZ,WAAA,SAAApE,GACA,GAAA/N,GAAA7G,KAAAgM,EAAAnF,EAAAmF,UAAA8oD,EAAAjuD,EAAAiuD,WAAAC,EAAAluD,EAAAkuD,UACA,WAAAC,GAAApgD,EAAA5I,EAAA8oD,EAAAC,IAEAF,GACC9hD,EAAAY,WACDvgB,GAAAyhE,cACA,IAAAG,GAAA,SAAA9zD,GAEA,QAAA8zD,GAAAjgD,EAAA/I,EAAA8oD,EAAAC,GACA,GAAAlwD,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAAmH,YACAnH,EAAAiwD,aACAjwD,EAAAkwD,aACAlwD,EAAAowD,QACApwD,EAmBA,MA1BA6P,GAAAO,UAAA+/C,EAAA9zD,GASA8zD,EAAAl1D,UAAAm1D,MAAA,WACA,GACA9/C,GADAtO,EAAA7G,KAAAgM,EAAAnF,EAAAmF,UAAA8oD,EAAAjuD,EAAAiuD,WAAAC,EAAAluD,EAAAkuD,UAEA,KACA5/C,EAAAnJ,GACA,IAAA6I,GAAAM,EAAA2/C,EAAAC,CACAlgD,GACA7U,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAA6U,IAGA7U,KAAAub,YAGA,MAAArH,GACAlU,KAAAisC,OAAA/3B,KAGA8gD,GACC3rB,EAAAiB,kB9MskpBK,SAAUn3C,EAAQC,EAASC,GAEjC,Y+MjopBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA6hE,EAAA7hE,EAAA,IACA0f,EAAA1f,EAAA,GACA+kD,EAAA/kD,EAAA,IAMA8hE,EAAA,SAAAj0D,GAEA,QAAAi0D,GAAAC,EAAA7/C,OACA,KAAA6/C,IAAgCA,EAAA,OAChC,KAAA7/C,IAAmCA,EAAA6iC,EAAAzkD,MACnC,IAAAkR,GAAA3D,EAAA6B,KAAA/C,WASA,OARA6E,GAAAuwD,SACAvwD,EAAA0Q,cACA2/C,EAAAx5C,UAAA05C,MAAA,KACAvwD,EAAAuwD,OAAA,GAEA7/C,GAAA,kBAAAA,GAAAE,WACA5Q,EAAA0Q,UAAA6iC,EAAAzkD,OAEAkR,EAyDA,MAtEA6P,GAAAO,UAAAkgD,EAAAj0D,GAgDAi0D,EAAA56B,OAAA,SAAA66B,EAAA7/C,GAGA,WAFA,KAAA6/C,IAAgCA,EAAA,OAChC,KAAA7/C,IAAmCA,EAAA6iC,EAAAzkD,OACnC,GAAAwhE,GAAAC,EAAA7/C,IAEA4/C,EAAAvpB,SAAA,SAAAl2B,GACA,GAAAxa,GAAAwa,EAAAxa,MAAA0Z,EAAAc,EAAAd,WAAAwgD,EAAA1/C,EAAA0/C,MACAxgD,GAAAtB,KAAApY,GACA0Z,EAAAgB,SAGAF,EAAAxa,OAAA,EACA8E,KAAAyV,SAAAC,EAAA0/C,KAEAD,EAAAr1D,UAAAkZ,WAAA,SAAApE,GACA,GACAwgD,GAAAp1D,KAAAo1D,OACA7/C,EAAAvV,KAAAuV,SACAX,GAAA5P,IAAAuQ,EAAAE,SAAA0/C,EAAAvpB,SAAAwpB,GACAl6D,MAJA,EAIA0Z,aAAAwgD,aAGAD,GACCpiD,EAAAY,WACDvgB,GAAA+hE,sB/MwopBM,SAAUhiE,EAAQC,EAASC,GAEjC,YgN1mpBA,SAAAgiE,GAAA12C,GACA,GAAArqB,GAAAqqB,EAAA0tB,EAAAI,SACA,KAAAn4C,GAAA,gBAAAqqB,GACA,UAAA22C,GAAA32C,EAEA,KAAArqB,OAAA2F,KAAA0kB,EAAA3qB,OACA,UAAAuhE,GAAA52C,EAEA,KAAArqB,EACA,SAAAigB,WAAA,yBAEA,OAAAoK,GAAA0tB,EAAAI,YAGA,QAAA+oB,GAAAthE,GACA,GAAAymB,IAAAzmB,EAAAF,MACA,OAAAwN,OAAAmZ,GACA,EAEA,IAAAA,GAAA86C,EAAA96C,IAGAA,EAAA+6C,EAAA/6C,GAAAK,KAAA26C,MAAA36C,KAAA46C,IAAAj7C,IACAA,GAAA,EACA,EAEAA,EAAAk7C,EACAA,EAEAl7C,GATAA,EAWA,QAAA86C,GAAAjiE,GACA,sBAAAA,IAAA6hB,EAAAU,KAAAi4B,SAAAx6C,GAEA,QAAAkiE,GAAAliE,GACA,GAAAsiE,IAAAtiE,CACA,YAAAsiE,EACAA,EAEAt0D,MAAAs0D,GACAA,EAEAA,EAAA,OA7JAxiE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAgiB,EAAAhiB,EAAA,IACA0f,EAAA1f,EAAA,GACAg5C,EAAAh5C,EAAA,IAMA47C,EAAA,SAAA/tC,GAEA,QAAA+tC,GAAAxC,EAAAl3B,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,WAEA,IADA6E,EAAA0Q,YACA,MAAAk3B,EACA,SAAAh4C,OAAA,2BAGA,OADAoQ,GAAA4nC,SAAA4oB,EAAA5oB,GACA5nC,EAqDA,MA7DA6P,GAAAO,UAAAg6B,EAAA/tC,GAUA+tC,EAAA1U,OAAA,SAAAkS,EAAAl3B,GACA,UAAA05B,GAAAxC,EAAAl3B,IAEA05B,EAAArD,SAAA,SAAAl2B,GACA,GAAAxa,GAAAwa,EAAAxa,MAAA6F,EAAA2U,EAAA3U,SAAA0rC,EAAA/2B,EAAA+2B,SAAA73B,EAAAc,EAAAd,UACA,IAAA7T,EAEA,WADA6T,GAAA1B,MAAAwC,EAAAxC,MAGA,IAAAiC,GAAAs3B,EAAAn5B,MACA,OAAA6B,GAAA63B,SACAp4B,GAAArB,YAGAqB,EAAAtB,KAAA6B,EAAA3hB,OACAkiB,EAAAxa,QAAA,EACA0Z,EAAAgB,YACA,kBAAA62B,GAAAspB,QACAtpB,EAAAspB,cAIA/1D,MAAAyV,SAAAC,KAEAu5B,EAAAnvC,UAAAkZ,WAAA,SAAApE,GACA,GACA/N,GAAA7G,KAAAysC,EAAA5lC,EAAA4lC,SAAAl3B,EAAA1O,EAAA0O,SACA,IAAAA,EACA,MAAAA,GAAAE,SAAAw5B,EAAArD,SAAA,GACA1wC,MAJA,EAIAuxC,WAAA73B,cAIA,SACA,GAAAO,GAAAs3B,EAAAn5B,MACA,IAAA6B,EAAA63B,KAAA,CACAp4B,EAAArB,UACA,OAKA,GAFAqB,EAAAtB,KAAA6B,EAAA3hB,OAEAohB,EAAAgB,OAAA,CACA,kBAAA62B,GAAAspB,QACAtpB,EAAAspB,QAEA,UAKA9mB,GACCl8B,EAAAY,WACDvgB,GAAA67C,oBACA,IAAAqmB,GAAA,WACA,QAAAA,GAAAlzC,EAAA4V,EAAArd,OACA,KAAAqd,IAA6BA,EAAA,OAC7B,KAAArd,IAA6BA,EAAAyH,EAAApuB,QAC7BgM,KAAAoiB,MACApiB,KAAAg4B,MACAh4B,KAAA2a,MAYA,MAVA26C,GAAAx1D,UAAAusC,EAAAI,UAAA,WAAiE,aACjE6oB,EAAAx1D,UAAAwT,KAAA,WACA,MAAAtT,MAAAg4B,IAAAh4B,KAAA2a,KACAqyB,MAAA,EACAx5C,MAAAwM,KAAAoiB,IAAAxE,OAAA5d,KAAAg4B,SAEAgV,MAAA,EACAx5C,UAAAyG,KAGAq7D,KAEAC,EAAA,WACA,QAAAA,GAAAl3C,EAAA2Z,EAAArd,OACA,KAAAqd,IAA6BA,EAAA,OAC7B,KAAArd,IAA6BA,EAAA66C,EAAAn3C,IAC7Bre,KAAAqe,MACAre,KAAAg4B,MACAh4B,KAAA2a,MAYA,MAVA46C,GAAAz1D,UAAAusC,EAAAI,UAAA,WAAgE,MAAAzsC,OAChEu1D,EAAAz1D,UAAAwT,KAAA,WACA,MAAAtT,MAAAg4B,IAAAh4B,KAAA2a,KACAqyB,MAAA,EACAx5C,MAAAwM,KAAAqe,IAAAre,KAAAg4B,SAEAgV,MAAA,EACAx5C,UAAAyG,KAGAs7D,KAeAM,EAAA76C,KAAAg7C,IAAA,ShNkwpBM,SAAU7iE,EAAQC,EAASC,GAEjC,YiNp4pBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACA4iE,EAAA5iE,EAAA,KAMA6iE,EAAA,SAAAh1D,GAEA,QAAAg1D,KACA,MAAAh1D,GAAA6B,KAAA/C,YAuCA,MAzCA0U,GAAAO,UAAAihD,EAAAh1D,GAmCAg1D,EAAA37B,OAAA,WACA,UAAA27B,IAEAA,EAAAp2D,UAAAkZ,WAAA,SAAApE,GACAqhD,EAAA/a,QAEAgb,GACCnjD,EAAAY,WACDvgB,GAAA8iE,mBjN24pBM,SAAU/iE,EAAQC,EAASC,GAEjC,YkN/7pBA,SAAAu4C,GAAAl2B,GACA,GAAAiJ,GAAAjJ,EAAAiJ,IAAArpB,EAAAogB,EAAApgB,KAAAtB,EAAA0hB,EAAA1hB,OAAAkH,EAAAwa,EAAAxa,MAAA0Z,EAAAc,EAAAd,UACA,IAAA1Z,IAAAlH,EAEA,WADA4gB,GAAArB,UAGA,IAAA4K,GAAA7oB,EAAA4F,EACA0Z,GAAAtB,MAAA6K,EAAAQ,EAAAR,KACAzI,EAAAxa,QAAA,EACA8E,KAAAyV,SAAAC,GAZApiB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GAiBA8iE,EAAA,SAAAj1D,GAEA,QAAAi1D,GAAAx3C,EAAApJ,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,WAIA,OAHA6E,GAAA8Z,MACA9Z,EAAA0Q,YACA1Q,EAAAvP,KAAAhC,OAAAgC,KAAAqpB,GACA9Z,EAoDA,MA1DA6P,GAAAO,UAAAkhD,EAAAj1D,GAuCAi1D,EAAA57B,OAAA,SAAA5b,EAAApJ,GACA,UAAA4gD,GAAAx3C,EAAApJ,IAEA4gD,EAAAr2D,UAAAkZ,WAAA,SAAApE,GACA,GAAA/N,GAAA7G,KAAA1K,EAAAuR,EAAAvR,KAAAigB,EAAA1O,EAAA0O,UACAvhB,EAAAsB,EAAAtB,MACA,IAAAuhB,EACA,MAAAA,GAAAE,SAAAm2B,EAAA,GACAjtB,IAAA3e,KAAA2e,IAAArpB,OAAAtB,SAAAkH,MAAA,EAAA0Z,cAIA,QAAAojB,GAAA,EAA6BA,EAAAhkC,EAAcgkC,IAAA,CAC3C,GAAA7Z,GAAA7oB,EAAA0iC,EACApjB,GAAAtB,MAAA6K,EAAAne,KAAA2e,IAAAR,KAEAvJ,EAAArB,YAGA4iD,GACCpjD,EAAAY,WACDvgB,GAAA+iE,mBlNy8pBM,SAAUhjE,EAAQC,EAASC,GAEjC,YmN3hqBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GAMA+iE,EAAA,SAAAl1D,GAEA,QAAAk1D,GAAAC,EAAArhD,EAAAO,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,WAIA,OAHA6E,GAAAwxD,QACAxxD,EAAAyxD,OAAAthD,EACAnQ,EAAA0Q,YACA1Q,EA0EA,MAhFA6P,GAAAO,UAAAmhD,EAAAl1D,GAsCAk1D,EAAA77B,OAAA,SAAA87B,EAAArhD,EAAAO,GAGA,WAFA,KAAA8gD,IAA+BA,EAAA,OAC/B,KAAArhD,IAA+BA,EAAA,GAC/B,GAAAohD,GAAAC,EAAArhD,EAAAO,IAEA6gD,EAAAxqB,SAAA,SAAAl2B,GACA,GAAA2gD,GAAA3gD,EAAA2gD,MAAAn7D,EAAAwa,EAAAxa,MAAA8Z,EAAAU,EAAAV,MAAAJ,EAAAc,EAAAd,UACA,IAAA1Z,GAAA8Z,EAEA,WADAJ,GAAArB,UAGAqB,GAAAtB,KAAA+iD,GACAzhD,EAAAgB,SAGAF,EAAAxa,QAAA,EACAwa,EAAA2gD,QAAA,EACAr2D,KAAAyV,SAAAC,KAEA0gD,EAAAt2D,UAAAkZ,WAAA,SAAApE,GACA,GAAA1Z,GAAA,EACAm7D,EAAAr2D,KAAAq2D,MACArhD,EAAAhV,KAAAs2D,OACA/gD,EAAAvV,KAAAuV,SACA,IAAAA,EACA,MAAAA,GAAAE,SAAA2gD,EAAAxqB,SAAA,GACA1wC,QAAA8Z,QAAAqhD,QAAAzhD,cAIA,SACA,GAAA1Z,KAAA8Z,EAAA,CACAJ,EAAArB,UACA,OAGA,GADAqB,EAAAtB,KAAA+iD,KACAzhD,EAAAgB,OACA,QAKAwgD,GACCrjD,EAAAY,WACDvgB,GAAAgjE,mBnNkiqBM,SAAUjjE,EAAQC,EAASC,GAEjC,YoN/nqBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACAkwD,EAAAlwD,EAAA,IACA6hE,EAAA7hE,EAAA,IAMAkjE,EAAA,SAAAr1D,GAEA,QAAAq1D,GAAA1hD,EAAA2hD,EAAAjhD,OACA,KAAAihD,IAAmCA,EAAA,OACnC,KAAAjhD,IAAmCA,EAAAguC,EAAA/J,KACnC,IAAA30C,GAAA3D,EAAA6B,KAAA/C,WAUA,OATA6E,GAAAgQ,SACAhQ,EAAA2xD,YACA3xD,EAAA0Q,cACA2/C,EAAAx5C,UAAA86C,MAAA,KACA3xD,EAAA2xD,UAAA,GAEAjhD,GAAA,kBAAAA,GAAAE,WACA5Q,EAAA0Q,UAAAguC,EAAA/J,MAEA30C,EAmBA,MAjCA6P,GAAAO,UAAAshD,EAAAr1D,GAgBAq1D,EAAAh8B,OAAA,SAAA1lB,EAAAc,EAAAJ,GAGA,WAFA,KAAAI,IAA+BA,EAAA,OAC/B,KAAAJ,IAAmCA,EAAAguC,EAAA/J,MACnC,GAAA+c,GAAA1hD,EAAAc,EAAAJ,IAEAghD,EAAA3qB,SAAA,SAAAC,GACA,GAAAh3B,GAAAg3B,EAAAh3B,OAAAD,EAAAi3B,EAAAj3B,UACA,OAAA5U,MAAAgF,IAAA6P,EAAAtJ,UAAAqJ,KAEA2hD,EAAAz2D,UAAAkZ,WAAA,SAAApE,GACA,GAAAe,GAAA3V,KAAAw2D,UACA3hD,EAAA7U,KAAA6U,MAEA,OADA7U,MAAAuV,UACAE,SAAA8gD,EAAA3qB,SAAAj2B,GACAd,SAAAD,gBAGA2hD,GACCxjD,EAAAY,WACDvgB,GAAAmjE,yBpNsoqBM,SAAUpjE,EAAQC,EAASC,GAEjC,YqNtrqBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA6hE,EAAA7hE,EAAA,IACA0f,EAAA1f,EAAA,GACA+kD,EAAA/kD,EAAA,IACAm3C,EAAAn3C,EAAA,IACAojE,EAAApjE,EAAA,IAMAqjE,EAAA,SAAAx1D,GAEA,QAAAw1D,GAAAC,EAAAvB,EAAA7/C,OACA,KAAAohD,IAAiCA,EAAA,EACjC,IAAA9xD,GAAA3D,EAAA6B,KAAA/C,WAgBA,OAfA6E,GAAAuwD,QAAA,EACAvwD,EAAA8xD,QAAA,EACAzB,EAAAx5C,UAAA05C,GACAvwD,EAAAuwD,OAAAx7C,OAAAw7C,GAAA,MAAAx7C,OAAAw7C,GAEA5qB,EAAAC,YAAA2qB,KACA7/C,EAAA6/C,GAEA5qB,EAAAC,YAAAl1B,KACAA,EAAA6iC,EAAAzkD,OAEAkR,EAAA0Q,YACA1Q,EAAA8xD,QAAAF,EAAAj7C,OAAAm7C,IACAA,EAAA9xD,EAAA0Q,UAAA0E,MACA08C,EACA9xD,EAoEA,MAvFA6P,GAAAO,UAAAyhD,EAAAx1D,GA+DAw1D,EAAAn8B,OAAA,SAAAq8B,EAAAxB,EAAA7/C,GAEA,WADA,KAAAqhD,IAAsCA,EAAA,GACtC,GAAAF,GAAAE,EAAAxB,EAAA7/C,IAEAmhD,EAAA9qB,SAAA,SAAAl2B,GACA,GAAAxa,GAAAwa,EAAAxa,MAAAk6D,EAAA1/C,EAAA0/C,OAAAxgD,EAAAc,EAAAd,WACAmC,EAAA/W,IAEA,IADA4U,EAAAtB,KAAApY,IACA0Z,EAAAgB,OAAA,CAGA,QAAAw/C,EACA,MAAAxgD,GAAArB,UAEAmC,GAAAxa,QAAA,EACA6b,EAAAtB,SAAAC,EAAA0/C,KAEAsB,EAAA52D,UAAAkZ,WAAA,SAAApE,GACA,GACA/N,GAAA7G,KAAAo1D,EAAAvuD,EAAAuuD,OAAAuB,EAAA9vD,EAAA8vD,OACA,OADA9vD,GAAA0O,UACAE,SAAAihD,EAAA9qB,SAAA+qB,GACAz7D,MAHA,EAGAk6D,SAAAxgD,gBAGA8hD,GACC3jD,EAAAY,WACDvgB,GAAAsjE,mBrN6rqBM,SAAUvjE,EAAQC,EAASC,GAEjC,YsNryqBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACAi2C,EAAAj2C,EAAA,GACAg2C,EAAAh2C,EAAA,GAMAwjE,EAAA,SAAA31D,GAEA,QAAA21D,GAAAC,EAAA5E,GACA,GAAArtD,GAAA3D,EAAA6B,KAAA/C,WAGA,OAFA6E,GAAAiyD,kBACAjyD,EAAAqtD,oBACArtD,EAgBA,MArBA6P,GAAAO,UAAA4hD,EAAA31D,GAOA21D,EAAAt8B,OAAA,SAAAu8B,EAAA5E,GACA,UAAA2E,GAAAC,EAAA5E,IAEA2E,EAAA/2D,UAAAkZ,WAAA,SAAApE,GACA,GACAmiD,GADAlwD,EAAA7G,KAAA82D,EAAAjwD,EAAAiwD,gBAAA5E,EAAArrD,EAAAqrD,iBAEA,KAEA,MADA6E,GAAAD,IACA,GAAAE,GAAApiD,EAAAmiD,EAAA7E,GAEA,MAAAh+C,GACAU,EAAA1B,MAAAgB,KAGA2iD,GACC9jD,EAAAY,WACDvgB,GAAAyjE,iBACA,IAAAG,GAAA,SAAA91D,GAEA,QAAA81D,GAAAjiD,EAAAgiD,EAAA7E,GACA,GAAArtD,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAAkyD,WACAlyD,EAAAqtD,oBACAn9C,EAAA/P,IAAA+xD,GACAlyD,EAAAoyD,SACApyD,EAaA,MApBA6P,GAAAO,UAAA+hD,EAAA91D,GASA81D,EAAAl3D,UAAAm3D,OAAA,WACA,IACA,GAAApiD,GAAA7U,KAAAkyD,kBAAAnvD,KAAA/C,UAAA+2D,SACAliD,IACA7U,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAA6U,IAGA,MAAAX,GACAlU,KAAAisC,OAAA/3B,KAGA8iD,GACC3tB,EAAAiB,kBtN4yqBK,SAAUn3C,EAAQC,EAASC,GAEjC,YuNv2qBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA0jE,GAAA7jE,EAAA,IACAD,GAAA0wD,aAAAoT,EAAA3F,wBAAAh3B,QvN82qBM,SAAUpnC,EAAQC,EAASC,GAEjC,YwNl3qBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA2jE,GAAA9jE,EAAA,IACAD,GAAA4wD,iBAAAmT,EAAAnF,4BAAAz3B,QxNy3qBM,SAAUpnC,EAAQC,EAASC,GAEjC,YyN3wqBA,SAAA41C,KAEA,OADAnmC,MACA8D,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C9D,EAAA8D,GAAAxF,UAAAwF,EAEA,IAAAyN,GAAA,KACAkB,EAAA,IAYA,OAXAi1B,GAAAC,YAAA3nC,IAAA9O,OAAA,MACAuhB,EAAAzS,EAAA+L,OAEA,kBAAA/L,KAAA9O,OAAA,KACAqgB,EAAAvR,EAAA+L,OAIA,IAAA/L,EAAA9O,QAAA2nB,EAAA9gB,QAAAiI,EAAA,MACAA,IAAA,IAEA,GAAAomC,GAAAC,gBAAArmC,EAAAyS,GAAAf,KAAA,GAAAyvC,GAAA7a,sBAAA/0B,IApIA/gB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAg3C,GAAAn3C,EAAA,IACAsoB,EAAAtoB,EAAA,IACA61C,EAAA71C,EAAA,IACA4wD,EAAA5wD,EAAA,GAkIAD,GAAA61C,iBzNo4qBM,SAAU91C,EAAQC,EAASC,GAEjC,Y0N5grBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA0wD,GAAA7wD,EAAA,GACAD,GAAAyD,OAAAqtD,EAAA3Z,c1NmhrBM,SAAUp3C,EAAQC,EAASC,GAEjC,Y2NvhrBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA4jE,GAAA/jE,EAAA,IACAD,GAAAgxD,MAAAgT,EAAAnF,gBAAA13B,Q3N8hrBM,SAAUpnC,EAAQC,EAASC,GAEjC,Y4NlirBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAslB,EAAAtlB,EAAA,GACAshB,EAAAthB,EAAA,GACA0f,EAAA1f,EAAA,GACAulB,EAAAvlB,EAAA,GACAgiB,EAAAhiB,EAAA,IACAovD,EAAApvD,EAAA,IACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACAgkE,EAAAhkE,EAAA,KAMAikE,EAAA,SAAAp2D,GAEA,QAAAo2D,GAAAC,EAAAxiD,GACA,GAAAlQ,GAAA7E,IACA,IAAAu3D,YAAAxkD,GAAAY,WACA9O,EAAA3D,EAAA6B,KAAA/C,KAAA+U,EAAAwiD,IAAAv3D,SAEA,CAWA,GAVA6E,EAAA3D,EAAA6B,KAAA/C,YACA6E,EAAA2yD,cAAAniD,EAAAU,KAAA0hD,UACA5yD,EAAA6yD,QAAA,GAAA/+C,GAAAS,QACA,gBAAAm+C,GACA1yD,EAAAqiB,IAAAqwC,EAIAF,EAAAhiE,OAAAwP,EAAA0yD,IAEA1yD,EAAA2yD,cACA,SAAA/iE,OAAA,wCAEAoQ,GAAAkQ,YAAA,GAAA0tC,GAAAhpC,cAEA,MAAA5U,GA6MA,MAnOA6P,GAAAO,UAAAqiD,EAAAp2D,GAwBAo2D,EAAAx3D,UAAAkrC,eAAA,SAAAx0B,GACA,MAAAjQ,MAAAgtB,MAAA/c,EAAAyB,OAwCAq/C,EAAA/8B,OAAA,SAAAg9B,GACA,UAAAD,GAAAC,IAEAD,EAAAx3D,UAAA0U,KAAA,SAAAs/B,GACA,GAAA6jB,GAAA,GAAAL,GAAAt3D,UAAA+U,YAEA,OADA4iD,GAAA7jB,WACA6jB,GAEAL,EAAAx3D,UAAA83D,YAAA,WACA53D,KAAA63D,OAAA,KACA73D,KAAA6U,SACA7U,KAAA+U,YAAA,GAAA0tC,GAAAhpC,eAEAzZ,KAAA03D,QAAA,GAAA/+C,GAAAS,SAGAk+C,EAAAx3D,UAAAg4D,UAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAnG,GAAA9xD,IACA,WAAA+S,GAAAY,WAAA,SAAAN,GACA,GAAA8B,GAAAw7B,EAAAoB,SAAAgmB,IACA5iD,KAAAy7B,EAAAoB,YACA3+B,EAAAH,MAAA09B,EAAAoB,YAAAx7B,GAGAs7C,EAAAx+C,KAAA6B,EAEA,IAAAkF,GAAAy3C,EAAAvmD,UAAA,SAAAI,GACA,GAAAwJ,GAAAw7B,EAAAoB,SAAAkmB,GAAAtsD,EACAwJ,KAAAy7B,EAAAoB,YACA3+B,EAAAH,MAAA09B,EAAAoB,YAAAx7B,GAEArB,GACA9B,EAAAC,KAAA3H,IAEa,SAAAuI,GAAkB,MAAAb,GAAAH,MAAAgB,IAA8B,WAAe,MAAAb,GAAAE,YAC5E,mBACA,GAAA4B,GAAAw7B,EAAAoB,SAAAimB,IACA7iD,KAAAy7B,EAAAoB,YACA3+B,EAAAH,MAAA09B,EAAAoB,YAAAx7B,GAGAs7C,EAAAx+C,KAAA6B,GAEAkF,EAAA5O,kBAIA6rD,EAAAx3D,UAAAo4D,eAAA,WACA,GAAArzD,GAAA7E,KACAw3D,EAAAx3D,KAAAw3D,cACAnkD,EAAArT,KAAA03D,QACAG,EAAA,IACA,KACAA,EAAA73D,KAAAm4D,SACA,GAAAX,GAAAx3D,KAAAknB,IAAAlnB,KAAAm4D,UACA,GAAAX,GAAAx3D,KAAAknB,KACAlnB,KAAA63D,SACA73D,KAAAo4D,aACAp4D,KAAA63D,OAAAO,WAAAp4D,KAAAo4D,YAGA,MAAA5hD,GAEA,WADAnD,GAAAH,MAAAsD,GAGA,GAAA6D,GAAA,GAAAzB,GAAAM,aAAA,WACArU,EAAAgzD,OAAA,KACAA,GAAA,IAAAA,EAAAllB,YACAklB,EAAAnc,SAGAmc,GAAAQ,OAAA,SAAA7hD,GACA,GAAA8hD,GAAAzzD,EAAAyzD,YACAA,IACAA,EAAAhlD,KAAAkD,EAEA,IAAAoE,GAAA/V,EAAAkQ,WACAlQ,GAAAkQ,YAAAJ,EAAAS,WAAAmlB,OAAA,SAAA5uB,GAA6E,WAAAksD,EAAAllB,YAAAklB,EAAAnmB,KAAA/lC,IAAoD,SAAA6K,GACjI,GAAA+hD,GAAA1zD,EAAA0zD,eACAA,IACAA,EAAAjlD,SAAArZ,IAEAuc,KAAAgiD,KACAX,EAAAnc,MAAAllC,EAAAgiD,KAAAhiD,EAAAuc,QAGA1f,EAAAH,MAAA,GAAAqB,WAAA,sIAGA1P,EAAA+yD,eACa,WACb,GAAAW,GAAA1zD,EAAA0zD,eACAA,IACAA,EAAAjlD,SAAArZ,IAEA49D,EAAAnc,QACA72C,EAAA+yD,gBAEAh9C,eAAA6nC,GAAAhpC,eACAY,EAAArV,IAAA4V,EAAArP,UAAA1G,EAAAkQ,eAGA8iD,EAAAzkB,QAAA,SAAA58B,GACA3R,EAAA+yD,cACAvkD,EAAAH,MAAAsD,IAEAqhD,EAAAY,QAAA,SAAAjiD,GACA3R,EAAA+yD,aACA,IAAAc,GAAA7zD,EAAA6zD,aACAA,IACAA,EAAAplD,KAAAkD,GAEAA,EAAAmiD,SACAtlD,EAAAE,WAGAF,EAAAH,MAAAsD,IAGAqhD,EAAAe,UAAA,SAAApiD,GACA,GAAArB,GAAAw7B,EAAAoB,SAAAltC,EAAAmmC,gBAAAx0B,EACArB,KAAAy7B,EAAAoB,YACA3+B,EAAAH,MAAA09B,EAAAoB,YAAAx7B,GAGAnD,EAAAC,KAAA6B,KAIAmiD,EAAAx3D,UAAAkZ,WAAA,SAAApE,GACA,GAAA/P,GAAA7E,KACA6U,EAAA7U,KAAA6U,MACA,IAAAA,EACA,MAAAA,GAAAtJ,UAAAqJ,EAEA5U,MAAA63D,QACA73D,KAAAk4D,gBAEA,IAAA79C,GAAA,GAAAzB,GAAAM,YAWA,OAVAmB,GAAArV,IAAAhF,KAAA03D,QAAAnsD,UAAAqJ,IACAyF,EAAArV,IAAA,WACA,GAAA6yD,GAAAhzD,EAAAgzD,MACA,KAAAhzD,EAAA6yD,QAAAl9C,UAAAxmB,SACA6jE,GAAA,IAAAA,EAAAllB,YACAklB,EAAAnc,QAEA72C,EAAA+yD,iBAGAv9C,GAEAi9C,EAAAx3D,UAAA2L,YAAA,WACA,GAAA5E,GAAA7G,KAAA6U,EAAAhO,EAAAgO,OAAAgjD,EAAAhxD,EAAAgxD,MACAA,IAAA,IAAAA,EAAAllB,aACAklB,EAAAnc,QACA17C,KAAA43D,eAEA12D,EAAApB,UAAA2L,YAAA1I,KAAA/C,MACA6U,IACA7U,KAAA+U,YAAA,GAAA0tC,GAAAhpC,gBAGA69C,GACC3+C,EAAA4pC,iBACDnvD,GAAAkkE,oB5NyirBM,SAAUnkE,EAAQC,EAASC,GAEjC,Y6NjyrBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA8vD,GAAAjwD,EAAA,GACAD,GAAAkxD,KAAAhB,EAAAtT,eAAAzV,Q7NwyrBM,SAAUpnC,EAAQC,EAASC,GAEjC,Y8N5yrBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAqlE,GAAAxlE,EAAA,IACAD,GAAAoxD,UAAAqU,EAAAvB,iBAAA/8B,Q9NmzrBM,SAAUpnC,EAAQC,EAASC,GAEjC,Y+NvzrBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA09D,GAAA79D,EAAA,GACAD,GAAA0gB,MAAAo9C,EAAAE,gBAAA72B,Q/N8zrBM,SAAUpnC,EAAQC,EAASC,GAEjC,YgOl0rBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAslE,GAAAzlE,EAAA,IACAD,GAAAyxD,UAAAiU,EAAAtF,oBAAAj5B,QhOy0rBM,SAAUpnC,EAAQC,EAASC,GAEjC,YiO70rBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAulE,GAAA1lE,EAAA,IACAD,GAAA2xD,iBAAAgU,EAAAhF,2BAAAx5B,QjOo1rBM,SAAUpnC,EAAQC,EAASC,GAEjC,YkOx1rBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAwlE,GAAA3lE,EAAA,IACAD,GAAAkyD,IAAA0T,EAAAnE,aAAAt6B,QlO+1rBM,SAAUpnC,EAAQC,EAASC,GAEjC,YmOn2rBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAylE,GAAA5lE,EAAA,IACAD,GAAAmlD,SAAA0gB,EAAA9D,mBAAA56B,QnO02rBM,SAAUpnC,EAAQC,EAASC,GAEjC,YoO92rBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA0lE,GAAA7lE,EAAA,IACAD,GAAAsyD,MAAAwT,EAAAhD,gBAAA37B,QpOq3rBM,SAAUpnC,EAAQC,EAASC,GAEjC,YqOz3rBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA2lE,GAAA9lE,EAAA,IACAD,GAAA0yD,MAAAqT,EAAAhD,gBAAA57B,QrOg4rBM,SAAUpnC,EAAQC,EAASC,GAEjC,YsOp4rBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA4lE,GAAA/lE,EAAA,IACAD,GAAA6yD,MAAAmT,EAAAhD,gBAAA77B,QtO24rBM,SAAUpnC,EAAQC,EAASC,GAEjC,YuO/4rBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA6lE,GAAAhmE,EAAA,IACAD,GAAA+yD,OAAAkT,EAAA/G,gBAAA/3B,QvOs5rBM,SAAUpnC,EAAQC,EAASC,GAEjC,YwO15rBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA8lE,GAAAjmE,EAAA,IACAD,GAAAizD,MAAAiT,EAAA5C,gBAAAn8B,QxOi6rBM,SAAUpnC,EAAQC,EAASC,GAEjC,YyOr6rBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA+lE,GAAAlmE,EAAA,IACAD,GAAAmzD,MAAAgT,EAAA1C,gBAAAt8B,QzO46rBM,SAAUpnC,EAAQC,EAASC,GAEjC,Y0Oh7rBAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAgzD,GAAAnzD,EAAA,GACAD,GAAAqzD,IAAAD,EAAAra,W1Ou7rBM,SAAUh5C,EAAQC,EAASC,GAEjC,Y2O74rBA,SAAAszD,GAAAtP,GACA,MAAAr3C,MAAAwU,KAAA,GAAAglD,GAAAniB,IA/CA/jD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EA4CAD,GAAAuzD,OACA,IAAA6S,GAAA,WACA,QAAAA,GAAAniB,GACAr3C,KAAAq3C,mBAKA,MAHAmiB,GAAA15D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAkuD,GAAA7kD,EAAA5U,KAAAq3C,oBAEAmiB,KAOAC,EAAA,SAAAv4D,GAEA,QAAAu4D,GAAA1kD,EAAAsiC,GACA,GAAAxyC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAAwyC,mBACAxyC,EAAAsO,UAAA,EACAtO,EAwCA,MA7CA6P,GAAAO,UAAAwkD,EAAAv4D,GAOAu4D,EAAA35D,UAAAoV,MAAA,SAAA1hB,GAGA,GAFAwM,KAAAxM,QACAwM,KAAAmT,UAAA,GACAnT,KAAA83C,UAAA,CACA,GAAAE,GAAArH,EAAAoB,SAAA/xC,KAAAq3C,kBAAA7jD,EACA,IAAAwkD,IAAApH,EAAAoB,YACAhyC,KAAA+U,YAAA7B,MAAA09B,EAAAoB,YAAAx7B,OAEA,CACA,GAAAq8C,GAAAvpB,EAAAK,kBAAA3pC,KAAAg4C,EACA6a,GAAAj9C,OACA5V,KAAA05D,gBAGA15D,KAAAgF,IAAAhF,KAAA83C,UAAA+a,MAKA4G,EAAA35D,UAAA45D,cAAA,WACA,GAAA7yD,GAAA7G,KAAAxM,EAAAqT,EAAArT,MAAA2f,EAAAtM,EAAAsM,SAAA2kC,EAAAjxC,EAAAixC,SACAA,KACA93C,KAAAjF,OAAA+8C,GACA93C,KAAA83C,UAAA,KACAA,EAAArsC,eAEA0H,IACAnT,KAAAxM,MAAA,KACAwM,KAAAmT,UAAA,EACAnT,KAAA+U,YAAAzB,KAAA9f,KAGAimE,EAAA35D,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACAlqC,KAAA05D,iBAEAD,EAAA35D,UAAA8pC,eAAA,WACA5pC,KAAA05D,iBAEAD,GACCpwB,EAAAiB,kB3Ok8rBK,SAAUn3C,EAAQC,EAASC,GAEjC,Y4OrgsBA,SAAAwzD,GAAA7O,EAAAziC,GAEA,WADA,KAAAA,IAA+BA,EAAA6iC,EAAAzkD,OAC/BqM,KAAAwU,KAAA,GAAAmlD,GAAA3hB,EAAAziC,IAiDA,QAAA65B,GAAAx6B,GACAA,EAAA8kD,gBAlGApmE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA+kD,EAAA/kD,EAAA,IACAshB,EAAAthB,EAAA,EA+CAD,GAAAyzD,WACA,IAAA8S,GAAA,WACA,QAAAA,GAAA3hB,EAAAziC,GACAvV,KAAAg4C,WACAh4C,KAAAuV,YAKA,MAHAokD,GAAA75D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAquD,GAAAhlD,EAAA5U,KAAAg4C,SAAAh4C,KAAAuV,aAEAokD,KAOAC,EAAA,SAAA14D,GAEA,QAAA04D,GAAA7kD,EAAAijC,EAAAziC,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAAmzC,WACAnzC,EAAA0Q,YACA1Q,EAAAsO,UAAA,EACAtO,EAsBA,MA5BA6P,GAAAO,UAAA2kD,EAAA14D,GAQA04D,EAAA95D,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAxM,QACAwM,KAAAmT,UAAA,EACAnT,KAAA83C,WACA93C,KAAAgF,IAAAhF,KAAA83C,UAAA93C,KAAAuV,UAAAE,SAAA25B,EAAApvC,KAAAg4C,SAAAh4C,QAGA45D,EAAA95D,UAAA45D,cAAA,WACA,GAAA7yD,GAAA7G,KAAAxM,EAAAqT,EAAArT,MAAA2f,EAAAtM,EAAAsM,SAAA2kC,EAAAjxC,EAAAixC,SACAA,KACA93C,KAAAjF,OAAA+8C,GACA93C,KAAA83C,UAAA,KACAA,EAAArsC,eAEA0H,IACAnT,KAAAxM,MAAA,KACAwM,KAAAmT,UAAA,EACAnT,KAAA+U,YAAAzB,KAAA9f,KAGAomE,GACCjlD,EAAAS,a5O6jsBK,SAAUjiB,EAAQC,EAASC,GAEjC,Y6O3nsBA,SAAA+3C,GAAAyuB,GACA,MAAA75D,MAAAwU,KAAA,GAAAslD,GAAAD,IArCAvmE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAoCAD,GAAAg4C,QACA,IAAA0uB,GAAA,WACA,QAAAA,GAAAD,GACA75D,KAAA65D,kBAQA,MANAC,GAAAh6D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,GAAAklD,GAAA,GAAAC,GAAAplD,GACAyF,EAAAxF,EAAAtJ,UAAAwuD,EAEA,OADAA,GAAAE,2BAAAj6D,KAAA65D,iBACAx/C,GAEAy/C,KAOAE,EAAA,SAAA94D,GAEA,QAAA84D,GAAAjlD,GACA,GAAAlQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAEA,OADA6E,GAAAumC,UACAvmC,EAoBA,MAxBA6P,GAAAO,UAAA+kD,EAAA94D,GAMA84D,EAAAl6D,UAAAm6D,2BAAA,SAAAJ,GACA75D,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAA65D,KAEAG,EAAAl6D,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAorC,OAAAlmC,KAAA1R,IAEAwmE,EAAAl6D,UAAAyb,UAAA,WACA,GAAA6vB,GAAAprC,KAAAorC,MACAA,GAAAp3C,OAAA,GACAgM,KAAA+U,YAAAzB,KAAA83B,GAEAlqC,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAEAg6D,EAAAl6D,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAiB,GAAAprC,KAAAorC,MACAprC,MAAAorC,UACAprC,KAAA+U,YAAAzB,KAAA83B,IAEA4uB,GACC3wB,EAAAiB,kB7OsqsBK,SAAUn3C,EAAQC,EAASC,GAEjC,Y8O/ssBA,SAAA2zD,GAAAttC,EAAAwgD,GAEA,WADA,KAAAA,IAAsCA,EAAA,MACtCl6D,KAAAwU,KAAA,GAAA2lD,GAAAzgD,EAAAwgD,IA9CA5mE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EA8CAD,GAAA4zD,aACA,IAAAmT,GAAA,WACA,QAAAA,GAAAzgD,EAAAwgD,GACAl6D,KAAA0Z,aACA1Z,KAAAk6D,mBAKAl6D,KAAAo6D,gBAJAF,GAAAxgD,IAAAwgD,EAIAG,EAHAC,EASA,MAHAH,GAAAr6D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAvL,MAAAo6D,gBAAAxlD,EAAA5U,KAAA0Z,WAAA1Z,KAAAk6D,oBAEAC,KAOAG,EAAA,SAAAp5D,GAEA,QAAAo5D,GAAAvlD,EAAA2E,GACA,GAAA7U,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAA6U,aACA7U,EAAAumC,UACAvmC,EAiBA,MAtBA6P,GAAAO,UAAAqlD,EAAAp5D,GAOAo5D,EAAAx6D,UAAAoV,MAAA,SAAA1hB,GACA,GAAA43C,GAAAprC,KAAAorC,MACAA,GAAAlmC,KAAA1R,GACA43C,EAAAp3C,QAAAgM,KAAA0Z,aACA1Z,KAAA+U,YAAAzB,KAAA83B,GACAprC,KAAAorC,YAGAkvB,EAAAx6D,UAAAyb,UAAA,WACA,GAAA6vB,GAAAprC,KAAAorC,MACAA,GAAAp3C,OAAA,GACAgM,KAAA+U,YAAAzB,KAAA83B,GAEAlqC,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAEAs6D,GACC3lD,EAAAS,YAMDilD,EAAA,SAAAn5D,GAEA,QAAAm5D,GAAAtlD,EAAA2E,EAAAwgD,GACA,GAAAr1D,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAA6U,aACA7U,EAAAq1D,mBACAr1D,EAAA01D,WACA11D,EAAAmQ,MAAA,EACAnQ,EA2BA,MAlCA6P,GAAAO,UAAAolD,EAAAn5D,GASAm5D,EAAAv6D,UAAAoV,MAAA,SAAA1hB,GACA,GAAAqT,GAAA7G,KAAA0Z,EAAA7S,EAAA6S,WAAAwgD,EAAArzD,EAAAqzD,iBAAAK,EAAA1zD,EAAA0zD,QAAAvlD,EAAAnO,EAAAmO,KACAhV,MAAAgV,QACAA,EAAAklD,GAAA,GACAK,EAAAr1D,QAEA,QAAA5Q,GAAAimE,EAAAvmE,OAAoCM,KAAK,CACzC,GAAA82C,GAAAmvB,EAAAjmE,EACA82C,GAAAlmC,KAAA1R,GACA43C,EAAAp3C,SAAA0lB,IACA6gD,EAAAn/D,OAAA9G,EAAA,GACA0L,KAAA+U,YAAAzB,KAAA83B,MAIAivB,EAAAv6D,UAAAyb,UAAA,WAEA,IADA,GAAA1U,GAAA7G,KAAAu6D,EAAA1zD,EAAA0zD,QAAAxlD,EAAAlO,EAAAkO,YACAwlD,EAAAvmE,OAAA,IACA,GAAAo3C,GAAAmvB,EAAAvjD,OACAo0B,GAAAp3C,OAAA,GACA+gB,EAAAzB,KAAA83B,GAGAlqC,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAEAq6D,GACC1lD,EAAAS,a9OkwsBK,SAAUjiB,EAAQC,EAASC,GAEjC,Y+O31sBA,SAAA6zD,GAAAsT,GACA,GAAAxmE,GAAAoN,UAAApN,OACAuhB,EAAA6iC,EAAAzkD,KACA62C,GAAAC,YAAArpC,oBAAApN,OAAA,MACAuhB,EAAAnU,oBAAApN,OAAA,GACAA,IAEA,IAAAymE,GAAA,IACAzmE,IAAA,IACAymE,EAAAr5D,UAAA,GAEA,IAAAs5D,GAAA9gD,OAAAC,iBAIA,OAHA7lB,IAAA,IACA0mE,EAAAt5D,UAAA,IAEApB,KAAAwU,KAAA,GAAAmmD,GAAAH,EAAAC,EAAAC,EAAAnlD,IA2GA,QAAAqlD,GAAAllD,GACA,GAAAd,GAAAc,EAAAd,WACAimD,EAAAnlD,EAAA+rB,OACAo5B,IACAjmD,EAAAkmD,aAAAD,GAEAjmD,EAAAgB,SACAF,EAAA+rB,QAAA7sB,EAAAmmD,cACArlD,EAAA+rB,QAAAu5B,YAAAh7D,KAAAyV,SAAAC,IAAA8kD,iBAGA,QAAAS,GAAAvlD,GACA,GAAA+kD,GAAA/kD,EAAA+kD,uBAAAD,EAAA9kD,EAAA8kD,eAAA5lD,EAAAc,EAAAd,WAAAW,EAAAG,EAAAH,UACAksB,EAAA7sB,EAAAmmD,cACAhkD,EAAA/W,IACA4U,GAAAgB,SACAhB,EAAA5P,IAAAy8B,EAAAu5B,YAAAzlD,EAAAE,SAAAylD,EAAAV,GAAsG5lD,aAAA6sB,aACtG1qB,EAAAtB,SAAAC,EAAA+kD,IAGA,QAAAS,GAAArvB,GACA,GAAAj3B,GAAAi3B,EAAAj3B,WAAA6sB,EAAAoK,EAAApK,OACA7sB,GAAAkmD,aAAAr5B,GAjMAnuC,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA+kD,EAAA/kD,EAAA,IACAshB,EAAAthB,EAAA,GACAm3C,EAAAn3C,EAAA,GA8DAD,GAAA8zD,YACA,IAAAyT,GAAA,WACA,QAAAA,GAAAH,EAAAC,EAAAC,EAAAnlD,GACAvV,KAAAw6D,iBACAx6D,KAAAy6D,yBACAz6D,KAAA06D,gBACA16D,KAAAuV,YAKA,MAHAolD,GAAA76D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA4vD,GAAAvmD,EAAA5U,KAAAw6D,eAAAx6D,KAAAy6D,uBAAAz6D,KAAA06D,cAAA16D,KAAAuV,aAEAolD,KAEAS,EAAA,WACA,QAAAA,KACAp7D,KAAAorC,UAEA,MAAAgwB,MAOAD,EAAA,SAAAj6D,GAEA,QAAAi6D,GAAApmD,EAAAylD,EAAAC,EAAAC,EAAAnlD,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IACA6E,GAAA21D,iBACA31D,EAAA41D,yBACA51D,EAAA61D,gBACA71D,EAAA0Q,YACA1Q,EAAAkqB,WACA,IAAA0S,GAAA58B,EAAAk2D,aAEA,IADAl2D,EAAAw2D,aAAA,MAAAZ,KAAA,EACA51D,EAAAw2D,aAAA,CACA,GAAAC,IAAqC1mD,WAAA/P,EAAA48B,UAAA+4B,iBACrC31D,GAAAG,IAAAy8B,EAAAu5B,YAAAzlD,EAAAE,SAAAmlD,EAAAJ,EAAAc,QAEA,CACA,GAAAC,IAA8B3mD,WAAA/P,EAAA48B,WAC9B+5B,GAAiChB,iBAAAC,yBAAA7lD,WAAA/P,EAAA0Q,YACjC1Q,GAAAG,IAAAy8B,EAAAu5B,YAAAzlD,EAAAE,SAAAylD,EAAAV,EAAAe,IACA12D,EAAAG,IAAAuQ,EAAAE,SAAAwlD,EAAAR,EAAAe,IAEA,MAAA32D,GA0DA,MA9EA6P,GAAAO,UAAAkmD,EAAAj6D,GAsBAi6D,EAAAr7D,UAAAoV,MAAA,SAAA1hB,GAIA,OADAioE,GAFA1sC,EAAA/uB,KAAA+uB,SACApU,EAAAoU,EAAA/6B,OAEAM,EAAA,EAAuBA,EAAAqmB,EAASrmB,IAAA,CAChC,GAAAonE,GAAA3sC,EAAAz6B,GACA82C,EAAAswB,EAAAtwB,MACAA,GAAAlmC,KAAA1R,GACA43C,EAAAp3C,QAAAgM,KAAA06D,gBACAe,EAAAC,GAGAD,GACAz7D,KAAA27D,aAAAF,IAGAN,EAAAr7D,UAAAmsC,OAAA,SAAA/3B,GACAlU,KAAA+uB,SAAA/6B,OAAA,EACAkN,EAAApB,UAAAmsC,OAAAlpC,KAAA/C,KAAAkU,IAEAinD,EAAAr7D,UAAAyb,UAAA,WAEA,IADA,GAAA1U,GAAA7G,KAAA+uB,EAAAloB,EAAAkoB,SAAAha,EAAAlO,EAAAkO,YACAga,EAAA/6B,OAAA,IACA,GAAA4nE,GAAA7sC,EAAA/X,OACAjC,GAAAzB,KAAAsoD,EAAAxwB,QAEAlqC,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAEAm7D,EAAAr7D,UAAA2W,aAAA,WACAzW,KAAA+uB,SAAA,MAEAosC,EAAAr7D,UAAA67D,aAAA,SAAAl6B,GACAzhC,KAAA86D,aAAAr5B,EACA,IAAAu5B,GAAAv5B,EAAAu5B,WAGA,IAFAA,EAAAvvD,cACAzL,KAAAjF,OAAAigE,IACAh7D,KAAA4V,QAAA5V,KAAAq7D,aAAA,CACA55B,EAAAzhC,KAAA+6D,aACA,IAAAP,GAAAx6D,KAAAw6D,eACAc,GAAqC1mD,WAAA5U,KAAAyhC,UAAA+4B,iBACrCx6D,MAAAgF,IAAAy8B,EAAAu5B,YAAAh7D,KAAAuV,UAAAE,SAAAmlD,EAAAJ,EAAAc,MAGAH,EAAAr7D,UAAAi7D,YAAA,WACA,GAAAt5B,GAAA,GAAA25B,EAEA,OADAp7D,MAAA+uB,SAAA7pB,KAAAu8B,GACAA,GAEA05B,EAAAr7D,UAAAg7D,aAAA,SAAAr5B,GACAzhC,KAAA+U,YAAAzB,KAAAmuB,EAAA2J,OACA,IAAArc,GAAA/uB,KAAA+uB,UACAA,IAAA5zB,QAAAsmC,IAAA,IACA,GACA1S,EAAA3zB,OAAA2zB,EAAA5zB,QAAAsmC,GAAA,IAGA05B,GACCxmD,EAAAS,a/O26sBK,SAAUjiB,EAAQC,EAASC,GAEjC,YgP5itBA,SAAA+zD,GAAAyU,EAAAC,GACA,MAAA97D,MAAAwU,KAAA,GAAAunD,GAAAF,EAAAC,IA5CAxoE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAulB,EAAAvlB,EAAA,GACAi2C,EAAAj2C,EAAA,GACAg2C,EAAAh2C,EAAA,EA0CAD,GAAAg0D,cACA,IAAA2U,GAAA,WACA,QAAAA,GAAAF,EAAAC,GACA97D,KAAA67D,WACA77D,KAAA87D,kBAKA,MAHAC,GAAAj8D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAywD,GAAApnD,EAAA5U,KAAA67D,SAAA77D,KAAA87D,mBAEAC,KAOAC,EAAA,SAAA96D,GAEA,QAAA86D,GAAAjnD,EAAA8mD,EAAAC,GACA,GAAAj3D,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAAg3D,WACAh3D,EAAAi3D,kBACAj3D,EAAAkqB,YACAlqB,EAAAG,IAAAskC,EAAAK,kBAAA9kC,EAAAg3D,IACAh3D,EA4EA,MAnFA6P,GAAAO,UAAA+mD,EAAA96D,GASA86D,EAAAl8D,UAAAoV,MAAA,SAAA1hB,GAGA,OAFAu7B,GAAA/uB,KAAA+uB,SACApU,EAAAoU,EAAA/6B,OACAM,EAAA,EAAuBA,EAAAqmB,EAASrmB,IAChCy6B,EAAAz6B,GAAA82C,OAAAlmC,KAAA1R,IAGAwoE,EAAAl8D,UAAAmsC,OAAA,SAAA/3B,GAEA,IADA,GAAA6a,GAAA/uB,KAAA+uB,SACAA,EAAA/6B,OAAA,IACA,GAAA0nE,GAAA3sC,EAAA/X,OACA0kD,GAAArhD,aAAA5O,cACAiwD,EAAAtwB,OAAA,KACAswB,EAAArhD,aAAA,KAEAra,KAAA+uB,SAAA,KACA7tB,EAAApB,UAAAmsC,OAAAlpC,KAAA/C,KAAAkU,IAEA8nD,EAAAl8D,UAAAyb,UAAA,WAEA,IADA,GAAAwT,GAAA/uB,KAAA+uB,SACAA,EAAA/6B,OAAA,IACA,GAAA4nE,GAAA7sC,EAAA/X,OACAhX,MAAA+U,YAAAzB,KAAAsoD,EAAAxwB,QACAwwB,EAAAvhD,aAAA5O,cACAmwD,EAAAxwB,OAAA,KACAwwB,EAAAvhD,aAAA,KAEAra,KAAA+uB,SAAA,KACA7tB,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAEAg8D,EAAAl8D,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAJ,EAAA/pC,KAAAi8D,YAAAlyB,GAAA/pC,KAAAk8D,WAAAlyB,IAEAgyB,EAAAl8D,UAAA8pC,eAAA,SAAAO,GACAnqC,KAAAi8D,YAAA9xB,EAAA1I,UAEAu6B,EAAAl8D,UAAAo8D,WAAA,SAAA1oE,GACA,IACA,GAAAsoE,GAAA97D,KAAA87D,gBACAjC,EAAAiC,EAAA/4D,KAAA/C,KAAAxM,EACAqmE,IACA75D,KAAAm8D,aAAAtC,GAGA,MAAA3lD,GACAlU,KAAAisC,OAAA/3B,KAGA8nD,EAAAl8D,UAAAm8D,YAAA,SAAAx6B,GACA,GAAA1S,GAAA/uB,KAAA+uB,QACA,IAAAA,GAAA0S,EAAA,CACA,GAAA2J,GAAA3J,EAAA2J,OAAA/wB,EAAAonB,EAAApnB,YACAra,MAAA+U,YAAAzB,KAAA83B,GACArc,EAAA3zB,OAAA2zB,EAAA5zB,QAAAsmC,GAAA,GACAzhC,KAAAjF,OAAAsf,GACAA,EAAA5O,gBAGAuwD,EAAAl8D,UAAAq8D,aAAA,SAAAtC,GACA,GAAA9qC,GAAA/uB,KAAA+uB,SACAqc,KACA/wB,EAAA,GAAAzB,GAAAM,aACAuoB,GAAuB2J,SAAA/wB,eACvB0U,GAAA7pB,KAAAu8B,EACA,IAAAoxB,GAAAvpB,EAAAK,kBAAA3pC,KAAA65D,EAAAp4B,IACAoxB,KAAAj9C,OACA5V,KAAAi8D,YAAAx6B,IAGAoxB,EAAApxB,UACAzhC,KAAAgF,IAAA6tD,GACAx4C,EAAArV,IAAA6tD,KAGAmJ,GACC3yB,EAAAiB,kBhP8ltBK,SAAUn3C,EAAQC,EAASC,GAEjC,YiP3stBA,SAAAi0D,GAAAwU,GACA,MAAA97D,MAAAwU,KAAA,GAAA4nD,GAAAN,IAzCAxoE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAulB,EAAAvlB,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAqCAD,GAAAk0D,YACA,IAAA8U,GAAA,WACA,QAAAA,GAAAN,GACA97D,KAAA87D,kBAKA,MAHAM,GAAAt8D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA8wD,GAAAznD,EAAA5U,KAAA87D,mBAEAM,KAOAC,EAAA,SAAAn7D,GAEA,QAAAm7D,GAAAtnD,EAAA+mD,GACA,GAAAj3D,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAAi3D,kBACAj3D,EAAAy3D,aAAA,EACAz3D,EAAAq3D,aACAr3D,EAmDA,MAzDA6P,GAAAO,UAAAonD,EAAAn7D,GAQAm7D,EAAAv8D,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAorC,OAAAlmC,KAAA1R,IAEA6oE,EAAAv8D,UAAAyb,UAAA,WACA,GAAA6vB,GAAAprC,KAAAorC,MACAA,IACAprC,KAAA+U,YAAAzB,KAAA83B,GAEAlqC,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAEAq8D,EAAAv8D,UAAA2W,aAAA,WACAzW,KAAAorC,OAAA,KACAprC,KAAAs8D,aAAA,GAEAD,EAAAv8D,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAk8D,cAEAG,EAAAv8D,UAAA8pC,eAAA,WACA5pC,KAAAs8D,YACAt8D,KAAAuT,WAGAvT,KAAAk8D,cAGAG,EAAAv8D,UAAAo8D,WAAA,WACA,GAAAK,GAAAv8D,KAAAu8D,mBACAA,KACAv8D,KAAAjF,OAAAwhE,GACAA,EAAA9wD,cAEA,IAAA2/B,GAAAprC,KAAAorC,MACAprC,MAAAorC,QACAprC,KAAA+U,YAAAzB,KAAA83B,GAEAprC,KAAAorC,SACA,IAAAyuB,GAAAlpB,EAAAoB,SAAA/xC,KAAA87D,kBACAjC,KAAAjpB,EAAAoB,YACAhyC,KAAAkT,MAAA09B,EAAAoB,YAAAx7B,IAGA+lD,EAAA,GAAA3jD,GAAAM,aACAlZ,KAAAu8D,sBACAv8D,KAAAgF,IAAAu3D,GACAv8D,KAAAs8D,aAAA,EACAC,EAAAv3D,IAAAskC,EAAAK,kBAAA3pC,KAAA65D,IACA75D,KAAAs8D,aAAA,IAGAD,GACChzB,EAAAiB,kBjP0vtBK,SAAUn3C,EAAQC,EAASC,GAEjC,YkPv0tBA,SAAAo0D,GAAApzC,GACA,MAAArU,MAAAwU,KAAA,GAAAyvC,GAAA7a,sBAAA/0B,IA3CA/gB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAywD,GAAA5wD,EAAA,GA4CAD,GAAAq0D,clPw3tBM,SAAUt0D,EAAQC,EAASC,GAEjC,YmP52tBA,SAAAw0D,GAAA1R,EAAAnL,GACA,MAAAhrC,MAAAwU,KAAA,GAAA42C,GAAAhV,mBAAAD,EAAAnL,EAAA,IA5DA13C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA43D,GAAA/3D,EAAA,GA6DAD,GAAAy0D,enP86tBM,SAAU10D,EAAQC,EAASC,GAEjC,YoP37tBA,SAAA2hB,GAAA41B,GACA,MAAA5qC,MAAAwU,KAAA,GAAAgoD,GAAA5xB,EAAA5qC,OApDA1M,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAoDAD,GAAA4hB,OACA,IAAAwnD,GAAA,WACA,QAAAA,GAAA5xB,EAAA/1B,GACA7U,KAAA4qC,YACA5qC,KAAA6U,SAKA,MAHA2nD,GAAA18D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAkxD,GAAA7nD,EAAA5U,KAAA4qC,UAAA5qC,KAAA6U,UAEA2nD,KAOAC,EAAA,SAAAv7D,GAEA,QAAAu7D,GAAA1nD,EAAA61B,EAAA/1B,GACA,GAAAhQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAA+lC,YACA/lC,EAAAgQ,SACAhQ,EAAAmQ,MAAA,EACAnQ,EAAA3J,MAAA,EACA2J,EA2BA,MAlCA6P,GAAAO,UAAAwnD,EAAAv7D,GASAu7D,EAAA38D,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA4qC,UACA5qC,KAAA01C,cAAAliD,GAGAwM,KAAAgV,SAGAynD,EAAA38D,UAAA41C,cAAA,SAAAliD,GACA,GAAA2hB,EACA,KACAA,EAAAnV,KAAA4qC,UAAAp3C,EAAAwM,KAAA9E,QAAA8E,KAAA6U,QAEA,MAAAX,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAiB,GACAnV,KAAAgV,SAGAynD,EAAA38D,UAAAyb,UAAA,WACAvb,KAAA+U,YAAAzB,KAAAtT,KAAAgV,OACAhV,KAAA+U,YAAAxB,YAEAkpD,GACC9nD,EAAAS,apPq/tBK,SAAUjiB,EAAQC,EAASC,GAEjC,YqPnjuBA,SAAA20D,GAAA3Q,GACA,MAAAr3C,MAAAwU,KAAA,GAAAkoD,GAAArlB,IA/CA/jD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EA8CAD,GAAA40D,UACA,IAAA0U,GAAA,WACA,QAAAA,GAAArlB,GACAr3C,KAAAq3C,mBAKA,MAHAqlB,GAAA58D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAoxD,GAAA/nD,EAAA5U,KAAAq3C,oBAEAqlB,KAOAC,EAAA,SAAAz7D,GAEA,QAAAy7D,GAAA5nD,EAAAsiC,GACA,GAAAxyC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAAwyC,mBACAxyC,EAAAsO,UAAA,EACAtO,EAAA+3D,qBAAA,KACA/3D,EAkDA,MAxDA6P,GAAAO,UAAA0nD,EAAAz7D,GAQAy7D,EAAA78D,UAAAoV,MAAA,SAAA1hB,GACA,IACA,GAAA2hB,GAAAnV,KAAAq3C,iBAAAt0C,KAAA/C,KAAAxM,EACA2hB,IACAnV,KAAAqrC,SAAA73C,EAAA2hB,GAGA,MAAAjB,GACAlU,KAAA+U,YAAA7B,MAAAgB,KAGAyoD,EAAA78D,UAAAyb,UAAA,WACAvb,KAAA68D,YACA78D,KAAA+U,YAAAxB,YAEAopD,EAAA78D,UAAAurC,SAAA,SAAA73C,EAAAwkD,GACA,GAAA39B,GAAAra,KAAA48D,oBACA58D,MAAAxM,QACAwM,KAAAmT,UAAA,EACAkH,IACAA,EAAA5O,cACAzL,KAAAjF,OAAAsf,IAEAA,EAAAivB,EAAAK,kBAAA3pC,KAAAg4C,GACA39B,EAAAzE,QACA5V,KAAAgF,IAAAhF,KAAA48D,qBAAAviD,IAGAsiD,EAAA78D,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAA68D,aAEAF,EAAA78D,UAAA8pC,eAAA,WACA5pC,KAAA68D,aAEAF,EAAA78D,UAAA+8D,UAAA,WACA,GAAA78D,KAAAmT,SAAA,CACA,GAAA3f,GAAAwM,KAAAxM,MACA6mB,EAAAra,KAAA48D,oBACAviD,KACAra,KAAA48D,qBAAA,KACAviD,EAAA5O,cACAzL,KAAAjF,OAAAsf,IAEAra,KAAAxM,MAAA,KACAwM,KAAAmT,UAAA,EACAjS,EAAApB,UAAAoV,MAAAnS,KAAA/C,KAAAxM,KAGAmpE,GACCtzB,EAAAiB,kBrPwmuBK,SAAUn3C,EAAQC,EAASC,GAEjC,YsPlruBA,SAAA60D,GAAAyO,EAAAphD,GAEA,WADA,KAAAA,IAA+BA,EAAA6iC,EAAAzkD,OAC/BqM,KAAAwU,KAAA,GAAAsoD,GAAAnG,EAAAphD,IAyDA,QAAA65B,GAAAx6B,GACAA,EAAAmoD,gBA9GAzpE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACA+kD,EAAA/kD,EAAA,GAmDAD,GAAA80D,cACA,IAAA4U,GAAA,WACA,QAAAA,GAAAnG,EAAAphD,GACAvV,KAAA22D,UACA32D,KAAAuV,YAKA,MAHAunD,GAAAh9D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAyxD,GAAApoD,EAAA5U,KAAA22D,QAAA32D,KAAAuV,aAEAunD,KAOAE,EAAA,SAAA97D,GAEA,QAAA87D,GAAAjoD,EAAA4hD,EAAAphD,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAMA,OALA6E,GAAA8xD,UACA9xD,EAAA0Q,YACA1Q,EAAAo4D,sBAAA,KACAp4D,EAAAoxC,UAAA,KACApxC,EAAAsO,UAAA,EACAtO,EA4BA,MApCA6P,GAAAO,UAAA+nD,EAAA97D,GAUA87D,EAAAl9D,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAk9D,gBACAl9D,KAAAi2C,UAAAziD,EACAwM,KAAAmT,UAAA,EACAnT,KAAAgF,IAAAhF,KAAAi9D,sBAAAj9D,KAAAuV,UAAAE,SAAA25B,EAAApvC,KAAA22D,QAAA32D,QAEAg9D,EAAAl9D,UAAAyb,UAAA,WACAvb,KAAA+8D,gBACA/8D,KAAA+U,YAAAxB,YAEAypD,EAAAl9D,UAAAi9D,cAAA,WACA/8D,KAAAk9D,gBACAl9D,KAAAmT,WACAnT,KAAA+U,YAAAzB,KAAAtT,KAAAi2C,WACAj2C,KAAAi2C,UAAA,KACAj2C,KAAAmT,UAAA,IAGA6pD,EAAAl9D,UAAAo9D,cAAA,WACA,GAAAD,GAAAj9D,KAAAi9D,qBACA,QAAAA,IACAj9D,KAAAjF,OAAAkiE,GACAA,EAAAxxD,cACAzL,KAAAi9D,sBAAA,OAGAD,GACCroD,EAAAS,atP8uuBK,SAAUjiB,EAAQC,EAASC,GAEjC,YuP1zuBA,SAAA+0D,GAAA/S,GAEA,WADA,KAAAA,IAAkCA,EAAA,MAClCr1C,KAAAwU,KAAA,GAAA2oD,GAAA9nB,IApCA/hD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAoCAD,GAAAg1D,gBACA,IAAA+U,GAAA,WACA,QAAAA,GAAA9nB,GACAr1C,KAAAq1C,eAKA,MAHA8nB,GAAAr9D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA6xD,GAAAxoD,EAAA5U,KAAAq1C,gBAEA8nB,KAOAC,EAAA,SAAAl8D,GAEA,QAAAk8D,GAAAroD,EAAAsgC,GACA,GAAAxwC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAAwwC,eACAxwC,EAAA0lD,SAAA,EACA1lD,EAYA,MAjBA6P,GAAAO,UAAAmoD,EAAAl8D,GAOAk8D,EAAAt9D,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAuqD,SAAA,EACAvqD,KAAA+U,YAAAzB,KAAA9f,IAEA4pE,EAAAt9D,UAAAyb,UAAA,WACAvb,KAAAuqD,SACAvqD,KAAA+U,YAAAzB,KAAAtT,KAAAq1C,cAEAr1C,KAAA+U,YAAAxB,YAEA6pD,GACCzoD,EAAAS,avPm2uBK,SAAUjiB,EAAQC,EAASC,GAEjC,YwPh4uBA,SAAAsiB,KAAAJ,OACA,KAAAA,IAA+BA,EAAA6iC,EAAAzkD,MAC/B,IAAA0pE,GAAA5G,EAAAj7C,OAAA7F,GACA2nD,EAAAD,GAAA1nD,EAAAJ,EAAA0E,MAAAe,KAAA46C,IAAAjgD,EACA,OAAA3V,MAAAwU,KAAA,GAAA+oD,GAAAD,EAAA/nD,IAjDAjiB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA+kD,EAAA/kD,EAAA,IACAojE,EAAApjE,EAAA,IACAshB,EAAAthB,EAAA,GACAs4C,EAAAt4C,EAAA,GA8CAD,GAAAuiB,OACA,IAAA4nD,GAAA,WACA,QAAAA,GAAA5nD,EAAAJ,GACAvV,KAAA2V,QACA3V,KAAAuV,YAKA,MAHAgoD,GAAAz9D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAiyD,GAAA5oD,EAAA5U,KAAA2V,MAAA3V,KAAAuV,aAEAgoD,KAOAC,EAAA,SAAAt8D,GAEA,QAAAs8D,GAAAzoD,EAAAY,EAAAJ,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAMA,OALA6E,GAAA8Q,QACA9Q,EAAA0Q,YACA1Q,EAAA+V,SACA/V,EAAAgS,QAAA,EACAhS,EAAAyR,SAAA,EACAzR,EA8CA,MAtDA6P,GAAAO,UAAAuoD,EAAAt8D,GAUAs8D,EAAA5xB,SAAA,SAAAl2B,GAKA,IAJA,GAAAb,GAAAa,EAAAb,OACA+F,EAAA/F,EAAA+F,MACArF,EAAAG,EAAAH,UACAR,EAAAW,EAAAX,YACA6F,EAAA5mB,OAAA,GAAA4mB,EAAA,GAAAG,KAAAxF,EAAA0E,OAAA,GACAW,EAAA5D,QAAA80B,aAAA14B,QAAA2B,EAEA,IAAA6F,EAAA5mB,OAAA,GACA,GAAAq0D,GAAArtC,KAAAtZ,IAAA,EAAAkZ,EAAA,GAAAG,KAAAxF,EAAA0E,MACAja,MAAAyV,SAAAC,EAAA2yC,OAGAxzC,GAAAgC,QAAA,GAGA2mD,EAAA19D,UAAA29D,UAAA,SAAAloD,GACAvV,KAAA6W,QAAA,EACA7W,KAAAgF,IAAAuQ,EAAAE,SAAA+nD,EAAA5xB,SAAA5rC,KAAA2V,OACAd,OAAA7U,KAAA+U,YAAA/U,KAAA+U,YAAAQ,gBAGAioD,EAAA19D,UAAA49D,qBAAA,SAAA5xB,GACA,QAAA9rC,KAAAsW,QAAA,CAGA,GAAAf,GAAAvV,KAAAuV,UACA3c,EAAA,GAAA+kE,GAAApoD,EAAA0E,MAAAja,KAAA2V,MAAAm2B,EACA9rC,MAAA4a,MAAA1V,KAAAtM,IACA,IAAAoH,KAAA6W,QACA7W,KAAAy9D,UAAAloD,KAGAioD,EAAA19D,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA09D,qBAAA/xB,EAAA34B,aAAAe,WAAAvgB,KAEAgqE,EAAA19D,UAAAmsC,OAAA,SAAA/3B,GACAlU,KAAAsW,SAAA,EACAtW,KAAA4a,SACA5a,KAAA+U,YAAA7B,MAAAgB,IAEAspD,EAAA19D,UAAAyb,UAAA,WACAvb,KAAA09D,qBAAA/xB,EAAA34B,aAAAmB,mBAEAqpD,GACC7oD,EAAAS,YACDuoD,EAAA,WACA,QAAAA,GAAA5iD,EAAA+wB,GACA9rC,KAAA+a,OACA/a,KAAA8rC,eAEA,MAAA6xB,OxPq7uBM,SAAUxqE,EAAQC,EAASC,GAEjC,YyPrgvBA,SAAAk1D,GAAAqV,EAAAC,GACA,MAAAA,GACA,GAAAC,GAAA99D,KAAA69D,GACArpD,KAAA,GAAAupD,GAAAH,IAEA59D,KAAAwU,KAAA,GAAAupD,GAAAH,IAxDAtqE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACA0f,EAAA1f,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAqDAD,GAAAm1D,WACA,IAAAwV,GAAA,WACA,QAAAA,GAAAH,GACA59D,KAAA49D,wBAKA,MAHAG,GAAAj+D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAyyD,GAAAppD,EAAA5U,KAAA49D,yBAEAG,KAOAC,EAAA,SAAA98D,GAEA,QAAA88D,GAAAjpD,EAAA6oD,GACA,GAAA/4D,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAA+4D,wBACA/4D,EAAA6tD,WAAA,EACA7tD,EAAAo5D,8BACAp5D,EAAA4kC,UACA5kC,EAwDA,MA/DA6P,GAAAO,UAAA+oD,EAAA98D,GASA88D,EAAAl+D,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAA+U,YAAAzB,KAAAy2B,GACA/pC,KAAAk+D,mBAAA/zB,GACAnqC,KAAAm+D,eAEAH,EAAAl+D,UAAAy2C,YAAA,SAAArjC,EAAAi3B,GACAnqC,KAAAisC,OAAA/4B,IAEA8qD,EAAAl+D,UAAA8pC,eAAA,SAAAO,GACA,GAAA32C,GAAAwM,KAAAk+D,mBAAA/zB,EACA32C,IACAwM,KAAA+U,YAAAzB,KAAA9f,GAEAwM,KAAAm+D,eAEAH,EAAAl+D,UAAAoV,MAAA,SAAA1hB,GACA,IACA,GAAA4qE,GAAAp+D,KAAA49D,sBAAApqE,EACA4qE,IACAp+D,KAAAq+D,SAAAD,EAAA5qE,GAGA,MAAA0gB,GACAlU,KAAA+U,YAAA7B,MAAAgB,KAGA8pD,EAAAl+D,UAAAyb,UAAA,WACAvb,KAAA0yD,WAAA,EACA1yD,KAAAm+D,eAEAH,EAAAl+D,UAAAo+D,mBAAA,SAAA7jD,GACAA,EAAA5O,aACA,IAAA6yD,GAAAt+D,KAAAi+D,2BAAA9iE,QAAAkf,GACA7mB,EAAA,IAMA,QALA,IAAA8qE,IACA9qE,EAAAwM,KAAAypC,OAAA60B,GACAt+D,KAAAi+D,2BAAA7iE,OAAAkjE,EAAA,GACAt+D,KAAAypC,OAAAruC,OAAAkjE,EAAA,IAEA9qE,GAEAwqE,EAAAl+D,UAAAu+D,SAAA,SAAAD,EAAA5qE,GACA,GAAA+qE,GAAAj1B,EAAAK,kBAAA3pC,KAAAo+D,EAAA5qE,EACA+qE,OAAA3oD,SACA5V,KAAAgF,IAAAu5D,GACAv+D,KAAAi+D,2BAAA/4D,KAAAq5D,IAEAv+D,KAAAypC,OAAAvkC,KAAA1R,IAEAwqE,EAAAl+D,UAAAq+D,YAAA,WACAn+D,KAAA0yD,WAAA,IAAA1yD,KAAAi+D,2BAAAjqE,QACAgM,KAAA+U,YAAAxB,YAGAyqD,GACC30B,EAAAiB,iBAMDwzB,EAAA,SAAA58D,GAEA,QAAA48D,GAAAjpD,EAAAgpD,GACA,GAAAh5D,GAAA3D,EAAA6B,KAAA/C,WAGA,OAFA6E,GAAAgQ,SACAhQ,EAAAg5D,oBACAh5D,EAKA,MAVA6P,GAAAO,UAAA6oD,EAAA58D,GAOA48D,EAAAh+D,UAAAkZ,WAAA,SAAApE,GACA5U,KAAA69D,kBAAAtyD,UAAA,GAAAizD,GAAA5pD,EAAA5U,KAAA6U,UAEAipD,GACC/qD,EAAAY,YAMD6qD,EAAA,SAAAt9D,GAEA,QAAAs9D,GAAA5nE,EAAAie,GACA,GAAAhQ,GAAA3D,EAAA6B,KAAA/C,WAIA,OAHA6E,GAAAjO,SACAiO,EAAAgQ,SACAhQ,EAAA45D,kBAAA,EACA55D,EAmBA,MAzBA6P,GAAAO,UAAAupD,EAAAt9D,GAQAs9D,EAAA1+D,UAAAoV,MAAA,SAAA20B,GACA7pC,KAAA0+D,qBAEAF,EAAA1+D,UAAAmsC,OAAA,SAAA/3B,GACAlU,KAAAyL,cACAzL,KAAApJ,OAAAsc,MAAAgB,IAEAsqD,EAAA1+D,UAAAyb,UAAA,WACAvb,KAAA0+D,qBAEAF,EAAA1+D,UAAA4+D,kBAAA,WACA1+D,KAAAy+D,mBACAz+D,KAAAy+D,kBAAA,EACAz+D,KAAAyL,cACAzL,KAAA6U,OAAAtJ,UAAAvL,KAAApJ,UAGA4nE,GACC7pD,EAAAS,azP+jvBK,SAAUjiB,EAAQC,EAASC,GAEjC,Y0PntvBA,SAAAo1D,KACA,MAAAzoD,MAAAwU,KAAA,GAAAmqD,IA5CArrE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EA4CAD,GAAAq1D,eACA,IAAAkW,GAAA,WACA,QAAAA,MAKA,MAHAA,GAAA7+D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAqzD,GAAAhqD,KAEA+pD,KAOAC,EAAA,SAAA19D,GAEA,QAAA09D,GAAA7pD,GACA,MAAA7T,GAAA6B,KAAA/C,KAAA+U,IAAA/U,KAKA,MAPA0U,GAAAO,UAAA2pD,EAAA19D,GAIA09D,EAAA9+D,UAAAoV,MAAA,SAAA1hB,GACAA,EAAA4f,QAAApT,KAAA+U,cAEA6pD,GACCjqD,EAAAS,a1PqwvBK,SAAUjiB,EAAQC,EAASC,GAEjC,Y2P1xvBA,SAAAs1D,GAAAnU,EAAAqqB,GACA,MAAA7+D,MAAAwU,KAAA,GAAAsqD,GAAAtqB,EAAAqqB,IAnDAvrE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,GACA0rE,EAAA1rE,EAAA,IAiDAD,GAAAu1D,UACA,IAAAmW,GAAA,WACA,QAAAA,GAAAtqB,EAAAqqB,GACA7+D,KAAAw0C,cACAx0C,KAAA6+D,UAKA,MAHAC,GAAAh/D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAyzD,GAAApqD,EAAA5U,KAAAw0C,YAAAx0C,KAAA6+D,WAEAC,KAOAE,EAAA,SAAA99D,GAEA,QAAA89D,GAAAjqD,EAAAy/B,EAAAqqB,GACA,GAAAh6D,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAMA,OALA6E,GAAA2vC,cACA3vC,EAAA4kC,OAAA,GAAAs1B,GAAAE,IACAJ,GACAh6D,EAAAG,IAAAskC,EAAAK,kBAAA9kC,EAAAg6D,IAEAh6D,EAmCA,MA3CA6P,GAAAO,UAAA+pD,EAAA99D,GAUA89D,EAAAl/D,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAypC,OAAAy1B,SAEAF,EAAAl/D,UAAAy2C,YAAA,SAAArjC,EAAAi3B,GACAnqC,KAAAisC,OAAA/4B,IAEA8rD,EAAAl/D,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAw0C,YACAx0C,KAAAm/D,gBAAA3rE,GAGAwM,KAAAo/D,cAAA5rE,MAGAwrE,EAAAl/D,UAAAq/D,gBAAA,SAAA3rE,GACA,GAAA2qB,GACApJ,EAAA/U,KAAA+U,WACA,KACAoJ,EAAAne,KAAAw0C,YAAAhhD,GAEA,MAAA0gB,GAEA,WADAa,GAAA7B,MAAAgB,GAGAlU,KAAAo/D,cAAAjhD,EAAA3qB,IAEAwrE,EAAAl/D,UAAAs/D,cAAA,SAAAjhD,EAAA3qB,GACA,GAAAi2C,GAAAzpC,KAAAypC,MACAA,GAAA1iC,IAAAoX,KACAsrB,EAAAzkC,IAAAmZ,GACAne,KAAA+U,YAAAzB,KAAA9f,KAGAwrE,GACC31B,EAAAiB,gBACDl3C,GAAA4rE,sB3Pm1vBM,SAAU7rE,EAAQC,EAASC,GAEjC,Y4P54vBA,SAAAy1D,GAAA3qC,EAAAkN,GACA,MAAAu9B,GAAArU,qBAAAxxC,KAAA/C,KAAA,SAAA2L,EAAAipC,GACA,MAAAvpB,GACAA,EAAA1f,EAAAwS,GAAAy2B,EAAAz2B,IAEAxS,EAAAwS,KAAAy2B,EAAAz2B,KAjEA7qB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAo1D,GAAAv1D,EAAA,GAmEAD,GAAA01D,2B5P+8vBM,SAAU31D,EAAQC,EAASC,GAEjC,Y6Pt+vBA,SAAA21D,GAAAt1C,EAAAR,EAAAK,GACA,MAAAvT,MAAAwU,KAAA,GAAA6qD,GAAA3rD,EAAAR,EAAAK,IAhDAjgB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAgDAD,GAAA41D,KACA,IAAAqW,GAAA,WACA,QAAAA,GAAA3rD,EAAAR,EAAAK,GACAvT,KAAA0T,iBACA1T,KAAAkT,QACAlT,KAAAuT,WAKA,MAHA8rD,GAAAv/D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA+zD,GAAA1qD,EAAA5U,KAAA0T,eAAA1T,KAAAkT,MAAAlT,KAAAuT,YAEA8rD,KAOAC,EAAA,SAAAp+D,GAEA,QAAAo+D,GAAAvqD,EAAArB,EAAAR,EAAAK,GACA,GAAA1O,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,KACAu/D,EAAA,GAAA5qD,GAAAS,WAAA1B,EAAAR,EAAAK,EAIA,OAHAgsD,GAAAhN,oBAAA,EACA1tD,EAAAG,IAAAu6D,GACA16D,EAAA06D,iBACA16D,EAgCA,MAvCA6P,GAAAO,UAAAqqD,EAAAp+D,GASAo+D,EAAAx/D,UAAAoV,MAAA,SAAA1hB,GACA,GAAA+rE,GAAAv/D,KAAAu/D,cACAA,GAAAjsD,KAAA9f,GACA+rE,EAAAC,gBACAx/D,KAAA+U,YAAA7B,MAAAqsD,EAAAE,gBAGAz/D,KAAA+U,YAAAzB,KAAA9f,IAGA8rE,EAAAx/D,UAAAmsC,OAAA,SAAA/3B,GACA,GAAAqrD,GAAAv/D,KAAAu/D,cACAA,GAAArsD,MAAAgB,GACAqrD,EAAAC,gBACAx/D,KAAA+U,YAAA7B,MAAAqsD,EAAAE,gBAGAz/D,KAAA+U,YAAA7B,MAAAgB,IAGAorD,EAAAx/D,UAAAyb,UAAA,WACA,GAAAgkD,GAAAv/D,KAAAu/D,cACAA,GAAAhsD,WACAgsD,EAAAC,gBACAx/D,KAAA+U,YAAA7B,MAAAqsD,EAAAE,gBAGAz/D,KAAA+U,YAAAxB,YAGA+rD,GACC3qD,EAAAS,a7P4hwBK,SAAUjiB,EAAQC,EAASC,GAEjC,Y8P5lwBA,SAAA61D,GAAAhuD,EAAAm6C,GACA,MAAAr1C,MAAAwU,KAAA,GAAAkrD,GAAAxkE,EAAAm6C,IA/CA/hD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAwvD,EAAAxvD,EAAA,GA8CAD,GAAA81D,WACA,IAAAwW,GAAA,WACA,QAAAA,GAAAxkE,EAAAm6C,GAGA,GAFAr1C,KAAA9E,QACA8E,KAAAq1C,eACAn6C,EAAA,EACA,SAAA2nD,GAAA3rC,wBAMA,MAHAwoD,GAAA5/D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAo0D,GAAA/qD,EAAA5U,KAAA9E,MAAA8E,KAAAq1C,gBAEAqqB,KAOAC,EAAA,SAAAz+D,GAEA,QAAAy+D,GAAA5qD,EAAA7Z,EAAAm6C,GACA,GAAAxwC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAA3J,QACA2J,EAAAwwC,eACAxwC,EAoBA,MAzBA6P,GAAAO,UAAA0qD,EAAAz+D,GAOAy+D,EAAA7/D,UAAAoV,MAAA,SAAAvJ,GACA,GAAA3L,KAAA9E,UACA8E,KAAA+U,YAAAzB,KAAA3H,GACA3L,KAAA+U,YAAAxB,aAGAosD,EAAA7/D,UAAAyb,UAAA,WACA,GAAAxG,GAAA/U,KAAA+U,WACA/U,MAAA9E,OAAA,QACA,KAAA8E,KAAAq1C,aACAtgC,EAAAzB,KAAAtT,KAAAq1C,cAGAtgC,EAAA7B,MAAA,GAAA2vC,GAAA3rC,0BAGAnC,EAAAxB,YAEAosD,GACChrD,EAAAS,a9PipwBK,SAAUjiB,EAAQC,EAASC,GAEjC,Y+P3swBA,SAAAg2D,KACA,MAAArpD,MAAAwU,KAAA,GAAAorD,IAxCAtsE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAuCAD,GAAAi2D,SACA,IAAAuW,GAAA,WACA,QAAAA,MAKA,MAHAA,GAAA9/D,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAs0D,GAAAjrD,KAEAgrD,KAOAC,EAAA,SAAA3+D,GAEA,QAAA2+D,GAAA9qD,GACA,GAAAlQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAAkU,cAAA,EACAlU,EAAAi7D,iBAAA,EACAj7D,EAqBA,MA1BA6P,GAAAO,UAAA4qD,EAAA3+D,GAOA2+D,EAAA//D,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA8/D,kBACA9/D,KAAA8/D,iBAAA,EACA9/D,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAAxM,MAGAqsE,EAAA//D,UAAAyb,UAAA,WACAvb,KAAA+Y,cAAA,EACA/Y,KAAA8/D,iBACA9/D,KAAA+U,YAAAxB,YAGAssD,EAAA//D,UAAA8pC,eAAA,SAAAO,GACAnqC,KAAAjF,OAAAovC,GACAnqC,KAAA8/D,iBAAA,EACA9/D,KAAA+Y,cACA/Y,KAAA+U,YAAAxB,YAGAssD,GACCx2B,EAAAiB,kB/PyvwBK,SAAUn3C,EAAQC,EAASC,GAEjC,YgQ7xwBA,SAAAk2D,GAAAl1C,EAAA22B,GACA,MAAAhrC,MAAAwU,KAAA,GAAAurD,GAAA1rD,EAAA22B,IAnDA13C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAkDAD,GAAAm2D,YACA,IAAAwW,GAAA,WACA,QAAAA,GAAA1rD,EAAA22B,GACAhrC,KAAAqU,UACArU,KAAAgrC,iBAKA,MAHA+0B,GAAAjgE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAy0D,GAAAprD,EAAA5U,KAAAqU,QAAArU,KAAAgrC,kBAEA+0B,KAOAC,EAAA,SAAA9+D,GAEA,QAAA8+D,GAAAjrD,EAAAV,EAAA22B,GACA,GAAAnmC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAMA,OALA6E,GAAAwP,UACAxP,EAAAmmC,iBACAnmC,EAAAi7D,iBAAA,EACAj7D,EAAAkU,cAAA,EACAlU,EAAA3J,MAAA,EACA2J,EAsDA,MA9DA6P,GAAAO,UAAA+qD,EAAA9+D,GAUA8+D,EAAAlgE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA8/D,iBACA9/D,KAAAigE,QAAAzsE,IAGAwsE,EAAAlgE,UAAAmgE,QAAA,SAAAzsE,GACA,GAAA0H,GAAA8E,KAAA9E,QACA6Z,EAAA/U,KAAA+U,WACA,KACA,GAAAI,GAAAnV,KAAAqU,QAAA7gB,EAAA0H,EACA8E,MAAA8/D,iBAAA,EACA9/D,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAAmV,EAAA3hB,EAAA0H,IAEA,MAAAgZ,GACAa,EAAA7B,MAAAgB,KAGA8rD,EAAAlgE,UAAAyb,UAAA,WACAvb,KAAA+Y,cAAA,EACA/Y,KAAA8/D,iBACA9/D,KAAA+U,YAAAxB,YAGAysD,EAAAlgE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAtjC,GAAA7G,KAAAgrC,EAAAnkC,EAAAmkC,eAAAj2B,EAAAlO,EAAAkO,WACAi2B,GACAhrC,KAAAs2C,gBAAAvM,EAAAC,EAAAC,EAAAC,GAGAn1B,EAAAzB,KAAA02B,IAGAg2B,EAAAlgE,UAAAw2C,gBAAA,SAAAvM,EAAAC,EAAAC,EAAAC,GACA,GAAArjC,GAAA7G,KAAAgrC,EAAAnkC,EAAAmkC,eAAAj2B,EAAAlO,EAAAkO,WACA,KACA,GAAAI,GAAA61B,EAAAjB,EAAAC,EAAAC,EAAAC,EACAn1B,GAAAzB,KAAA6B,GAEA,MAAAjB,GACAa,EAAA7B,MAAAgB,KAGA8rD,EAAAlgE,UAAAy2C,YAAA,SAAAriC,GACAlU,KAAA+U,YAAA7B,MAAAgB,IAEA8rD,EAAAlgE,UAAA8pC,eAAA,SAAAO,GACAnqC,KAAAjF,OAAAovC,GACAnqC,KAAA8/D,iBAAA,EACA9/D,KAAA+Y,cACA/Y,KAAA+U,YAAAxB,YAGAysD,GACC32B,EAAAiB,kBhQs1wBK,SAAUn3C,EAAQC,EAASC,GAEjC,YiQz6wBA,SAAAo2D,GAAAp1C,EAAA42B,EAAA11B,GAIA,WAHA,KAAA01B,IAAgCA,EAAArxB,OAAAC,uBAChC,KAAAtE,IAA+BA,MAAAtb,IAC/BgxC,MAAA,KAAArxB,OAAAC,kBAAAoxB,EACAjrC,KAAAwU,KAAA,GAAA0rD,GAAA7rD,EAAA42B,EAAA11B,IAxDAjiB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAqDAD,GAAAq2D,QACA,IAAAyW,GAAA,WACA,QAAAA,GAAA7rD,EAAA42B,EAAA11B,GACAvV,KAAAqU,UACArU,KAAAirC,aACAjrC,KAAAuV,YAKA,MAHA2qD,GAAApgE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA40D,GAAAvrD,EAAA5U,KAAAqU,QAAArU,KAAAirC,WAAAjrC,KAAAuV,aAEA2qD,IAEA9sE,GAAA8sE,gBAMA,IAAAC,GAAA,SAAAj/D,GAEA,QAAAi/D,GAAAprD,EAAAV,EAAA42B,EAAA11B,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAUA,OATA6E,GAAAwP,UACAxP,EAAAomC,aACApmC,EAAA0Q,YACA1Q,EAAA3J,MAAA,EACA2J,EAAAgS,OAAA,EACAhS,EAAAkU,cAAA,EACAkyB,EAAArxB,OAAAC,oBACAhV,EAAAumC,WAEAvmC,EAuDA,MAnEA6P,GAAAO,UAAAkrD,EAAAj/D,GAcAi/D,EAAAv0B,SAAA,SAAAC,GACA,GAAAj3B,GAAAi3B,EAAAj3B,WAAAO,EAAA02B,EAAA12B,OAAA3hB,EAAAq4C,EAAAr4C,MAAA0H,EAAA2wC,EAAA3wC,KACA0Z,GAAAwrD,sBAAAjrD,EAAA3hB,EAAA0H,IAEAilE,EAAArgE,UAAAoV,MAAA,SAAA1hB,GACA,GAAAuhB,GAAA/U,KAAA+U,WACA,IAAAA,EAAAa,OAEA,WADA5V,MAAAub,WAGA,IAAArgB,GAAA8E,KAAA9E,OACA,IAAA8E,KAAA6W,OAAA7W,KAAAirC,WAAA,CACAl2B,EAAAzB,KAAA9f,EACA,IAAA2hB,GAAAw7B,EAAAoB,SAAA/xC,KAAAqU,SAAA7gB,EAAA0H,EACA,IAAAia,IAAAy7B,EAAAoB,YACAj9B,EAAA7B,MAAA09B,EAAAoB,YAAAx7B,OAEA,IAAAxW,KAAAuV,UAGA,CACA,GAAAG,IAA6Bd,WAAA5U,KAAAmV,SAAA3hB,QAAA0H,QAC7B8E,MAAAgF,IAAAhF,KAAAuV,UAAAE,SAAA0qD,EAAAv0B,SAAA,EAAAl2B,QAJA1V,MAAAogE,sBAAAjrD,EAAA3hB,EAAA0H,OAQA8E,MAAAorC,OAAAlmC,KAAA1R,IAGA2sE,EAAArgE,UAAAsgE,sBAAA,SAAAjrD,EAAA3hB,EAAA0H,GACA8E,KAAA6W,SACA7W,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAAmV,EAAA3hB,EAAA0H,KAEAilE,EAAArgE,UAAAyb,UAAA,WACAvb,KAAA+Y,cAAA,EACA/Y,KAAA+Y,cAAA,IAAA/Y,KAAA6W,QACA7W,KAAA+U,YAAAxB,YAGA4sD,EAAArgE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAkV,MAAA80B,IAEAm2B,EAAArgE,UAAA8pC,eAAA,SAAAO,GACA,GAAAiB,GAAAprC,KAAAorC,MACAprC,MAAAjF,OAAAovC,GACAnqC,KAAA6W,SACAu0B,KAAAp3C,OAAA,GACAgM,KAAAkV,MAAAk2B,EAAAp0B,SAEAhX,KAAA+Y,cAAA,IAAA/Y,KAAA6W,QACA7W,KAAA+U,YAAAxB,YAGA4sD,GACC92B,EAAAiB,gBACDl3C,GAAA+sE,oBjQo+wBM,SAAUhtE,EAAQC,EAASC,GAEjC,YkQ5mxBA,SAAAw2D,GAAArrC,GACA,MAAAxe,MAAAwU,KAAA,GAAA6rD,GAAA7hD,IAbAlrB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAulB,EAAAvlB,EAAA,EAYAD,GAAAy2D,UACA,IAAAwW,GAAA,WACA,QAAAA,GAAA7hD,GACAxe,KAAAwe,WAKA,MAHA6hD,GAAAvgE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA+0D,GAAA1rD,EAAA5U,KAAAwe,YAEA6hD,KAOAC,EAAA,SAAAp/D,GAEA,QAAAo/D,GAAAvrD,EAAAyJ,GACA,GAAA3Z,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAEA,OADA6E,GAAAG,IAAA,GAAA4T,GAAAM,aAAAsF,IACA3Z,EAEA,MANA6P,GAAAO,UAAAqrD,EAAAp/D,GAMAo/D,GACC3rD,EAAAS,alQ+nxBK,SAAUjiB,EAAQC,EAASC,GAEjC,YmQnoxBA,SAAA22D,GAAApf,EAAAt2B,GACA,MAAAtU,MAAAwU,KAAA,GAAAs1C,GAAA7U,kBAAArK,EAAA5qC,MAAA,EAAAsU,IArCAhhB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAs2D,GAAAz2D,EAAA,GAsCAD,GAAA42D,anQ8qxBM,SAAU72D,EAAQC,EAASC,GAEjC,YoQ3oxBA,SAAA82D,GAAA3V,EAAA+rB,EAAAlpB,EAAAmpB,GACA,MAAAxgE,MAAAwU,KAAA,GAAAisD,GAAAjsB,EAAA+rB,EAAAlpB,EAAAmpB,IA7EAltE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAulB,EAAAvlB,EAAA,GACA0f,EAAA1f,EAAA,GACAslB,EAAAtlB,EAAA,GACAqtE,EAAArtE,EAAA,KACAstE,EAAAttE,EAAA,IAwEAD,GAAA+2D,SACA,IAAAsW,GAAA,WACA,QAAAA,GAAAjsB,EAAA+rB,EAAAlpB,EAAAmpB,GACAxgE,KAAAw0C,cACAx0C,KAAAugE,kBACAvgE,KAAAq3C,mBACAr3C,KAAAwgE,kBAKA,MAHAC,GAAA3gE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAq1D,GAAAhsD,EAAA5U,KAAAw0C,YAAAx0C,KAAAugE,gBAAAvgE,KAAAq3C,iBAAAr3C,KAAAwgE,mBAEAC,KAOAG,EAAA,SAAA1/D,GAEA,QAAA0/D,GAAA7rD,EAAAy/B,EAAA+rB,EAAAlpB,EAAAmpB,GACA,GAAA37D,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAQA,OAPA6E,GAAA2vC,cACA3vC,EAAA07D,kBACA17D,EAAAwyC,mBACAxyC,EAAA27D,kBACA37D,EAAAg8D,OAAA,KACAh8D,EAAAi8D,wBAAA,EACAj8D,EAAAmQ,MAAA,EACAnQ,EAmFA,MA7FA6P,GAAAO,UAAA2rD,EAAA1/D,GAYA0/D,EAAA9gE,UAAAoV,MAAA,SAAA1hB,GACA,GAAA2qB,EACA,KACAA,EAAAne,KAAAw0C,YAAAhhD,GAEA,MAAA0gB,GAEA,WADAlU,MAAAkT,MAAAgB,GAGAlU,KAAA+gE,OAAAvtE,EAAA2qB,IAEAyiD,EAAA9gE,UAAAihE,OAAA,SAAAvtE,EAAA2qB,GACA,GAAA0iD,GAAA7gE,KAAA6gE,MACAA,KACAA,EAAA7gE,KAAA6gE,OAAA,gBAAA1iD,GAAA,GAAAwiD,GAAAK,QAAA,GAAAN,GAAAv6D,IAEA,IACAq/B,GADAj3B,EAAAsyD,EAAA9gE,IAAAoe,EAEA,IAAAne,KAAAugE,gBACA,IACA/6B,EAAAxlC,KAAAugE,gBAAA/sE,GAEA,MAAA0gB,GACAlU,KAAAkT,MAAAgB,OAIAsxB,GAAAhyC,CAEA,KAAA+a,EAAA,CACAA,EAAAvO,KAAAwgE,gBAAAxgE,KAAAwgE,kBAAA,GAAA7nD,GAAAS,QACAynD,EAAAv6D,IAAA6X,EAAA5P,EACA,IAAA0yD,GAAA,GAAAC,GAAA/iD,EAAA5P,EAAAvO,KAEA,IADAA,KAAA+U,YAAAzB,KAAA2tD,GACAjhE,KAAAq3C,iBAAA,CACA,GAAAW,OAAA,EACA,KACAA,EAAAh4C,KAAAq3C,iBAAA,GAAA6pB,GAAA/iD,EAAA5P,IAEA,MAAA2F,GAEA,WADAlU,MAAAkT,MAAAgB,GAGAlU,KAAAgF,IAAAgzC,EAAAzsC,UAAA,GAAA41D,GAAAhjD,EAAA5P,EAAAvO,SAGAuO,EAAAqH,QACArH,EAAA+E,KAAAkyB,IAGAo7B,EAAA9gE,UAAAmsC,OAAA,SAAA/3B,GACA,GAAA2sD,GAAA7gE,KAAA6gE,MACAA,KACAA,EAAAzoE,QAAA,SAAAmW,EAAA4P,GACA5P,EAAA2E,MAAAgB,KAEA2sD,EAAA3B,SAEAl/D,KAAA+U,YAAA7B,MAAAgB,IAEA0sD,EAAA9gE,UAAAyb,UAAA,WACA,GAAAslD,GAAA7gE,KAAA6gE,MACAA,KACAA,EAAAzoE,QAAA,SAAAmW,EAAA4P,GACA5P,EAAAgF,aAEAstD,EAAA3B,SAEAl/D,KAAA+U,YAAAxB,YAEAqtD,EAAA9gE,UAAAshE,YAAA,SAAAjjD,GACAne,KAAA6gE,OAAAz5D,OAAA+W,IAEAyiD,EAAA9gE,UAAA2L,YAAA,WACAzL,KAAA4V,SACA5V,KAAA8gE,wBAAA,EACA,IAAA9gE,KAAAgV,OACA9T,EAAApB,UAAA2L,YAAA1I,KAAA/C,QAIA4gE,GACCjsD,EAAAS,YAMD+rD,EAAA,SAAAjgE,GAEA,QAAAigE,GAAAhjD,EAAA5P,EAAA3X,GACA,GAAAiO,GAAA3D,EAAA6B,KAAA/C,KAAAuO,IAAAvO,IAIA,OAHA6E,GAAAsZ,MACAtZ,EAAA0J,QACA1J,EAAAjO,SACAiO,EAYA,MAlBA6P,GAAAO,UAAAksD,EAAAjgE,GAQAigE,EAAArhE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAuT,YAEA4tD,EAAArhE,UAAA2W,aAAA,WACA,GAAA5P,GAAA7G,KAAApJ,EAAAiQ,EAAAjQ,OAAAunB,EAAAtX,EAAAsX,GACAne,MAAAme,IAAAne,KAAApJ,OAAA,KACAA,GACAA,EAAAwqE,YAAAjjD,IAGAgjD,GACCxsD,EAAAS,YASD8rD,EAAA,SAAAhgE,GAEA,QAAAggE,GAAA/iD,EAAAkjD,EAAAC,GACA,GAAAz8D,GAAA3D,EAAA6B,KAAA/C,WAIA,OAHA6E,GAAAsZ,MACAtZ,EAAAw8D,eACAx8D,EAAAy8D,uBACAz8D,EAWA,MAjBA6P,GAAAO,UAAAisD,EAAAhgE,GAQAggE,EAAAphE,UAAAkZ,WAAA,SAAApE,GACA,GAAAyF,GAAA,GAAAzB,GAAAM,aACArS,EAAA7G,KAAAshE,EAAAz6D,EAAAy6D,qBAAAD,EAAAx6D,EAAAw6D,YAKA,OAJAC,OAAA1rD,QACAyE,EAAArV,IAAA,GAAAu8D,GAAAD,IAEAjnD,EAAArV,IAAAq8D,EAAA91D,UAAAqJ,IACAyF,GAEA6mD,GACCnuD,EAAAY,WACDvgB,GAAA8tE,mBAMA,IAAAK,GAAA,SAAArgE,GAEA,QAAAqgE,GAAA3qE,GACA,GAAAiO,GAAA3D,EAAA6B,KAAA/C,WAGA,OAFA6E,GAAAjO,SACAA,EAAAoe,QACAnQ,EAYA,MAjBA6P,GAAAO,UAAAssD,EAAArgE,GAOAqgE,EAAAzhE,UAAA2L,YAAA,WACA,GAAA7U,GAAAoJ,KAAApJ,MACAA,GAAAgf,QAAA5V,KAAA4V,SACA1U,EAAApB,UAAA2L,YAAA1I,KAAA/C,MACApJ,EAAAoe,OAAA,EACA,IAAApe,EAAAoe,OAAApe,EAAAkqE,wBACAlqE,EAAA6U,gBAIA81D,GACC3oD,EAAAM,epQ8txBK,SAAU/lB,EAAQC,EAASC,GAEjC,YqQl+xBA,SAAAg3D,KACA,MAAArqD,MAAAwU,KAAA,GAAAgtD,IAfAluE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACA4iE,EAAA5iE,EAAA,IAcAD,GAAAi3D,gBACA,IAAAmX,GAAA,WACA,QAAAA,MAKA,MAHAA,GAAA1hE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAk2D,GAAA7sD,KAEA4sD,KAOAC,EAAA,SAAAvgE,GAEA,QAAAugE,KACA,cAAAvgE,KAAAC,MAAAnB,KAAAoB,YAAApB,KAKA,MAPA0U,GAAAO,UAAAwsD,EAAAvgE,GAIAugE,EAAA3hE,UAAAoV,MAAA,SAAA20B,GACAosB,EAAA/a,QAEAumB,GACC9sD,EAAAS,arQu/xBK,SAAUjiB,EAAQC,EAASC,GAEjC,YsQrhyBA,SAAAk3D,KACA,MAAAvqD,MAAAwU,KAAA,GAAAktD,IAbApuE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAaAD,GAAAm3D,SACA,IAAAmX,GAAA,WACA,QAAAA,MAKA,MAHAA,GAAA5hE,UAAAiD,KAAA,SAAAsQ,EAAAwB,GACA,MAAAA,GAAAtJ,UAAA,GAAAo2D,GAAAtuD,KAEAquD,KAOAC,EAAA,SAAAzgE,GAEA,QAAAygE,GAAA5sD,GACA,MAAA7T,GAAA6B,KAAA/C,KAAA+U,IAAA/U,KAaA,MAfA0U,GAAAO,UAAA0sD,EAAAzgE,GAIAygE,EAAA7hE,UAAA8pC,eAAA,SAAA2gB,GACA,GAAAx1C,GAAA/U,KAAA+U,WACAA,GAAAzB,KAAAi3C,GACAx1C,EAAAxB,YAEAouD,EAAA7hE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA4pC,gBAAA,IAEA+3B,EAAA7hE,UAAAyb,UAAA,WACAvb,KAAA4pC,gBAAA,IAEA+3B,GACChtD,EAAAS,atQwiyBK,SAAUjiB,EAAQC,EAASC,GAEjC,YuQjlyBA,SAAAs3D,GAAA8G,GACA,MAAAA,GAAAzxD,MARA1M,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,IAU9CJ,EAAAu3D,YvQ+lyBM,SAAUx3D,EAAQC,EAASC,GAEjC,YwQ9kyBA,SAAAy3D,GAAAt3D,GACA,MAAAwM,MAAAwU,KAAA,GAAAotD,GAAApuE,IA9BAF,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EA8BAD,GAAA03D,OACA,IAAA8W,GAAA,WACA,QAAAA,GAAApuE,GACAwM,KAAAxM,QAKA,MAHAouE,GAAA9hE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAs2D,GAAAjtD,EAAA5U,KAAAxM,SAEAouE,KAOAC,EAAA,SAAA3gE,GAEA,QAAA2gE,GAAA9sD,EAAAvhB,GACA,GAAAqR,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAEA,OADA6E,GAAArR,QACAqR,EAKA,MATA6P,GAAAO,UAAA4sD,EAAA3gE,GAMA2gE,EAAA/hE,UAAAoV,MAAA,SAAAvJ,GACA3L,KAAA+U,YAAAzB,KAAAtT,KAAAxM,QAEAquE,GACCltD,EAAAS,axQknyBK,SAAUjiB,EAAQC,EAASC,GAEjC,YyQ9nyBA,SAAA23D,KACA,MAAAhrD,MAAAwU,KAAA,GAAAstD,IAjDAxuE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAs4C,EAAAt4C,EAAA,GAgDAD,GAAA43D,aACA,IAAA8W,GAAA,WACA,QAAAA,MAKA,MAHAA,GAAAhiE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAw2D,GAAAntD,KAEAktD,KAOAC,EAAA,SAAA7gE,GAEA,QAAA6gE,GAAAhtD,GACA,MAAA7T,GAAA6B,KAAA/C,KAAA+U,IAAA/U,KAeA,MAjBA0U,GAAAO,UAAA8sD,EAAA7gE,GAIA6gE,EAAAjiE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA+U,YAAAzB,KAAAq4B,EAAA34B,aAAAe,WAAAvgB,KAEAuuE,EAAAjiE,UAAAmsC,OAAA,SAAA/3B,GACA,GAAAa,GAAA/U,KAAA+U,WACAA,GAAAzB,KAAAq4B,EAAA34B,aAAAiB,YAAAC,IACAa,EAAAxB,YAEAwuD,EAAAjiE,UAAAyb,UAAA,WACA,GAAAxG,GAAA/U,KAAA+U,WACAA,GAAAzB,KAAAq4B,EAAA34B,aAAAmB,kBACAY,EAAAxB,YAEAwuD,GACCptD,EAAAS,azQqryBK,SAAUjiB,EAAQC,EAASC,GAEjC,Y0Q1uyBA,SAAAqO,GAAAsgE,GACA,GAAAtgE,GAAA,kBAAAsgE,GACA,SAAAr2D,EAAAipC,GAA2B,MAAAotB,GAAAr2D,EAAAipC,GAAA,EAAAjpC,EAAAipC,GAC3B,SAAAjpC,EAAAipC,GAA2B,MAAAjpC,GAAAipC,EAAAjpC,EAAAipC,EAC3B,OAAA50C,MAAAwU,KAAA,GAAAi4C,GAAArxC,eAAA1Z,IArCApO,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAi5D,GAAAp5D,EAAA,GAsCAD,GAAAsO,O1QkxyBM,SAAUvO,EAAQC,EAASC,GAEjC,Y2QtxyBA,SAAAk4D,GAAAtwC,EAAAC,EAAA+vB,GAEA,WADA,KAAAA,IAAgCA,EAAArxB,OAAAC,mBAChC7Z,KAAAwU,KAAA,GAAAytD,GAAAhnD,EAAAC,EAAA+vB,IAvCA33C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACAi2C,EAAAj2C,EAAA,GACAg2C,EAAAh2C,EAAA,EAoCAD,GAAAm4D,WACA,IAAA0W,GAAA,WACA,QAAAA,GAAAhnD,EAAAC,EAAA+vB,GACAjrC,KAAAib,cACAjb,KAAAkb,OACAlb,KAAAirC,aAKA,MAHAg3B,GAAAniE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA22D,GAAAttD,EAAA5U,KAAAib,YAAAjb,KAAAkb,KAAAlb,KAAAirC,cAEAg3B,IAEA7uE,GAAA6uE,mBAMA,IAAAC,GAAA,SAAAhhE,GAEA,QAAAghE,GAAAntD,EAAAkG,EAAA5N,EAAA49B,GACA,GAAApmC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IASA,OARA6E,GAAAoW,cACApW,EAAAwI,MACAxI,EAAAomC,aACApmC,EAAAsO,UAAA,EACAtO,EAAAkU,cAAA,EACAlU,EAAAumC,UACAvmC,EAAAgS,OAAA,EACAhS,EAAA3J,MAAA,EACA2J,EAmDA,MA9DA6P,GAAAO,UAAAitD,EAAAhhE,GAaAghE,EAAApiE,UAAAoV,MAAA,SAAA1hB,GACA,GAAAwM,KAAA6W,OAAA7W,KAAAirC,WAAA,CACA,GAAA/vC,GAAA8E,KAAA9E,QACAqwC,EAAAoF,EAAAoB,SAAA/xC,KAAAib,aAAAjb,KAAAqN,IAAA7Z,GACAuhB,EAAA/U,KAAA+U,WACAw2B,KAAAqF,EAAAoB,YACAj9B,EAAA7B,MAAA09B,EAAAoB,YAAAx7B,IAGAxW,KAAA6W,SACA7W,KAAAsrC,UAAAC,EAAA/3C,EAAA0H,QAIA8E,MAAAorC,OAAAlmC,KAAA1R,IAGA0uE,EAAApiE,UAAAwrC,UAAA,SAAAC,EAAA/3C,EAAA0H,GACA8E,KAAAgF,IAAAskC,EAAAK,kBAAA3pC,KAAAurC,EAAA/3C,EAAA0H,KAEAgnE,EAAApiE,UAAAyb,UAAA,WACAvb,KAAA+Y,cAAA,EACA,IAAA/Y,KAAA6W,QAAA,IAAA7W,KAAAorC,OAAAp3C,UACA,IAAAgM,KAAAmT,UACAnT,KAAA+U,YAAAzB,KAAAtT,KAAAqN,KAEArN,KAAA+U,YAAAxB,aAGA2uD,EAAApiE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAp1B,GAAA/U,KAAA+U,WACA/U,MAAAqN,IAAA28B,EACAhqC,KAAAmT,UAAA,EACA4B,EAAAzB,KAAA02B,IAEAk4B,EAAApiE,UAAA8pC,eAAA,SAAAO,GACA,GAAAiB,GAAAprC,KAAAorC,MACAprC,MAAAjF,OAAAovC,GACAnqC,KAAA6W,SACAu0B,EAAAp3C,OAAA,EACAgM,KAAAkV,MAAAk2B,EAAAp0B,SAEA,IAAAhX,KAAA6W,QAAA7W,KAAA+Y,gBACA,IAAA/Y,KAAAmT,UACAnT,KAAA+U,YAAAzB,KAAAtT,KAAAqN,KAEArN,KAAA+U,YAAAxB,aAGA2uD,GACC74B,EAAAiB,gBACDl3C,GAAA8uE,uB3Qk0yBM,SAAU/uE,EAAQC,EAASC,GAEjC,Y4Q/5yBA,SAAAiO,GAAA0gE,GACA,GAAA1gE,GAAA,kBAAA0gE,GACA,SAAAr2D,EAAAipC,GAA2B,MAAAotB,GAAAr2D,EAAAipC,GAAA,EAAAjpC,EAAAipC,GAC3B,SAAAjpC,EAAAipC,GAA2B,MAAAjpC,GAAAipC,EAAAjpC,EAAAipC,EAC3B,OAAA50C,MAAAwU,KAAA,GAAAi4C,GAAArxC,eAAA9Z,IArCAhO,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAi5D,GAAAp5D,EAAA,GAsCAD,GAAAkO,O5Qu8yBM,SAAUnO,EAAQC,EAASC,GAEjC,Y6Q18yBA,SAAAu4D,KACA,MAAA5rD,MAAAwU,KAAA,GAAA2tD,IAvCA7uE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAuCAD,GAAAw4D,UACA,IAAAuW,GAAA,WACA,QAAAA,MAKA,MAHAA,GAAAriE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA62D,GAAAxtD,KAEAutD,KAOAC,EAAA,SAAAlhE,GAEA,QAAAkhE,GAAArtD,GACA,GAAAlQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAEA,OADA6E,GAAAw9D,SAAA,EACAx9D,EAWA,MAfA6P,GAAAO,UAAAmtD,EAAAlhE,GAMAkhE,EAAAtiE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAqiE,QACAriE,KAAA+U,YAAAzB,MAAAtT,KAAAsiE,KAAA9uE,IAGAwM,KAAAqiE,SAAA,EAEAriE,KAAAsiE,KAAA9uE,GAEA4uE,GACCztD,EAAAS,a7Qu/yBK,SAAUjiB,EAAQC,EAASC,GAEjC,Y8QrhzBA,SAAAy4D,GAAAlhB,EAAAt2B,GACA,OACAo1C,EAAA7mD,OAAAE,KAAA/C,KAAA4qC,EAAAt2B,GACAo1C,EAAA7mD,OAAAE,KAAA/C,KAAAuiE,EAAAC,IAAA53B,EAAAt2B,KA/CAhhB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA+uE,GAAAlvE,EAAA,KACAq2D,EAAAr2D,EAAA,GAgDAD,GAAA04D,a9QwkzBM,SAAU34D,EAAQC,EAASC,GAEjC,Y+QhmzBA,SAAA24D,KAEA,OADAyW,MACA77D,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C67D,EAAA77D,GAAAxF,UAAAwF,EAEA,IAAA5S,GAAAyuE,EAAAzuE,MACA,QAAAA,EACA,SAAAS,OAAA,sCAEA,OAAAg8C,GAAA57C,IAAAkO,KAAA/C,KAAA0iE,EAAAD,EAAAzuE,IAGA,QAAA0uE,GAAAC,EAAA3uE,GAcA,MAbA,UAAA2X,GAEA,OADAi3D,GAAAj3D,EACArX,EAAA,EAAuBA,EAAAN,EAAYM,IAAA,CACnC,GAAA+sB,GAAAuhD,EAAAD,EAAAruE,GACA,aAAA+sB,EAIA,MAHAuhD,GAAAvhD,EAMA,MAAAuhD,IApDAtvE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAi9C,GAAAp9C,EAAA,GAsCAD,GAAA44D,S/QmpzBM,SAAU74D,EAAQC,EAASC,GAEjC,YgR3qzBA,SAAA64D,GAAApoD,GACA,MAAAA,GAAA2nD,EAAAC,UAAA3oD,KAAA/C,KAAA,WAAoE,UAAA2Y,GAAAS,SAAkCtV,GACtG2nD,EAAAC,UAAA3oD,KAAA/C,KAAA,GAAA2Y,GAAAS,SAnBA9lB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAmlB,GAAAtlB,EAAA,GACAo4D,EAAAp4D,EAAA,GAmBAD,GAAA84D,WhRmszBM,SAAU/4D,EAAQC,EAASC,GAEjC,YiRjtzBA,SAAA+4D,GAAA54D,GACA,MAAAi4D,GAAAC,UAAA3oD,KAAA/C,KAAA,GAAA0iD,GAAAjrC,gBAAAjkB,IAVAF,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkvD,GAAArvD,EAAA,IACAo4D,EAAAp4D,EAAA,GAUAD,GAAAg5D,mBjRiuzBM,SAAUj5D,EAAQC,EAASC,GAEjC,YkRvuzBA,SAAAi5D,KACA,MAAAb,GAAAC,UAAA3oD,KAAA/C,KAAA,GAAAwiD,GAAA3pC,cATAvlB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAgvD,GAAAnvD,EAAA,IACAo4D,EAAAp4D,EAAA,GASAD,GAAAk5D,elRsvzBM,SAAUn5D,EAAQC,EAASC,GAEjC,YmRxvzBA,SAAAm5D,GAAA9yC,EAAAC,EAAApE,GAGA,WAFA,KAAAmE,IAAgCA,EAAAE,OAAAC,uBAChC,KAAAF,IAAgCA,EAAAC,OAAAC,mBAChC4xC,EAAAC,UAAA3oD,KAAA/C,KAAA,GAAAyiD,GAAAhpC,cAAAC,EAAAC,EAAApE,IAdAjiB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAivD,GAAApvD,EAAA,IACAo4D,EAAAp4D,EAAA,GAcAD,GAAAo5D,iBnR0wzBM,SAAUr5D,EAAQC,EAASC,GAEjC,YoR5wzBA,SAAAs5D,GAAA33C,GAEA,WADA,KAAAA,IAA2BA,GAAA,GAC3B,IAAAA,EACA,GAAAk8C,GAAAE,gBAEAp8C,EAAA,EACAhV,KAAAwU,KAAA,GAAAquD,IAAA,EAAA7iE,OAGAA,KAAAwU,KAAA,GAAAquD,GAAA7tD,EAAA,EAAAhV,OAzBA1M,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACA69D,EAAA79D,EAAA,GAyBAD,GAAAu5D,QACA,IAAAkW,GAAA,WACA,QAAAA,GAAA7tD,EAAAH,GACA7U,KAAAgV,QACAhV,KAAA6U,SAKA,MAHAguD,GAAA/iE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAu3D,GAAAluD,EAAA5U,KAAAgV,MAAAhV,KAAA6U,UAEAguD,KAOAC,EAAA,SAAA5hE,GAEA,QAAA4hE,GAAA/tD,EAAAC,EAAAH,GACA,GAAAhQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAAmQ,QACAnQ,EAAAgQ,SACAhQ,EAcA,MAnBA6P,GAAAO,UAAA6tD,EAAA5hE,GAOA4hE,EAAAhjE,UAAAyT,SAAA,WACA,IAAAvT,KAAAua,UAAA,CACA,GAAA1T,GAAA7G,KAAA6U,EAAAhO,EAAAgO,OAAAG,EAAAnO,EAAAmO,KACA,QAAAA,EACA,MAAA9T,GAAApB,UAAAyT,SAAAxQ,KAAA/C,KAEAgV,IAAA,IACAhV,KAAAgV,QAAA,GAEAH,EAAAtJ,UAAAvL,KAAAm0C,4BAGA2uB,GACCnuD,EAAAS,apRmyzBK,SAAUjiB,EAAQC,EAASC,GAEjC,YqRj1zBA,SAAAw5D,GAAAkW,GACA,MAAA/iE,MAAAwU,KAAA,GAAAwuD,GAAAD,IAtBAzvE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAslB,EAAAtlB,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAkBAD,GAAAy5D,YACA,IAAAmW,GAAA,WACA,QAAAA,GAAAD,GACA/iE,KAAA+iE,WAKA,MAHAC,GAAAljE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA03D,GAAAruD,EAAA5U,KAAA+iE,SAAAluD,KAEAmuD,KAOAC,EAAA,SAAA/hE,GAEA,QAAA+hE,GAAAluD,EAAAguD,EAAAluD,GACA,GAAAhQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAAk+D,WACAl+D,EAAAgQ,SACAhQ,EAAAq+D,2BAAA,EACAr+D,EAwDA,MA9DA6P,GAAAO,UAAAguD,EAAA/hE,GAQA+hE,EAAAnjE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAkjE,2BAAA,EACAljE,KAAA6U,OAAAtJ,UAAAvL,OAEAijE,EAAAnjE,UAAA8pC,eAAA,SAAAO,GACA,QAAAnqC,KAAAkjE,0BACA,MAAAhiE,GAAApB,UAAAyT,SAAAxQ,KAAA/C,OAGAijE,EAAAnjE,UAAAyT,SAAA,WAEA,GADAvT,KAAAkjE,2BAAA,GACAljE,KAAAua,UAAA,CACA,GAAAva,KAAAmjE,SAGA,GAAAnjE,KAAAojE,oBAAAxtD,OACA,MAAA1U,GAAApB,UAAAyT,SAAAxQ,KAAA/C,UAHAA,MAAAqjE,oBAKArjE,MAAAm0C,yBACAn0C,KAAAsjE,cAAAhwD,SAGA2vD,EAAAnjE,UAAA2W,aAAA,WACA,GAAA5P,GAAA7G,KAAAsjE,EAAAz8D,EAAAy8D,cAAAF,EAAAv8D,EAAAu8D,mBACAE,KACAA,EAAA73D,cACAzL,KAAAsjE,cAAA,MAEAF,IACAA,EAAA33D,cACAzL,KAAAojE,oBAAA,MAEApjE,KAAAmjE,QAAA,MAEAF,EAAAnjE,UAAAq0C,uBAAA,WACA,GAAAttC,GAAA7G,KAAAsjE,EAAAz8D,EAAAy8D,cAAAH,EAAAt8D,EAAAs8D,QAAAC,EAAAv8D,EAAAu8D,mBAQA,OAPApjE,MAAAsjE,cAAA,KACAtjE,KAAAmjE,QAAA,KACAnjE,KAAAojE,oBAAA,KACAliE,EAAApB,UAAAq0C,uBAAApxC,KAAA/C,MACAA,KAAAsjE,gBACAtjE,KAAAmjE,UACAnjE,KAAAojE,sBACApjE,MAEAijE,EAAAnjE,UAAAujE,mBAAA,WACArjE,KAAAsjE,cAAA,GAAA3qD,GAAAS,OACA,IAAA+pD,GAAAxyB,EAAAoB,SAAA/xC,KAAA+iE,UAAA/iE,KAAAsjE,cACA,IAAAH,IAAAvyB,EAAAoB,YACA,MAAA9wC,GAAApB,UAAAyT,SAAAxQ,KAAA/C,KAEAA,MAAAmjE,UACAnjE,KAAAojE,oBAAA95B,EAAAK,kBAAA3pC,KAAAmjE,IAEAF,GACC55B,EAAAiB,kBrR62zBK,SAAUn3C,EAAQC,EAASC,GAEjC,YsRn8zBA,SAAA05D,GAAA/3C,GAEA,WADA,KAAAA,IAA2BA,GAAA,GAC3BhV,KAAAwU,KAAA,GAAA+uD,GAAAvuD,EAAAhV,OArBA1M,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAqBAD,GAAA25D,OACA,IAAAwW,GAAA,WACA,QAAAA,GAAAvuD,EAAAH,GACA7U,KAAAgV,QACAhV,KAAA6U,SAKA,MAHA0uD,GAAAzjE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAi4D,GAAA5uD,EAAA5U,KAAAgV,MAAAhV,KAAA6U,UAEA0uD,KAOAC,EAAA,SAAAtiE,GAEA,QAAAsiE,GAAAzuD,EAAAC,EAAAH,GACA,GAAAhQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAAmQ,QACAnQ,EAAAgQ,SACAhQ,EAcA,MAnBA6P,GAAAO,UAAAuuD,EAAAtiE,GAOAsiE,EAAA1jE,UAAAoT,MAAA,SAAAgB,GACA,IAAAlU,KAAAua,UAAA,CACA,GAAA1T,GAAA7G,KAAA6U,EAAAhO,EAAAgO,OAAAG,EAAAnO,EAAAmO,KACA,QAAAA,EACA,MAAA9T,GAAApB,UAAAoT,MAAAnQ,KAAA/C,KAAAkU,EAEAc,IAAA,IACAhV,KAAAgV,QAAA,GAEAH,EAAAtJ,UAAAvL,KAAAm0C,4BAGAqvB,GACC7uD,EAAAS,atR69zBK,SAAUjiB,EAAQC,EAASC,GAEjC,YuRtg0BA,SAAA45D,GAAA8V,GACA,MAAA/iE,MAAAwU,KAAA,GAAAivD,GAAAV,EAAA/iE,OAtBA1M,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAslB,EAAAtlB,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAkBAD,GAAA65D,WACA,IAAAwW,GAAA,WACA,QAAAA,GAAAV,EAAAluD,GACA7U,KAAA+iE,WACA/iE,KAAA6U,SAKA,MAHA4uD,GAAA3jE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAm4D,GAAA9uD,EAAA5U,KAAA+iE,SAAA/iE,KAAA6U,UAEA4uD,KAOAC,EAAA,SAAAxiE,GAEA,QAAAwiE,GAAA3uD,EAAAguD,EAAAluD,GACA,GAAAhQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAAk+D,WACAl+D,EAAAgQ,SACAhQ,EAiDA,MAtDA6P,GAAAO,UAAAyuD,EAAAxiE,GAOAwiE,EAAA5jE,UAAAoT,MAAA,SAAAgB,GACA,IAAAlU,KAAAua,UAAA,CACA,GAAAnlB,GAAA4K,KAAA5K,OACA+tE,EAAAnjE,KAAAmjE,QACAC,EAAApjE,KAAAojE,mBACA,IAAAD,EASAnjE,KAAA5K,OAAA,KACA4K,KAAAojE,oBAAA,SAVA,CAGA,GAFAhuE,EAAA,GAAAujB,GAAAS,SACA+pD,EAAAxyB,EAAAoB,SAAA/xC,KAAA+iE,UAAA3tE,MACAw7C,EAAAoB,YACA,MAAA9wC,GAAApB,UAAAoT,MAAAnQ,KAAA/C,KAAA4wC,EAAAoB,YAAAx7B,EAEA4sD,GAAA95B,EAAAK,kBAAA3pC,KAAAmjE,GAMAnjE,KAAAm0C,yBACAn0C,KAAA5K,SACA4K,KAAAmjE,UACAnjE,KAAAojE,sBACAhuE,EAAAke,KAAAY,KAGAwvD,EAAA5jE,UAAA2W,aAAA,WACA,GAAA5P,GAAA7G,KAAA5K,EAAAyR,EAAAzR,OAAAguE,EAAAv8D,EAAAu8D,mBACAhuE,KACAA,EAAAqW,cACAzL,KAAA5K,OAAA,MAEAguE,IACAA,EAAA33D,cACAzL,KAAAojE,oBAAA,MAEApjE,KAAAmjE,QAAA,MAEAO,EAAA5jE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAtjC,GAAA7G,KAAA5K,EAAAyR,EAAAzR,OAAA+tE,EAAAt8D,EAAAs8D,QAAAC,EAAAv8D,EAAAu8D,mBACApjE,MAAA5K,OAAA,KACA4K,KAAAmjE,QAAA,KACAnjE,KAAAojE,oBAAA,KACApjE,KAAAm0C,yBACAn0C,KAAA5K,SACA4K,KAAAmjE,UACAnjE,KAAAojE,sBACApjE,KAAA6U,OAAAtJ,UAAAvL,OAEA0jE,GACCr6B,EAAAiB,kBvRki0BK,SAAUn3C,EAAQC,EAASC,GAEjC,YwR9l0BA,SAAA85D,GAAA4V,GACA,MAAA/iE,MAAAwU,KAAA,GAAAmvD,GAAAZ,IAvCAzvE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAsCAD,GAAA+5D,QACA,IAAAwW,GAAA,WACA,QAAAA,GAAAZ,GACA/iE,KAAA+iE,WAQA,MANAY,GAAA7jE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,GAAA+uD,GAAA,GAAAC,GAAAjvD,GACAyF,EAAAxF,EAAAtJ,UAAAq4D,EAEA,OADAvpD,GAAArV,IAAAskC,EAAAK,kBAAAi6B,EAAA5jE,KAAA+iE,WACA1oD,GAEAspD,KAOAE,EAAA,SAAA3iE,GAEA,QAAA2iE,KACA,GAAAh/D,GAAA,OAAA3D,KAAAC,MAAAnB,KAAAoB,YAAApB,IAEA,OADA6E,GAAAsO,UAAA,EACAtO,EAkBA,MAtBA6P,GAAAO,UAAA4uD,EAAA3iE,GAMA2iE,EAAA/jE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAxM,QACAwM,KAAAmT,UAAA,GAEA0wD,EAAA/jE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAA68D,aAEAgH,EAAA/jE,UAAA8pC,eAAA,WACA5pC,KAAA68D,aAEAgH,EAAA/jE,UAAA+8D,UAAA,WACA78D,KAAAmT,WACAnT,KAAAmT,UAAA,EACAnT,KAAA+U,YAAAzB,KAAAtT,KAAAxM,SAGAqwE,GACCx6B,EAAAiB,kBxR2o0BK,SAAUn3C,EAAQC,EAASC,GAEjC,YyRxr0BA,SAAAg6D,GAAA+H,EAAA7/C,GAEA,WADA,KAAAA,IAA+BA,EAAA6iC,EAAAzkD,OAC/BqM,KAAAwU,KAAA,GAAAsvD,GAAA1O,EAAA7/C,IAwCA,QAAAwuD,GAAAruD,GACA,GAAAd,GAAAc,EAAAd,WAAAwgD,EAAA1/C,EAAA0/C,MACAxgD,GAAAk1B,aACA9pC,KAAAyV,SAAAC,EAAA0/C,GArFA9hE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACA+kD,EAAA/kD,EAAA,GAyCAD,GAAAi6D,YACA,IAAAyW,GAAA,WACA,QAAAA,GAAA1O,EAAA7/C,GACAvV,KAAAo1D,SACAp1D,KAAAuV,YAKA,MAHAuuD,GAAAhkE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAy4D,GAAApvD,EAAA5U,KAAAo1D,OAAAp1D,KAAAuV,aAEAuuD,KAOAE,EAAA,SAAA9iE,GAEA,QAAA8iE,GAAAjvD,EAAAqgD,EAAA7/C,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAAuwD,SACAvwD,EAAA0Q,YACA1Q,EAAAsO,UAAA,EACAtO,EAAAG,IAAAuQ,EAAAE,SAAAsuD,EAAA3O,GAAoExgD,WAAA/P,EAAAuwD,YACpEvwD,EAYA,MAnBA6P,GAAAO,UAAA+uD,EAAA9iE,GASA8iE,EAAAlkE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAi2C,UAAAziD,EACAwM,KAAAmT,UAAA,GAEA6wD,EAAAlkE,UAAAgqC,WAAA,WACA9pC,KAAAmT,WACAnT,KAAAmT,UAAA,EACAnT,KAAA+U,YAAAzB,KAAAtT,KAAAi2C,aAGA+tB,GACCrvD,EAAAS,azR4u0BK,SAAUjiB,EAAQC,EAASC,GAEjC,Y0Rtx0BA,SAAAk6D,GAAAtyC,EAAAC,GACA,GAAAC,IAAA,CASA,OAHA/Z,WAAApN,QAAA,IACAmnB,GAAA,GAEAnb,KAAAwU,KAAA,GAAAyvD,GAAAhpD,EAAAC,EAAAC,IAnDA7nB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAmDAD,GAAAm6D,MACA,IAAA0W,GAAA,WACA,QAAAA,GAAAhpD,EAAAC,EAAAC,OACA,KAAAA,IAAiCA,GAAA,GACjCnb,KAAAib,cACAjb,KAAAkb,OACAlb,KAAAmb,UAKA,MAHA8oD,GAAAnkE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA24D,GAAAtvD,EAAA5U,KAAAib,YAAAjb,KAAAkb,KAAAlb,KAAAmb,WAEA8oD,KAOAC,EAAA,SAAAhjE,GAEA,QAAAgjE,GAAAnvD,EAAAkG,EAAAkpD,EAAAhpD,GACA,GAAAtW,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAAoW,cACApW,EAAAs/D,QACAt/D,EAAAsW,UACAtW,EAAA3J,MAAA,EACA2J,EAkCA,MAzCA6P,GAAAO,UAAAivD,EAAAhjE,GASA5N,OAAAC,eAAA2wE,EAAApkE,UAAA,QACAC,IAAA,WACA,MAAAC,MAAAmkE,OAEA79D,IAAA,SAAA9S,GACAwM,KAAAmb,SAAA,EACAnb,KAAAmkE,MAAA3wE,GAEAyM,YAAA,EACAC,cAAA,IAEAgkE,EAAApkE,UAAAoV,MAAA,SAAA1hB,GACA,GAAAwM,KAAAmb,QAKA,MAAAnb,MAAAqrC,SAAA73C,EAJAwM,MAAAkb,KAAA1nB,EACAwM,KAAA+U,YAAAzB,KAAA9f,IAMA0wE,EAAApkE,UAAAurC,SAAA,SAAA73C,GACA,GACA2hB,GADAja,EAAA8E,KAAA9E,OAEA,KACAia,EAAAnV,KAAAib,YAAAjb,KAAAkb,KAAA1nB,EAAA0H,GAEA,MAAAgZ,GACAlU,KAAA+U,YAAA7B,MAAAgB,GAEAlU,KAAAkb,KAAA/F,EACAnV,KAAA+U,YAAAzB,KAAA6B,IAEA+uD,GACCvvD,EAAAS,a1Rs00BK,SAAUjiB,EAAQC,EAASC,GAEjC,Y2Rj40BA,SAAAo6D,GAAA2W,EAAAC,GACA,MAAArkE,MAAAwU,KAAA,GAAA8vD,GAAAF,EAAAC,IA1DA/wE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,EAwDAD,GAAAq6D,eACA,IAAA6W,GAAA,WACA,QAAAA,GAAAF,EAAAC,GACArkE,KAAAokE,YACApkE,KAAAqkE,WAKA,MAHAC,GAAAxkE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAg5D,GAAA3vD,EAAA5U,KAAAokE,UAAApkE,KAAAqkE,YAEAC,IAEAlxE,GAAAkxE,uBAMA,IAAAC,GAAA,SAAArjE,GAEA,QAAAqjE,GAAAxvD,EAAAqvD,EAAAC,GACA,GAAAx/D,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAOA,OANA6E,GAAAu/D,YACAv/D,EAAAw/D,WACAx/D,EAAAgC,MACAhC,EAAA4lB,MACA5lB,EAAA2/D,cAAA,EACA3/D,EAAAG,IAAAo/D,EAAA74D,UAAA,GAAAk5D,GAAA1vD,EAAAlQ,KACAA,EAqDA,MA9DA6P,GAAAO,UAAAsvD,EAAArjE,GAWAqjE,EAAAzkE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAwkE,cAAA,IAAAxkE,KAAAyqB,GAAAz2B,OACAgM,KAAAwK,MAAA,IAGAxK,KAAA6G,GAAA3B,KAAA1R,GACAwM,KAAA0kE,gBAGAH,EAAAzkE,UAAAyb,UAAA,WACAvb,KAAAwkE,aACAxkE,KAAAwK,KAAA,IAAAxK,KAAA6G,GAAA7S,QAAA,IAAAgM,KAAAyqB,GAAAz2B,QAGAgM,KAAAwkE,cAAA,GAGAD,EAAAzkE,UAAA4kE,YAAA,WAEA,IADA,GAAAC,GAAA3kE,KAAA6G,EAAA89D,EAAA99D,GAAA4jB,EAAAk6C,EAAAl6C,GAAA45C,EAAAM,EAAAN,SACAx9D,EAAA7S,OAAA,GAAAy2B,EAAAz2B,OAAA,IACA,GAAA4F,GAAAiN,EAAAmQ,QACA+G,EAAA0M,EAAAzT,QACA4tD,GAAA,CACAP,IACAO,EAAAj0B,EAAAoB,SAAAsyB,GAAAzqE,EAAAmkB,MACA6yB,EAAAoB,aACAhyC,KAAA+U,YAAA7B,MAAA09B,EAAAoB,YAAAx7B,GAIAouD,EAAAhrE,IAAAmkB,EAEA6mD,GACA5kE,KAAAwK,MAAA,KAIA+5D,EAAAzkE,UAAA0K,KAAA,SAAAhX,GACA,GAAAuhB,GAAA/U,KAAA+U,WACAA,GAAAzB,KAAA9f,GACAuhB,EAAAxB,YAEAgxD,EAAAzkE,UAAA+kE,MAAA,SAAArxE,GACAwM,KAAAwkE,cAAA,IAAAxkE,KAAA6G,GAAA7S,OACAgM,KAAAwK,MAAA,IAGAxK,KAAAyqB,GAAAvlB,KAAA1R,GACAwM,KAAA0kE,gBAGAH,GACC5vD,EAAAS,WACDhiB,GAAAmxE,yBACA,IAAAE,GAAA,SAAAvjE,GAEA,QAAAujE,GAAA1vD,EAAAne,GACA,GAAAiO,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAEA,OADA6E,GAAAjO,SACAiO,EAWA,MAfA6P,GAAAO,UAAAwvD,EAAAvjE,GAMAujE,EAAA3kE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAApJ,OAAAiuE,MAAArxE,IAEAixE,EAAA3kE,UAAAmsC,OAAA,SAAA/3B,GACAlU,KAAApJ,OAAAsc,MAAAgB,IAEAuwD,EAAA3kE,UAAAyb,UAAA,WACAvb,KAAApJ,OAAA2kB,aAEAkpD,GACC9vD,EAAAS,a3Ri80BK,SAAUjiB,EAAQC,EAASC,GAEjC,Y4R5l1BA,SAAAw6D,GAAAn0C,EAAAC,EAAApE,GACA,GAAA+7C,EASA,OARA7F,GAAAC,UAAA3oD,KAAA/C,KAAA,WACA,MAAAA,MAAA8kE,YACAxT,EAGAA,EAAA,GAAA7O,GAAAhpC,cAAAC,EAAAC,EAAApE,KAGAwvD,WAjBAzxE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAi4D,GAAAp4D,EAAA,IACAovD,EAAApvD,EAAA,GAiBAD,GAAAy6D,e5R0m1BM,SAAU16D,EAAQC,EAASC,GAEjC,Y6R3m1BA,SAAA06D,GAAAnjB,GACA,MAAA5qC,MAAAwU,KAAA,GAAAwwD,GAAAp6B,EAAA5qC,OArBA1M,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAkiD,EAAAliD,EAAA,GAoBAD,GAAA26D,QACA,IAAAiX,GAAA,WACA,QAAAA,GAAAp6B,EAAA/1B,GACA7U,KAAA4qC,YACA5qC,KAAA6U,SAKA,MAHAmwD,GAAAllE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA05D,GAAArwD,EAAA5U,KAAA4qC,UAAA5qC,KAAA6U,UAEAmwD,KAOAC,EAAA,SAAA/jE,GAEA,QAAA+jE,GAAAlwD,EAAA61B,EAAA/1B,GACA,GAAAhQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAA+lC,YACA/lC,EAAAgQ,SACAhQ,EAAAqgE,WAAA,EACArgE,EAAA3J,MAAA,EACA2J,EAwCA,MA/CA6P,GAAAO,UAAAgwD,EAAA/jE,GASA+jE,EAAAnlE,UAAAqlE,iBAAA,SAAA3xE,GACAwM,KAAAklE,UACAllE,KAAA+U,YAAA7B,MAAA,4CAGAlT,KAAAklE,WAAA,EACAllE,KAAAolE,YAAA5xE,IAGAyxE,EAAAnlE,UAAAoV,MAAA,SAAA1hB,GACA,GAAA0H,GAAA8E,KAAA9E,OACA8E,MAAA4qC,UACA5qC,KAAAigE,QAAAzsE,EAAA0H,GAGA8E,KAAAmlE,iBAAA3xE,IAGAyxE,EAAAnlE,UAAAmgE,QAAA,SAAAzsE,EAAA0H,GACA,IACA8E,KAAA4qC,UAAAp3C,EAAA0H,EAAA8E,KAAA6U,SACA7U,KAAAmlE,iBAAA3xE,GAGA,MAAA0gB,GACAlU,KAAA+U,YAAA7B,MAAAgB,KAGA+wD,EAAAnlE,UAAAyb,UAAA,WACA,GAAAxG,GAAA/U,KAAA+U,WACA/U,MAAA9E,MAAA,GACA6Z,EAAAzB,KAAAtT,KAAAklE,UAAAllE,KAAAolE,gBAAAnrE,IACA8a,EAAAxB,YAGAwB,EAAA7B,MAAA,GAAAqiC,GAAAn+B,aAGA6tD,GACCtwD,EAAAS,a7Rso1BK,SAAUjiB,EAAQC,EAASC,GAEjC,Y8Rlt1BA,SAAA46D,GAAAj5C,GACA,MAAAhV,MAAAwU,KAAA,GAAA6wD,GAAArwD,IAfA1hB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAeAD,GAAA66D,MACA,IAAAoX,GAAA,WACA,QAAAA,GAAAzS,GACA5yD,KAAA4yD,QAKA,MAHAyS,GAAAvlE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA+5D,GAAA1wD,EAAA5U,KAAA4yD,SAEAyS,KAOAC,EAAA,SAAApkE,GAEA,QAAAokE,GAAAvwD,EAAA69C,GACA,GAAA/tD,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAA+tD,QACA/tD,EAAAmQ,MAAA,EACAnQ,EAOA,MAZA6P,GAAAO,UAAAqwD,EAAApkE,GAOAokE,EAAAxlE,UAAAoV,MAAA,SAAAvJ,KACA3L,KAAAgV,MAAAhV,KAAA4yD,OACA5yD,KAAA+U,YAAAzB,KAAA3H,IAGA25D,GACC3wD,EAAAS,a9Ruu1BK,SAAUjiB,EAAQC,EAASC,GAEjC,Y+Rnv1BA,SAAA86D,GAAAn5C,GACA,MAAAhV,MAAAwU,KAAA,GAAA+wD,GAAAvwD,IArCA1hB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAwvD,EAAAxvD,EAAA,GAoCAD,GAAA+6D,UACA,IAAAoX,GAAA,WACA,QAAAA,GAAAC,GAEA,GADAxlE,KAAAwlE,aACAxlE,KAAAwlE,WAAA,EACA,SAAA3iB,GAAA3rC,wBAaA,MAVAquD,GAAAzlE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,WAAA7U,KAAAwlE,WAGA3wD,EAAAtJ,UAAA,GAAAoJ,GAAAS,WAAAR,IAGAC,EAAAtJ,UAAA,GAAAk6D,GAAA7wD,EAAA5U,KAAAwlE,cAGAD,KAOAE,EAAA,SAAAvkE,GAEA,QAAAukE,GAAA1wD,EAAAywD,GACA,GAAA3gE,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAA2gE,aACA3gE,EAAAyxD,OAAA,EACAzxD,EAAA6gE,MAAA,GAAAnrE,OAAAirE,GACA3gE,EAgBA,MAtBA6P,GAAAO,UAAAwwD,EAAAvkE,GAQAukE,EAAA3lE,UAAAoV,MAAA,SAAA1hB,GACA,GAAAmyE,GAAA3lE,KAAAwlE,WACAxwD,EAAAhV,KAAAs2D,QACA,IAAAthD,EAAA2wD,EACA3lE,KAAA0lE,MAAA1wD,GAAAxhB,MAEA,CACA,GAAAoyE,GAAA5wD,EAAA2wD,EACAE,EAAA7lE,KAAA0lE,MACAI,EAAAD,EAAAD,EACAC,GAAAD,GAAApyE,EACAwM,KAAA+U,YAAAzB,KAAAwyD,KAGAL,GACC9wD,EAAAS,a/R8x1BK,SAAUjiB,EAAQC,EAASC,GAEjC,YgSx21BA,SAAAg7D,GAAA0U,GACA,MAAA/iE,MAAAwU,KAAA,GAAAuxD,GAAAhD,IAjBAzvE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAgBAD,GAAAi7D,WACA,IAAA0X,GAAA,WACA,QAAAA,GAAAhD,GACA/iE,KAAA+iE,WAKA,MAHAgD,GAAAjmE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAy6D,GAAApxD,EAAA5U,KAAA+iE,YAEAgD,KAOAC,EAAA,SAAA9kE,GAEA,QAAA8kE,GAAAjxD,EAAAguD,GACA,GAAAl+D,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAAsO,UAAA,EACAtO,EAAAohE,gBAAA,EACAphE,EAAAG,IAAAskC,EAAAK,kBAAA9kC,EAAAk+D,IACAl+D,EAwBA,MA9BA6P,GAAAO,UAAA+wD,EAAA9kE,GAQA8kE,EAAAlmE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAmT,UACAjS,EAAApB,UAAAoV,MAAAnS,KAAA/C,KAAAxM,IAGAwyE,EAAAlmE,UAAAyb,UAAA,WACAvb,KAAAimE,eACA/kE,EAAApB,UAAAyb,UAAAxY,KAAA/C,MAGAA,KAAAyL,eAGAu6D,EAAAlmE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAmT,UAAA,GAEA6yD,EAAAlmE,UAAA8pC,eAAA,WACA5pC,KAAAimE,gBAAA,EACAjmE,KAAAua,WACArZ,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAGAgmE,GACC38B,EAAAiB,kBhS+31BK,SAAUn3C,EAAQC,EAASC,GAEjC,YiSp71BA,SAAAk7D,GAAA3jB,GACA,MAAA5qC,MAAAwU,KAAA,GAAA0xD,GAAAt7B,IAhBAt3C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAgBAD,GAAAm7D,WACA,IAAA2X,GAAA,WACA,QAAAA,GAAAt7B,GACA5qC,KAAA4qC,YAKA,MAHAs7B,GAAApmE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA46D,GAAAvxD,EAAA5U,KAAA4qC,aAEAs7B,KAOAC,EAAA,SAAAjlE,GAEA,QAAAilE,GAAApxD,EAAA61B,GACA,GAAA/lC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAA+lC,YACA/lC,EAAAuhE,UAAA,EACAvhE,EAAA3J,MAAA,EACA2J,EAoBA,MA1BA6P,GAAAO,UAAAkxD,EAAAjlE,GAQAilE,EAAArmE,UAAAoV,MAAA,SAAA1hB,GACA,GAAAuhB,GAAA/U,KAAA+U,WACA/U,MAAAomE,UACApmE,KAAAqmE,iBAAA7yE,GAEAwM,KAAAomE,UACArxD,EAAAzB,KAAA9f,IAGA2yE,EAAArmE,UAAAumE,iBAAA,SAAA7yE,GACA,IACA,GAAA2hB,GAAAnV,KAAA4qC,UAAAp3C,EAAAwM,KAAA9E,QACA8E,MAAAomE,SAAAvxB,QAAA1/B,GAEA,MAAAjB,GACAlU,KAAA+U,YAAA7B,MAAAgB,KAGAiyD,GACCxxD,EAAAS,ajS081BK,SAAUjiB,EAAQC,EAASC,GAEjC,YkSp/1BA,SAAAo7D,KAEA,OADA/7C,MACA9L,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C8L,EAAA9L,GAAAxF,UAAAwF,EAEA,IAAA2O,GAAA7C,IAAA1e,OAAA,EACAw2C,GAAAC,YAAAl1B,GACA7C,EAAA7D,MAGA0G,EAAA,IAEA,IAAAoF,GAAAjI,EAAA1e,MACA,YAAA2mB,EACAupC,EAAA3Z,aAAA,GAAA0mB,GAAAI,iBAAA3+C,EAAA,GAAA6C,GAAAvV,MAEA2a,EAAA,EACAupC,EAAA3Z,aAAA,GAAArB,GAAAC,gBAAAz2B,EAAA6C,GAAAvV,MAGAkkD,EAAA3Z,aAAA,GAAA2mB,GAAAE,gBAAA77C,GAAAvV,MAzCA1M,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA01C,GAAA71C,EAAA,IACA49D,EAAA59D,EAAA,KACA69D,EAAA79D,EAAA,IACA6wD,EAAA7wD,EAAA,IACAm3C,EAAAn3C,EAAA,GAuCAD,GAAAq7D,alSgh2BM,SAAUt7D,EAAQC,EAASC,GAEjC,YmSjj2BA,SAAAs7D,GAAAp5C,EAAAI,GAEA,WADA,KAAAA,IAA2BA,EAAA,GAC3B3V,KAAAwU,KAAA,GAAA8xD,GAAA/wD,EAAAI,IAfAriB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA+yE,GAAAlzE,EAAA,IAgBAD,GAAAu7D,aACA,IAAA2X,GAAA,WACA,QAAAA,GAAA/wD,EAAAI,GACA3V,KAAAuV,YACAvV,KAAA2V,QAKA,MAHA2wD,GAAAxmE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,UAAA0xD,GAAAhQ,sBAAA1hD,EAAA7U,KAAA2V,MAAA3V,KAAAuV,WAAAhK,UAAAqJ,IAEA0xD,MnSsk2BM,SAAUnzE,EAAQC,EAASC,GAEjC,YoSpj2BA,SAAAy7D,KACA,MAAA9uD,MAAAwU,KAAA,GAAAgyD,IA/CAlzE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EA8CAD,GAAA07D,SACA,IAAA0X,GAAA,WACA,QAAAA,MAKA,MAHAA,GAAA1mE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAk7D,GAAA7xD,KAEA4xD,KAOAC,EAAA,SAAAvlE,GAEA,QAAAulE,GAAA1xD,GACA,GAAAlQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAAgS,OAAA,EACAhS,EAAAkU,cAAA,EACAlU,EAiCA,MAtCA6P,GAAAO,UAAAwxD,EAAAvlE,GAOAulE,EAAA3mE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA0mE,mBACA1mE,KAAA6W,SACA7W,KAAAgF,IAAAhF,KAAA6yD,kBAAAvpB,EAAAK,kBAAA3pC,KAAAxM,KAEAizE,EAAA3mE,UAAAyb,UAAA,WACAvb,KAAA+Y,cAAA,EACA,IAAA/Y,KAAA6W,QACA7W,KAAA+U,YAAAxB,YAGAkzD,EAAA3mE,UAAA4mE,iBAAA,WACA1mE,KAAA6W,OAAA7W,KAAA6W,OAAA,EAAA7W,KAAA6W,OAAA,GACA,IAAAg8C,GAAA7yD,KAAA6yD,iBACAA,KACAA,EAAApnD,cACAzL,KAAAjF,OAAA83D,KAGA4T,EAAA3mE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAA+U,YAAAzB,KAAA02B,IAEAy8B,EAAA3mE,UAAAy2C,YAAA,SAAAriC,GACAlU,KAAA+U,YAAA7B,MAAAgB,IAEAuyD,EAAA3mE,UAAA8pC,eAAA,WACA5pC,KAAA0mE,mBACA1mE,KAAA+Y,cAAA,IAAA/Y,KAAA6W,QACA7W,KAAA+U,YAAAxB,YAGAkzD,GACCp9B,EAAAiB,kBpSym2BK,SAAUn3C,EAAQC,EAASC,GAEjC,YqS9p2BA,SAAA27D,GAAA36C,EAAA22B,GACA,MAAAhrC,MAAAwU,KAAA,GAAAmyD,GAAAtyD,EAAA22B,IArDA13C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAoDAD,GAAA47D,WACA,IAAA2X,GAAA,WACA,QAAAA,GAAAtyD,EAAA22B,GACAhrC,KAAAqU,UACArU,KAAAgrC,iBAKA,MAHA27B,GAAA7mE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAq7D,GAAAhyD,EAAA5U,KAAAqU,QAAArU,KAAAgrC,kBAEA27B,KAOAC,EAAA,SAAA1lE,GAEA,QAAA0lE,GAAA7xD,EAAAV,EAAA22B,GACA,GAAAnmC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAAwP,UACAxP,EAAAmmC,iBACAnmC,EAAA3J,MAAA,EACA2J,EAwDA,MA9DA6P,GAAAO,UAAA2xD,EAAA1lE,GAQA0lE,EAAA9mE,UAAAoV,MAAA,SAAA1hB,GACA,GAAA2hB,GACAja,EAAA8E,KAAA9E,OACA,KACAia,EAAAnV,KAAAqU,QAAA7gB,EAAA0H,GAEA,MAAAgY,GAEA,WADAlT,MAAA+U,YAAA7B,SAGAlT,KAAAsrC,UAAAn2B,EAAA3hB,EAAA0H,IAEA0rE,EAAA9mE,UAAAwrC,UAAA,SAAAn2B,EAAA3hB,EAAA0H,GACA,GAAA23D,GAAA7yD,KAAA6yD,iBACAA,IACAA,EAAApnD,cAEAzL,KAAAgF,IAAAhF,KAAA6yD,kBAAAvpB,EAAAK,kBAAA3pC,KAAAmV,EAAA3hB,EAAA0H,KAEA0rE,EAAA9mE,UAAAyb,UAAA,WACA,GAAAs3C,GAAA7yD,KAAA6yD,iBACAA,OAAAj9C,QACA1U,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAGA4mE,EAAA9mE,UAAA2W,aAAA,WACAzW,KAAA6yD,kBAAA,MAEA+T,EAAA9mE,UAAA8pC,eAAA,SAAAO,GACAnqC,KAAAjF,OAAAovC,GACAnqC,KAAA6yD,kBAAA,KACA7yD,KAAAua,WACArZ,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAGA4mE,EAAA9mE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAgrC,eACAhrC,KAAA6mE,eAAA98B,EAAAC,EAAAC,EAAAC,GAGAlqC,KAAA+U,YAAAzB,KAAA02B,IAGA48B,EAAA9mE,UAAA+mE,eAAA,SAAA98B,EAAAC,EAAAC,EAAAC,GACA,GAAA/0B,EACA,KACAA,EAAAnV,KAAAgrC,eAAAjB,EAAAC,EAAAC,EAAAC,GAEA,MAAAh2B,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAlU,KAAA+U,YAAAzB,KAAA6B,IAEAyxD,GACCv9B,EAAAiB,kBrSyt2BK,SAAUn3C,EAAQC,EAASC,GAEjC,YsSnz2BA,SAAA67D,GAAA/Y,EAAAnL,GACA,MAAAhrC,MAAAwU,KAAA,GAAAsyD,GAAA3wB,EAAAnL,IAhDA13C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EA+CAD,GAAA87D,aACA,IAAA4X,GAAA,WACA,QAAAA,GAAA3kC,EAAA6I,GACAhrC,KAAAmiC,aACAniC,KAAAgrC,iBAKA,MAHA87B,GAAAhnE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAw7D,GAAAnyD,EAAA5U,KAAAmiC,WAAAniC,KAAAgrC,kBAEA87B,KAOAC,EAAA,SAAA7lE,GAEA,QAAA6lE,GAAAhyD,EAAAiyD,EAAAh8B,GACA,GAAAnmC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAAmiE,QACAniE,EAAAmmC,iBACAnmC,EAAA3J,MAAA,EACA2J,EA8CA,MApDA6P,GAAAO,UAAA8xD,EAAA7lE,GAQA6lE,EAAAjnE,UAAAoV,MAAA,SAAA1hB,GACA,GAAAq/D,GAAA7yD,KAAA6yD,iBACAA,IACAA,EAAApnD,cAEAzL,KAAAgF,IAAAhF,KAAA6yD,kBAAAvpB,EAAAK,kBAAA3pC,UAAAgnE,MAAAxzE,EAAAwM,KAAA9E,WAEA6rE,EAAAjnE,UAAAyb,UAAA,WACA,GAAAs3C,GAAA7yD,KAAA6yD,iBACAA,OAAAj9C,QACA1U,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAGA+mE,EAAAjnE,UAAA2W,aAAA,WACAzW,KAAA6yD,kBAAA,MAEAkU,EAAAjnE,UAAA8pC,eAAA,SAAAO,GACAnqC,KAAAjF,OAAAovC,GACAnqC,KAAA6yD,kBAAA,KACA7yD,KAAAua,WACArZ,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAGA+mE,EAAAjnE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAtjC,GAAA7G,KAAAgrC,EAAAnkC,EAAAmkC,eAAAj2B,EAAAlO,EAAAkO,WACAi2B,GACAhrC,KAAAinE,kBAAAl9B,EAAAC,EAAAC,EAAAC,GAGAn1B,EAAAzB,KAAA02B,IAGA+8B,EAAAjnE,UAAAmnE,kBAAA,SAAAl9B,EAAAC,EAAAC,EAAAC,GACA,GACA/0B,GADAtO,EAAA7G,KAAAgrC,EAAAnkC,EAAAmkC,eAAAj2B,EAAAlO,EAAAkO,WAEA,KACAI,EAAA61B,EAAAjB,EAAAC,EAAAC,EAAAC,GAEA,MAAAh2B,GAEA,WADAa,GAAA7B,MAAAgB,GAGAa,EAAAzB,KAAA6B,IAEA4xD,GACC19B,EAAAiB,kBtSy22BK,SAAUn3C,EAAQC,EAASC,GAEjC,YuS772BA,SAAA+7D,GAAAp6C,GACA,WAAAA,EACA,GAAAk8C,GAAAE,gBAGApxD,KAAAwU,KAAA,GAAA0yD,GAAAlyD,IA3CA1hB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAwvD,EAAAxvD,EAAA,IACA69D,EAAA79D,EAAA,GA0CAD,GAAAg8D,MACA,IAAA8X,GAAA,WACA,QAAAA,GAAAtU,GAEA,GADA5yD,KAAA4yD,QACA5yD,KAAA4yD,MAAA,EACA,SAAA/P,GAAA3rC,wBAMA,MAHAgwD,GAAApnE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA47D,GAAAvyD,EAAA5U,KAAA4yD,SAEAsU,KAOAC,EAAA,SAAAjmE,GAEA,QAAAimE,GAAApyD,EAAA69C,GACA,GAAA/tD,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAA+tD,QACA/tD,EAAAmQ,MAAA,EACAnQ,EAaA,MAlBA6P,GAAAO,UAAAkyD,EAAAjmE,GAOAimE,EAAArnE,UAAAoV,MAAA,SAAA1hB,GACA,GAAAo/D,GAAA5yD,KAAA4yD,MACA59C,IAAAhV,KAAAgV,KACAA,IAAA49C,IACA5yD,KAAA+U,YAAAzB,KAAA9f,GACAwhB,IAAA49C,IACA5yD,KAAA+U,YAAAxB,WACAvT,KAAAyL,iBAIA07D,GACCxyD,EAAAS,avS0+2BK,SAAUjiB,EAAQC,EAASC,GAEjC,YwSvh3BA,SAAAi8D,GAAAt6C,GACA,WAAAA,EACA,GAAAk8C,GAAAE,gBAGApxD,KAAAwU,KAAA,GAAA4yD,GAAApyD,IA9CA1hB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAwvD,EAAAxvD,EAAA,IACA69D,EAAA79D,EAAA,GA6CAD,GAAAk8D,UACA,IAAA8X,GAAA,WACA,QAAAA,GAAAxU,GAEA,GADA5yD,KAAA4yD,QACA5yD,KAAA4yD,MAAA,EACA,SAAA/P,GAAA3rC,wBAMA,MAHAkwD,GAAAtnE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA87D,GAAAzyD,EAAA5U,KAAA4yD,SAEAwU,KAOAC,EAAA,SAAAnmE,GAEA,QAAAmmE,GAAAtyD,EAAA69C,GACA,GAAA/tD,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAA+tD,QACA/tD,EAAAghE,KAAA,GAAAtrE,OACAsK,EAAAmQ,MAAA,EACAnQ,EA2BA,MAjCA6P,GAAAO,UAAAoyD,EAAAnmE,GAQAmmE,EAAAvnE,UAAAoV,MAAA,SAAA1hB,GACA,GAAAqyE,GAAA7lE,KAAA6lE,KACAjT,EAAA5yD,KAAA4yD,MACA59C,EAAAhV,KAAAgV,OACA,IAAA6wD,EAAA7xE,OAAA4+D,EACAiT,EAAA3gE,KAAA1R,OAEA,CAEAqyE,EADA7wD,EAAA49C,GACAp/D,IAGA6zE,EAAAvnE,UAAAyb,UAAA,WACA,GAAAxG,GAAA/U,KAAA+U,YACAC,EAAAhV,KAAAgV,KACA,IAAAA,EAAA,EAGA,OAFA49C,GAAA5yD,KAAAgV,OAAAhV,KAAA4yD,MAAA5yD,KAAA4yD,MAAA5yD,KAAAgV,MACA6wD,EAAA7lE,KAAA6lE,KACAvxE,EAAA,EAA2BA,EAAAs+D,EAAWt+D,IAAA,CACtC,GAAA0jC,GAAAhjB,IAAA49C,CACA79C,GAAAzB,KAAAuyD,EAAA7tC,IAGAjjB,EAAAxB,YAEA8zD,GACC1yD,EAAAS,axSuk3BK,SAAUjiB,EAAQC,EAASC,GAEjC,YyS1o3BA,SAAAm8D,GAAAuT,GACA,MAAA/iE,MAAAwU,KAAA,GAAA8yD,GAAAvE,IAtCAzvE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAqCAD,GAAAo8D,WACA,IAAA8X,GAAA,WACA,QAAAA,GAAAvE,GACA/iE,KAAA+iE,WAKA,MAHAuE,GAAAxnE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAg8D,GAAA3yD,EAAA5U,KAAA+iE,YAEAuE,KAOAC,EAAA,SAAArmE,GAEA,QAAAqmE,GAAAxyD,EAAAguD,GACA,GAAAl+D,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAAk+D,WACAl+D,EAAAG,IAAAskC,EAAAK,kBAAA9kC,EAAAk+D,IACAl+D,EAQA,MAbA6P,GAAAO,UAAAsyD,EAAArmE,GAOAqmE,EAAAznE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAuT,YAEAg0D,EAAAznE,UAAA8pC,eAAA,aAGA29B,GACCl+B,EAAAiB,kBzSsr3BK,SAAUn3C,EAAQC,EAASC,GAEjC,Y0Svt3BA,SAAAq8D,GAAA9kB,GACA,MAAA5qC,MAAAwU,KAAA,GAAAgzD,GAAA58B,IAxCAt3C,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EAwCAD,GAAAs8D,WACA,IAAA8X,GAAA,WACA,QAAAA,GAAA58B,GACA5qC,KAAA4qC,YAKA,MAHA48B,GAAA1nE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAk8D,GAAA7yD,EAAA5U,KAAA4qC,aAEA48B,KAOAC,EAAA,SAAAvmE,GAEA,QAAAumE,GAAA1yD,EAAA61B,GACA,GAAA/lC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAA+lC,YACA/lC,EAAA3J,MAAA,EACA2J,EAyBA,MA9BA6P,GAAAO,UAAAwyD,EAAAvmE,GAOAumE,EAAA3nE,UAAAoV,MAAA,SAAA1hB,GACA,GACA2hB,GADAJ,EAAA/U,KAAA+U,WAEA,KACAI,EAAAnV,KAAA4qC,UAAAp3C,EAAAwM,KAAA9E,SAEA,MAAAgZ,GAGA,MAFAa,GAAA7B,MAAAgB,OACAlU,MAAAyL,cAGAzL,KAAA0nE,eAAAl0E,EAAA2hB,IAEAsyD,EAAA3nE,UAAA4nE,eAAA,SAAAl0E,EAAAm0E,GACA,GAAA5yD,GAAA/U,KAAA+U,WACA8/B,SAAA8yB,GACA5yD,EAAAzB,KAAA9f,IAGAuhB,EAAAxB,WACAvT,KAAAyL,gBAGAg8D,GACC9yD,EAAAS,a1Sqw3BK,SAAUjiB,EAAQC,EAASC,GAEjC,Y2Spz3BA,SAAAw8D,GAAA7X,EAAAziC,EAAAyH,GAGA,WAFA,KAAAzH,IAA+BA,EAAA6iC,EAAAzkD,WAC/B,KAAAqpB,IAA4BA,EAAA2yC,EAAArY,uBAC5Bt3C,KAAAwU,KAAA,GAAAozD,GAAA5vB,EAAAziC,EAAAyH,EAAAw6B,QAAAx6B,EAAAy6B,WA6DA,QAAArI,GAAAvD,GACAA,EAAAj3B,WACA8kD,gBA9GApmE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACA+kD,EAAA/kD,EAAA,IACAs8D,EAAAt8D,EAAA,GA6CAD,GAAAy8D,cACA,IAAA+X,GAAA,WACA,QAAAA,GAAA5vB,EAAAziC,EAAAiiC,EAAAC,GACAz3C,KAAAg4C,WACAh4C,KAAAuV,YACAvV,KAAAw3C,UACAx3C,KAAAy3C,WAKA,MAHAmwB,GAAA9nE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAs8D,GAAAjzD,EAAA5U,KAAAg4C,SAAAh4C,KAAAuV,UAAAvV,KAAAw3C,QAAAx3C,KAAAy3C,YAEAmwB,KAOAC,EAAA,SAAA3mE,GAEA,QAAA2mE,GAAA9yD,EAAAijC,EAAAziC,EAAAiiC,EAAAC,GACA,GAAA5yC,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAOA,OANA6E,GAAAmzC,WACAnzC,EAAA0Q,YACA1Q,EAAA2yC,UACA3yC,EAAA4yC,WACA5yC,EAAAgzC,mBAAA,EACAhzC,EAAAkzC,eAAA,KACAlzC,EA6BA,MAtCA6P,GAAAO,UAAA4yD,EAAA3mE,GAWA2mE,EAAA/nE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA83C,UACA93C,KAAAy3C,WACAz3C,KAAA+3C,eAAAvkD,EACAwM,KAAA63C,mBAAA,IAIA73C,KAAAgF,IAAAhF,KAAA83C,UAAA93C,KAAAuV,UAAAE,SAAA25B,EAAApvC,KAAAg4C,UAA4FpjC,WAAA5U,QAC5FA,KAAAw3C,SACAx3C,KAAA+U,YAAAzB,KAAA9f,KAIAq0E,EAAA/nE,UAAA45D,cAAA,WACA,GAAA5hB,GAAA93C,KAAA83C,SACAA,KACA93C,KAAAy3C,UAAAz3C,KAAA63C,oBACA73C,KAAA+U,YAAAzB,KAAAtT,KAAA+3C,gBACA/3C,KAAA+3C,eAAA,KACA/3C,KAAA63C,mBAAA,GAEAC,EAAArsC,cACAzL,KAAAjF,OAAA+8C,GACA93C,KAAA83C,UAAA,OAGA+vB,GACClzD,EAAAS,a3S223BK,SAAUjiB,EAAQC,EAASC,GAEjC,Y4S383BA,SAAA69C,GAAA42B,EAAAvyD,OACA,KAAAA,IAA+BA,EAAA6iC,EAAAzkD,MAC/B,IAAAo0E,GAAAtR,EAAAj7C,OAAAssD,GACAE,EAAAD,GAAAD,EAAAvyD,EAAA0E,MAAAe,KAAA46C,IAAAkS,EACA,OAAA9nE,MAAAwU,KAAA,GAAAyzD,GAAAD,EAAAD,EAAAxyD,EAAA,GAAAutC,GAAAtI,eAjBAlnD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA+kD,EAAA/kD,EAAA,IACAojE,EAAApjE,EAAA,IACAshB,EAAAthB,EAAA,GACAyvD,EAAAzvD,EAAA,IAcAD,GAAA89C,SACA,IAAA+2B,GAAA,WACA,QAAAA,GAAAD,EAAAD,EAAAxyD,EAAA2yD,GACAloE,KAAAgoE,UACAhoE,KAAA+nE,kBACA/nE,KAAAuV,YACAvV,KAAAkoE,gBAKA,MAHAD,GAAAnoE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA48D,GAAAvzD,EAAA5U,KAAA+nE,gBAAA/nE,KAAAgoE,QAAAhoE,KAAAuV,UAAAvV,KAAAkoE,iBAEAD,KAOAE,EAAA,SAAAjnE,GAEA,QAAAinE,GAAApzD,EAAAgzD,EAAAC,EAAAzyD,EAAA2yD,GACA,GAAArjE,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAOA,OANA6E,GAAAkjE,kBACAljE,EAAAmjE,UACAnjE,EAAA0Q,YACA1Q,EAAAqjE,gBACArjE,EAAAkS,OAAA,KACAlS,EAAAujE,kBACAvjE,EA8BA,MAvCA6P,GAAAO,UAAAkzD,EAAAjnE,GAWAinE,EAAAE,gBAAA,SAAAzzD,GACAA,EAAA1B,MAAA0B,EAAAszD,gBAEAC,EAAAroE,UAAAsoE,gBAAA,WACA,GAAArxD,GAAA/W,KAAA+W,MACAA,GAMA/W,KAAA+W,SAAAtB,SAAAzV,UAAAgoE,SAGAhoE,KAAAgF,IAAAhF,KAAA+W,OAAA/W,KAAAuV,UAAAE,SAAA0yD,EAAAE,gBAAAroE,KAAAgoE,QAAAhoE,QAGAmoE,EAAAroE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA+nE,iBACA/nE,KAAAooE,kBAEAlnE,EAAApB,UAAAoV,MAAAnS,KAAA/C,KAAAxM,IAEA20E,EAAAroE,UAAA2W,aAAA,WACAzW,KAAA+W,OAAA,KACA/W,KAAAuV,UAAA,KACAvV,KAAAkoE,cAAA,MAEAC,GACCxzD,EAAAS,a5S+93BK,SAAUjiB,EAAQC,EAASC,GAEjC,Y6Shi4BA,SAAA28D,GAAA8X,EAAAQ,EAAA/yD,OACA,KAAAA,IAA+BA,EAAA6iC,EAAAzkD,MAC/B,IAAAo0E,GAAAtR,EAAAj7C,OAAAssD,GACAE,EAAAD,GAAAD,EAAAvyD,EAAA0E,MAAAe,KAAA46C,IAAAkS,EACA,OAAA9nE,MAAAwU,KAAA,GAAA+zD,GAAAP,EAAAD,EAAAO,EAAA/yD,IAnBAjiB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA+kD,EAAA/kD,EAAA,IACAojE,EAAApjE,EAAA,IACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAgBAD,GAAA48D,aACA,IAAAuY,GAAA,WACA,QAAAA,GAAAP,EAAAD,EAAAO,EAAA/yD,GACAvV,KAAAgoE,UACAhoE,KAAA+nE,kBACA/nE,KAAAsoE,iBACAtoE,KAAAuV,YAKA,MAHAgzD,GAAAzoE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAi9D,GAAA5zD,EAAA5U,KAAA+nE,gBAAA/nE,KAAAgoE,QAAAhoE,KAAAsoE,eAAAtoE,KAAAuV,aAEAgzD,KAOAC,EAAA,SAAAtnE,GAEA,QAAAsnE,GAAAzzD,EAAAgzD,EAAAC,EAAAM,EAAA/yD,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAOA,OANA6E,GAAAkjE,kBACAljE,EAAAmjE,UACAnjE,EAAAyjE,iBACAzjE,EAAA0Q,YACA1Q,EAAAkS,OAAA,KACAlS,EAAAujE,kBACAvjE,EAgCA,MAzCA6P,GAAAO,UAAAuzD,EAAAtnE,GAWAsnE,EAAAH,gBAAA,SAAAzzD,GACA,GAAA0zD,GAAA1zD,EAAA0zD,cACA1zD,GAAAu/B,yBACAv/B,EAAA5P,IAAAskC,EAAAK,kBAAA/0B,EAAA0zD,KAEAE,EAAA1oE,UAAAsoE,gBAAA,WACA,GAAArxD,GAAA/W,KAAA+W,MACAA,GAMA/W,KAAA+W,SAAAtB,SAAAzV,UAAAgoE,SAGAhoE,KAAAgF,IAAAhF,KAAA+W,OAAA/W,KAAAuV,UAAAE,SAAA+yD,EAAAH,gBAAAroE,KAAAgoE,QAAAhoE,QAGAwoE,EAAA1oE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAA+nE,iBACA/nE,KAAAooE,kBAEAlnE,EAAApB,UAAAoV,MAAAnS,KAAA/C,KAAAxM,IAEAg1E,EAAA1oE,UAAA2W,aAAA,WACAzW,KAAA+W,OAAA,KACA/W,KAAAuV,UAAA,KACAvV,KAAAsoE,eAAA,MAEAE,GACCn/B,EAAAiB,kB7Ssj4BK,SAAUn3C,EAAQC,EAASC,GAEjC,Y8Slo4BA,SAAA68D,KACA,MAAAlwD,MAAAwU,KAAA,GAAAi0D,IATAn1E,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,EASAD,GAAA88D,SACA,IAAAuY,GAAA,WACA,QAAAA,MAKA,MAHAA,GAAA3oE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAm9D,GAAA9zD,KAEA6zD,KAOAC,EAAA,SAAAxnE,GAEA,QAAAwnE,GAAA3zD,GACA,GAAAlQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAEA,OADA6E,GAAA6N,SACA7N,EASA,MAbA6P,GAAAO,UAAAyzD,EAAAxnE,GAMAwnE,EAAA5oE,UAAAoV,MAAA,SAAAvJ,GACA3L,KAAA0S,MAAAxN,KAAAyG,IAEA+8D,EAAA5oE,UAAAyb,UAAA,WACAvb,KAAA+U,YAAAzB,KAAAtT,KAAA0S,OACA1S,KAAA+U,YAAAxB,YAEAm1D,GACC/zD,EAAAS,a9Sip4BK,SAAUjiB,EAAQC,EAASC,GAEjC,Y+Svo4BA,SAAA+8D,GAAAuY,GACA,GAAA9jE,GAAA7E,IASA,IARA2oE,IACAtzD,EAAAU,KAAA6yD,IAAAvzD,EAAAU,KAAA6yD,GAAA5rD,QAAA3H,EAAAU,KAAA6yD,GAAA5rD,OAAAnP,QACA86D,EAAAtzD,EAAAU,KAAA6yD,GAAA5rD,OAAAnP,QAEAwH,EAAAU,KAAAlI,UACA86D,EAAAtzD,EAAAU,KAAAlI,WAGA86D,EACA,SAAAl0E,OAAA,wBAEA,WAAAk0E,GAAA,SAAA76D,EAAAgwB,GACA,GAAAtqC,EACAqR,GAAA0G,UAAA,SAAAI,GAAsC,MAAAnY,GAAAmY,GAAoB,SAAAuI,GAAkB,MAAA4pB,GAAA5pB,IAAsB,WAAe,MAAApG,GAAAta,OAnEjHF,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA6hB,GAAAhiB,EAAA,GAqEAD,GAAAg9D,a/Sks4BM,SAAUj9D,EAAQC,EAASC,GAEjC,YgTju4BA,SAAAmoD,GAAAqtB,GACA,MAAA7oE,MAAAwU,KAAA,GAAAs0D,GAAAD,IA1CAv1E,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAslB,EAAAtlB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAwCAD,GAAAooD,QACA,IAAAstB,GAAA,WACA,QAAAA,GAAAD,GACA7oE,KAAA6oE,mBAUA,MARAC,GAAAhpE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,GAAAk0D,GAAA,GAAAC,GAAAp0D,GACAq0D,EAAAp0D,EAAAtJ,UAAAw9D,EAIA,OAHAE,GAAArzD,QACAmzD,EAAA/jE,IAAAskC,EAAAK,kBAAAo/B,EAAA/oE,KAAA6oE,mBAEAI,GAEAH,KAOAE,EAAA,SAAA9nE,GAEA,QAAA8nE,GAAAj0D,GACA,GAAAlQ,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAGA,OAFA6E,GAAA22C,OAAA,GAAA7iC,GAAAS,QACArE,EAAAzB,KAAAzO,EAAA22C,QACA32C,EAkCA,MAvCA6P,GAAAO,UAAA+zD,EAAA9nE,GAOA8nE,EAAAlpE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAkpE,cAEAF,EAAAlpE,UAAAy2C,YAAA,SAAArjC,EAAAi3B,GACAnqC,KAAAisC,OAAA/4B,IAEA81D,EAAAlpE,UAAA8pC,eAAA,SAAAO,GACAnqC,KAAAub,aAEAytD,EAAAlpE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAw7C,OAAAloC,KAAA9f,IAEAw1E,EAAAlpE,UAAAmsC,OAAA,SAAA/3B,GACAlU,KAAAw7C,OAAAtoC,MAAAgB,GACAlU,KAAA+U,YAAA7B,MAAAgB,IAEA80D,EAAAlpE,UAAAyb,UAAA,WACAvb,KAAAw7C,OAAAjoC,WACAvT,KAAA+U,YAAAxB,YAEAy1D,EAAAlpE,UAAA2W,aAAA,WACAzW,KAAAw7C,OAAA,MAEAwtB,EAAAlpE,UAAAopE,WAAA,WACA,GAAAC,GAAAnpE,KAAAw7C,MACA2tB,IACAA,EAAA51D,UAEA,IAAAwB,GAAA/U,KAAA+U,YACAq0D,EAAAppE,KAAAw7C,OAAA,GAAA7iC,GAAAS,OACArE,GAAAzB,KAAA81D,IAEAJ,GACC3/B,EAAAiB,kBhTix4BK,SAAUn3C,EAAQC,EAASC,GAEjC,YiTx04BA,SAAAk9D,GAAA8Y,EAAAC,GAEA,WADA,KAAAA,IAAsCA,EAAA,GACtCtpE,KAAAwU,KAAA,GAAA+0D,GAAAF,EAAAC,IAtDAh2E,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAslB,EAAAtlB,EAAA,EAqDAD,GAAAm9D,aACA,IAAAgZ,GAAA,WACA,QAAAA,GAAAF,EAAAC,GACAtpE,KAAAqpE,aACArpE,KAAAspE,mBAKA,MAHAC,GAAAzpE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAi+D,GAAA50D,EAAA5U,KAAAqpE,WAAArpE,KAAAspE,oBAEAC,KAOAC,EAAA,SAAAtoE,GAEA,QAAAsoE,GAAAz0D,EAAAs0D,EAAAC,GACA,GAAAzkE,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAOA,OANA6E,GAAAkQ,cACAlQ,EAAAwkE,aACAxkE,EAAAykE,mBACAzkE,EAAA4kE,SAAA,GAAA9wD,GAAAS,SACAvU,EAAAmQ,MAAA,EACAD,EAAAzB,KAAAzO,EAAA4kE,QAAA,IACA5kE,EA2CA,MApDA6P,GAAAO,UAAAu0D,EAAAtoE,GAWAsoE,EAAA1pE,UAAAoV,MAAA,SAAA1hB,GAMA,OALA81E,GAAAtpE,KAAAspE,iBAAA,EAAAtpE,KAAAspE,iBAAAtpE,KAAAqpE,WACAt0D,EAAA/U,KAAA+U,YACAs0D,EAAArpE,KAAAqpE,WACAI,EAAAzpE,KAAAypE,QACA9uD,EAAA8uD,EAAAz1E,OACAM,EAAA,EAAuBA,EAAAqmB,IAAA3a,KAAA4V,OAAyBthB,IAChDm1E,EAAAn1E,GAAAgf,KAAA9f,EAEA,IAAAuC,GAAAiK,KAAAgV,MAAAq0D,EAAA,CAIA,IAHAtzE,GAAA,GAAAA,EAAAuzE,GAAA,IAAAtpE,KAAA4V,QACA6zD,EAAAzyD,QAAAzD,aAEAvT,KAAAgV,MAAAs0D,GAAA,IAAAtpE,KAAA4V,OAAA,CACA,GAAAy6C,GAAA,GAAA13C,GAAAS,OACAqwD,GAAAvkE,KAAAmrD,GACAt7C,EAAAzB,KAAA+8C,KAGAmZ,EAAA1pE,UAAAmsC,OAAA,SAAA/3B,GACA,GAAAu1D,GAAAzpE,KAAAypE,OACA,IAAAA,EACA,KAAAA,EAAAz1E,OAAA,IAAAgM,KAAA4V,QACA6zD,EAAAzyD,QAAA9D,MAAAgB,EAGAlU,MAAA+U,YAAA7B,MAAAgB,IAEAs1D,EAAA1pE,UAAAyb,UAAA,WACA,GAAAkuD,GAAAzpE,KAAAypE,OACA,IAAAA,EACA,KAAAA,EAAAz1E,OAAA,IAAAgM,KAAA4V,QACA6zD,EAAAzyD,QAAAzD,UAGAvT,MAAA+U,YAAAxB,YAEAi2D,EAAA1pE,UAAA2W,aAAA,WACAzW,KAAAgV,MAAA,EACAhV,KAAAypE,QAAA,MAEAD,GACC70D,EAAAS,ajTm44BK,SAAUjiB,EAAQC,EAASC,GAEjC,YkT5/4BA,SAAAsmB,GAAA+vD,GACA,GAAAn0D,GAAA6iC,EAAAzkD,MACAg2E,EAAA,KACAC,EAAAhwD,OAAAC,iBAgBA,OAfA2wB,GAAAC,YAAArpC,UAAA,MACAmU,EAAAnU,UAAA,IAEAopC,EAAAC,YAAArpC,UAAA,IACAmU,EAAAnU,UAAA,GAEA8zD,EAAAx5C,UAAAta,UAAA,MACAwoE,EAAAxoE,UAAA,IAEAopC,EAAAC,YAAArpC,UAAA,IACAmU,EAAAnU,UAAA,GAEA8zD,EAAAx5C,UAAAta,UAAA,MACAuoE,EAAAvoE,UAAA,IAEApB,KAAAwU,KAAA,GAAAq1D,GAAAH,EAAAC,EAAAC,EAAAr0D,IA2GA,QAAAu0D,GAAAp0D,GACA,GAAAd,GAAAc,EAAAd,WAAA80D,EAAAh0D,EAAAg0D,eAAAluB,EAAA9lC,EAAA8lC,MACAA,IACA5mC,EAAAm1D,YAAAvuB,GAEA9lC,EAAA8lC,OAAA5mC,EAAAs0D,aACAlpE,KAAAyV,SAAAC,EAAAg0D,GAEA,QAAAM,GAAAt0D,GACA,GAAAg0D,GAAAh0D,EAAAg0D,eAAA90D,EAAAc,EAAAd,WAAAW,EAAAG,EAAAH,UAAAo0D,EAAAj0D,EAAAi0D,uBACAnuB,EAAA5mC,EAAAs0D,aACAnyD,EAAA/W,KACAyhC,GAAmB1qB,SAAAsD,aAAA,MACnB4vD,GAAyBr1D,aAAA4mC,SAAA/Z,UACzBA,GAAApnB,aAAA9E,EAAAE,SAAAy0D,EAAAR,EAAAO,GACAlzD,EAAA/R,IAAAy8B,EAAApnB,cACAtD,EAAAtB,SAAAC,EAAAi0D,GAEA,QAAAO,GAAAx0D,GACA,GAAAd,GAAAc,EAAAd,WAAA4mC,EAAA9lC,EAAA8lC,OAAA/Z,EAAA/rB,EAAA+rB,OACAA,MAAA1qB,QAAA0qB,EAAApnB,cACAonB,EAAA1qB,OAAAhc,OAAA0mC,EAAApnB,cAEAzF,EAAAm1D,YAAAvuB,GA5JAloD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAslB,EAAAtlB,EAAA,GACA+kD,EAAA/kD,EAAA,IACAshB,EAAAthB,EAAA,GACA6hE,EAAA7hE,EAAA,IACAm3C,EAAAn3C,EAAA,GAsBAD,GAAAumB,YACA,IAAAkwD,GAAA,WACA,QAAAA,GAAAH,EAAAC,EAAAC,EAAAr0D,GACAvV,KAAA0pE,iBACA1pE,KAAA2pE,yBACA3pE,KAAA4pE,gBACA5pE,KAAAuV,YAKA,MAHAs0D,GAAA/pE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAA4+D,GAAAv1D,EAAA5U,KAAA0pE,eAAA1pE,KAAA2pE,uBAAA3pE,KAAA4pE,cAAA5pE,KAAAuV,aAEAs0D,KAEAO,EAAA,SAAAlpE,GAEA,QAAAkpE,KACA,GAAAvlE,GAAA,OAAA3D,KAAAC,MAAAnB,KAAAoB,YAAApB,IAEA,OADA6E,GAAAwlE,sBAAA,EACAxlE,EAaA,MAjBA6P,GAAAO,UAAAm1D,EAAAlpE,GAMAkpE,EAAAtqE,UAAAwT,KAAA,SAAA9f,GACAwM,KAAAqqE,wBACAnpE,EAAApB,UAAAwT,KAAAvQ,KAAA/C,KAAAxM,IAEAF,OAAAC,eAAA62E,EAAAtqE,UAAA,wBACAC,IAAA,WACA,MAAAC,MAAAqqE,uBAEApqE,YAAA,EACAC,cAAA,IAEAkqE,GACCzxD,EAAAS,SAMD+wD,EAAA,SAAAjpE,GAEA,QAAAipE,GAAAp1D,EAAA20D,EAAAC,EAAAC,EAAAr0D,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IACA6E,GAAAkQ,cACAlQ,EAAA6kE,iBACA7kE,EAAA8kE,yBACA9kE,EAAA+kE,gBACA/kE,EAAA0Q,YACA1Q,EAAA4kE,UACA,IAAAjuB,GAAA32C,EAAAqkE,YACA,WAAAS,MAAA,GACA,GAAApO,IAA8B3mD,WAAA/P,EAAA22C,SAAA/Z,QAAA,MAC9B+5B,GAAiCkO,iBAAAC,yBAAA/0D,WAAA/P,EAAA0Q,YACjC1Q,GAAAG,IAAAuQ,EAAAE,SAAAy0D,EAAAR,EAAAnO,IACA12D,EAAAG,IAAAuQ,EAAAE,SAAAu0D,EAAAL,EAAAnO,QAEA,CACA,GAAAF,IAAqC1mD,WAAA/P,EAAA22C,SAAAkuB,iBACrC7kE,GAAAG,IAAAuQ,EAAAE,SAAAq0D,EAAAJ,EAAApO,IAEA,MAAAz2D,GA4CA,MAhEA6P,GAAAO,UAAAk1D,EAAAjpE,GAsBAipE,EAAArqE,UAAAoV,MAAA,SAAA1hB,GAGA,OAFAi2E,GAAAzpE,KAAAypE,QACA9uD,EAAA8uD,EAAAz1E,OACAM,EAAA,EAAuBA,EAAAqmB,EAASrmB,IAAA,CAChC,GAAA+7D,GAAAoZ,EAAAn1E,EACA+7D,GAAAz6C,SACAy6C,EAAA/8C,KAAA9f,GACA68D,EAAAia,sBAAAtqE,KAAA4pE,eACA5pE,KAAA+pE,YAAA1Z,MAKA8Z,EAAArqE,UAAAmsC,OAAA,SAAA/3B,GAEA,IADA,GAAAu1D,GAAAzpE,KAAAypE,QACAA,EAAAz1E,OAAA,GACAy1E,EAAAzyD,QAAA9D,MAAAgB,EAEAlU,MAAA+U,YAAA7B,MAAAgB,IAEAi2D,EAAArqE,UAAAyb,UAAA,WAEA,IADA,GAAAkuD,GAAAzpE,KAAAypE,QACAA,EAAAz1E,OAAA,IACA,GAAAu2E,GAAAd,EAAAzyD,OACAuzD,GAAA30D,QACA20D,EAAAh3D,WAGAvT,KAAA+U,YAAAxB,YAEA42D,EAAArqE,UAAAopE,WAAA,WACA,GAAA1tB,GAAA,GAAA4uB,EAIA,OAHApqE,MAAAypE,QAAAvkE,KAAAs2C,GACAx7C,KAAA+U,YACAzB,KAAAkoC,GACAA,GAEA2uB,EAAArqE,UAAAiqE,YAAA,SAAAvuB,GACAA,EAAAjoC,UACA,IAAAk2D,GAAAzpE,KAAAypE,OACAA,GAAAruE,OAAAquE,EAAAtuE,QAAAqgD,GAAA,IAEA2uB,GACCx1D,EAAAS,alTmi5BK,SAAUjiB,EAAQC,EAASC,GAEjC,YmTxn5BA,SAAAq9D,GAAAmL,EAAAC,GACA,MAAA97D,MAAAwU,KAAA,GAAAg2D,GAAA3O,EAAAC,IAlDAxoE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAslB,EAAAtlB,EAAA,GACAulB,EAAAvlB,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EA6CAD,GAAAs9D,cACA,IAAA8Z,GAAA,WACA,QAAAA,GAAA3O,EAAAC,GACA97D,KAAA67D,WACA77D,KAAA87D,kBAKA,MAHA0O,GAAA1qE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAk/D,GAAA71D,EAAA5U,KAAA67D,SAAA77D,KAAA87D,mBAEA0O,KAOAC,EAAA,SAAAvpE,GAEA,QAAAupE,GAAA11D,EAAA8mD,EAAAC,GACA,GAAAj3D,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAKA,OAJA6E,GAAAg3D,WACAh3D,EAAAi3D,kBACAj3D,EAAAkqB,YACAlqB,EAAAG,IAAAH,EAAA6lE,iBAAAphC,EAAAK,kBAAA9kC,EAAAg3D,MACAh3D,EAkGA,MAzGA6P,GAAAO,UAAAw1D,EAAAvpE,GASAupE,EAAA3qE,UAAAoV,MAAA,SAAA1hB,GACA,GAAAu7B,GAAA/uB,KAAA+uB,QACA,IAAAA,EAEA,OADApU,GAAAoU,EAAA/6B,OACAM,EAAA,EAA2BA,EAAAqmB,EAASrmB,IACpCy6B,EAAAz6B,GAAAknD,OAAAloC,KAAA9f,IAIAi3E,EAAA3qE,UAAAmsC,OAAA,SAAA/3B,GACA,GAAA6a,GAAA/uB,KAAA+uB,QAEA,IADA/uB,KAAA+uB,SAAA,KACAA,EAGA,IAFA,GAAApU,GAAAoU,EAAA/6B,OACAkH,GAAA,IACAA,EAAAyf,GAAA,CACA,GAAA+gD,GAAA3sC,EAAA7zB,EACAwgE,GAAAlgB,OAAAtoC,MAAAgB,GACAwnD,EAAArhD,aAAA5O,cAGAvK,EAAApB,UAAAmsC,OAAAlpC,KAAA/C,KAAAkU,IAEAu2D,EAAA3qE,UAAAyb,UAAA,WACA,GAAAwT,GAAA/uB,KAAA+uB,QAEA,IADA/uB,KAAA+uB,SAAA,KACAA,EAGA,IAFA,GAAApU,GAAAoU,EAAA/6B,OACAkH,GAAA,IACAA,EAAAyf,GAAA,CACA,GAAAihD,GAAA7sC,EAAA7zB,EACA0gE,GAAApgB,OAAAjoC,WACAqoD,EAAAvhD,aAAA5O,cAGAvK,EAAApB,UAAAyb,UAAAxY,KAAA/C,OAEAyqE,EAAA3qE,UAAA2W,aAAA,WACA,GAAAsY,GAAA/uB,KAAA+uB,QAEA,IADA/uB,KAAA+uB,SAAA,KACAA,EAGA,IAFA,GAAApU,GAAAoU,EAAA/6B,OACAkH,GAAA,IACAA,EAAAyf,GAAA,CACA,GAAAgwD,GAAA57C,EAAA7zB,EACAyvE,GAAAnvB,OAAA/vC,cACAk/D,EAAAtwD,aAAA5O,gBAIAg/D,EAAA3qE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAJ,IAAA/pC,KAAA67D,SAAA,CACA,GAAAC,GAAA97D,KAAA87D,gBACAjC,EAAAlpB,EAAAoB,SAAA+pB,GAAA9xB,EACA,IAAA6vB,IAAAjpB,EAAAoB,YACA,MAAAhyC,MAAAkT,MAAA09B,EAAAoB,YAAAx7B,EAGA,IAAA65C,GAAA,GAAA13C,GAAAS,QACAiB,EAAA,GAAAzB,GAAAM,aACA0xD,GAAiCpvB,OAAA6U,EAAAh2C,eACjCra,MAAA+uB,SAAA7pB,KAAA0lE,EACA,IAAA/X,GAAAvpB,EAAAK,kBAAA3pC,KAAA65D,EAAA+Q,EACA/X,GAAAj9C,OACA5V,KAAA+pE,YAAA/pE,KAAA+uB,SAAA/6B,OAAA,IAGA6+D,EAAApxB,QAAAmpC,EACAvwD,EAAArV,IAAA6tD,IAEA7yD,KAAA+U,YAAAzB,KAAA+8C,OAIArwD,MAAA+pE,YAAA/pE,KAAA+uB,SAAA5zB,QAAA4uC,KAGA0gC,EAAA3qE,UAAAy2C,YAAA,SAAAriC,GACAlU,KAAAkT,MAAAgB,IAEAu2D,EAAA3qE,UAAA8pC,eAAA,SAAAo9B,GACAA,IAAAhnE,KAAA0qE,kBACA1qE,KAAA+pE,YAAA/pE,KAAA+uB,SAAA5zB,QAAA6rE,EAAAvlC,WAGAgpC,EAAA3qE,UAAAiqE,YAAA,SAAA7uE,GACA,QAAAA,EAAA,CAGA,GAAA6zB,GAAA/uB,KAAA+uB,SACA0S,EAAA1S,EAAA7zB,GACAsgD,EAAA/Z,EAAA+Z,OAAAnhC,EAAAonB,EAAApnB,YACA0U,GAAA3zB,OAAAF,EAAA,GACAsgD,EAAAjoC,WACA8G,EAAA5O,gBAEAg/D,GACCphC,EAAAiB,kBnTgr5BK,SAAUn3C,EAAQC,EAASC,GAEjC,YoTpz5BA,SAAAu9D,GAAAkL,GACA,MAAA97D,MAAAwU,KAAA,GAAAs0D,GAAAhN,IA9CAxoE,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAslB,EAAAtlB,EAAA,GACAs9C,EAAAt9C,EAAA,IACAu9C,EAAAv9C,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EA0CAD,GAAAw9D,YACA,IAAAkY,GAAA,WACA,QAAAA,GAAAhN,GACA97D,KAAA87D,kBAKA,MAHAgN,GAAAhpE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAy9D,GAAAp0D,EAAA5U,KAAA87D,mBAEAgN,KAOAE,EAAA,SAAA9nE,GAEA,QAAA8nE,GAAAj0D,EAAA+mD,GACA,GAAAj3D,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IAIA,OAHA6E,GAAAkQ,cACAlQ,EAAAi3D,kBACAj3D,EAAAqkE,aACArkE,EAmDA,MAzDA6P,GAAAO,UAAA+zD,EAAA9nE,GAQA8nE,EAAAlpE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAkpE,WAAA/+B,IAEA6+B,EAAAlpE,UAAAy2C,YAAA,SAAArjC,EAAAi3B,GACAnqC,KAAAisC,OAAA/4B,IAEA81D,EAAAlpE,UAAA8pC,eAAA,SAAAO,GACAnqC,KAAAkpE,WAAA/+B,IAEA6+B,EAAAlpE,UAAAoV,MAAA,SAAA1hB,GACAwM,KAAAw7C,OAAAloC,KAAA9f,IAEAw1E,EAAAlpE,UAAAmsC,OAAA,SAAA/3B,GACAlU,KAAAw7C,OAAAtoC,MAAAgB,GACAlU,KAAA+U,YAAA7B,MAAAgB,GACAlU,KAAA6qE,kCAEA7B,EAAAlpE,UAAAyb,UAAA,WACAvb,KAAAw7C,OAAAjoC,WACAvT,KAAA+U,YAAAxB,WACAvT,KAAA6qE,kCAEA7B,EAAAlpE,UAAA+qE,+BAAA,WACA7qE,KAAA8qE,qBACA9qE,KAAA8qE,oBAAAr/D,eAGAu9D,EAAAlpE,UAAAopE,WAAA,SAAA/+B,OACA,KAAAA,IAAkCA,EAAA,MAClCA,IACAnqC,KAAAjF,OAAAovC,GACAA,EAAA1+B,cAEA,IAAA09D,GAAAnpE,KAAAw7C,MACA2tB,IACAA,EAAA51D,UAEA,IAAAioC,GAAAx7C,KAAAw7C,OAAA,GAAA7iC,GAAAS,OACApZ,MAAA+U,YAAAzB,KAAAkoC,EACA,IAAAqe,GAAAlpB,EAAAoB,SAAA/xC,KAAA87D,kBACA,IAAAjC,IAAAjpB,EAAAoB,YAAA,CACA,GAAA99B,GAAA08B,EAAAoB,YAAAx7B,CACAxW,MAAA+U,YAAA7B,MAAAgB,GACAlU,KAAAw7C,OAAAtoC,MAAAgB,OAGAlU,MAAAgF,IAAAhF,KAAA8qE,oBAAAxhC,EAAAK,kBAAA3pC,KAAA65D,KAGAmP,GACC3/B,EAAAiB,kBpTw25BK,SAAUn3C,EAAQC,EAASC,GAEjC,YqTz75BA,SAAAy9D,KAEA,OADAjtD,MACA+C,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C/C,EAAA+C,GAAAxF,UAAAwF,EAEA,IAAAyN,EACA,mBAAAxQ,KAAA7P,OAAA,KACAqgB,EAAAxQ,EAAAgL,MAEA,IAAA/L,GAAAe,CACA,OAAA7D,MAAAwU,KAAA,GAAAu2D,GAAAjoE,EAAAuR,IArDA/gB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAg2C,EAAAh2C,EAAA,GACAi2C,EAAAj2C,EAAA,EAoDAD,GAAA09D,gBACA,IAAAia,GAAA,WACA,QAAAA,GAAAjoE,EAAAuR,GACArU,KAAA8C,cACA9C,KAAAqU,UAKA,MAHA02D,GAAAjrE,UAAAiD,KAAA,SAAA6R,EAAAC,GACA,MAAAA,GAAAtJ,UAAA,GAAAy/D,GAAAp2D,EAAA5U,KAAA8C,YAAA9C,KAAAqU,WAEA02D,KAOAC,EAAA,SAAA9pE,GAEA,QAAA8pE,GAAAj2D,EAAAjS,EAAAuR,GACA,GAAAxP,GAAA3D,EAAA6B,KAAA/C,KAAA+U,IAAA/U,IACA6E,GAAA/B,cACA+B,EAAAwP,UACAxP,EAAA6kC,YACA,IAAA/uB,GAAA7X,EAAA9O,MACA6Q,GAAA4kC,OAAA,GAAAlvC,OAAAogB,EACA,QAAArmB,GAAA,EAAuBA,EAAAqmB,EAASrmB,IAChCuQ,EAAA6kC,UAAAxkC,KAAA5Q,EAEA,QAAAA,GAAA,EAAuBA,EAAAqmB,EAASrmB,IAAA,CAChC,GAAA6tC,GAAAr/B,EAAAxO,EACAuQ,GAAAG,IAAAskC,EAAAK,kBAAA9kC,EAAAs9B,IAAA7tC,IAEA,MAAAuQ,GAqCA,MApDA6P,GAAAO,UAAA+1D,EAAA9pE,GAiBA8pE,EAAAlrE,UAAAgqC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAnqC,KAAAypC,OAAAQ,GAAAD,CACA,IAAAN,GAAA1pC,KAAA0pC,SACA,IAAAA,EAAA11C,OAAA,GACA,GAAAi3E,GAAAvhC,EAAAvuC,QAAA8uC,IACA,IAAAghC,GACAvhC,EAAAtuC,OAAA6vE,EAAA,KAIAD,EAAAlrE,UAAA8pC,eAAA,aAGAohC,EAAAlrE,UAAAoV,MAAA,SAAA1hB,GACA,OAAAwM,KAAA0pC,UAAA11C,OAAA,CACA,GAAA6P,IAAArQ,GAAAqD,OAAAmJ,KAAAypC,OACAzpC,MAAAqU,QACArU,KAAAqqC,YAAAxmC,GAGA7D,KAAA+U,YAAAzB,KAAAzP,KAIAmnE,EAAAlrE,UAAAuqC,YAAA,SAAAxmC,GACA,GAAAsR,EACA,KACAA,EAAAnV,KAAAqU,QAAAlT,MAAAnB,KAAA6D,GAEA,MAAAqQ,GAEA,WADAlU,MAAA+U,YAAA7B,MAAAgB,GAGAlU,KAAA+U,YAAAzB,KAAA6B,IAEA61D,GACC3hC,EAAAiB,kBrT2+5BK,SAAUn3C,EAAQC,EAASC,GAEjC,YsTlm6BA,SAAA29D,GAAA38C,GACA,MAAArU,MAAAwU,KAAA,GAAAgyC,GAAApa,YAAA/3B,IATA/gB,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAgzD,GAAAnzD,EAAA,GAUAD,GAAA49D,UtTin6BM,SAAU79D,EAAQC,EAASC,GAEjC,YuT9n6BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAulB,EAAAvlB,EAAA,GAeAsjB,EAAA,SAAAzV,GAEA,QAAAyV,GAAApB,EAAAC,GACA,MAAAtU,GAAA6B,KAAA/C,YAgBA,MAlBA0U,GAAAO,UAAA0B,EAAAzV,GAcAyV,EAAA7W,UAAA2V,SAAA,SAAAC,EAAAC,GAEA,WADA,KAAAA,IAA+BA,EAAA,GAC/B3V,MAEA2W,GACCiC,EAAAM,aACD9lB,GAAAujB,UvTqo6BM,SAAUxjB,EAAQC,EAASC,GAEjC,YwT7q6BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAI,EAAAJ,EAAA,IACA63E,EAAA73E,EAAA,KAMA83E,EAAA,SAAAjqE,GAEA,QAAAiqE,GAAA51D,EAAAC,GACA,GAAA3Q,GAAA3D,EAAA6B,KAAA/C,KAAAuV,EAAAC,IAAAxV,IAGA,OAFA6E,GAAA0Q,YACA1Q,EAAA2Q,OACA3Q,EAiCA,MAtCA6P,GAAAO,UAAAk2D,EAAAjqE,GAOAiqE,EAAArrE,UAAAgW,eAAA,SAAAP,EAAApf,EAAAwf,GAGA,WAFA,KAAAA,IAA+BA,EAAA,GAE/B,OAAAA,KAAA,EACAzU,EAAApB,UAAAgW,eAAA/S,KAAA/C,KAAAuV,EAAApf,EAAAwf,IAGAJ,EAAAmB,QAAAxR,KAAAlF,MAIAuV,EAAAuB,YAAAvB,EAAAuB,UAAAo0D,EAAAE,eAAAC,sBAAA91D,EAAAU,MAAAC,KAAAX,EAAA,UAEA41D,EAAArrE,UAAA+V,eAAA,SAAAN,EAAApf,EAAAwf,GAKA,OAJA,KAAAA,IAA+BA,EAAA,GAI/B,OAAAA,KAAA,UAAAA,GAAA3V,KAAA2V,MAAA,EACA,MAAAzU,GAAApB,UAAA+V,eAAA9S,KAAA/C,KAAAuV,EAAApf,EAAAwf,EAKA,KAAAJ,EAAAmB,QAAA1iB,SACAk3E,EAAAE,eAAAE,qBAAAn1E,GACAof,EAAAuB,cAAA7c,KAKAkxE,GACC13E,EAAAI,YACDT,GAAA+3E,wBxTor6BM,SAAUh4E,EAAQC,EAASC,GAEjC,YyTxu6BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAK,EAAAL,EAAA,IACAk4E,EAAA,SAAArqE,GAEA,QAAAqqE,KACA,cAAArqE,KAAAC,MAAAnB,KAAAoB,YAAApB,KAuBA,MAzBA0U,GAAAO,UAAAs2D,EAAArqE,GAIAqqE,EAAAzrE,UAAAmW,MAAA,SAAAc,GACA/W,KAAA6W,QAAA,EACA7W,KAAA8W,cAAA7c,EACA,IACAiZ,GADAwD,EAAA1W,KAAA0W,QAEAxb,GAAA,EACA8Z,EAAA0B,EAAA1iB,MACA+iB,MAAAL,EAAAM,OACA,IACA,GAAA9D,EAAA6D,EAAAX,QAAAW,EAAArB,MAAAqB,EAAApB,OACA,cAESza,EAAA8Z,IAAA+B,EAAAL,EAAAM,SAET,IADAhX,KAAA6W,QAAA,EACA3D,EAAA,CACA,OAAAhY,EAAA8Z,IAAA+B,EAAAL,EAAAM,UACAD,EAAAtL,aAEA,MAAAyH,KAGAq4D,GACC73E,EAAAE,eACDR,GAAAm4E,2BzT+u6BM,SAAUp4E,EAAQC,EAASC,GAEjC,Y0Thx6BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAm4E,EAAAn4E,EAAA,KACAI,EAAAJ,EAAA,IAMAqmD,EAAA,SAAAx4C,GAEA,QAAAw4C,GAAAnkC,EAAAC,GACA,GAAA3Q,GAAA3D,EAAA6B,KAAA/C,KAAAuV,EAAAC,IAAAxV,IAGA,OAFA6E,GAAA0Q,YACA1Q,EAAA2Q,OACA3Q,EAiCA,MAtCA6P,GAAAO,UAAAykC,EAAAx4C,GAOAw4C,EAAA55C,UAAAgW,eAAA,SAAAP,EAAApf,EAAAwf,GAGA,WAFA,KAAAA,IAA+BA,EAAA,GAE/B,OAAAA,KAAA,EACAzU,EAAApB,UAAAgW,eAAA/S,KAAA/C,KAAAuV,EAAApf,EAAAwf,IAGAJ,EAAAmB,QAAAxR,KAAAlF,MAIAuV,EAAAuB,YAAAvB,EAAAuB,UAAA00D,EAAAC,UAAAtvB,aAAA5mC,EAAAU,MAAAC,KAAAX,EAAA,UAEAmkC,EAAA55C,UAAA+V,eAAA,SAAAN,EAAApf,EAAAwf,GAKA,OAJA,KAAAA,IAA+BA,EAAA,GAI/B,OAAAA,KAAA,UAAAA,GAAA3V,KAAA2V,MAAA,EACA,MAAAzU,GAAApB,UAAA+V,eAAA9S,KAAA/C,KAAAuV,EAAApf,EAAAwf,EAKA,KAAAJ,EAAAmB,QAAA1iB,SACAw3E,EAAAC,UAAArvB,eAAAjmD,GACAof,EAAAuB,cAAA7c,KAKAy/C,GACCjmD,EAAAI,YACDT,GAAAsmD,c1Tux6BM,SAAUvmD,EAAQC,EAASC,GAEjC,Y2T306BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAK,EAAAL,EAAA,IACAomD,EAAA,SAAAv4C,GAEA,QAAAu4C,KACA,cAAAv4C,KAAAC,MAAAnB,KAAAoB,YAAApB,KAuBA,MAzBA0U,GAAAO,UAAAwkC,EAAAv4C,GAIAu4C,EAAA35C,UAAAmW,MAAA,SAAAc,GACA/W,KAAA6W,QAAA,EACA7W,KAAA8W,cAAA7c,EACA,IACAiZ,GADAwD,EAAA1W,KAAA0W,QAEAxb,GAAA,EACA8Z,EAAA0B,EAAA1iB,MACA+iB,MAAAL,EAAAM,OACA,IACA,GAAA9D,EAAA6D,EAAAX,QAAAW,EAAArB,MAAAqB,EAAApB,OACA,cAESza,EAAA8Z,IAAA+B,EAAAL,EAAAM,SAET,IADAhX,KAAA6W,QAAA,EACA3D,EAAA,CACA,OAAAhY,EAAA8Z,IAAA+B,EAAAL,EAAAM,UACAD,EAAAtL,aAEA,MAAAyH,KAGAumC,GACC/lD,EAAAE,eACDR,GAAAqmD,iB3Tk16BM,SAAUtmD,EAAQC,EAASC,GAEjC,Y4Tn36BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAI,EAAAJ,EAAA,IAMAymD,EAAA,SAAA54C,GAEA,QAAA44C,GAAAvkC,EAAAC,GACA,GAAA3Q,GAAA3D,EAAA6B,KAAA/C,KAAAuV,EAAAC,IAAAxV,IAGA,OAFA6E,GAAA0Q,YACA1Q,EAAA2Q,OACA3Q,EA4BA,MAjCA6P,GAAAO,UAAA6kC,EAAA54C,GAOA44C,EAAAh6C,UAAA2V,SAAA,SAAAC,EAAAC,GAEA,WADA,KAAAA,IAA+BA,EAAA,GAC/BA,EAAA,EACAzU,EAAApB,UAAA2V,SAAA1S,KAAA/C,KAAA0V,EAAAC,IAEA3V,KAAA2V,QACA3V,KAAA0V,QACA1V,KAAAuV,UAAAU,MAAAjW,MACAA,OAEA85C,EAAAh6C,UAAAsW,QAAA,SAAAV,EAAAC,GACA,MAAAA,GAAA,GAAA3V,KAAA4V,OACA1U,EAAApB,UAAAsW,QAAArT,KAAA/C,KAAA0V,EAAAC,GACA3V,KAAAqW,SAAAX,EAAAC,IAEAmkC,EAAAh6C,UAAAgW,eAAA,SAAAP,EAAApf,EAAAwf,GAKA,WAJA,KAAAA,IAA+BA,EAAA,GAI/B,OAAAA,KAAA,UAAAA,GAAA3V,KAAA2V,MAAA,EACAzU,EAAApB,UAAAgW,eAAA/S,KAAA/C,KAAAuV,EAAApf,EAAAwf,GAGAJ,EAAAU,MAAAjW,OAEA85C,GACCrmD,EAAAI,YACDT,GAAA0mD,e5T036BM,SAAU3mD,EAAQC,EAASC,GAEjC,Y6Tx66BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAK,EAAAL,EAAA,IACAwmD,EAAA,SAAA34C,GAEA,QAAA24C,KACA,cAAA34C,KAAAC,MAAAnB,KAAAoB,YAAApB,KAEA,MAJA0U,GAAAO,UAAA4kC,EAAA34C,GAIA24C,GACCnmD,EAAAE,eACDR,GAAAymD,kB7T+66BM,SAAU1mD,EAAQC,EAASC,GAEjC,Y8T376BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAk4E,GAAAr4E,EAAA,KACAs4E,EAAAt4E,EAAA,IA+BAD,GAAAswD,eAAA,GAAAioB,GAAAJ,wBAAAG,EAAAP,uB9Tk86BM,SAAUh4E,EAAQC,EAASC,GAEjC,Y+Tr+6BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACAulB,EAAAvlB,EAAA,GACAu4E,EAAAv4E,EAAA,KACAw4E,EAAAx4E,EAAA,KAMAy4E,EAAA,SAAA5qE,GAEA,QAAA4qE,GAAAC,EAAAx2D,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,KAAA,SAAA4U,GACA,GAAAutB,GAAAniC,KACA9E,EAAAinC,EAAAiY,oBAKA,OAJAxlC,GAAA5P,IAAA,GAAA4T,GAAAM,aAAA,WACAipB,EAAAkY,qBAAAn/C,MAEAinC,EAAA6pC,iBAAAp3D,GACAA,KACS5U,IAIT,OAHA6E,GAAAknE,WACAlnE,EAAAsyC,iBACAtyC,EAAA0Q,YACA1Q,EAYA,MA1BA6P,GAAAO,UAAA62D,EAAA5qE,GAgBA4qE,EAAAhsE,UAAAksE,iBAAA,SAAAp3D,GAEA,OADAq3D,GAAAjsE,KAAA+rE,SAAA/3E,OACAM,EAAA,EAAuBA,EAAA23E,EAAoB33E,IAAA,CAC3C,GAAAsE,GAAAoH,KAAA+rE,SAAAz3E,EACAsgB,GAAA5P,IAAAhF,KAAAuV,UAAAE,SAAA,SAAA5O,GACA,GAAAjO,GAAAiO,EAAAjO,QAAAgc,EAAA/N,EAAA+N,UACAhc,GAAAkzC,aAAA14B,QAAAwB,IACahc,EAAAugD,OAAkBvgD,UAAAgc,kBAG/Bk3D,GACC/4D,EAAAY,WACDvgB,GAAA04E,iBACAD,EAAApxB,YAAAqxB,GAAAF,EAAAzxB,wB/T4+6BM,SAAUhnD,EAAQC,EAASC,GAEjC,YgUvh7BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACAslB,EAAAtlB,EAAA,GACAulB,EAAAvlB,EAAA,GACAu4E,EAAAv4E,EAAA,KACAw4E,EAAAx4E,EAAA,KAMA64E,EAAA,SAAAhrE,GAEA,QAAAgrE,GAAAH,EAAAx2D,GACA,GAAA1Q,GAAA3D,EAAA6B,KAAA/C,WAIA,OAHA6E,GAAAknE,WACAlnE,EAAAsyC,iBACAtyC,EAAA0Q,YACA1Q,EAsBA,MA5BA6P,GAAAO,UAAAi3D,EAAAhrE,GAQAgrE,EAAApsE,UAAAkZ,WAAA,SAAApE,GACA,GAAA08C,GAAAtxD,KACA9E,EAAAo2D,EAAAlX,oBAIA,OAHAxlC,GAAA5P,IAAA,GAAA4T,GAAAM,aAAA,WACAo4C,EAAAjX,qBAAAn/C,MAEAgG,EAAApB,UAAAkZ,WAAAjW,KAAA/C,KAAA4U,IAEAs3D,EAAApsE,UAAAqsE,MAAA,WAIA,OAHA7a,GAAAtxD,KACAisE,EAAA3a,EAAAya,SAAA/3E,OAEAM,EAAA,EAAuBA,EAAA23E,EAAoB33E,KAC3C,WACA,GAAAsE,GAAA04D,EAAAya,SAAAz3E,EAEAg9D,GAAA/7C,UAAAE,SAAA,WAAwD7c,EAAAkzC,aAAA14B,QAAAk+C,IAAyC14D,EAAAugD,WAIjG+yB,GACCvzD,EAAAS,QACDhmB,GAAA84E,gBACAL,EAAApxB,YAAAyxB,GAAAN,EAAAzxB,wBhU8h7BM,SAAUhnD,EAAQC,EAASC,GAEjC,YiU3k7BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAkhB,GAAArhB,EAAA,GACA0f,EAAA1f,EAAA,GACAs4C,EAAAt4C,EAAA,IACA+4E,EAAA/4E,EAAA,KACAg5E,EAAAh5E,EAAA,KACA6mD,EAAA7mD,EAAA,KACAgwD,EAAAhwD,EAAA,IACAi5E,EAAA,IACAlpB,EAAA,SAAAliD,GAEA,QAAAkiD,GAAAmpB,GACA,GAAA1nE,GAAA3D,EAAA6B,KAAA/C,KAAAqjD,EAAAnK,cAAAozB,IAAAtsE,IAKA,OAJA6E,GAAA0nE,kBACA1nE,EAAA2nE,kBACA3nE,EAAA4nE,mBACA5nE,EAAA6nE,cACA7nE,EAuMA,MA9MA6P,GAAAO,UAAAmuC,EAAAliD,GASAkiD,EAAAtjD,UAAA6sE,WAAA,SAAAC,GACA,GAAAzxE,GAAAyxE,EAAAzxE,QAAA,IACA,SAAAA,EACA,SAAA1G,OAAA,8DAEA,OAAA0G,GAAAioD,EAAAhK,iBAEAgK,EAAAtjD,UAAA+sE,qBAAA,SAAAD,EAAAnjC,EAAAv2B,GACA,QAAA05D,EAAAzxE,QAAA,KACA,SAAA1G,OAAA,sDAEA,SAAAm4E,EAAAzxE,QAAA,KACA,SAAA1G,OAAA,wDAEA,IAAAs3E,GAAA3oB,EAAA0pB,aAAAF,EAAAnjC,EAAAv2B,GACA65D,EAAA,GAAAX,GAAAN,eAAAC,EAAA/rE,KAEA,OADAA,MAAAysE,gBAAAvnE,KAAA6nE,GACAA,GAEA3pB,EAAAtjD,UAAAktE,oBAAA,SAAAJ,EAAAnjC,EAAAv2B,GACA,QAAA05D,EAAAzxE,QAAA,KACA,SAAA1G,OAAA,uDAEA,IAAAs3E,GAAA3oB,EAAA0pB,aAAAF,EAAAnjC,EAAAv2B,GACAo+C,EAAA,GAAA+a,GAAAH,cAAAH,EAAA/rE,KAEA,OADAA,MAAAwsE,eAAAtnE,KAAAosD,GACAA,GAEAlO,EAAAtjD,UAAAmtE,2BAAA,SAAA9qC,EAAA+qC,GACA,GAAAroE,GAAA7E,KACA+rE,IAQA,OAPA5pC,GAAA52B,UAAA,SAAA/X,GACAu4E,EAAA7mE,MAA2Bi0C,MAAAt0C,EAAAs0C,MAAA+zB,EAAAphC,aAAAH,EAAA34B,aAAAe,WAAAvgB,MAClB,SAAA0gB,GACT63D,EAAA7mE,MAA2Bi0C,MAAAt0C,EAAAs0C,MAAA+zB,EAAAphC,aAAAH,EAAA34B,aAAAiB,YAAAC,MAClB,WACT63D,EAAA7mE,MAA2Bi0C,MAAAt0C,EAAAs0C,MAAA+zB,EAAAphC,aAAAH,EAAA34B,aAAAmB,qBAE3B43D,GAEA3oB,EAAAtjD,UAAAqtE,iBAAA,SAAAhrC,EAAAirC,GACA,GAAAvoE,GAAA7E,SACA,KAAAotE,IAA+CA,EAAA,KAC/C,IAIA/yD,GAJA5Y,KACA4rE,GAAyB5rE,SAAA6rE,OAAA,GACzBC,EAAAnqB,EACAoqB,4BAAAJ,GAAAnzB,iBAoBA,OAlBAj6C,MAAAyV,SAAA,WACA4E,EAAA8nB,EAAA52B,UAAA,SAAAI,GACA,GAAAnY,GAAAmY,CAEAA,aAAAoH,GAAAY,aACAngB,EAAAqR,EAAAooE,2BAAAz5E,EAAAqR,EAAAs0C,QAEA13C,EAAAyD,MAA6Bi0C,MAAAt0C,EAAAs0C,MAAArN,aAAAH,EAAA34B,aAAAe,WAAAvgB,MAChB,SAAA0gB,GACbzS,EAAAyD,MAA6Bi0C,MAAAt0C,EAAAs0C,MAAArN,aAAAH,EAAA34B,aAAAiB,YAAAC,MAChB,WACbzS,EAAAyD,MAA6Bi0C,MAAAt0C,EAAAs0C,MAAArN,aAAAH,EAAA34B,aAAAmB,sBAEpB,GACTo5D,IAAA3zD,OAAAC,mBACA7Z,KAAAyV,SAAA,WAAuC,MAAA4E,GAAA5O,eAAqC8hE,GAE5EvtE,KAAA0sE,WAAAxnE,KAAAmoE,IAEAI,KAAA,SAAAb,EAAAnjC,EAAAlzB,GACA82D,EAAAC,OAAA,EACAD,EAAAK,SAAAtqB,EAAA0pB,aAAAF,EAAAnjC,EAAAlzB,GAAA,MAIA6sC,EAAAtjD,UAAA6tE,oBAAA,SAAAC,GACA,GAAAP,IAAyB5rE,OAAAmsE,EAAAN,OAAA,EAEzB,OADAttE,MAAA0sE,WAAAxnE,KAAAmoE,IAEAI,KAAA,SAAAb,GACA,GAAAiB,GAAA,gBAAAjB,QACAS,GAAAC,OAAA,EACAD,EAAAK,SAAAG,EAAAh5E,IAAA,SAAA+3E,GACA,MAAAxpB,GAAAoqB,4BAAAZ,QAKAxpB,EAAAtjD,UAAAmW,MAAA,WAEA,IADA,GAAAu2D,GAAAxsE,KAAAwsE,eACAA,EAAAx4E,OAAA,GACAw4E,EAAAx1D,QAAAm1D,OAEAjrE,GAAApB,UAAAmW,MAAAlT,KAAA/C,KAEA,KADA,GAAA8tE,GAAA9tE,KAAA0sE,WAAA7pE,OAAA,SAAArN,GAAsE,MAAAA,GAAA83E,QACtEQ,EAAA95E,OAAA,IACA,GAAA+5E,GAAAD,EAAA92D,OACAhX,MAAAusE,gBAAAwB,EAAAtsE,OAAAssE,EAAAL,YAGAtqB,EAAAoqB,4BAAA,SAAAZ,GACA,mBAAAA,GACA,UAAA1yB,GAAAH,gBAAAngC,OAAAC,kBAMA,QAJAc,GAAAiyD,EAAA54E,OACAg6E,GAAA,EACAC,EAAAr0D,OAAAC,kBACA0zD,EAAA3zD,OAAAC,kBACAvlB,EAAA,EAAuBA,EAAAqmB,EAASrmB,IAAA,CAChC,GAAA6kD,GAAA7kD,EAAA0L,KAAAo5C,gBACArjD,EAAA62E,EAAAt4E,EACA,QAAAyB,GACA,QACA,QACA,KACA,SACAi4E,EAAA70B,CACA,MACA,SACA60B,GAAA,CACA,MACA,SACA,GAAAC,IAAAr0D,OAAAC,kBACA,SAAAplB,OAAA,iGAGAw5E,GAAAD,GAAA,EAAAA,EAAA70B,CACA,MACA,SACA,GAAAo0B,IAAA3zD,OAAAC,kBACA,SAAAplB,OAAA,iGAGA84E,GAAAS,GAAA,EAAAA,EAAA70B,CACA,MACA,SACA,SAAA1kD,OAAA,0FACAsB,EAAA,OAGA,MAAAw3E,GAAA,EACA,GAAArzB,GAAAH,gBAAAk0B,GAGA,GAAA/zB,GAAAH,gBAAAk0B,EAAAV,IAGAnqB,EAAA0pB,aAAA,SAAAF,EAAAnjC,EAAAlzB,EAAA23D,GAEA,OADA,KAAAA,IAAqDA,GAAA,IACrD,IAAAtB,EAAAzxE,QAAA,KACA,SAAA1G,OAAA,yEAiBA,QAdAkmB,GAAAiyD,EAAA54E,OACAm6E,KACAC,EAAAxB,EAAAzxE,QAAA,KACAkzE,GAAA,IAAAD,EAAA,EAAAA,GAAApuE,KAAAo5C,gBACAhhC,EAAA,gBAAAqxB,GACA,SAAA99B,GAA0B,MAAAA,IAC1B,SAAAA,GAEA,MAAAuiE,IAAAzkC,EAAA99B,YAAAygE,GAAAN,eACAriC,EAAA99B,GAAAogE,SAEAtiC,EAAA99B,IAEAqiE,GAAA,EACA15E,EAAA,EAAuBA,EAAAqmB,EAASrmB,IAAA,CAChC,GAAA6kD,GAAA7kD,EAAA0L,KAAAo5C,gBAAAi1B,EACAviC,MAAA,GACA/1C,EAAA62E,EAAAt4E,EACA,QAAAyB,GACA,QACA,QACA,KACA,SACAi4E,EAAA70B,CACA,MACA,SACA60B,GAAA,CACA,MACA,SACAliC,EAAAH,EAAA34B,aAAAmB,gBACA,MACA,SACA,KACA,SACA23B,EAAAH,EAAA34B,aAAAiB,YAAAsC,GAAA,QACA,MACA,SACAu1B,EAAAH,EAAA34B,aAAAe,WAAAqE,EAAAriB,IAGA+1C,GACAqiC,EAAAjpE,MAAmCi0C,MAAA60B,GAAA,EAAAA,EAAA70B,EAAArN,iBAGnC,MAAAqiC,IAEA/qB,GACCC,EAAAtK,qBACD3lD,GAAAgwD,iBjUkl7BM,SAAUjwD,EAAQC,EAASC,GAEjC,YkU9y7BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA6hB,GAAAhiB,EAAA,IACAi7E,EAAA,WACA,QAAAA,GAAAv4D,GACAA,EAAAs1D,uBACArrE,KAAAsrE,qBAAAv1D,EAAAu1D,qBAAAp1D,KAAAH,GACA/V,KAAAqrE,sBAAAt1D,EAAAs1D,sBAAAn1D,KAAAH,IAEAA,EAAAw4D,0BACAvuE,KAAAsrE,qBAAAv1D,EAAAy4D,wBAAAt4D,KAAAH,GACA/V,KAAAqrE,sBAAAt1D,EAAAw4D,yBAAAr4D,KAAAH,IAEAA,EAAA04D,6BACAzuE,KAAAsrE,qBAAAv1D,EAAA24D,2BAAAx4D,KAAAH,GACA/V,KAAAqrE,sBAAAt1D,EAAA04D,4BAAAv4D,KAAAH,IAEAA,EAAA44D,yBACA3uE,KAAAsrE,qBAAAv1D,EAAA64D,uBAAA14D,KAAAH,GACA/V,KAAAqrE,sBAAAt1D,EAAA44D,wBAAAz4D,KAAAH,IAEAA,EAAA84D,wBACA7uE,KAAAsrE,qBAAAv1D,EAAA+4D,sBAAA54D,KAAAH,GACA/V,KAAAqrE,sBAAAt1D,EAAA84D,uBAAA34D,KAAAH,KAGA/V,KAAAsrE,qBAAAv1D,EAAA0lC,aAAAvlC,KAAAH,GACA/V,KAAAqrE,sBAAA,SAAAv/D,GAAwD,MAAAiK,GAAAymB,WAAA1wB,EAAA,UAGxD,MAAAwiE,KAEAl7E,GAAAk7E,kCACAl7E,EAAAg4E,eAAA,GAAAkD,GAAAj5D,EAAAU,OlUqz7BM,SAAU5iB,EAAQC,EAASC,GAEjC,YmUv17BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAAwtE,GAAA,WACA,QAAAA,KACAhhE,KAAAypC,UAwBA,MAtBAu3B,GAAAlhE,UAAAsH,OAAA,SAAA+W,GAEA,MADAne,MAAAypC,OAAAtrB,GAAA,MACA,GAEA6iD,EAAAlhE,UAAAwG,IAAA,SAAA6X,EAAA3qB,GAEA,MADAwM,MAAAypC,OAAAtrB,GAAA3qB,EACAwM,MAEAghE,EAAAlhE,UAAAC,IAAA,SAAAoe,GACA,MAAAne,MAAAypC,OAAAtrB,IAEA6iD,EAAAlhE,UAAA1H,QAAA,SAAA0T,EAAAwI,GACA,GAAAm1B,GAAAzpC,KAAAypC,MACA,QAAAtrB,KAAAsrB,GACAA,EAAApwC,eAAA8kB,IAAA,OAAAsrB,EAAAtrB,IACArS,EAAA/I,KAAAuR,EAAAm1B,EAAAtrB,OAIA6iD,EAAAlhE,UAAAo/D,MAAA,WACAl/D,KAAAypC,WAEAu3B,IAEA5tE,GAAA4tE,WnU817BM,SAAU7tE,EAAQC,EAASC,GAEjC,cAC4B,SAAS+oD,EAAgBD,GoU337BrD7oD,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA6hB,GAAAhiB,EAAA,IACA07E,EAAA,WACA,QAAAA,GAAAh5D,GAEA,GADA/V,KAAA+V,OACAA,EAAAomC,cAAA,kBAAApmC,GAAAomC,aACAn8C,KAAAm8C,aAAApmC,EAAAomC,aAAAjmC,KAAAH,GACA/V,KAAAo8C,eAAArmC,EAAAqmC,eAAAlmC,KAAAH,OAEA,CACA/V,KAAAgvE,WAAA,EACAhvE,KAAAivE,iBACAjvE,KAAAkvE,uBAAA,EAEAlvE,KAAAmvE,wBAEAnvE,KAAAm8C,aAAAn8C,KAAAovE,oCAEApvE,KAAAqvE,oBAEArvE,KAAAm8C,aAAAn8C,KAAAsvE,gCAEAtvE,KAAAuvE,uBAEAvvE,KAAAm8C,aAAAn8C,KAAAwvE,mCAEAxvE,KAAAyvE,yBAEAzvE,KAAAm8C,aAAAn8C,KAAA0vE,qCAIA1vE,KAAAm8C,aAAAn8C,KAAA2vE,8BAEA,IAAAtlD,GAAA,QAAA+xB,GAAAziB,SACAyiB,GAAAxV,SAAAqoC,cAAAt1C,GAEAtP,GAAAuc,SAAA5mC,KACAA,KAAAo8C,eAAA/xB,GAmKA,MAhKA0kD,GAAAjvE,UAAA8vE,SAAA,SAAA17E,GACA,MAAA8L,MAAA+V,KAAAziB,OAAAwM,UAAA2C,SAAAM,KAAA7O,IAEA66E,EAAAjvE,UAAAqvE,sBAAA,WACA,2BAAAnvE,KAAA4vE,SAAA5vE,KAAA+V,KAAAorC,UAEA4tB,EAAAjvE,UAAAyvE,qBAAA,WACA,MAAA16B,SAAA70C,KAAA+V,KAAA85D,iBAEAd,EAAAjvE,UAAA2vE,uBAAA,WACA,GAAAK,GAAA9vE,KAAA+V,KAAA+5D,QACA,OAAAj7B,SAAAi7B,GAAA,sBAAAA,GAAAC,cAAA,YAEAhB,EAAAjvE,UAAAuvE,kBAAA,WACA,GAAAt5D,GAAA/V,KAAA+V,IAGA,IAAAA,EAAAi6D,cAAAj6D,EAAAk6D,cAAA,CACA,GAAAC,IAAA,EACAC,EAAAp6D,EAAA6iD,SAMA,OALA7iD,GAAA6iD,UAAA,WACAsX,GAAA,GAEAn6D,EAAAi6D,YAAA,QACAj6D,EAAA6iD,UAAAuX,EACAD,EAEA,UAIAnB,EAAAjvE,UAAAswE,iBAAA,SAAA1e,GAEA,OADA7tD,MACA+C,EAAA,EAAwBA,EAAAxF,UAAApN,OAAuB4S,IAC/C/C,EAAA+C,EAAA,GAAAxF,UAAAwF,EAEA,IAAAlD,GAAA,QAAAyR,KACA,GAAAtO,GAAAsO,EAAAu8C,EAAA7qD,EAAA6qD,QAAA7tD,EAAAgD,EAAAhD,IACA,mBAAA6tD,GACAA,EAAAvwD,UAAAlH,GAAA4J,GAGA,GAAA03C,UAAA,GAAAmW,KAKA,OAFAhuD,GAAAguD,UACAhuD,EAAAG,OACAH,GAEAqrE,EAAAjvE,UAAAuwE,6BAAA,SAAAxsE,GAEA,MADA7D,MAAAivE,cAAAjvE,KAAAgvE,YAAAhvE,KAAAowE,iBAAAjvE,UAAAlH,GAAA4J,GACA7D,KAAAgvE,cAEAD,EAAAjvE,UAAAsvE,kCAAA,WACA,GAAA1rE,GAAA,QAAAy4C,KACA,GAAAvV,GAAAuV,EAAAvV,SACAjN,EAAAiN,EAAAypC,6BAAAjvE,UAEA,OADAwlC,GAAA7wB,KAAAorC,QAAAC,SAAAxa,EAAAwpC,iBAAAxpC,EAAA0pC,aAAA32C,IACAA,EAGA,OADAj2B,GAAAkjC,SAAA5mC,KACA0D,GAEAqrE,EAAAjvE,UAAAwvE,8BAAA,WAIA,GAAAv5D,GAAA/V,KAAA+V,KACAw6D,EAAA,gBAAAx6D,EAAAiF,KAAAw1D,SAAA,IACAC,EAAA,QAAAC,GAAA1wB,GACA,GAAApZ,GAAA8pC,EAAA9pC,QACAoZ,GAAAnrC,SAAAkB,GACA,gBAAAiqC,GAAA/nC,MACA,IAAA+nC,EAAA/nC,KAAA9c,QAAAo1E,IACA3pC,EAAA0pC,cAAAtwB,EAAA/nC,KAAA7hB,MAAAm6E,EAAAv8E,SAGAy8E,GAAA7pC,SAAA5mC,KACA+V,EAAAs9C,iBAAA,UAAAod,GAAA,EACA,IAAA/sE,GAAA,QAAAy4C,KACA,GAAAt1C,GAAAs1C,EAAAo0B,EAAA1pE,EAAA0pE,cAAA3pC,EAAA//B,EAAA+/B,SACAjN,EAAAiN,EAAAypC,6BAAAjvE,UAEA,OADAwlC,GAAA7wB,KAAAi6D,YAAAO,EAAA52C,EAAA,KACAA,EAIA,OAFAj2B,GAAAkjC,SAAA5mC,KACA0D,EAAA6sE,gBACA7sE,GAEAqrE,EAAAjvE,UAAAwwE,aAAA,SAAA32C,GAGA,GAAA35B,KAAAkvE,sBAGAlvE,KAAA+V,KAAAymB,WAAAx8B,KAAAowE,iBAAApwE,KAAAswE,aAAA32C,GAAA,OAEA,CACA,GAAAg3C,GAAA3wE,KAAAivE,cAAAt1C,EACA,IAAAg3C,EAAA,CACA3wE,KAAAkvE,uBAAA,CACA,KACAyB,IAEA,QACA3wE,KAAAo8C,eAAAziB,GACA35B,KAAAkvE,uBAAA,MAKAH,EAAAjvE,UAAA0vE,iCAAA,WACA,GAAA3qE,GAAA7E,KACA4wE,EAAA,GAAA5wE,MAAA+V,KAAA85D,cACAe,GAAAC,MAAAjY,UAAA,SAAA5Y,GACA,GAAArmB,GAAAqmB,EAAA/nC,IACApT,GAAAyrE,aAAA32C,GAEA,IAAAj2B,GAAA,QAAAy4C,KACA,GAAAt1C,GAAAs1C,EAAAy0B,EAAA/pE,EAAA+pE,QAAAhqC,EAAA//B,EAAA+/B,SACAjN,EAAAiN,EAAAypC,6BAAAjvE,UAEA,OADAwvE,GAAAE,MAAAd,YAAAr2C,GACAA,EAIA,OAFAj2B,GAAAktE,UACAltE,EAAAkjC,SAAA5mC,KACA0D,GAEAqrE,EAAAjvE,UAAA4vE,mCAAA,WACA,GAAAhsE,GAAA,QAAAy4C,KACA,GAAAvV,GAAAuV,EAAAvV,SACA7wB,EAAA6wB,EAAA7wB,KACAg7D,EAAAh7D,EAAA+5D,SACAkB,EAAAD,EAAAE,gBACAt3C,EAAAiN,EAAAypC,6BAAAjvE,WAGA8vE,EAAAH,EAAAhB,cAAA,SAQA,OAPAmB,GAAA79B,mBAAA,WACAzM,EAAA0pC,aAAA32C,GACAu3C,EAAA79B,mBAAA,KACA29B,EAAAG,YAAAD,GACAA,EAAA,MAEAF,EAAAI,YAAAF,GACAv3C,EAGA,OADAj2B,GAAAkjC,SAAA5mC,KACA0D,GAEAqrE,EAAAjvE,UAAA6vE,6BAAA,WACA,GAAAjsE,GAAA,QAAAy4C,KACA,GAAAvV,GAAAuV,EAAAvV,SACAjN,EAAAiN,EAAAypC,6BAAAjvE,UAEA,OADAwlC,GAAA7wB,KAAAymB,WAAAoK,EAAAwpC,iBAAAxpC,EAAA0pC,aAAA32C,GAAA,GACAA,EAGA,OADAj2B,GAAAkjC,SAAA5mC,KACA0D,GAEAqrE,IAEA37E,GAAA27E,sBACA37E,EAAAq4E,UAAA,GAAAsD,GAAA15D,EAAAU,QpUi47B6BhT,KAAK3P,EAASC,EAAoB,KAAK+oD,eAAgB/oD,EAAoB,KAAK8oD,eAIvG,SAAUhpD,EAAQC,EAASC,GAEjC,YqUtl8BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA6hB,GAAAhiB,EAAA,IACAg+E,EAAAh+E,EAAA,IACAD,GAAA+S,IAAAkP,EAAAU,KAAA5P,KAAA,WAA+C,MAAAkrE,GAAAC,gBrU6l8BzC,SAAUn+E,EAAQC,EAASC,GAEjC,YsUlm8BAC,QAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA89E,GAAA,WACA,QAAAA,KACAtxE,KAAAuxE,KAAA,EACAvxE,KAAAwxE,WACAxxE,KAAAyxE,SAsCA,MApCAH,GAAAxxE,UAAAC,IAAA,SAAAoe,GACA,GAAA7pB,GAAA0L,KAAAyxE,MAAAt2E,QAAAgjB,EACA,YAAA7pB,MAAA2F,GAAA+F,KAAAwxE,QAAAl9E,IAEAg9E,EAAAxxE,UAAAwG,IAAA,SAAA6X,EAAA3qB,GACA,GAAAc,GAAA0L,KAAAyxE,MAAAt2E,QAAAgjB,EASA,QARA,IAAA7pB,GACA0L,KAAAyxE,MAAAvsE,KAAAiZ,GACAne,KAAAwxE,QAAAtsE,KAAA1R,GACAwM,KAAAuxE,QAGAvxE,KAAAwxE,QAAAl9E,GAAAd,EAEAwM,MAEAsxE,EAAAxxE,UAAAsH,OAAA,SAAA+W,GACA,GAAA7pB,GAAA0L,KAAAyxE,MAAAt2E,QAAAgjB,EACA,YAAA7pB,IAGA0L,KAAAwxE,QAAAp2E,OAAA9G,EAAA,GACA0L,KAAAyxE,MAAAr2E,OAAA9G,EAAA,GACA0L,KAAAuxE,QACA,IAEAD,EAAAxxE,UAAAo/D,MAAA,WACAl/D,KAAAyxE,MAAAz9E,OAAA,EACAgM,KAAAwxE,QAAAx9E,OAAA,EACAgM,KAAAuxE,KAAA,GAEAD,EAAAxxE,UAAA1H,QAAA,SAAA0T,EAAAwI,GACA,OAAAhgB,GAAA,EAAuBA,EAAA0L,KAAAuxE,KAAej9E,IACtCwX,EAAA/I,KAAAuR,EAAAtU,KAAAwxE,QAAAl9E,GAAA0L,KAAAyxE,MAAAn9E,KAGAg9E,IAEAl+E,GAAAk+E,etUym8BM,SAAUn+E,EAAQC,EAASC,GAEjC,YuUtp8BA,SAAAq+E,KAGA,kBACA,QAAAC,KACA3xE,KAAAwxE,WAoBA,MAlBAG,GAAA7xE,UAAAkF,IAAA,SAAAxR,GACAwM,KAAA+G,IAAAvT,IACAwM,KAAAwxE,QAAAtsE,KAAA1R,IAGAm+E,EAAA7xE,UAAAiH,IAAA,SAAAvT,GACA,WAAAwM,KAAAwxE,QAAAr2E,QAAA3H,IAEAF,OAAAC,eAAAo+E,EAAA7xE,UAAA,QACAC,IAAA,WACA,MAAAC,MAAAwxE,QAAAx9E,QAEAiM,YAAA,EACAC,cAAA,IAEAyxE,EAAA7xE,UAAAo/D,MAAA,WACAl/D,KAAAwxE,QAAAx9E,OAAA,GAEA29E,KA3BAr+E,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA6hB,GAAAhiB,EAAA,GA6BAD,GAAAs+E,iBACAt+E,EAAA6rE,IAAA5pD,EAAAU,KAAAkpD,KAAAyS,KvU+p8BM,SAAUv+E,EAAQC,EAASC,GAEjC,YwU9r8BA,SAAAu+E,GAAAvsC,GAEA,OADAmtB,MACA5rD,EAAA,EAAoBA,EAAAxF,UAAApN,OAAuB4S,IAC3C4rD,EAAA5rD,EAAA,GAAAxF,UAAAwF,EAGA,QADA+T,GAAA63C,EAAAx+D,OACAM,EAAA,EAAmBA,EAAAqmB,EAASrmB,IAAA,CAC5B,GAAAugB,GAAA29C,EAAAl+D,EACA,QAAAgZ,KAAAuH,GACAA,EAAAxb,eAAAiU,KACA+3B,EAAA/3B,GAAAuH,EAAAvH,IAIA,MAAA+3B,GAGA,QAAAwsC,GAAA97D,GACA,MAAAA,GAAAziB,OAAA+B,QAAAu8E,EApBAt+E,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,GAC9C,IAAA6hB,GAAAhiB,EAAA,GAiBAD,GAAAw+E,aAIAx+E,EAAAy+E,YACAz+E,EAAAiC,OAAAw8E,EAAAx8D,EAAAU,OxUus8BM,SAAU5iB,EAAQC,EAASC,GAEjC,YyU/t8BA,SAAAmvE,GAAAsP,EAAAx9D,GACA,QAAAy9D,KACA,OAAAA,EAAAD,KAAA3wE,MAAA4wE,EAAAz9D,QAAAlT,WAIA,MAFA2wE,GAAAD,OACAC,EAAAz9D,UACAy9D,EAPAz+E,OAAAC,eAAAH,EAAA,cAA8CI,OAAA,IAS9CJ,EAAAovE,OzUuu8BM,SAAUrvE,EAAQC,EAASC,I0Ujv8BjC,SAAA2+E,EAAA7wB,IAAA,SAAA6wB,EAAA/3E,GACA,YAYA,SAAAkiD,GAAA39B,GAEA,kBAAAA,KACAA,EAAA,GAAA+8B,UAAA,GAAA/8B,GAIA,QADA3a,GAAA,GAAAtJ,OAAA6G,UAAApN,OAAA,GACAM,EAAA,EAAqBA,EAAAuP,EAAA7P,OAAiBM,IACtCuP,EAAAvP,GAAA8M,UAAA9M,EAAA,EAGA,IAAAq8E,IAAkBnyD,WAAA3a,OAGlB,OAFAorE,GAAAD,GAAA2B,EACAsB,EAAAjD,GACAA,IAGA,QAAA5yB,GAAAziB,SACAs1C,GAAAt1C,GAGA,QAAAsnB,GAAA0vB,GACA,GAAAnyD,GAAAmyD,EAAAnyD,SACA3a,EAAA8sE,EAAA9sE,IACA,QAAAA,EAAA7P,QACA,OACAwqB,GACA,MACA,QACAA,EAAA3a,EAAA,GACA,MACA,QACA2a,EAAA3a,EAAA,GAAAA,EAAA,GACA,MACA,QACA2a,EAAA3a,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,MACA,SACA2a,EAAArd,MAAAlH,EAAA4J,IAKA,QAAAysE,GAAA32C,GAGA,GAAAu1C,EAGA1yC,WAAA8zC,EAAA,EAAA32C,OACS,CACT,GAAAg3C,GAAA1B,EAAAt1C,EACA,IAAAg3C,EAAA,CACAzB,GAAA,CACA,KACAjuB,EAAA0vB,GACiB,QACjBv0B,EAAAziB,GACAu1C,GAAA,KApEA,IAAA8C,EAAA71B,aAAA,CAIA,GAIA81B,GAJAjD,EAAA,EACAC,KACAC,GAAA,EACA6B,EAAAiB,EAAAlC,SAoJAoC,EAAA5+E,OAAA6+E,gBAAA7+E,OAAA6+E,eAAAH,EACAE,QAAA11C,WAAA01C,EAAAF,EAGU,wBAAAvvE,SAAAM,KAAAivE,EAAA7wB,SArFV,WACA8wB,EAAA,SAAAt4C,GACAwnB,EAAAC,SAAA,WAA0CkvB,EAAA32C,SAI1C,WAGA,GAAAq4C,EAAAhC,cAAAgC,EAAA/B,cAAA,CACA,GAAAmC,IAAA,EACAjC,EAAA6B,EAAApZ,SAMA,OALAoZ,GAAApZ,UAAA,WACAwZ,GAAA,GAEAJ,EAAAhC,YAAA,QACAgC,EAAApZ,UAAAuX,EACAiC,MAIA,WAKA,GAAA7B,GAAA,gBAAAv1D,KAAAw1D,SAAA,IACAC,EAAA,SAAAzwB,GACAA,EAAAnrC,SAAAm9D,GACA,gBAAAhyB,GAAA/nC,MACA,IAAA+nC,EAAA/nC,KAAA9c,QAAAo1E,IACAD,GAAAtwB,EAAA/nC,KAAA7hB,MAAAm6E,EAAAv8E,SAIAg+E,GAAA3e,iBACA2e,EAAA3e,iBAAA,UAAAod,GAAA,GAEAuB,EAAAK,YAAA,YAAA5B,GAGAwB,EAAA,SAAAt4C,GACAq4C,EAAAhC,YAAAO,EAAA52C,EAAA,SAmDKq4C,EAAAnC,eA/CL,WACA,GAAAe,GAAA,GAAAf,eACAe,GAAAC,MAAAjY,UAAA,SAAA5Y,GAEAswB,EADAtwB,EAAA/nC,OAIAg6D,EAAA,SAAAt4C,GACAi3C,EAAAE,MAAAd,YAAAr2C,OA2CKo3C,GAAA,sBAAAA,GAAAhB,cAAA,UAvCL,WACA,GAAAiB,GAAAD,EAAAE,eACAgB,GAAA,SAAAt4C,GAGA,GAAAu3C,GAAAH,EAAAhB,cAAA,SACAmB,GAAA79B,mBAAA,WACAi9B,EAAA32C,GACAu3C,EAAA79B,mBAAA,KACA29B,EAAAG,YAAAD,GACAA,EAAA,MAEAF,EAAAI,YAAAF,OAIA,WACAe,EAAA,SAAAt4C,GACA6C,WAAA8zC,EAAA,EAAA32C,OA8BAu4C,EAAA/1B,eACA+1B,EAAA91B,mBACC,mBAAA0V,UAAA,KAAAkgB,EAAAhyE,KAAAgyE,EAAAlgB,Q1Uqv8B4B/uD,KAAK3P,EAASC,EAAoB,KAAMA,EAAoB,OAInF,SAAUF,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,G2Ur78BtD,IAAA6jB,GAAAhkB,EAAA,GACAwrD,EAAAxrD,EAAA,IACA85C,EAAA95C,EAAA,IACAyrD,EAAAzrD,EAAA,IAEAi/E,EAAAj/E,EAAA,KAEA0rD,EAAA1rD,EAAA,IACAk/E,EAAAl/E,EAAA,KACAm/E,EAAAn/E,EAAA,KACAo/E,EAAAp/E,EAAA,KAEMmxB,IAEFzrB,KAAM,aAAcskB,UAAWk1D,EAAAG,sBAC/B35E,KAAM,WAAYskB,UAAWm1D,EAAAG,wBAC7B55E,KAAM,MAAOskB,UAAW0hC,EAAA1R,eAoD5BulC,EAAA,mBAAAA,MAA8B,MAAjBA,GAAep6D,YAjD3BnB,EAAA+nC,UACCtsC,cACEy/D,EAAAG,oBACAF,EAAAG,uBAEFzuE,YACIlB,QAASsvE,EAAAj2B,eAAgBhsB,WAAU,WACjC,GAAMwiD,IACJt2B,UACEj7C,IAAK,EACLI,IAAK,GACL86C,QAAS,GAGXC,QACEn7C,IAAK,EACLI,IAAK,IACL86C,SACEl7C,KAAM,GACNI,IAAK,IAEP8L,UAAW,GAGbkvC,SACEp7C,IAAK,EACLI,IAAK,IACL86C,SACEl7C,IAAK,EACLI,IAAK,IAEPoxE,MAAO,EACPC,OAAQ,GAIZ,OAAO,IAAIT,GAAAj2B,eAAgBw2B,MAIjCrzB,SACErS,EAAA1b,aAAa4W,SAAU7jB,GACvBq6B,EAAAY,aACAX,EAAAthD,YACAshD,EAAArhD,oBACAg1E,EAAAtzB,iBAISyzB,KAAAx/E,GAAAw/E,mB3U678BP,SAAUz/E,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,G4Urg9BtD,IAAA6jB,GAAAhkB,EAAA,GACAwrD,EAAAxrD,EAAA,IACA85C,EAAA95C,EAAA,IACAyrD,EAAAzrD,EAAA,IAEA2/E,EAAA3/E,EAAA,KAEA0rD,EAAA1rD,EAAA,IACA4/E,EAAA5/E,EAAA,KACA6/E,EAAA7/E,EAAA,KACAo/E,EAAAp/E,EAAA,KAEMmxB,IAEFzrB,KAAM,aAAcskB,UAAW41D,EAAAE,sBAC/Bp6E,KAAM,WAAYskB,UAAW61D,EAAAE,8BAC7Br6E,KAAM,MAAOskB,UAAW0hC,EAAA1R,eA+C5BgmC,EAAA,mBAAAA,MAAiC,MAApBA,GAAkB76D,YA5C9BnB,EAAA+nC,UACCtsC,cACEmgE,EAAAE,oBACAD,EAAAE,6BAEFlvE,YACIlB,QAASgwE,EAAAj1B,kBAAmB1tB,WAAU,WACpC,GAAMisB,IACJ0B,aACE18C,IAAK,EACLI,IAAK,IACLu8C,KAAM,IAERC,YACE58C,IAAK,EACLI,IAAK,IACLu8C,KAAM,KAER1B,UACEj7C,IAAK,EACLI,IAAK,GACLu8C,KAAM,GAER1F,UACEj3C,IAAK,IACLI,IAAK,IACLu8C,KAAM,KAERE,cAAc,EAGhB,OAAO,IAAI60B,GAAAj1B,kBAAmBzB,MAIpCkD,SACErS,EAAA1b,aAAa4W,SAAU7jB,GACvBq6B,EAAAY,aACAX,EAAAthD,YACAshD,EAAArhD,oBACAg1E,EAAAtzB,iBAISk0B,KAAAjgF,GAAAigF,sB5U8g9BJ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUlgF,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,G6Unm9BtD,IAAA6jB,GAAAhkB,EAAA,GACAyrD,EAAAzrD,EAAA,IAEAigF,EAAAjgF,EAAA,IACAi/E,EAAAj/E,EAAA,KACA+5C,EAAA/5C,EAAA,IASAs/E,EAAA,WAWE,QAAAA,GACEY,EACOC,EACA99D,GAHT,GAAA7Q,GAAA7E,IAESA,MAAAwzE,sBACAxzE,KAAA0V,QAEP1V,KAAKwX,QAAU9B,EAAM0C,SAAU,WAAWP,IAE1C7X,KAAKyzE,aAAeF,EAAGhlE,OACrBguC,UACEv8C,KAAKwzE,oBAAoBl3B,SAASC,SAASC,QAC3CsC,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKwzE,oBAAoBl3B,SAASC,SAASj7C,KACzDgyE,EAAA1lC,aAAc5tC,KAAKwzE,oBAAoBl3B,SAASC,SAAS76C,QAI/D+6C,QACEz8C,KAAKwzE,oBAAoBl3B,SAASG,OAAOD,QAAQ96C,IACjDo9C,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKwzE,oBAAoBl3B,SAASG,OAAOn7C,KACvDgyE,EAAA1lC,aAAc5tC,KAAKwzE,oBAAoBl3B,SAASG,OAAO/6C,QAI7Dg7C,SACE18C,KAAKwzE,oBAAoBl3B,SAASI,QAAQF,QAAQ96C,IAClDo9C,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKwzE,oBAAoBl3B,SAASI,QAAQp7C,KACxDgyE,EAAA1lC,aAAc5tC,KAAKwzE,oBAAoBl3B,SAASI,QAAQh7C,QAI9D8V,UACGxX,KAAKwX,WAIVxX,KAAKu8C,SAAWv8C,KAAKyzE,aAAah5E,SAAmB,SACrDuF,KAAKy8C,OAASz8C,KAAKyzE,aAAah5E,SAAiB,OACjDuF,KAAK08C,QAAU18C,KAAKyzE,aAAah5E,SAAkB,QACnDuF,KAAK0zE,aAAe1zE,KAAKyzE,aAAah5E,SAAkB,QAExDib,EAAM2C,UAAW,WAAW9M,UAAW,SAAC/X,GACtCqR,EAAK2S,QAAUhkB,EAAMqkB,MAGvB7X,KAAKyzE,aAAa5yE,aAAa0K,UAAU,SAAC0M,GACxCpT,EAAK8uE,YAAc9uE,EAAK+uE,iBAAkB37D,KAG5CjY,KAAK0zE,aAAa7yE,aAAa0K,UAAU,SAAC0M,GACxCpT,EAAKgvE,cAAe57D,KAgE1B,MA5DE06D,GAAA7yE,UAAA4F,SAAA,WACE,GAAIouE,GAAYC,eAAeC,QAAQ,eAErB,QAAdF,IACF9zE,KAAKyzE,aAAa97E,SAAU4O,KAAKgtB,MAAMugD,IACvC9zE,KAAKi0E,gBAITtB,EAAA7yE,UAAA8F,YAAA,WACEmuE,eAAeG,QAAQ,eAAgB3tE,KAAKC,UAAUxG,KAAKyzE,aAAajgF,SAG1Em/E,EAAA7yE,UAAA2O,SAAA,SAAU3G,GACJ9H,KAAKyzE,aAAatzE,QACpBH,KAAKi0E,cACLj0E,KAAK2zE,aAAc,EACnB3zE,KAAKm0E,WAAY,eAIrBxB,EAAA7yE,UAAAm0E,YAAA,WACEj0E,KAAKwzE,oBACF32B,YAAa78C,KAAKu8C,SAAS/oD,OAC3BspD,WAAY,EAAI98C,KAAKy8C,OAAOjpD,MAAOwM,KAAKy8C,OAAOjpD,OAC/CupD,WAAY/8C,KAAK08C,QAAQlpD,QAG9Bm/E,EAAA7yE,UAAAgB,MAAA,SAAOk/C,GACLA,EAAMC,iBACNjgD,KAAKu8C,SAASz7C,MAAOd,KAAKwzE,oBAAoBl3B,SAASC,SAASC,SAChEx8C,KAAKy8C,OAAO37C,MAAOd,KAAKwzE,oBAAoBl3B,SAASG,OAAOD,QAAQ96C,KACpE1B,KAAK08C,QAAQ57C,MAAOd,KAAKwzE,oBAAoBl3B,SAASI,QAAQF,QAAQ96C,KACtE1B,KAAK0V,MAAMwC,OAAQ,WAAW,GAC9BlY,KAAKi0E,cACLj0E,KAAK2zE,aAAc,EACnB3zE,KAAKm0E,WAAY,aAGnBxB,EAAA7yE,UAAA+zE,aAAA,SAAc17D,GACZnY,KAAK0V,MAAMwC,OAAQ,UAAWC,IAGhCw6D,EAAA7yE,UAAAq0E,WAAA,SAAYv7E,GAAZ,GAAAiM,GAAA7E,IACEA,MAAKpH,QAAUA,EACXoH,KAAKo0E,aACP34B,aAAcz7C,KAAKo0E,aAGrBp0E,KAAKo0E,YAAc53C,WAAY,WAC7B33B,EAAKjM,YAAU,IACd,MAGL+5E,EAAA7yE,UAAA8zE,iBAAA,SAAkB9rE,GAChB,MAAOA,GAAc,WAAM9H,KAAKwzE,oBAAoBj3B,UAC/Cz0C,EAAY,SAAM9H,KAAKwzE,oBAAoB/2B,OAAO/6C,KAClDoG,EAAa,UAAM9H,KAAKwzE,oBAAoB92B,QAAQh7C,KACpDoG,EAAa,UAAM9H,KAAKwX,SArIpBm7D,EAAqBn6D,YALjCnB,EAAAk2B,WACCzpC,SAAU,gBACV0pC,SAAUn6C,EAAQ,O7U6s9BZqlB,WAAW,qB6U9r9BXomC,EAAA5hD,YACwBo1E,EAAAj2B,eACdjP,EAAA71B,YAdLo7D,KAAAv/E,GAAAu/E,yB7Uqt9BP,SAAUx/E,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,G8Uvu9BtD,IAAA6jB,GAAAhkB,EAAA,GACAyrD,EAAAzrD,EAAA,IAEAigF,EAAAjgF,EAAA,IACAi/E,EAAAj/E,EAAA,KACA+5C,EAAA/5C,EAAA,IASAq/E,EAAA,WAWE,QAAAA,GACEa,EACOC,EACA99D,GAHT,GAAA7Q,GAAA7E,IAESA,MAAAwzE,sBACAxzE,KAAA0V,QAEP1V,KAAKq0E,eAAiBd,EAAGhlE,OACrB0uC,MACEj9C,KAAKwzE,oBAAoBl3B,SAASG,OAAOjvC,UACzCsxC,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKwzE,oBAAoB/2B,OAAOn7C,KAC9CgyE,EAAA1lC,aAAc5tC,KAAKwzE,oBAAoB/2B,OAAO/6C,QAIpDw7C,QACEl9C,KAAKwzE,oBAAoBl3B,SAASG,OAAOjvC,UACzCsxC,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKwzE,oBAAoB/2B,OAAOn7C,KAC9CgyE,EAAA1lC,aAAc5tC,KAAKwzE,oBAAoB/2B,OAAO/6C,QAIpD4yE,IACEt0E,KAAKwzE,oBAAoBl3B,SAASI,QAAQo2B,MAC1Ch0B,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKwzE,oBAAoB92B,QAAQp7C,KAC/CgyE,EAAA1lC,aAAc5tC,KAAKwzE,oBAAoB92B,QAAQh7C,QAIrD6yE,KACEv0E,KAAKwzE,oBAAoBl3B,SAASI,QAAQq2B,OAC1Cj0B,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKwzE,oBAAoB92B,QAAQp7C,KAC/CgyE,EAAA1lC,aAAc5tC,KAAKwzE,oBAAoB92B,QAAQh7C,QAIrD8yE,IACEx0E,KAAKwzE,oBAAoBl3B,SAASI,QAAQo2B,MAC1Ch0B,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKwzE,oBAAoB92B,QAAQp7C,KAC/CgyE,EAAA1lC,aAAc5tC,KAAKwzE,oBAAoB92B,QAAQh7C,QAIrD+yE,KACEz0E,KAAKwzE,oBAAoBl3B,SAASI,QAAQq2B,OAC1Cj0B,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKwzE,oBAAoB92B,QAAQp7C,KAC/CgyE,EAAA1lC,aAAc5tC,KAAKwzE,oBAAoB92B,QAAQh7C,UAIpD7L,UAAWipD,EAAA5nD,WAAWC,SAErBm8E,EAAAplC,iBAAkB,OAAQ,UAC1BolC,EAAAhlC,oBAAqB,KAAM,QAAS,KAAM,YAKhDtuC,KAAKi9C,KAAOj9C,KAAKq0E,eAAe55E,SAAe,KAC/CuF,KAAKk9C,OAASl9C,KAAKq0E,eAAe55E,SAAiB,OACnDuF,KAAKs0E,GAAKt0E,KAAKq0E,eAAe55E,SAAa,GAC3CuF,KAAKu0E,IAAMv0E,KAAKq0E,eAAe55E,SAAc,IAC7CuF,KAAKw0E,GAAKx0E,KAAKq0E,eAAe55E,SAAa,GAC3CuF,KAAKy0E,IAAMz0E,KAAKq0E,eAAe55E,SAAc,IAE7CuF,KAAKq0E,eAAexzE,aAAa0K,UAAW,WAC1C1G,EAAK6vE,iBAGP10E,KAAKwX,QAAUxX,KAAK0V,MAAM0C,SAAU,WAAWP,IAE/C7X,KAAK0V,MAAM2C,UAAW,WAAW9M,UAAW,SAAC/X,GAC3CqR,EAAK2S,QAAUhkB,EAAMqkB,IACjBhT,EAAK2S,QACP3S,EAAK8vE,aAEL9vE,EAAK+vE,cAuEb,MAlEElC,GAAA5yE,UAAA4F,SAAA,WACE,GAAIouE,GAAYC,eAAeC,QAAQ,WAErB,QAAdF,GACF9zE,KAAKq0E,eAAe18E,SAAU4O,KAAKgtB,MAAMugD,IAGvC9zE,KAAKwX,QACPxX,KAAK20E,aAEL30E,KAAK40E,aAITlC,EAAA5yE,UAAA8F,YAAA,WACEmuE,eAAeG,QAAQ,WAAY3tE,KAAKC,UAAUxG,KAAKq0E,eAAe7gF,SAGxEk/E,EAAA5yE,UAAAsY,SAAA,WACE,MAAIpY,MAAKwX,QACAxX,KAAKwzE,oBAAoBx2B,WAAWh9C,KAAKi9C,KAAKzpD,MAAOwM,KAAKk9C,OAAO1pD,OAEjEwM,KAAKwzE,oBAAoB91B,mBAC9B19C,KAAKs0E,GAAG9gF,MACRwM,KAAKu0E,IAAI/gF,MACTwM,KAAKw0E,GAAGhhF,MACRwM,KAAKy0E,IAAIjhF,QAKfk/E,EAAA5yE,UAAA40E,aAAA,WACE,GAAI10E,KAAKq0E,eAAej0E,QACtBJ,KAAK60E,YAAc,mCAEnB,KACE,GAAI1/D,GAAiBnV,KAAKoY,UAE1B,IAAI5W,MAAM2T,GACR,KAAM,IAAI1gB,OAAO,yBAGnBuL,MAAK60E,YAAiB1/D,EAAM,IAC5B,MAAOjC,GACPlT,KAAK60E,YAAc,iCAKzBnC,EAAA5yE,UAAAgB,MAAA,SAAOk/C,GACLA,EAAMC,iBACNjgD,KAAK40E,YACL50E,KAAK20E,cAGPjC,EAAA5yE,UAAA80E,UAAA,WACE50E,KAAKi9C,KAAKn8C,MAAOd,KAAKwzE,oBAAoBl3B,SAASG,OAAOjvC,WAC1DxN,KAAKk9C,OAAOp8C,MAAOd,KAAKwzE,oBAAoBl3B,SAASG,OAAOjvC,YAG9DklE,EAAA5yE,UAAA60E,WAAA,WACE30E,KAAKs0E,GAAGxzE,MAAOd,KAAKwzE,oBAAoBl3B,SAASI,QAAQo2B,OACzD9yE,KAAKu0E,IAAIzzE,MAAOd,KAAKwzE,oBAAoBl3B,SAASI,QAAQq2B,QAC1D/yE,KAAKw0E,GAAG1zE,MAAOd,KAAKwzE,oBAAoBl3B,SAASI,QAAQo2B,OACzD9yE,KAAKy0E,IAAI3zE,MAAOd,KAAKwzE,oBAAoBl3B,SAASI,QAAQq2B,SAlLjDL,EAAmBl6D,YAL/BnB,EAAAk2B,WACCzpC,SAAU,OACV0pC,SAAUn6C,EAAQ,O9Uq39BZqlB,WAAW,qB8Ut29BXomC,EAAA5hD,YACwBo1E,EAAAj2B,eACdjP,EAAA71B,YAdLm7D,KAAAt/E,GAAAs/E,uB9U639BP,SAAUv/E,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,G+U/49BtD,IAAA6jB,GAAAhkB,EAAA,GACAyrD,EAAAzrD,EAAA,IAEAigF,EAAAjgF,EAAA,IACA2/E,EAAA3/E,EAAA,KACA+5C,EAAA/5C,EAAA,IASA8/E,EAAA,WASE,QAAAA,GACEI,EACOuB,EACAp/D,GAHT,GAAA7Q,GAAA7E,IAESA,MAAA80E,kBACA90E,KAAA0V,QANT1V,KAAA2+C,cAAwB,EAQtB3+C,KAAK+0E,eAAiBxB,EAAGhlE,OACrB8vC,KACEr+C,KAAK80E,gBAAgBx4B,SAAS/D,SAAS0F,KACvCa,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAK80E,gBAAgBx4B,SAAS/D,SAASj3C,KACrDgyE,EAAA1lC,aAAc5tC,KAAK80E,gBAAgBx4B,SAAS/D,SAAS72C,QAI3D48C,KACEt+C,KAAK80E,gBAAgBx4B,SAAS/D,SAAS0F,KACvCa,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAK80E,gBAAgBx4B,SAAS/D,SAASj3C,KACrDgyE,EAAA1lC,aAAc5tC,KAAK80E,gBAAgBx4B,SAAS/D,SAAS72C,UAM/D1B,KAAKq+C,IAAMr+C,KAAK+0E,eAAet6E,SAAc,IAC7CuF,KAAKs+C,IAAMt+C,KAAK+0E,eAAet6E,SAAc,IAE7CuF,KAAK+0E,eAAel0E,aAAa0K,UAAW,WAC1C1G,EAAK6vE,iBAGP10E,KAAK0X,cAAgBhC,EAAM0C,SAAS,iBAAiBP,IACrDnC,EAAM2C,UAAU,iBAAiB9M,UAAU,SAAA/X,GAAS,MAAAqR,GAAK6S,cAAgBlkB,EAAMqkB,MAiDnF,MA9CEs7D,GAAArzE,UAAA4F,SAAA,WACE,GAAIouE,GAAYC,eAAeC,QAAQ,SAErB,QAAdF,GACF9zE,KAAK+0E,eAAep9E,SAAU4O,KAAKgtB,MAAMugD,IAG3C9zE,KAAK00E,gBAGPvB,EAAArzE,UAAA8F,YAAA,WACEmuE,eAAeG,QAAQ,SAAU3tE,KAAKC,UAAUxG,KAAK+0E,eAAevhF,SAGtE2/E,EAAArzE,UAAAsY,SAAA,WACE,GAAIjD,EAUJ,OARInV,MAAK0X,eACPvC,EAASnV,KAAK80E,gBAAgB12B,gBAAiBp+C,KAAKq+C,IAAI7qD,MAAOwM,KAAKs+C,IAAI9qD,OACxEwM,KAAK2+C,aAAe3+C,KAAK80E,gBAAgBn2B,aAAcxpC,EAAQnV,KAAK80E,gBAAgB92B,eAEpF7oC,EAASnV,KAAK80E,gBAAgBp2B,oBAAqB1+C,KAAKq+C,IAAI7qD,MAAOwM,KAAKs+C,IAAI9qD,OAC5EwM,KAAK2+C,aAAe3+C,KAAK80E,gBAAgBn2B,aAAcxpC,EAAQnV,KAAK80E,gBAAgB52B,aAG/E/oC,GAGTg+D,EAAArzE,UAAA40E,aAAA,WACE,GAAI10E,KAAK+0E,eAAe30E,QACtBJ,KAAKg1E,OAAS,mCACT,CACL,GAAI7/D,GAAiBnV,KAAKoY,UAE1BpY,MAAKg1E,OAAY7/D,EAAM,KAAInV,KAAK0X,cAAgB,IAAM,QAI1Dy7D,EAAArzE,UAAAgB,MAAA,SAAOk/C,GACDA,GACFA,EAAMC,iBAGRjgD,KAAKq+C,IAAIv9C,MAAOd,KAAK80E,gBAAgBx4B,SAAS/D,SAAS0F,MACvDj+C,KAAKs+C,IAAIx9C,MAAOd,KAAK80E,gBAAgBx4B,SAAS/D,SAAS0F,OA9F9Ck1B,EAAmB36D,YAL/BnB,EAAAk2B,WACCzpC,SAAU,aACV0pC,SAAUn6C,EAAQ,O/Uy99BZqlB,WAAW,qB+U589BXomC,EAAA5hD,YACoB81E,EAAAj1B,kBACV3Q,EAAA71B,YAZL47D,KAAA//E,GAAA+/E,uB/Ui+9BP,SAAUhgF,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GgVn/9BtD,IAAA6jB,GAAAhkB,EAAA,GACAyrD,EAAAzrD,EAAA,IAEAigF,EAAAjgF,EAAA,IACA2/E,EAAA3/E,EAAA,KACA+5C,EAAA/5C,EAAA,IASA+/E,EAAA,WAaE,QAAAA,GACEG,EACO0B,EACAv/D,GAHT,GAAA7Q,GAAA7E,IAESA,MAAAi1E,UACAj1E,KAAA0V,QAEP1V,KAAK0X,cAAgBhC,EAAM0C,SAAU,iBAAiBP,IACtD7X,KAAKm+C,aAAen+C,KAAKi1E,QAAQ92B,aAEjCn+C,KAAKyzE,aAAeF,EAAGhlE,OACrBguC,UACEv8C,KAAKi1E,QAAQ34B,SAASC,SAAS0B,KAC/Ba,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKi1E,QAAQ34B,SAASC,SAASj7C,KAC7CgyE,EAAA1lC,aAAc5tC,KAAKi1E,QAAQ34B,SAASC,SAAS76C,QAInDs8C,aACEh+C,KAAKi1E,QAAQ34B,SAAS0B,YAAYC,KAClCa,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKi1E,QAAQ34B,SAAS0B,YAAY18C,KAChDgyE,EAAA1lC,aAAc5tC,KAAKi1E,QAAQ34B,SAAS0B,YAAYt8C,QAItDw8C,YACEl+C,KAAKi1E,QAAQ34B,SAAS4B,WAAWD,KACjCa,EAAA5nD,WAAWC,SAEP2nD,EAAA5nD,WAAWyK,SACX2xE,EAAAvlC,UACAulC,EAAA7lC,aAAcztC,KAAKi1E,QAAQ34B,SAAS4B,WAAW58C,KAC/CgyE,EAAA1lC,aAAc5tC,KAAKi1E,QAAQ34B,SAAS4B,WAAWx8C,QAIrDy8C,cACEn+C,KAAKm+C,cAEPzmC,eACE1X,KAAK0X,iBAIT1X,KAAKu8C,SAAWv8C,KAAKyzE,aAAah5E,SAAmB,SACrDuF,KAAKg+C,YAAch+C,KAAKyzE,aAAah5E,SAAsB,YAC3DuF,KAAKk+C,WAAal+C,KAAKyzE,aAAah5E,SAAqB,WACzDuF,KAAKk1E,mBAAqBl1E,KAAKyzE,aAAah5E,SAAwB,cACpEuF,KAAKm1E,kBAAoBn1E,KAAKyzE,aAAah5E,SAAuB,aAElEib,EAAM2C,UAAW,iBAAiB9M,UAAW,SAAC/X,GAC5CqR,EAAK6S,cAAgBlkB,EAAMqkB,MAG7B7X,KAAKyzE,aAAa5yE,aAAa0K,UAAU,SAAC0M,GACxCpT,EAAK8uE,YAAc9uE,EAAK+uE,iBAAkB37D,KAG5CjY,KAAKk1E,mBAAmBr0E,aAAa0K,UAAU,SAAC0M,GAC9CpT,EAAK6Q,MAAMwC,OAAQ,gBAAiBD,KAGtCjY,KAAKm1E,kBAAkBt0E,aAAa0K,UAAU,SAAC0M,GAC7CpT,EAAKs5C,aAAelmC,EACpBpT,EAAKowE,QAAQ92B,aAAelmC,IA6DlC,MAzDEm7D,GAAAtzE,UAAA4F,SAAA,WACE,GAAIouE,GAAYC,eAAeC,QAAQ,yBAErB,QAAdF,IACF9zE,KAAKyzE,aAAa97E,SAAU4O,KAAKgtB,MAAMugD,IACvC9zE,KAAKi0E,gBAITb,EAAAtzE,UAAA8F,YAAA,WACEmuE,eAAeG,QAAQ,yBAA0B3tE,KAAKC,UAAUxG,KAAKyzE,aAAajgF,SAGpF4/E,EAAAtzE,UAAA2O,SAAA,SAAU3G,GACJ9H,KAAKyzE,aAAatzE,QACpBH,KAAKi0E,cACLj0E,KAAK2zE,aAAc,EACnB3zE,KAAKm0E,WAAY,eAIrBf,EAAAtzE,UAAAm0E,YAAA,WACEj0E,KAAKi1E,QAAQ14B,SAAYv8C,KAAKu8C,SAAS/oD,MACvCwM,KAAKi1E,QAAQj3B,YAAeh+C,KAAKg+C,YAAYxqD,MAC7CwM,KAAKi1E,QAAQ/2B,WAAcl+C,KAAKk+C,WAAW1qD,MAC3CwM,KAAKi1E,QAAQ92B,aAAgBn+C,KAAKm1E,kBAAkB3hF,OAGtD4/E,EAAAtzE,UAAAgB,MAAA,SAAOk/C,GACLA,EAAMC,iBACNjgD,KAAKu8C,SAASz7C,MAAOd,KAAKi1E,QAAQ34B,SAASC,SAAS0B,MACpDj+C,KAAKg+C,YAAYl9C,MAAOd,KAAKi1E,QAAQ34B,SAAS0B,YAAYC,MAC1Dj+C,KAAKk+C,WAAWp9C,MAAOd,KAAKi1E,QAAQ34B,SAAS4B,WAAWD,MACxDj+C,KAAKm1E,kBAAkBr0E,MAAOd,KAAKi1E,QAAQ34B,SAAS6B,cACpDn+C,KAAK0V,MAAMwC,OAAQ,iBAAiB,GACpClY,KAAKi0E,cACLj0E,KAAK2zE,aAAc,EACnB3zE,KAAKm0E,WAAY,aAGnBf,EAAAtzE,UAAAq0E,WAAA,SAAYv7E,GAAZ,GAAAiM,GAAA7E,IACEA,MAAKpH,QAAUA,EACXoH,KAAKo0E,aACP34B,aAAcz7C,KAAKo0E,aAGrBp0E,KAAKo0E,YAAc53C,WAAY,WAC7B33B,EAAKjM,YAAU,IACd,MAGLw6E,EAAAtzE,UAAA8zE,iBAAA,SAAkB9rE,GAChB,MAAOA,GAAc,WAAM9H,KAAKi1E,QAAQ14B,UACnCz0C,EAAiB,cAAM9H,KAAKi1E,QAAQj3B,aACpCl2C,EAAgB,aAAM9H,KAAKi1E,QAAQ/2B,YACnCp2C,EAAkB,eAAM9H,KAAKi1E,QAAQ92B,cA9IjCi1B,EAA2B56D,YALvCnB,EAAAk2B,WACCzpC,SAAU,sBACV0pC,SAAUn6C,EAAQ,OhVom+BZqlB,WAAW,qBgVnl+BXomC,EAAA5hD,YACY81E,EAAAj1B,kBACF3Q,EAAA71B,YAhBL67D,KAAAhgF,GAAAggF,+BhV2m+BJ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUjgF,EAAQC,GiVhp+BxBD,EAAAC,QAAA,46DjVsp+BM,SAAUD,EAAQC,GkVtp+BxBD,EAAAC,QAAA,y7DlV4p+BM,SAAUD,EAAQC,GmV5p+BxBD,EAAAC,QAAA,g8BnVkq+BM,SAAUD,EAAQC,GoVlq+BxBD,EAAAC,QAAA,wwEpVuq+BS,CAEH,SAAUD,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GqV7q+BtD,IAAA6jB,GAAAhkB,EAAA,GACA85C,EAAA95C,EAAA,IACA+5C,EAAA/5C,EAAA,IAOA+hF,EAAA,WAIE,QAAAA,GACU/4D,EACA3G,GAFV,GAAA7Q,GAAA7E,IACUA,MAAAqc,QACArc,KAAA0V,QAER2G,EACG6K,IACA3b,UAAY,SAAA/X,GAAS,MAAAqR,GAAKyoC,eAAiB95C,EAAM,GAAGuF,OACvD2c,EACG6C,cAAe,mBACfhN,UAAY,SAAA/X,GAAS,MAAAqR,GAAKkT,MAAQvkB,EAAMqR,EAAKyoC,gBAAgBv1B,QAEpE,MAfaq9D,GAAoB58D,YALhCnB,EAAAk2B,WACCzpC,SAAU,YACV0pC,SAAUn6C,EAAQ,OrV4r+BZqlB,WAAW,qBqVpr+BAy0B,EAAApnB,eACAqnB,EAAA71B,YANN69D,KAAAhiF,GAAAgiF,wBrVms+BP,SAAUjiF,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GsVht+BtD,IAAA6jB,GAAAhkB,EAAA,GAOAgiF,EAAA,mBAAAA,MAA+B,MAAlBA,GAAgB78D,YAL5BnB,EAAAk2B,WACCzpC,SAAU,WACV0pC,SAAUn6C,EAAQ,QAGPgiF,KAAAjiF,GAAAiiF,oBtV2t+BP,SAAUliF,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GuVtu+BtD,IAAA6jB,GAAAhkB,EAAA,GAOAiiF,EAAA,mBAAAA,MAA6B,MAAhBA,GAAc98D,YAL1BnB,EAAAk2B,WACCzpC,SAAU,QACV0pC,SAAUn6C,EAAQ,QAGPiiF,KAAAliF,GAAAkiF,kBvViv+BP,SAAUniF,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GwV5v+BtD,IAAA6jB,GAAAhkB,EAAA,GAOAkiF,EAAA,mBAAAA,MAAgC,MAAnBA,GAAiB/8D,YAL7BnB,EAAAk2B,WACCzpC,SAAU,aACV0pC,SAAUn6C,EAAQ,QAGPkiF,KAAAniF,GAAAmiF,qBxVsw+BJ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUpiF,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GyVnz+BtD,IAAA6jB,GAAAhkB,EAAA,GAWAmiF,EAAA,WAEE,QAAAA,MAEF,MAJaA,GAAYh9D,YATxBnB,EAAAk2B,WACCzpC,SAAU,MACV0pC,SAAUn6C,EAAQ,KAClBoiF,QACCpiF,EAAQ,MAETqiF,cAAer+D,EAAAs+D,kBAAkBC,OzV0z+B3Bl9D,WAAW,yByVvz+BN88D,KAAApiF,GAAAoiF,gBzVg0+BP,SAAUriF,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,G0V70+BtD,IAAAqiF,GAAAxiF,EAAA,KACAyiF,EAAAziF,EAAA,KACA0iF,EAAA1iF,EAAA,KACA2iF,EAAA3iF,EAAA,IAEaD,GAAAoxB,SAETzrB,KAAM,GACNskB,UAAW04D,EAAAT,iBAGXv8E,KAAM,aACNykB,WAAY,wBACZjB,UAAW,SAGXxjB,KAAM,aACNskB,UAAWy4D,EAAAV,qBACX13D,aAAc,WAAM,UAAI7P,SAAQ,SAAUC,GAAa,GAAAD,SAAA,SAAAC,SAAAK,KAAA,SAAqC8nE,GAAmBnoE,EAAQza,EAAQ,KAAyC,kBAAM6iB,KAAA,KAAA7iB,IAAAuqC,MAAAvqC,EAAA6iF,SAG9Kn9E,KAAM,gBACNykB,WAAY,2BACZjB,UAAW,SAGXxjB,KAAM,gBACNskB,UAAWy4D,EAAAV,qBACX13D,aAAc,WAAM,UAAI7P,SAAQ,SAAUC,GAAa,GAAAD,SAAA,SAAAC,SAAAK,KAAA,SAAqC8nE,GAAmBnoE,EAAQza,EAAQ,KAA+C,qBAAM6iB,KAAA,KAAA7iB,IAAAuqC,MAAAvqC,EAAA6iF,SAGpLn9E,KAAM,WACNskB,UAAW24D,EAAAX,mBAGXt8E,KAAM,KACNskB,UAAWw4D,EAAAN,qB1Vo1+BN,CACA,CAEH,SAAUpiF,EAAQC,EAASC,GAEjC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,G2Vj4+BtD,IAAA6jB,GAAAhkB,EAAA,GACA8iF,EAAA9iF,EAAA,IACA+iF,EAAA/iF,EAAA,KACAwrD,EAAAxrD,EAAA,IACA85C,EAAA95C,EAAA,IAEA+5C,EAAA/5C,EAAA,IACAgjF,EAAAhjF,EAAA,KAEAijF,EAAAjjF,EAAA,KACAyiF,EAAAziF,EAAA,KACAwiF,EAAAxiF,EAAA,KACA0iF,EAAA1iF,EAAA,KACA2iF,EAAA3iF,EAAA,KAEAkjF,EAAAljF,EAAA,KACAmjF,EAAAnjF,EAAA,KAwBAojF,EAAA,mBAAAA,MAAwB,MAAXA,GAASj+D,YAtBrBnB,EAAA+nC,UACCtsC,cACEwjE,EAAAd,aACAM,EAAAV,qBACAS,EAAAN,kBACAQ,EAAAT,eACAU,EAAAX,kBAEF71B,SACE22B,EAAAO,cACAH,EAAA3D,gBACA4D,EAAAnD,mBACAlmC,EAAA1b,aAAa2W,QAAQiuC,EAAA7xD,SAEvBmyD,WAAYL,EAAAd,cACZtxE,YACIlB,QAAS67C,EAAA+3B,iBAAkBzuC,SAAU0W,EAAAg4B,uBACrC7zE,QAAS67C,EAAAi4B,cAAenoD,SAAU,KACpCye,EAAA71B,aAISk/D,KAAArjF,GAAAqjF,YAEbL,EAAAW,yBAAyBC,gBAAgBP,GAAW74C,MAAM,SAAC1pB,GAAa,MAAAnD,SAAQmC,MAAMgB,M3V24+B7E,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAU/gB,EAAQC,G4Vpl/BxBD,EAAAC,QAAA,kc5V0l/BM,SAAUD,EAAQC,G6V1l/BxBD,EAAAC,QAAA,wU7Vgm/BM,SAAUD,EAAQC,G8Vhm/BxBD,EAAAC,QAAA,mS9Vsm/BM,SAAUD,EAAQC,G+Vtm/BxBD,EAAAC,QAAA,oB/V4m/BM,SAAUD,EAAQC,GgW5m/BxBD,EAAAC,QAAA,qDhWkn/BM,SAAUD,EAAQC,GiWln/BxBD,EAAAC,QAAA,+ejWun/BG","file":"app.js","sourcesContent":["webpackJsonp([0,1,2],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsyncAction_1 = __webpack_require__(28);\nvar AsyncScheduler_1 = __webpack_require__(29);\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n/***/ }),\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractControlDirective\", function() { return AbstractControlDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractFormGroupDirective\", function() { return AbstractFormGroupDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CheckboxControlValueAccessor\", function() { return CheckboxControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ControlContainer\", function() { return ControlContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_VALUE_ACCESSOR\", function() { return NG_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COMPOSITION_BUFFER_MODE\", function() { return COMPOSITION_BUFFER_MODE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultValueAccessor\", function() { return DefaultValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControl\", function() { return NgControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControlStatus\", function() { return NgControlStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControlStatusGroup\", function() { return NgControlStatusGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgForm\", function() { return NgForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgModel\", function() { return NgModel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgModelGroup\", function() { return NgModelGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadioControlValueAccessor\", function() { return RadioControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControlDirective\", function() { return FormControlDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControlName\", function() { return FormControlName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroupDirective\", function() { return FormGroupDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormArrayName\", function() { return FormArrayName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroupName\", function() { return FormGroupName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgSelectOption\", function() { return NgSelectOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectControlValueAccessor\", function() { return SelectControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectMultipleControlValueAccessor\", function() { return SelectMultipleControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CheckboxRequiredValidator\", function() { return CheckboxRequiredValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EmailValidator\", function() { return EmailValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MaxLengthValidator\", function() { return MaxLengthValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MinLengthValidator\", function() { return MinLengthValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PatternValidator\", function() { return PatternValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RequiredValidator\", function() { return RequiredValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormBuilder\", function() { return FormBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractControl\", function() { return AbstractControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormArray\", function() { return FormArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControl\", function() { return FormControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroup\", function() { return FormGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_ASYNC_VALIDATORS\", function() { return NG_ASYNC_VALIDATORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_VALIDATORS\", function() { return NG_VALIDATORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Validators\", function() { return Validators; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VERSION\", function() { return VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormsModule\", function() { return FormsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReactiveFormsModule\", function() { return ReactiveFormsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵba\", function() { return InternalFormsSharedModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵz\", function() { return REACTIVE_DRIVEN_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵx\", function() { return SHARED_FORM_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵy\", function() { return TEMPLATE_DRIVEN_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return CHECKBOX_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return DEFAULT_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return AbstractControlStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return ngControlStatusHost; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return formDirectiveProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return formControlBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return modelGroupProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbf\", function() { return NgNoValidate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbb\", function() { return NUMBER_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbc\", function() { return NumberValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return RADIO_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵi\", function() { return RadioControlRegistry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbd\", function() { return RANGE_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbe\", function() { return RangeValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵj\", function() { return formControlBinding$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵk\", function() { return controlNameBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵl\", function() { return formDirectiveProvider$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵn\", function() { return formArrayNameProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵm\", function() { return formGroupNameProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵo\", function() { return SELECT_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵq\", function() { return NgSelectMultipleOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵp\", function() { return SELECT_MULTIPLE_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵs\", function() { return CHECKBOX_REQUIRED_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵt\", function() { return EMAIL_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵv\", function() { return MAX_LENGTH_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵu\", function() { return MIN_LENGTH_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵw\", function() { return PATTERN_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵr\", function() { return REQUIRED_VALIDATOR; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__ = __webpack_require__(79);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__ = __webpack_require__(51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__ = __webpack_require__(65);\n\n/**\n * @license Angular v4.3.5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControlDirective = (function () {\n    function AbstractControlDirective() {\n    }\n    /**\n     * The {\\@link FormControl}, {\\@link FormGroup}, or {\\@link FormArray}\n     * that backs this directive. Most properties fall through to that\n     * instance.\n     * @abstract\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.control = function () { };\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.disabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.enabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.errors : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () {\n            return this.control ? this.control.statusChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () {\n            return this.control ? this.control.valueChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        /**\n         * Returns an array that represents the path from the top-level form\n         * to this control. Each index is the string name of the control on\n         * that level.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * For more information, see {\\@link AbstractControl}.\n     * @param {?=} value\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.reset = function (value) {\n        if (value === void 0) { value = undefined; }\n        if (this.control)\n            this.control.reset(value);\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.getError = function (errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    };\n    return AbstractControlDirective;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A directive that contains multiple {\\@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar ControlContainer = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](ControlContainer, _super);\n    function ControlContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * Get the form to which this container belongs.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * Get the path to this container.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * Providers for validators to be used for {\\@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * \\@stable\n */\nvar NG_VALIDATORS = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {\\@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {\\@link NG_VALIDATORS} for more details.\n *\n * \\@stable\n */\nvar NG_ASYNC_VALIDATORS = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('NgAsyncValidators');\nvar EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {\\@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * \\@stable\n */\nvar Validators = (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a value greater than a number.\n     * @param {?} min\n     * @return {?}\n     */\n    Validators.min = function (min) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value less than a number.\n     * @param {?} max\n     * @return {?}\n     */\n    Validators.max = function (max) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a non-empty value.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.required = function (control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    };\n    /**\n     * Validator that requires control value to be true.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.requiredTrue = function (control) {\n        return control.value === true ? null : { 'required': true };\n    };\n    /**\n     * Validator that performs email validation.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.email = function (control) {\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     * @param {?} minLength\n     * @return {?}\n     */\n    Validators.minLength = function (minLength) {\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     * @param {?} maxLength\n     * @return {?}\n     */\n    Validators.maxLength = function (maxLength) {\n        return function (control) {\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     * @param {?} pattern\n     * @return {?}\n     */\n    Validators.pattern = function (pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        var /** @type {?} */ regex;\n        var /** @type {?} */ regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = \"^\" + pattern + \"$\";\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    };\n    /**\n     * No-op validator.\n     * @param {?} c\n     * @return {?}\n     */\n    Validators.nullValidator = function (c) { return null; };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.compose = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.composeAsync = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var /** @type {?} */ observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__[\"map\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__[\"forkJoin\"])(observables), _mergeErrors);\n        };\n    };\n    return Validators;\n}());\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    var /** @type {?} */ obs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵisPromise\"])(r) ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__[\"fromPromise\"])(r) : r;\n    if (!(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵisObservable\"])(obs))) {\n        throw new Error(\"Expected validator to return Promise or Observable.\");\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n        return errors != null ? Object.assign({}, /** @type {?} */ ((res)), errors) : ((res));\n    }, {});\n    return Object.keys(res).length === 0 ? null : res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a {\\@link ControlValueAccessor} for form controls.\n *\n * See {\\@link DefaultValueAccessor} for how to implement one.\n * \\@stable\n */\nvar NG_VALUE_ACCESSOR = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('NgValueAccessor');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return CheckboxControlValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n *\n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar CheckboxControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return CheckboxControlValueAccessor;\n}());\nCheckboxControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return DefaultValueAccessor; }),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    var /** @type {?} */ userAgent = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__[\"ɵgetDOM\"])() ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__[\"ɵgetDOM\"])().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nvar COMPOSITION_BUFFER_MODE = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar DefaultValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _compositionMode\n     */\n    function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        /**\n         * Whether the user is creating a composition string (IME events).\n         */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.writeValue = function (value) {\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._handleInput = function (value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionStart = function () { this._composing = true; };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionEnd = function (value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    };\n    return DefaultValueAccessor;\n}());\nDefaultValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '_handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '_compositionStart()',\n                    '(compositionend)': '_compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nDefaultValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [COMPOSITION_BUFFER_MODE,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NumberValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nvar NumberValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return NumberValueAccessor;\n}());\nNumberValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nNumberValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n *\n * Used internally by Angular forms.\n *\n * \\@stable\n * @abstract\n */\nvar NgControl = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](NgControl, _super);\n    function NgControl() {\n        var _this = _super.apply(this, arguments) || this;\n        /**\n         * \\@internal\n         */\n        _this._parent = null;\n        _this.name = null;\n        _this.valueAccessor = null;\n        /**\n         * \\@internal\n         */\n        _this._rawValidators = [];\n        /**\n         * \\@internal\n         */\n        _this._rawAsyncValidators = [];\n        return _this;\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @abstract\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgControl.prototype.viewToModelUpdate = function (newValue) { };\n    return NgControl;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nvar RadioControlRegistry = (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.add = function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.remove = function (accessor) {\n        for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.select = function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    };\n    return RadioControlRegistry;\n}());\nRadioControlRegistry.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nRadioControlRegistry.ctorParameters = function () { return []; };\n/**\n * \\@whatItDoes Writes radio control values and listens to radio control changes.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use radio buttons with form directives\n *\n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n *\n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n *\n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  \\@stable\n */\nvar RadioControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _registry\n     * @param {?} _injector\n     */\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnInit = function () {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.writeValue = function (value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._checkName = function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._throwNameError = function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    return RadioControlValueAccessor;\n}());\nRadioControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRadioControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    { type: RadioControlRegistry, },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injector\"], },\n]; };\nRadioControlValueAccessor.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    'formControlName': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return RangeValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nvar RangeValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function RangeValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return RangeValueAccessor;\n}());\nRangeValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRangeValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@whatItDoes Writes values and listens to changes on a select element.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use select controls with form directives\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Caveat: Option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar SelectControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵlooseIdentical\"];\n    }\n    Object.defineProperty(SelectControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.writeValue = function (value) {\n        this.value = value;\n        var /** @type {?} */ id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        var /** @type {?} */ valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = _this._getOptionValue(valueString);\n            fn(_this.value);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    };\n    return SelectControlValueAccessor;\n}());\nSelectControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n]; };\nSelectControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * \\@howToUse\n *\n * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n *\n * \\@stable\n */\nvar NgSelectOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectOption;\n}());\nNgSelectOption.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectOption.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: SelectControlValueAccessor, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] },] },\n]; };\nNgSelectOption.propDecorators = {\n    'ngValue': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngValue',] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (typeof value === 'string')\n        value = \"'\" + value + \"'\";\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n *  ### Caveat: Options selection\n *\n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * \\@stable\n */\nvar SelectMultipleControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵlooseIdentical\"];\n    }\n    Object.defineProperty(SelectMultipleControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n        var _this = this;\n        this.value = value;\n        var /** @type {?} */ optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n        }\n        else {\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var /** @type {?} */ selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var /** @type {?} */ options = _.selectedOptions;\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            else {\n                var /** @type {?} */ options = (_.options);\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    if (opt.selected) {\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            _this.value = selected;\n            fn(selected);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n        var /** @type {?} */ id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(/** @type {?} */ ((this._optionMap.get(id)))._value, value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? ((this._optionMap.get(id)))._value : valueString;\n    };\n    return SelectMultipleControlValueAccessor;\n}());\nSelectMultipleControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectMultipleControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n]; };\nSelectMultipleControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * ### Example\n *\n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nvar NgSelectMultipleOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setSelected = function (selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectMultipleOption;\n}());\nNgSelectMultipleOption.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectMultipleOption.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] },] },\n]; };\nNgSelectMultipleOption.propDecorators = {\n    'ngValue': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngValue',] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return ((parent.path)).concat([name]);\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([/** @type {?} */ ((control.validator)), dir.validator]);\n    control.asyncValidator = Validators.composeAsync([/** @type {?} */ ((control.asyncValidator)), dir.asyncValidator]); /** @type {?} */\n    ((dir.valueAccessor)).writeValue(control.value); /** @type {?} */\n    ((\n    // view -> model\n    dir.valueAccessor)).registerOnChange(function (newValue) {\n        dir.viewToModelUpdate(newValue);\n        control.markAsDirty();\n        control.setValue(newValue, { emitModelToViewChange: false });\n    }); /** @type {?} */\n    ((\n    // touched\n    dir.valueAccessor)).registerOnTouched(function () { return control.markAsTouched(); });\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        ((\n        // control -> view\n        dir.valueAccessor)).writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n    if (((dir.valueAccessor)).setDisabledState) {\n        control.registerOnDisabledChange(function (isDisabled) { /** @type {?} */ ((((dir.valueAccessor)).setDisabledState))(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((((validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((((validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    ((dir.valueAccessor)).registerOnChange(function () { return _noControlError(dir); }); /** @type {?} */\n    ((dir.valueAccessor)).registerOnTouched(function () { return _noControlError(dir); });\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    var /** @type {?} */ messageEnd;\n    if (((dir.path)).length > 1) {\n        messageEnd = \"path: '\" + ((dir.path)).join(' -> ') + \"'\";\n    }\n    else if (((dir.path))[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(message + \" \" + messageEnd);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    var /** @type {?} */ change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵlooseIdentical\"])(viewModel, change.currentValue);\n}\nvar BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    var /** @type {?} */ defaultAccessor = undefined;\n    var /** @type {?} */ builtinAccessor = undefined;\n    var /** @type {?} */ customAccessor = undefined;\n    valueAccessors.forEach(function (v) {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n *\n * \\@stable\n */\nvar AbstractFormGroupDirective = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnInit = function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormGroup(this);\n    };\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {\\@link FormGroup} backing this binding.\n         * @return {?}\n         */\n        get: function () { return ((this.formDirective)).getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {\\@link Form} to which this group belongs.\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype._checkParentType = function () { };\n    return AbstractFormGroupDirective;\n}(ControlContainer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AbstractControlStatus = (function () {\n    /**\n     * @param {?} cd\n     */\n    function AbstractControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.touched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.valid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pending : false; },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractControlStatus;\n}());\nvar ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * \\@stable\n */\nvar NgControlStatus = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](NgControlStatus, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatus(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatus;\n}(AbstractControlStatus));\nNgControlStatus.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatus.ctorParameters = function () { return [\n    { type: NgControl, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] },] },\n]; };\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@stable\n */\nvar NgControlStatusGroup = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](NgControlStatusGroup, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatusGroup(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatusGroup;\n}(AbstractControlStatus));\nNgControlStatusGroup.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatusGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nvar VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nvar INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nvar PENDING = 'PENDING';\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nvar DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!(path instanceof Array)) {\n        path = ((path)).split(delimiter);\n    }\n    if (path instanceof Array && (path.length === 0))\n        return null;\n    return ((path)).reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return v.controls[name] || null;\n        }\n        if (v instanceof FormArray) {\n            return v.at(/** @type {?} */ (name)) || null;\n        }\n        return null;\n    }, control);\n}\n/**\n * @param {?=} validator\n * @return {?}\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * @param {?=} asyncValidator\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n        asyncValidator || null;\n}\n/**\n * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n * {\\@link FormArray}.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControl = (function () {\n    /**\n     * @param {?} validator\n     * @param {?} asyncValidator\n     */\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = function () { };\n        this._pristine = true;\n        this._touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    Object.defineProperty(AbstractControl.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"parent\", {\n        /**\n         * The parent control.\n         * @return {?}\n         */\n        get: function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"status\", {\n        /**\n         * The validation status of the control. There are four possible\n         * validation statuses:\n         *\n         * * **VALID**:  control has passed all validation checks\n         * * **INVALID**: control has failed at least one validation check\n         * * **PENDING**: control is in the midst of conducting a validation check\n         * * **DISABLED**: control is exempt from validation checks\n         *\n         * These statuses are mutually exclusive, so a control cannot be\n         * both valid AND invalid or invalid AND disabled.\n         * @return {?}\n         */\n        get: function () { return this._status; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this._status == PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this._status === DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this._status !== DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this._errors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this._pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return !this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () { return this._valueChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () { return this._statusChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setValidators = function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n    /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n    /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsUntouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsDirty = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    };\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = true;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * Marks the control as `pending`.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPending = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = PENDING;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    };\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.disable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = DISABLED;\n        this._errors = null;\n        this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        this._updateAncestors(!!opts.onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n    };\n    /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.enable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = VALID;\n        this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(!!opts.onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n    };\n    /**\n     * @param {?} onlySelf\n     * @return {?}\n     */\n    AbstractControl.prototype._updateAncestors = function (onlySelf) {\n        if (this._parent && !onlySelf) {\n            this._parent.updateValueAndValidity();\n            this._parent._updatePristine();\n            this._parent._updateTouched();\n        }\n    };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n    /**\n     * Sets the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.setValue = function (value, options) { };\n    /**\n     * Patches the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.patchValue = function (value, options) { };\n    /**\n     * Resets the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.reset = function (value, options) { };\n    /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.updateValueAndValidity = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this._errors = this._runValidator();\n            this._status = this._calculateStatus();\n            if (this._status === VALID || this._status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTreeValidity = function (opts) {\n        if (opts === void 0) { opts = { emitEvent: true }; }\n        this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity(opts); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._runValidator = function () {\n        return this.validator ? this.validator(this) : null;\n    };\n    /**\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n        var _this = this;\n        if (this.asyncValidator) {\n            this._status = PENDING;\n            var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe(function (errors) { return _this.setErrors(errors, { emitEvent: emitEvent }); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._cancelExistingSubscription = function () {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.setErrors = function (errors, opts) {\n        if (opts === void 0) { opts = {}; }\n        this._errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    };\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.getError = function (errorCode, path) {\n        var /** @type {?} */ control = path ? this.get(path) : this;\n        return control && control._errors ? control._errors[errorCode] : null;\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.hasError = function (errorCode, path) { return !!this.getError(errorCode, path); };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        /**\n         * Retrieves the top-level ancestor of this control.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ x = this;\n            while (x._parent) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n        this._status = this._calculateStatus();\n        if (emitEvent) {\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._initObservables = function () {\n        this._valueChanges = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        this._statusChanges = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._calculateStatus = function () {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this._errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} cb\n     * @return {?}\n     */\n    AbstractControl.prototype._forEachChild = function (cb) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} condition\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControls = function (condition) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._allControlsDisabled = function () { };\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n        return this._anyControls(function (control) { return control.status === status; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsDirty = function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsTouched = function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updatePristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    AbstractControl.prototype._isBoxedValue = function (formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n    return AbstractControl;\n}());\n/**\n * \\@whatItDoes Tracks the value and validation status of an individual form control.\n *\n * It is one of the three fundamental building blocks of Angular forms, along with\n * {\\@link FormGroup} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n * first argument. Example:\n *\n * ```ts\n * const ctrl = new FormControl('some value');\n * console.log(ctrl.value);     // 'some value'\n * ```\n *\n * You can also initialize the control with a form state object on instantiation,\n * which includes both the value and whether or not the control is disabled.\n * You can't use the value key without the disabled key; both are required\n * to use this way of initialization.\n *\n * ```ts\n * const ctrl = new FormControl({value: 'n/a', disabled: true});\n * console.log(ctrl.value);     // 'n/a'\n * console.log(ctrl.status);   // 'DISABLED'\n * ```\n *\n * To include a sync validator (or an array of sync validators) with the control,\n * pass it in as the second argument. Async validators are also supported, but\n * have to be passed in separately as the third arg.\n *\n * ```ts\n * const ctrl = new FormControl('', Validators.required);\n * console.log(ctrl.value);     // ''\n * console.log(ctrl.status);   // 'INVALID'\n * ```\n *\n * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormControl = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](FormControl, _super);\n    /**\n     * @param {?=} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormControl(formState, validator, asyncValidator) {\n        if (formState === void 0) { formState = null; }\n        var _this = _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator)) || this;\n        /**\n         * \\@internal\n         */\n        _this._onChange = [];\n        _this._applyFormState(formState);\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        _this._initObservables();\n        return _this;\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._value = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this._value, options.emitViewToModelChange !== false); });\n        }\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue} on `FormGroups` and `FormArrays`,\n     * where it does behave differently.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.patchValue = function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.reset = function (formState, options) {\n        if (formState === void 0) { formState = null; }\n        if (options === void 0) { options = {}; }\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this._value, options);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormControl.prototype._anyControls = function (condition) { return false; };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n    /**\n     * Register a listener for change events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._clearChangeFns = function () {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = function () { };\n    };\n    /**\n     * Register a listener for disabled events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnDisabledChange = function (fn) {\n        this._onDisabledChange.push(fn);\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormControl.prototype._forEachChild = function (cb) { };\n    /**\n     * @param {?} formState\n     * @return {?}\n     */\n    FormControl.prototype._applyFormState = function (formState) {\n        if (this._isBoxedValue(formState)) {\n            this._value = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this._value = formState;\n        }\n    };\n    return FormControl;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n * instances.\n *\n * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n * with each control name as the key.  It calculates its status by reducing the statuses\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n * argument. The key for each child will be the name under which it is registered.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * You can also include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormGroup = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](FormGroup, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormGroup(controls, validator, asyncValidator) {\n        var _this = _super.call(this, validator || null, asyncValidator || null) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update value or validity of the control, so for\n     * most cases you'll want to use {\\@link FormGroup#addControl} instead.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.registerControl = function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.addControl = function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove a control from this group.\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype.removeControl = function (name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.setControl = function (name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for\n     * existence in the group only, use {\\@link AbstractControl#get} instead.\n     * @param {?} controlName\n     * @return {?}\n     */\n    FormGroup.prototype.contains = function (controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    };\n    /**\n     *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(function (name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        Object.keys(value).forEach(function (name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {\\@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.reset = function (value, options) {\n        if (value === void 0) { value = {}; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     * @return {?}\n     */\n    FormGroup.prototype.getRawValue = function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control instanceof FormControl ? control.value : ((control)).getRawValue();\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype._throwIfControlMissing = function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new Error(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormGroup.prototype._forEachChild = function (cb) {\n        var _this = this;\n        Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) {\n            control.setParent(_this);\n            control._registerOnCollectionChange(_this._onCollectionChange);\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormGroup.prototype._anyControls = function (condition) {\n        var _this = this;\n        var /** @type {?} */ res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._reduceValue = function () {\n        var _this = this;\n        return this._reduceChildren({}, function (acc, control, name) {\n            if (control.enabled || _this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    FormGroup.prototype._reduceChildren = function (initValue, fn) {\n        var /** @type {?} */ res = initValue;\n        this._forEachChild(function (control, name) { res = fn(res, control, name); });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n            var controlName = _a[_i];\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroup.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n * {\\@link FormGroup} or {\\@link FormArray} instances.\n *\n * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n * It calculates its status by reducing the statuses of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormGroup}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n * argument.\n *\n * ### Example\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * You can also include array-level validators as the second arg, or array-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormArray = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](FormArray, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormArray(controls, validator, asyncValidator) {\n        var _this = _super.call(this, validator || null, asyncValidator || null) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Get the {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.at = function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {\\@link AbstractControl} at the end of the array.\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.push = function (control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.insert = function (index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove the control at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.removeAt = function (index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.setControl = function (index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         * @return {?}\n         */\n        get: function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {\\@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.reset = function (value, options) {\n        if (value === void 0) { value = []; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    FormArray.prototype.getRawValue = function () {\n        return this.controls.map(function (control) {\n            return control instanceof FormControl ? control.value : ((control)).getRawValue();\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype._throwIfControlMissing = function (index) {\n        if (!this.controls.length) {\n            throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new Error(\"Cannot find form control at index \" + index);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormArray.prototype._forEachChild = function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._updateValue = function () {\n        var _this = this;\n        this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n            .map(function (control) { return control.value; });\n    };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormArray.prototype._anyControls = function (condition) {\n        return this.controls.some(function (control) { return control.enabled && condition(control); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) { return _this._registerControl(control); });\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormArray.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n            var control = _a[_i];\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    };\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype._registerControl = function (control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    };\n    return FormArray;\n}(AbstractControl));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NgForm; })\n};\nvar resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * \\@howToUse\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n *\n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgForm = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](NgForm, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgForm(validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._submitted = false;\n        _this.ngSubmit = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        return _this;\n    }\n    Object.defineProperty(NgForm.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            dir._control = (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            var /** @type {?} */ group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.updateModel = function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ ctrl = (_this.form.get(/** @type {?} */ ((dir.path))));\n            ctrl.setValue(value);\n        });\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NgForm.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    NgForm.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    NgForm.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    NgForm.prototype._findContainer = function (path) {\n        path.pop();\n        return path.length ? (this.form.get(path)) : this.form;\n    };\n    return NgForm;\n}(ControlContainer));\nNgForm.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgForm.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; index as i\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TemplateDrivenErrors = (function () {\n    function TemplateDrivenErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelParentException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + FormErrorExamples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + FormErrorExamples.ngModelWithFormGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.formGroupNameException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.missingNameException = function () {\n        throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelGroupParentException = function () {\n        throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    return TemplateDrivenErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NgModelGroup; })\n};\n/**\n * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n * within `<form>` tags).\n *\n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n *\n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n * \\@stable\n */\nvar NgModelGroup = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](NgModelGroup, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgModelGroup(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgModelGroup.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    return NgModelGroup;\n}(AbstractFormGroupDirective));\nNgModelGroup.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n];\n/**\n * @nocollapse\n */\nNgModelGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nNgModelGroup.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModelGroup',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding = {\n    provide: NgControl,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NgModel; })\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nvar resolvedPromise$1 = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n * to a form control element.\n *\n * The {\\@link FormControl} instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n *\n * \\@howToUse\n *\n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional {\\@link Input}. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n *\n * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in {\\@link AbstractControlDirective}.\n *\n * The following is an example of a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * Take a look at an example of using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * To see `ngModel` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgModel = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](NgModel, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function NgModel(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        /**\n         * \\@internal\n         */\n        _this._control = new FormControl();\n        /**\n         * \\@internal\n         */\n        _this._registered = false;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype.ngOnChanges = function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgModel.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpControl = function () {\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._isStandalone = function () {\n        return !this._parent || !!(this.options && this.options.standalone);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpStandalone = function () {\n        setUpControl(this._control, this);\n        this._control.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkForErrors = function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkName = function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgModel.prototype._updateValue = function (value) {\n        var _this = this;\n        resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype._updateDisabled = function (changes) {\n        var _this = this;\n        var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n        var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(function () {\n            if (isDisabled && !_this.control.disabled) {\n                _this.control.disable();\n            }\n            else if (!isDisabled && _this.control.disabled) {\n                _this.control.enable();\n            }\n        });\n    };\n    return NgModel;\n}(NgControl));\nNgModel.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgModel.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nNgModel.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    'isDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['disabled',] },],\n    'model': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModel',] },],\n    'options': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModelOptions',] },],\n    'update': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReactiveErrors = (function () {\n    function ReactiveErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.controlParentException = function () {\n        throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.ngModelGroupException = function () {\n        throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + FormErrorExamples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.missingFormException = function () {\n        throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.groupParentException = function () {\n        throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formGroupName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.arrayParentException = function () {\n        throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + FormErrorExamples.formArrayName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.disabledAttrWarning = function () {\n        console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n    };\n    return ReactiveErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormControlDirective; })\n};\n/**\n * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n * {\\@link FormControlDirective}.\n *\n * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n * it does not require that your {\\@link FormControl} instance be part of any parent\n * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n * exists above it.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormControl} instance. See a full list of available properties in\n * {\\@link AbstractControl}.\n *\n * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n * or you can set it programmatically later using {\\@link AbstractControl#setValue} or\n * {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n *  \\@stable\n */\nvar FormControlDirective = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](FormControlDirective, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlDirective(validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype.ngOnChanges = function (changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && ((this.valueAccessor)).setDisabledState) {\n                ((((this.valueAccessor)).setDisabledState))(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype._isControlChanged = function (changes) {\n        return changes.hasOwnProperty('form');\n    };\n    return FormControlDirective;\n}(NgControl));\nFormControlDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n];\n/**\n * @nocollapse\n */\nFormControlDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlDirective.propDecorators = {\n    'form': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formControl',] },],\n    'model': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModel',] },],\n    'update': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n    'isDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormGroupDirective; })\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n *\n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue} methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * its {\\@link AbstractControl#statusChanges} event to be notified when the validation status is\n * re-calculated.\n *\n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormGroupDirective = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](FormGroupDirective, _super);\n    /**\n     * @param {?} _validators\n     * @param {?} _asyncValidators\n     */\n    function FormGroupDirective(_validators, _asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._validators = _validators;\n        _this._asyncValidators = _asyncValidators;\n        _this._submitted = false;\n        _this.directives = [];\n        _this.form = ((null));\n        _this.ngSubmit = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormGroupDirective.prototype.ngOnChanges = function (changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addControl = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeControl = function (dir) { remove(this.directives, dir); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormGroup = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormArray = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormArray = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.updateModel = function (dir, value) {\n        var /** @type {?} */ ctrl = (this.form.get(dir.path));\n        ctrl.setValue(value);\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateDomValue = function () {\n        var _this = this;\n        this.directives.forEach(function (dir) {\n            var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n            if (dir._control !== newCtrl) {\n                cleanUpControl(dir._control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir._control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateRegistrations = function () {\n        var _this = this;\n        this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(function () { });\n        this._oldForm = this.form;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateValidators = function () {\n        var /** @type {?} */ sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([/** @type {?} */ ((this.form.validator)), /** @type {?} */ ((sync))]);\n        var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([/** @type {?} */ ((this.form.asyncValidator)), /** @type {?} */ ((async))]);\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._checkFormPresent = function () {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    };\n    return FormGroupDirective;\n}(ControlContainer));\nFormGroupDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nFormGroupDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupDirective.propDecorators = {\n    'form': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formGroup',] },],\n    'ngSubmit': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"] },],\n};\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormGroupName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n * will look for a {\\@link FormGroup} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n *\n * **Access the group**: You can access the associated {\\@link FormGroup} using the\n * {\\@link AbstractControl#get} method. Ex: `this.form.get('name')`.\n *\n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormGroup}, or you can set it programmatically later using\n * {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormGroupName = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](FormGroupName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormGroupName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    };\n    return FormGroupName;\n}(AbstractFormGroupDirective));\nFormGroupName.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormGroupName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupName.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formGroupName',] },],\n};\nvar formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormArrayName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n * will look for a {\\@link FormArray} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n *\n * **Access the array**: You can access the associated {\\@link FormArray} using the\n * {\\@link AbstractControl#get} method on the parent {\\@link FormGroup}.\n * Ex: `this.form.get('cities')`.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormArray}, or you can set the value programmatically later using the\n * {\\@link FormArray}'s {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl#valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl#statusChanges} event to be notified when the validation\n * status is re-calculated.\n *\n * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by\n * calling its {\\@link FormArray#push} method.\n *  Ex: `this.form.get('cities').push(new FormControl());`\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormArrayName = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](FormArrayName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormArrayName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnInit = function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormArray(this);\n    };\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return ((this.formDirective)).getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? (this._parent.formDirective) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    };\n    return FormArrayName;\n}(ControlContainer));\nFormArrayName.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormArrayName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormArrayName.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formArrayName',] },],\n};\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar controlNameBinding = {\n    provide: NgControl,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormControlName; })\n};\n/**\n * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n * element by name.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the {\\@link FormControl} instance you want to\n * link, and will look for a {\\@link FormControl} registered with that name in the\n * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n *\n * **Access the control**: You can access the {\\@link FormControl} associated with\n * this directive by using the {\\@link AbstractControl#get} method.\n * Ex: `this.form.get('first');`\n *\n * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n * See a full list of available properties in {\\@link AbstractControl}.\n *\n *  **Set value**: You can set an initial value for the control when instantiating the\n *  {\\@link FormControl}, or you can set it programmatically later using\n *  {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormControlName = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](FormControlName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this._added = false;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnChanges = function (changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    };\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlName.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, /** @type {?} */ ((this._parent))); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return ((composeAsyncValidators(this._rawAsyncValidators)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._checkParentType = function () {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._setUpControl = function () {\n        this._checkParentType();\n        this._control = this.formDirective.addControl(this);\n        if (this.control.disabled && ((this.valueAccessor)).setDisabledState) {\n            ((((this.valueAccessor)).setDisabledState))(true);\n        }\n        this._added = true;\n    };\n    return FormControlName;\n}(NgControl));\nFormControlName.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n];\n/**\n * @nocollapse\n */\nFormControlName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlName.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formControlName',] },],\n    'model': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModel',] },],\n    'update': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n    'isDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return RequiredValidator; }),\n    multi: true\n};\nvar CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return CheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@stable\n */\nvar RequiredValidator = (function () {\n    function RequiredValidator() {\n    }\n    Object.defineProperty(RequiredValidator.prototype, \"required\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._required = value != null && value !== false && \"\" + value !== 'false';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    RequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.required(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return RequiredValidator;\n}());\nRequiredValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nRequiredValidator.ctorParameters = function () { return []; };\nRequiredValidator.propDecorators = {\n    'required': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@experimental\n */\nvar CheckboxRequiredValidator = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](CheckboxRequiredValidator, _super);\n    function CheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    CheckboxRequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.requiredTrue(c) : null;\n    };\n    return CheckboxRequiredValidator;\n}(RequiredValidator));\nCheckboxRequiredValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxRequiredValidator.ctorParameters = function () { return []; };\n/**\n * Provider which adds {\\@link EmailValidator} to {\\@link NG_VALIDATORS}.\n */\nvar EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return EmailValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@experimental\n */\nvar EmailValidator = (function () {\n    function EmailValidator() {\n    }\n    Object.defineProperty(EmailValidator.prototype, \"email\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    EmailValidator.prototype.validate = function (c) {\n        return this._enabled ? Validators.email(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    EmailValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return EmailValidator;\n}());\nEmailValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nEmailValidator.ctorParameters = function () { return []; };\nEmailValidator.propDecorators = {\n    'email': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * Provider which adds {\\@link MinLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='min'}\n */\nvar MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return MinLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n *\n * \\@stable\n */\nvar MinLengthValidator = (function () {\n    function MinLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MinLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MinLengthValidator.prototype.validate = function (c) {\n        return this.minlength == null ? null : this._validator(c);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MinLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    };\n    return MinLengthValidator;\n}());\nMinLengthValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMinLengthValidator.ctorParameters = function () { return []; };\nMinLengthValidator.propDecorators = {\n    'minlength': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * Provider which adds {\\@link MaxLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='max'}\n */\nvar MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return MaxLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n *\n * \\@stable\n */\nvar MaxLengthValidator = (function () {\n    function MaxLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.validate = function (c) {\n        return this.maxlength != null ? this._validator(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MaxLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    };\n    return MaxLengthValidator;\n}());\nMaxLengthValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMaxLengthValidator.ctorParameters = function () { return []; };\nMaxLengthValidator.propDecorators = {\n    'maxlength': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\nvar PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return PatternValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n *\n * ### Example\n *\n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * \\@stable\n */\nvar PatternValidator = (function () {\n    function PatternValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PatternValidator.prototype.ngOnChanges = function (changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n    return PatternValidator;\n}());\nPatternValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nPatternValidator.ctorParameters = function () { return []; };\nPatternValidator.propDecorators = {\n    'pattern': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n *\n * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n * forms.\n *\n * \\@howToUse\n *\n * To use, inject `FormBuilder` into your component class. You can then call its methods\n * directly.\n *\n * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  * **NgModule**: {\\@link ReactiveFormsModule}\n *\n * \\@stable\n */\nvar FormBuilder = (function () {\n    function FormBuilder() {\n    }\n    /**\n     * Construct a new {\\@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {\\@link FormGroup} constructor for more details.\n     * @param {?} controlsConfig\n     * @param {?=} extra\n     * @return {?}\n     */\n    FormBuilder.prototype.group = function (controlsConfig, extra) {\n        if (extra === void 0) { extra = null; }\n        var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n        var /** @type {?} */ validator = extra != null ? extra['validator'] : null;\n        var /** @type {?} */ asyncValidator = extra != null ? extra['asyncValidator'] : null;\n        return new FormGroup(controls, validator, asyncValidator);\n    };\n    /**\n     * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     * @param {?} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n        return new FormControl(formState, validator, asyncValidator);\n    };\n    /**\n     * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     * @param {?} controlsConfig\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n        var _this = this;\n        var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new FormArray(controls, validator, asyncValidator);\n    };\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._reduceControls = function (controlsConfig) {\n        var _this = this;\n        var /** @type {?} */ controls = {};\n        Object.keys(controlsConfig).forEach(function (controlName) {\n            controls[controlName] = _this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    };\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._createControl = function (controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            var /** @type {?} */ value = controlConfig[0];\n            var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    return FormBuilder;\n}());\nFormBuilder.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nFormBuilder.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Version\"]('4.3.5');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@experimental\n */\nvar NgNoValidate = (function () {\n    function NgNoValidate() {\n    }\n    return NgNoValidate;\n}());\nNgNoValidate.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' },\n            },] },\n];\n/**\n * @nocollapse\n */\nNgNoValidate.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SHARED_FORM_DIRECTIVES = [\n    NgNoValidate,\n    NgSelectOption,\n    NgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nvar TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nvar REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nvar InternalFormsSharedModule = (function () {\n    function InternalFormsSharedModule() {\n    }\n    return InternalFormsSharedModule;\n}());\nInternalFormsSharedModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES,\n            },] },\n];\n/**\n * @nocollapse\n */\nInternalFormsSharedModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The ng module for forms.\n * \\@stable\n */\nvar FormsModule = (function () {\n    function FormsModule() {\n    }\n    return FormsModule;\n}());\nFormsModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nFormsModule.ctorParameters = function () { return []; };\n/**\n * The ng module for reactive forms.\n * \\@stable\n */\nvar ReactiveFormsModule = (function () {\n    function ReactiveFormsModule() {\n    }\n    return ReactiveFormsModule;\n}());\nReactiveFormsModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nReactiveFormsModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link FormGroup} that\n * consists of {@link FormControl} objects, and mapping them onto the DOM. {@link FormControl}\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=forms.es5.js.map\n\n\n/***/ }),\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.error);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return this.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return this.completeNotification;\n    };\n    return Notification;\n}());\nNotification.completeNotification = new Notification('C');\nNotification.undefinedValueNotification = new Notification('N', undefined);\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar root_1 = __webpack_require__(12);\nvar Action_1 = __webpack_require__(382);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Scheduler_1 = __webpack_require__(138);\nvar AsyncScheduler = (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        _this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = (function (_super) {\n    tslib_1.__extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var _this = _super.call(this, 'argument out of range') || this;\n        _this.name = 'ArgumentOutOfRangeError';\n        Object.setPrototypeOf(_this, ArgumentOutOfRangeError.prototype);\n        return _this;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = (function (_super) {\n    tslib_1.__extends(EmptyError, _super);\n    function EmptyError() {\n        var _this = _super.call(this, 'no elements in sequence') || this;\n        _this.name = 'EmptyError';\n        Object.setPrototypeOf(_this, EmptyError.prototype);\n        return _this;\n    }\n    return EmptyError;\n}(Error));\nexports.EmptyError = EmptyError;\n//# sourceMappingURL=EmptyError.js.map\n\n/***/ }),\n/* 32 */,\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(6);\r\nvar rxjs_1 = __webpack_require__(137);\r\nvar AppState = (function () {\r\n    function AppState() {\r\n        this.useSums = new rxjs_1.BehaviorSubject(null);\r\n        this.usePercentage = new rxjs_1.BehaviorSubject(null);\r\n        this.calcWrapperData = new rxjs_1.BehaviorSubject(null);\r\n        this.faqData = new rxjs_1.BehaviorSubject(null);\r\n        this.usePercentage.next({ use: true });\r\n        this.useSums.next({ use: true });\r\n        this.calcWrapperData.next({\r\n            'heart-axis': { title: 'Расчет электрической оси сердца.' },\r\n            'is-arrhythmia': { title: 'Расчет соотношения интервалов PP' }\r\n        });\r\n        this.faqData.next({\r\n            'heart-axis': { data: 'heart-axis FAQ' },\r\n            'is-arrhythmia': { data: 'is-arrhythmia FAQ' }\r\n        });\r\n    }\r\n    AppState.prototype.toggle = function (data, direction) {\r\n        var value;\r\n        if (typeof direction !== 'undefined') {\r\n            value = {\r\n                use: direction,\r\n            };\r\n        }\r\n        else {\r\n            value = {\r\n                use: !this.getValue(data).use,\r\n            };\r\n        }\r\n        this[data].next(value);\r\n        return this;\r\n    };\r\n    AppState.prototype.getValue = function (data) {\r\n        return this[data].getValue();\r\n    };\r\n    AppState.prototype.getStream = function (data) {\r\n        return this[data].asObservable();\r\n    };\r\n    AppState.prototype.getDataStream = function (data) {\r\n        return this[data].asObservable();\r\n    };\r\n    AppState = __decorate([\r\n        core_1.Injectable(),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], AppState);\r\n    return AppState;\r\n}());\r\nexports.AppState = AppState;\r\n\n\n/***/ }),\n/* 34 */,\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subject_1 = __webpack_require__(7);\nvar Subscription_1 = __webpack_require__(9);\n/**\n * @class AsyncSubject<T>\n */\nvar AsyncSubject = (function (_super) {\n    tslib_1.__extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.value = null;\n        _this.hasNext = false;\n        _this.hasCompleted = false;\n        return _this;\n    }\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject_1.Subject));\nexports.AsyncSubject = AsyncSubject;\n//# sourceMappingURL=AsyncSubject.js.map\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subject_1 = __webpack_require__(7);\nvar queue_1 = __webpack_require__(98);\nvar Subscription_1 = __webpack_require__(9);\nvar observeOn_1 = __webpack_require__(56);\nvar ObjectUnsubscribedError_1 = __webpack_require__(64);\nvar SubjectSubscription_1 = __webpack_require__(413);\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = (function (_super) {\n    tslib_1.__extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        return _this;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return this.lift(new ReduceOperator(accumulator, seed, hasSeed));\n}\nexports.reduce = reduce;\nvar ReduceOperator = (function () {\n    function ReduceOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ReduceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ReduceSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ReduceOperator;\n}());\nexports.ReduceOperator = ReduceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ReduceSubscriber = (function (_super) {\n    tslib_1.__extends(ReduceSubscriber, _super);\n    function ReduceSubscriber(destination, accumulator, seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        _this.hasValue = false;\n        _this.acc = seed;\n        if (!_this.hasSeed) {\n            _this.index++;\n        }\n        return _this;\n    }\n    ReduceSubscriber.prototype._next = function (value) {\n        if (this.hasValue || (this.hasValue = this.hasSeed)) {\n            this._tryReduce(value);\n        }\n        else {\n            this.acc = value;\n            this.hasValue = true;\n        }\n    };\n    ReduceSubscriber.prototype._tryReduce = function (value) {\n        var result;\n        try {\n            result = this.accumulator(this.acc, value, this.index++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.acc = result;\n    };\n    ReduceSubscriber.prototype._complete = function () {\n        if (this.hasValue || this.hasSeed) {\n            this.destination.next(this.acc);\n        }\n        this.destination.complete();\n    };\n    return ReduceSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ReduceSubscriber = ReduceSubscriber;\n//# sourceMappingURL=reduce.js.map\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray_1 = __webpack_require__(19);\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n//# sourceMappingURL=isNumeric.js.map\n\n/***/ }),\n/* 40 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLink\", function() { return RouterLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLinkWithHref\", function() { return RouterLinkWithHref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLinkActive\", function() { return RouterLinkActive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterOutlet\", function() { return RouterOutlet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuardsCheckEnd\", function() { return GuardsCheckEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuardsCheckStart\", function() { return GuardsCheckStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationCancel\", function() { return NavigationCancel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationEnd\", function() { return NavigationEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationError\", function() { return NavigationError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationStart\", function() { return NavigationStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolveEnd\", function() { return ResolveEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolveStart\", function() { return ResolveStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteConfigLoadEnd\", function() { return RouteConfigLoadEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteConfigLoadStart\", function() { return RouteConfigLoadStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RoutesRecognized\", function() { return RoutesRecognized; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteReuseStrategy\", function() { return RouteReuseStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Router\", function() { return Router; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTES\", function() { return ROUTES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTER_CONFIGURATION\", function() { return ROUTER_CONFIGURATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTER_INITIALIZER\", function() { return ROUTER_INITIALIZER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterModule\", function() { return RouterModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"provideRoutes\", function() { return provideRoutes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChildrenOutletContexts\", function() { return ChildrenOutletContexts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OutletContext\", function() { return OutletContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoPreloading\", function() { return NoPreloading; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreloadAllModules\", function() { return PreloadAllModules; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreloadingStrategy\", function() { return PreloadingStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterPreloader\", function() { return RouterPreloader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivatedRoute\", function() { return ActivatedRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivatedRouteSnapshot\", function() { return ActivatedRouteSnapshot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterState\", function() { return RouterState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterStateSnapshot\", function() { return RouterStateSnapshot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PRIMARY_OUTLET\", function() { return PRIMARY_OUTLET; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertToParamMap\", function() { return convertToParamMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlHandlingStrategy\", function() { return UrlHandlingStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultUrlSerializer\", function() { return DefaultUrlSerializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSegment\", function() { return UrlSegment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSegmentGroup\", function() { return UrlSegmentGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSerializer\", function() { return UrlSerializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlTree\", function() { return UrlTree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VERSION\", function() { return VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵROUTER_PROVIDERS\", function() { return ROUTER_PROVIDERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵflatten\", function() { return flatten; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return ROUTER_FORROOT_GUARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return RouterInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return getAppInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵi\", function() { return getBootstrapListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return provideForRootGuard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return provideLocationStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵj\", function() { return provideRouterInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return rootRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return routerNgProbeToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return setupRouter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵk\", function() { return Tree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵl\", function() { return TreeNode; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__ = __webpack_require__(50);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__ = __webpack_require__(80);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__ = __webpack_require__(81);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__ = __webpack_require__(88);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__ = __webpack_require__(89);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__ = __webpack_require__(55);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__ = __webpack_require__(82);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__ = __webpack_require__(83);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__ = __webpack_require__(51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__ = __webpack_require__(65);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__ = __webpack_require__(54);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__);\n\n/**\n * @license Angular v4.3.5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    function NavigationStart(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    function NavigationEnd(id, url, urlAfterRedirects) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    function NavigationCancel(id, url, reason) {\n        this.id = id;\n        this.url = url;\n        this.reason = reason;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    function NavigationError(id, url, error) {\n        this.id = id;\n        this.url = url;\n        this.error = error;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function RoutesRecognized(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}());\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function GuardsCheckStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     * @param {?} shouldActivate\n     */\n    function GuardsCheckEnd(id, url, urlAfterRedirects, state, shouldActivate) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveEnd(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = (function () {\n    /**\n     * @param {?} params\n     */\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    ((error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return ((error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = (function () {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @param {?} bools\n * @return {?}\n */\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__[\"concatAll\"].call(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"].apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__[\"last\"].call(concat$);\n    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(last$, function () { return res; });\n}\n/**\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__[\"mergeAll\"].call(observables);\n    return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ɵisObservable\"])(value)) {\n        return value;\n    }\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ɵisPromise\"])(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(Promise.resolve(value));\n    }\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(/** @type {?} */ (value));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = (function () {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = (function () {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /**\n         * Number of child segments\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = (function () {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = (function () {\n    function UrlSerializer() {\n    }\n    /**\n     * Parse a url into a {\\@link UrlTree}\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlSerializer.prototype.parse = function (url) { };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @abstract\n     * @param {?} tree\n     * @return {?}\n     */\n    UrlSerializer.prototype.serialize = function (tree) { };\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = (function () {\n    function DefaultUrlSerializer() {\n    }\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI(/** @type {?} */ ((tree.fragment))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = (function () {\n    /**\n     * @param {?} url\n     */\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = (function () {\n    /**\n     * @param {?=} segmentGroup\n     */\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = (function () {\n    /**\n     * @param {?} urlTree\n     */\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = (function () {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment))); });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment))); });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"].apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__[\"concatAll\"].call(processedRoutes$);\n        var /** @type {?} */ first$ = __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(first$, function (e, _) {\n            if (e instanceof __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__[\"EmptyError\"]) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (cs) { return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children); });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(route._loadedConfig);\n            }\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n    var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = (function () {\n    /**\n     * @param {?} root\n     */\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = (function () {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](RouterState, _super);\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ emptyData = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ emptyQueryParams = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ fragment = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n    while (inhertingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n        var /** @type {?} */ parent = pathToRoot[inhertingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inhertingStartingFrom--;\n            // parent is componentless => current route should inherit its params and data\n        }\n        else if (!parent.component) {\n            inhertingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = Object.assign({}, res.params, curr.params);\n        var /** @type {?} */ data = Object.assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = Object.assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this._routeConfig ? this._routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"__extends\"](RouterStateSnapshot, _super);\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            ((route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            ((route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            ((route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            ((route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            ((route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        ((route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree_1 = ((routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree_1);\n        return tree_1;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.url), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.params), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.queryParams), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.fragment), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.data), c.outlet, c.component, c);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = (function () {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = (function () {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_2 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_2[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_2[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_2);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = (function () {\n    function NoMatch$1() {\n    }\n    return NoMatch$1;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     */\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(routeState);\n        }\n        catch (e) {\n            return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? ((last$1(segments))).parameters : {};\n            var /** @type {?} */ snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            return [new TreeNode(snapshot_1, [])];\n        }\n        var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n        var /** @type {?} */ snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_3 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_3)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? Object.assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_3 = routes; _i < routes_3.length; _i++) {\n        var r = routes_3[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_4 = routes; _i < routes_4.length; _i++) {\n        var r = routes_4[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = (function () {\n    function RouteReuseStrategy() {\n    }\n    /**\n     * Determines if this route (and its subtree) should be detached to be reused later\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldDetach = function (route) { };\n    /**\n     * Stores the detached route.\n     *\n     * Storing a `null` value should erase the previously stored value.\n     * @abstract\n     * @param {?} route\n     * @param {?} handle\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.store = function (route, handle) { };\n    /**\n     * Determines if this route (and its subtree) should be reattached\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldAttach = function (route) { };\n    /**\n     * Retrieves the previously stored route\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.retrieve = function (route) { };\n    /**\n     * Determines if a route should be reused\n     * @abstract\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) { };\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTES');\nvar RouterConfigLoader = (function () {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(this.loader.load(loadChildren));\n        }\n        else {\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactory\"]) {\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(t);\n                }\n                else {\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = (function () {\n    function UrlHandlingStrategy() {\n    }\n    /**\n     * Tells the router if this URL should be processed.\n     *\n     * When it returns true, the router will execute the regular navigation.\n     * When it returns false, the router will set the router state to an empty state.\n     * As a result, all the active components will be destroyed.\n     *\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { };\n    /**\n     * Extracts the part of the URL that should be handled by the router.\n     * The rest of the URL will remain untouched.\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.extract = function (url) { };\n    /**\n     * Merges the URL fragment with the rest of the URL.\n     * @abstract\n     * @param {?} newUrlPart\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.merge = function (newUrlPart, rawUrl) { };\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} rootContexts\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](/** @type {?} */ ((null)));\n        this.routerEvents = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__[\"Subject\"]();\n        this.navigationId = 0;\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.currentRouterState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"routerState\", {\n        /**\n         * The current route state\n         * @return {?}\n         */\n        get: function () { return this.currentRouterState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"url\", {\n        /**\n         * The current url\n         * @return {?}\n         */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"events\", {\n        /**\n         * An observable of router events\n         * @return {?}\n         */\n        get: function () { return this.routerEvents; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = function (e) { this.routerEvents.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config;\n        this.navigated = false;\n    };\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && preserveQueryParams && (console) && (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n            extras.queryParams = this.removeEmptyProps(extras.queryParams);\n        }\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"]\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n            this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(redirectsApplied$, function (appliedUrl) {\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(urlAndSnapshot$, function (p) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationTraverse$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation =\n                    new PreActivation(snapshot, _this.currentRouterState.snapshot, moduleInjector);\n                preActivation.traverse(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationTraverse$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preActivation.resolveData(), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationResolveData$, function (p) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.currentRouterState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.currentRouterState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.currentRouterState = state;\n                if (!shouldPreventPushState) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState)\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n                _this.currentRouterState = storedState;\n                _this.currentUrlTree = storedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        var /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n        this.location.replaceState(path);\n    };\n    return Router;\n}());\nvar CanActivate = (function () {\n    /**\n     * @param {?} path\n     */\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = (function () {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\nvar PreActivation = (function () {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     */\n    function PreActivation(future, curr, moduleInjector) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.traverse = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.traverseChildRoutes(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = function () {\n        var _this = this;\n        if (!this.isActivating())\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null);\n        var /** @type {?} */ checks$ = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(checks$, function (check) { return _this.runResolve(check.route); });\n        return __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__[\"reduce\"].call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseChildRoutes = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.traverseRoutes(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) { return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k)); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseRoutes = function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future._routeConfig === curr._routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future._routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = ((((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(checks$, function (check) { return andObservables(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])([_this.runCanActivateChild(check.path), _this.runCanActivate(check.route)])); });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        var /** @type {?} */ canDeactivate$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n        });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = Object.assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(keys), function (key) {\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__[\"last\"].call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nvar ActivateRoutes = (function () {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     */\n    function ActivateRoutes(routeReuseStrategy, futureState, currState) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) { _this.activateRoutes(c, children[c.value.outlet], contexts); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = ((this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' preserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras#queryParamsHandling}\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * \\@ngModule RouterModule\n *\n * See {\\@link Router#createUrlTree} for more information.\n *\n * \\@stable\n */\nvar RouterLink = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLink;\n}());\nRouterLink.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: ':not(a)[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLink.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Attribute\"], args: ['tabindex',] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ElementRef\"], },\n]; };\nRouterLink.propDecorators = {\n    'queryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'fragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParamsHandling': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveFragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'skipLocationChange': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'replaceUrl': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'routerLink': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveQueryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'onClick': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostListener\"], args: ['click',] },],\n};\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLinkWithHref;\n}());\nRouterLinkWithHref.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: 'a[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkWithHref.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LocationStrategy\"], },\n]; };\nRouterLinkWithHref.propDecorators = {\n    'target': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostBinding\"], args: ['attr.target',] }, { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'fragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParamsHandling': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveFragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'skipLocationChange': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'replaceUrl': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'href': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostBinding\"] },],\n    'routerLink': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveQueryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'onClick': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostListener\"], args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = (function () {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.active = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.active; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set: function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        var /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n        // react only when status has changed to prevent unnecessary dom updates\n        if (this.active !== hasActiveLinks) {\n            this.classes.forEach(function (c) {\n                if (hasActiveLinks) {\n                    _this.renderer.addClass(_this.element.nativeElement, c);\n                }\n                else {\n                    _this.renderer.removeClass(_this.element.nativeElement, c);\n                }\n            });\n            Promise.resolve(hasActiveLinks).then(function (active) { return _this.active = active; });\n        }\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) { return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact); };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    return RouterLinkActive;\n}());\nRouterLinkActive.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkActive.ctorParameters = function () { return [\n    { type: Router, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ChangeDetectorRef\"], },\n]; };\nRouterLinkActive.propDecorators = {\n    'links': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ContentChildren\"], args: [RouterLink, { descendants: true },] },],\n    'linksWithHrefs': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ContentChildren\"], args: [RouterLinkWithHref, { descendants: true },] },],\n    'routerLinkActiveOptions': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'routerLinkActive': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = (function () {\n    /**\n     * @param {?} parentContexts\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     * @param {?} changeDetector\n     */\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"EventEmitter\"]();\n        this.deactivateEvents = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"EventEmitter\"]();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.location.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = (((snapshot._routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    return RouterOutlet;\n}());\nRouterOutlet.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n];\n/**\n * @nocollapse\n */\nRouterOutlet.ctorParameters = function () { return [\n    { type: ChildrenOutletContexts, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ViewContainerRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ComponentFactoryResolver\"], },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Attribute\"], args: ['name',] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ChangeDetectorRef\"], },\n]; };\nRouterOutlet.propDecorators = {\n    'activateEvents': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Output\"], args: ['activate',] },],\n    'deactivateEvents': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Output\"], args: ['deactivate',] },],\n};\nvar OutletInjector = (function () {\n    /**\n     * @param {?} route\n     * @param {?} childContexts\n     * @param {?} parent\n     */\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = (function () {\n    function PreloadingStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadingStrategy.prototype.preload = function (route, fn) { };\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(fn(), function () { return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = function (route, fn) { return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = (function () {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    ;\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__[\"filter\"].call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = function () {\n        var /** @type {?} */ ngModule = this.injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_5 = routes; _i < routes_5.length; _i++) {\n            var route = routes_5[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__[\"mergeAll\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    return RouterPreloader;\n}());\nRouterPreloader.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nRouterPreloader.ctorParameters = function () { return [\n    { type: Router, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Compiler\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"], },\n    { type: PreloadingStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"Location\"],\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ApplicationRef\"], UrlSerializer, ChildrenOutletContexts, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"Location\"], __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"],\n            __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Compiler\"], ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()], [RouteReuseStrategy, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], useClass: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"SystemJsNgModuleLoader\"] },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgProbeToken\"]('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = (function () {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"SkipSelf\"]()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LocationStrategy\"],\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"PlatformLocation\"], [new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Inject\"](__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"APP_BASE_HREF\"]), new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgProbeToken\"], multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    return RouterModule;\n}());\nRouterModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModule\"], args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n];\n/**\n * @nocollapse\n */\nRouterModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Inject\"], args: [ROUTER_FORROOT_GUARD,] },] },\n    { type: Router, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"] },] },\n]; };\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"HashLocationStrategy\"](platformLocationStrategy, baseHref) :\n        new __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"PathLocationStrategy\"](platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ANALYZE_FOR_ENTRY_COMPONENTS\"], multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__[\"ɵgetDOM\"])();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((e.constructor)).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = (function () {\n    /**\n     * @param {?} injector\n     */\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__[\"Subject\"]();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LOCATION_INITIALIZED\"], Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ApplicationRef\"]);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    return RouterInitializer;\n}());\nRouterInitializer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nRouterInitializer.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"], },\n]; };\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"APP_INITIALIZER\"],\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"APP_BOOTSTRAP_LISTENER\"], multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Version\"]('4.3.5');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=router.es5.js.map\n\n\n/***/ }),\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subject_1 = __webpack_require__(7);\nvar ObjectUnsubscribedError_1 = __webpack_require__(64);\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    tslib_1.__extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PromiseObservable_1 = __webpack_require__(77);\nexports.fromPromise = PromiseObservable_1.PromiseObservable.create;\n//# sourceMappingURL=fromPromise.js.map\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar ArrayObservable_1 = __webpack_require__(18);\nvar isArray_1 = __webpack_require__(19);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\nvar none = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    observables.unshift(this);\n    return this.lift.call(new ArrayObservable_1.ArrayObservable(observables), new CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar isScheduler_1 = __webpack_require__(20);\nvar ArrayObservable_1 = __webpack_require__(18);\nvar mergeAll_1 = __webpack_require__(43);\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        _this.predicate = predicate;\n        return _this;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar subscribeToResult_1 = __webpack_require__(4);\nvar OuterSubscriber_1 = __webpack_require__(3);\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    tslib_1.__extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.resultSelector = resultSelector;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar Notification_1 = __webpack_require__(26);\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new ObserveOnOperator(scheduler, delay));\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    tslib_1.__extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar ArrayObservable_1 = __webpack_require__(18);\nvar isArray_1 = __webpack_require__(19);\nvar Subscriber_1 = __webpack_require__(2);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\nvar iterator_1 = __webpack_require__(44);\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(zipStatic.apply(void 0, [this].concat(observables)));\n}\nexports.zipProto = zipProto;\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexports.zipStatic = zipStatic;\nvar ZipOperator = (function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\nexports.ZipOperator = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = (function (_super) {\n    tslib_1.__extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) { values = Object.create(null); }\n        var _this = _super.call(this, destination) || this;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.project = (typeof project === 'function') ? project : null;\n        _this.values = values;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray_1.isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator_1.iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_1.iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ZipSubscriber = ZipSubscriber;\nvar StaticIterator = (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = (function (_super) {\n    tslib_1.__extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(6);\r\nvar router_1 = __webpack_require__(40);\r\nvar app_state_service_1 = __webpack_require__(33);\r\nvar FaqComponent = (function () {\r\n    function FaqComponent(route, state) {\r\n        var _this = this;\r\n        this.route = route;\r\n        this.state = state;\r\n        route\r\n            .parent\r\n            .url\r\n            .subscribe(function (value) { return _this.calculatorType = value[0].path; });\r\n        state\r\n            .getDataStream('faqData')\r\n            .subscribe(function (value) { return _this.data = value[_this.calculatorType].data; });\r\n    }\r\n    FaqComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'faq',\r\n            template: __webpack_require__(133)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [router_1.ActivatedRoute,\r\n            app_state_service_1.AppState])\r\n    ], FaqComponent);\r\n    return FaqComponent;\r\n}());\r\nexports.FaqComponent = FaqComponent;\r\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction checkMinimum(minimum) {\r\n    return function (control) {\r\n        if (control.value < minimum) {\r\n            return { invalidMinimum: true };\r\n        }\r\n    };\r\n}\r\nexports.checkMinimum = checkMinimum;\r\nfunction checkMaximum(maximum) {\r\n    return function (control) {\r\n        if (control.value > maximum) {\r\n            return { invalidMaximum: true };\r\n        }\r\n    };\r\n}\r\nexports.checkMaximum = checkMaximum;\r\nfunction verifyNum(control) {\r\n    if (typeof control.value !== 'number' || !isFinite(control.value)) {\r\n        return { invalidNumber: true };\r\n    }\r\n}\r\nexports.verifyNum = verifyNum;\r\nfunction allValuesNotZero() {\r\n    var controlsKeys = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        controlsKeys[_i] = arguments[_i];\r\n    }\r\n    return function (form) {\r\n        var values = [];\r\n        controlsKeys.map(function (elem) {\r\n            values.push(form.controls[elem].value);\r\n        });\r\n        if (values.every(function (elem) { return elem === 0; })) {\r\n            return { allValueIsZero: true };\r\n        }\r\n    };\r\n}\r\nexports.allValuesNotZero = allValuesNotZero;\r\nfunction sumOfValuesNotZero() {\r\n    var controlCouples = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        controlCouples[_i] = arguments[_i];\r\n    }\r\n    return function (form) {\r\n        var values = [];\r\n        controlCouples.map(function (couple) {\r\n            values.push(form.controls[couple[0]].value - form.controls[couple[1]].value);\r\n        });\r\n        if (values.every(function (elem) { return elem === 0; })) {\r\n            return { allSumsIsZero: true };\r\n        }\r\n    };\r\n}\r\nexports.sumOfValuesNotZero = sumOfValuesNotZero;\r\n\n\n/***/ }),\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar isArray_1 = __webpack_require__(19);\nvar isArrayLike_1 = __webpack_require__(419);\nvar isPromise_1 = __webpack_require__(420);\nvar PromiseObservable_1 = __webpack_require__(77);\nvar IteratorObservable_1 = __webpack_require__(279);\nvar ArrayObservable_1 = __webpack_require__(18);\nvar ArrayLikeObservable_1 = __webpack_require__(268);\nvar iterator_1 = __webpack_require__(44);\nvar Observable_1 = __webpack_require__(0);\nvar observeOn_1 = __webpack_require__(56);\nvar observable_1 = __webpack_require__(99);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    tslib_1.__extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        var _this = _super.call(this, null) || this;\n        _this.ish = ish;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_1.observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray_1.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike_1.isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_1.observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nexports.FromObservable = FromObservable;\n//# sourceMappingURL=FromObservable.js.map\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar root_1 = __webpack_require__(12);\nvar Observable_1 = __webpack_require__(0);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    tslib_1.__extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.promise = promise;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {PromiseLike<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar root_1 = __webpack_require__(12);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar Observable_1 = __webpack_require__(0);\nvar Subscriber_1 = __webpack_require__(2);\nvar map_1 = __webpack_require__(27);\n__webpack_require__(1);\nfunction getCORSRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else if (!!root_1.root.XDomainRequest) {\n        return new root_1.root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root_1.root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                    //suppress exceptions\n                }\n            }\n            return new root_1.root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nfunction ajaxGet(url, headers) {\n    if (headers === void 0) { headers = null; }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nexports.ajaxGet = ajaxGet;\nfunction ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nexports.ajaxPost = ajaxPost;\nfunction ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nexports.ajaxDelete = ajaxDelete;\nfunction ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nexports.ajaxPut = ajaxPut;\nfunction ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\nexports.ajaxPatch = ajaxPatch;\nfunction ajaxGetJSON(url, headers) {\n    return new AjaxObservable({ method: 'GET', url: url, responseType: 'json', headers: headers })\n        .lift(new map_1.MapOperator(function (x, index) { return x.response; }, null));\n}\nexports.ajaxGetJSON = ajaxGetJSON;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = (function (_super) {\n    tslib_1.__extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        var _this = _super.call(this) || this;\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        _this.request = request;\n        return _this;\n    }\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    return AjaxObservable;\n}(Observable_1.Observable));\n/**\n * Creates an observable for an Ajax request with either a request object with\n * url, headers, etc or a string for a URL.\n *\n * @example\n * source = Rx.Observable.ajax('/products');\n * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n *\n * @param {string|Object} request Can be one of the following:\n *   A string of the URL to make the Ajax call.\n *   An object with the following properties\n *   - url: URL of the request\n *   - body: The body of the request\n *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n *   - async: Whether the request is async\n *   - headers: Optional headers\n *   - crossDomain: true if a cross domain request, else false\n *   - createXHR: a function to override if you need to use an alternate\n *   XMLHttpRequest implementation.\n *   - resultSelector: a function to use to alter the output value type of\n *   the Observable. Gets {@link AjaxResponse} as an argument.\n * @return {Observable} An observable sequence containing the XMLHttpRequest.\n * @static true\n * @name ajax\n * @owner Observable\n*/\nAjaxObservable.create = (function () {\n    var create = function (urlOrRequest) {\n        return new AjaxObservable(urlOrRequest);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n})();\nexports.AjaxObservable = AjaxObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxSubscriber = (function (_super) {\n    tslib_1.__extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        var _this = _super.call(this, destination) || this;\n        _this.request = request;\n        _this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = _this.serializeBody(request.body, request.headers['Content-Type']);\n        _this.send();\n        return _this;\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n        if (xhr === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return encodeURI(key) + \"=\" + encodeURI(body[key]); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root_1.root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber_1.Subscriber));\nexports.AjaxSubscriber = AjaxSubscriber;\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        switch (this.responseType) {\n            case 'json':\n                if ('response' in xhr) {\n                    //IE does not support json as responseType, parse it internally\n                    this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n                }\n                else {\n                    this.response = JSON.parse(xhr.responseText || 'null');\n                }\n                break;\n            case 'document':\n                this.response = xhr.responseXML;\n                break;\n            case 'text':\n            default:\n                this.response = ('response' in xhr) ? xhr.response : xhr.responseText;\n                break;\n        }\n    }\n    return AjaxResponse;\n}());\nexports.AjaxResponse = AjaxResponse;\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = (function (_super) {\n    tslib_1.__extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        var _this = _super.call(this, message) || this;\n        _this.xhr = xhr;\n        _this.request = request;\n        _this.name = 'AjaxError';\n        _this.status = xhr.status;\n        Object.setPrototypeOf(_this, AjaxError.prototype);\n        return _this;\n    }\n    return AjaxError;\n}(Error));\nexports.AjaxError = AjaxError;\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = (function (_super) {\n    tslib_1.__extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        var _this = _super.call(this, 'ajax timeout', xhr, request) || this;\n        Object.setPrototypeOf(_this, AjaxTimeoutError.prototype);\n        return _this;\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\nexports.AjaxTimeoutError = AjaxTimeoutError;\n//# sourceMappingURL=AjaxObservable.js.map\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ForkJoinObservable_1 = __webpack_require__(273);\nexports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;\n//# sourceMappingURL=forkJoin.js.map\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FromObservable_1 = __webpack_require__(76);\nexports.from = FromObservable_1.FromObservable.create;\n//# sourceMappingURL=from.js.map\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayObservable_1 = __webpack_require__(18);\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    var operator = new CatchOperator(selector);\n    var caught = this.lift(operator);\n    return (operator.caught = caught);\n}\nexports._catch = _catch;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    tslib_1.__extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        var _this = _super.call(this, destination) || this;\n        _this.selector = selector;\n        _this.caught = caught;\n        return _this;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=catch.js.map\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mergeAll_1 = __webpack_require__(43);\n/* tslint:enable:max-line-length */\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return this.lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatAll = concatAll;\n//# sourceMappingURL=concatAll.js.map\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mergeMap_1 = __webpack_require__(55);\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n    return this.lift(new mergeMap_1.MergeMapOperator(project, resultSelector, 1));\n}\nexports.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nexports.distinctUntilChanged = distinctUntilChanged;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.hasKey = false;\n        if (typeof compare === 'function') {\n            _this.compare = compare;\n        }\n        return _this;\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n    return this.lift(new EveryOperator(predicate, thisArg, this));\n}\nexports.every = every;\nvar EveryOperator = (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar EverySubscriber = (function (_super) {\n    tslib_1.__extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.source = source;\n        _this.index = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=every.js.map\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/* tslint:enable:max-line-length */\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return this.lift(new FindValueOperator(predicate, this, false, thisArg));\n}\nexports.find = find;\nvar FindValueOperator = (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nexports.FindValueOperator = FindValueOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FindValueSubscriber = (function (_super) {\n    tslib_1.__extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.yieldIndex = yieldIndex;\n        _this.thisArg = thisArg;\n        _this.index = 0;\n        return _this;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        if (this.yieldIndex) {\n            this.notifyComplete(-1);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return FindValueSubscriber;\n}(Subscriber_1.Subscriber));\nexports.FindValueSubscriber = FindValueSubscriber;\n//# sourceMappingURL=find.js.map\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar EmptyError_1 = __webpack_require__(31);\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first(predicate, resultSelector, defaultValue) {\n    return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.first = first;\nvar FirstOperator = (function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = (function (_super) {\n    tslib_1.__extends(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.resultSelector = resultSelector;\n        _this.defaultValue = defaultValue;\n        _this.source = source;\n        _this.index = 0;\n        _this.hasCompleted = false;\n        _this._emitted = false;\n        return _this;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        if (!this._emitted) {\n            this._emitted = true;\n            destination.next(value);\n            destination.complete();\n            this.unsubscribe();\n            this.hasCompleted = true;\n        }\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n            this.unsubscribe();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError_1.EmptyError);\n            this.unsubscribe();\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=first.js.map\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar EmptyError_1 = __webpack_require__(31);\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last(predicate, resultSelector, defaultValue) {\n    return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.last = last;\nvar LastOperator = (function () {\n    function LastOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    LastOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return LastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar LastSubscriber = (function (_super) {\n    tslib_1.__extends(LastSubscriber, _super);\n    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.resultSelector = resultSelector;\n        _this.defaultValue = defaultValue;\n        _this.source = source;\n        _this.hasValue = false;\n        _this.index = 0;\n        if (typeof defaultValue !== 'undefined') {\n            _this.lastValue = defaultValue;\n            _this.hasValue = true;\n        }\n        return _this;\n    }\n    LastSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.lastValue = result;\n        this.hasValue = true;\n    };\n    LastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.hasValue) {\n            destination.next(this.lastValue);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return LastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=last.js.map\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent));\n}\nexports.mergeMapTo = mergeMapTo;\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nvar MergeMapToOperator = (function () {\n    function MergeMapToOperator(ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapToOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n    };\n    return MergeMapToOperator;\n}());\nexports.MergeMapToOperator = MergeMapToOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapToSubscriber = (function (_super) {\n    tslib_1.__extends(MergeMapToSubscriber, _super);\n    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this, destination) || this;\n        _this.ish = ish;\n        _this.resultSelector = resultSelector;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapToSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var resultSelector = this.resultSelector;\n            var index = this.index++;\n            var ish = this.ish;\n            var destination = this.destination;\n            this.active++;\n            this._innerSub(ish, destination, resultSelector, value, index);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapToSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    MergeMapToSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapToSubscriber = MergeMapToSubscriber;\n//# sourceMappingURL=mergeMapTo.js.map\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar FromObservable_1 = __webpack_require__(76);\nvar isArray_1 = __webpack_require__(19);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore though of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nfunction onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return this.lift(new OnErrorResumeNextOperator(nextSources));\n}\nexports.onErrorResumeNext = onErrorResumeNext;\n/* tslint:enable:max-line-length */\nfunction onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    var source = null;\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nexports.onErrorResumeNextStatic = onErrorResumeNextStatic;\nvar OnErrorResumeNextOperator = (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = (function (_super) {\n    tslib_1.__extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.nextSources = nextSources;\n        return _this;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult_1.subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar isArray_1 = __webpack_require__(19);\nvar ArrayObservable_1 = __webpack_require__(18);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return this.lift.call(raceStatic.apply(void 0, [this].concat(observables)));\n}\nexports.race = race;\nfunction raceStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `race([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray_1.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());\n}\nexports.raceStatic = raceStatic;\nvar RaceOperator = (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexports.RaceOperator = RaceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RaceSubscriber = (function (_super) {\n    tslib_1.__extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasFirst = false;\n        _this.observables = [];\n        _this.subscriptions = [];\n        return _this;\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.RaceSubscriber = RaceSubscriber;\n//# sourceMappingURL=race.js.map\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\nexports.defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector, config) {\n    if (config === void 0) { config = exports.defaultThrottleConfig; }\n    return this.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\nexports.throttle = throttle;\nvar ThrottleOperator = (function () {\n    function ThrottleOperator(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = (function (_super) {\n    tslib_1.__extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.durationSelector = durationSelector;\n        _this._leading = _leading;\n        _this._trailing = _trailing;\n        _this._hasTrailingValue = false;\n        return _this;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this._trailing) {\n                this._hasTrailingValue = true;\n                this._trailingValue = value;\n            }\n        }\n        else {\n            var duration = this.tryDurationSelector(value);\n            if (duration) {\n                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n            }\n            if (this._leading) {\n                this.destination.next(value);\n                if (this._trailing) {\n                    this._hasTrailingValue = true;\n                    this._trailingValue = value;\n                }\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    ThrottleSubscriber.prototype._unsubscribe = function () {\n        var _a = this, throttled = _a.throttled, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue, _trailing = _a._trailing;\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n    };\n    ThrottleSubscriber.prototype._sendTrailing = function () {\n        var _a = this, destination = _a.destination, throttled = _a.throttled, _trailing = _a._trailing, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue;\n        if (throttled && _trailing && _hasTrailingValue) {\n            destination.next(_trailingValue);\n            this._trailingValue = null;\n            this._hasTrailingValue = false;\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=throttle.js.map\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar async_1 = __webpack_require__(11);\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nfunction timeInterval(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new TimeIntervalOperator(scheduler));\n}\nexports.timeInterval = timeInterval;\nvar TimeInterval = (function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\nexports.TimeInterval = TimeInterval;\nvar TimeIntervalOperator = (function () {\n    function TimeIntervalOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimeIntervalOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n    };\n    return TimeIntervalOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeIntervalSubscriber = (function (_super) {\n    tslib_1.__extends(TimeIntervalSubscriber, _super);\n    function TimeIntervalSubscriber(destination, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.lastTime = 0;\n        _this.lastTime = scheduler.now();\n        return _this;\n    }\n    TimeIntervalSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        var span = now - this.lastTime;\n        this.lastTime = now;\n        this.destination.next(new TimeInterval(value, span));\n    };\n    return TimeIntervalSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeInterval.js.map\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar async_1 = __webpack_require__(11);\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nfunction timestamp(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new TimestampOperator(scheduler));\n}\nexports.timestamp = timestamp;\nvar Timestamp = (function () {\n    function Timestamp(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n    return Timestamp;\n}());\nexports.Timestamp = Timestamp;\nvar TimestampOperator = (function () {\n    function TimestampOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimestampOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new TimestampSubscriber(observer, this.scheduler));\n    };\n    return TimestampOperator;\n}());\nvar TimestampSubscriber = (function (_super) {\n    tslib_1.__extends(TimestampSubscriber, _super);\n    function TimestampSubscriber(destination, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    TimestampSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        this.destination.next(new Timestamp(value, now));\n    };\n    return TimestampSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timestamp.js.map\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar AsyncAction_1 = __webpack_require__(28);\nvar AsyncScheduler_1 = __webpack_require__(29);\nvar VirtualTimeScheduler = (function (_super) {\n    tslib_1.__extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }\n        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\n        _this.maxFrames = maxFrames;\n        _this.frame = 0;\n        _this.index = -1;\n        return _this;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return VirtualTimeScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nVirtualTimeScheduler.frameTimeFactor = 10;\nexports.VirtualTimeScheduler = VirtualTimeScheduler;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar VirtualAction = (function (_super) {\n    tslib_1.__extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) { index = scheduler.index += 1; }\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.index = index;\n        _this.active = true;\n        _this.index = scheduler.index = index;\n        return _this;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        // If an action is rescheduled, we save allocations by mutating its state,\n        // pushing it to the end of the scheduler queue, and recycling the action.\n        // But since the VirtualTimeScheduler is used for testing, VirtualActions\n        // must be immutable so they can be inspected later.\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction_1.AsyncAction));\nexports.VirtualAction = VirtualAction;\n//# sourceMappingURL=VirtualTimeScheduler.js.map\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsapAction_1 = __webpack_require__(385);\nvar AsapScheduler_1 = __webpack_require__(386);\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * @example <caption>Compare async and asap scheduler</caption>\n *\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n *\n * @static true\n * @name asap\n * @owner Scheduler\n */\nexports.asap = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);\n//# sourceMappingURL=asap.js.map\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueueAction_1 = __webpack_require__(387);\nvar QueueScheduler_1 = __webpack_require__(388);\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nexports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n//# sourceMappingURL=queue.js.map\n\n/***/ }),\n/* 99 */,\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SubscriptionLog = (function () {\n    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {\n        if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }\n        this.subscribedFrame = subscribedFrame;\n        this.unsubscribedFrame = unsubscribedFrame;\n    }\n    return SubscriptionLog;\n}());\nexports.SubscriptionLog = SubscriptionLog;\n//# sourceMappingURL=SubscriptionLog.js.map\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SubscriptionLog_1 = __webpack_require__(100);\nvar SubscriptionLoggable = (function () {\n    function SubscriptionLoggable() {\n        this.subscriptions = [];\n    }\n    SubscriptionLoggable.prototype.logSubscribedFrame = function () {\n        this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));\n        return this.subscriptions.length - 1;\n    };\n    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {\n        var subscriptionLogs = this.subscriptions;\n        var oldSubscriptionLog = subscriptionLogs[index];\n        subscriptionLogs[index] = new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\n    };\n    return SubscriptionLoggable;\n}());\nexports.SubscriptionLoggable = SubscriptionLoggable;\n//# sourceMappingURL=SubscriptionLoggable.js.map\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nvar TimeoutError = (function (_super) {\n    tslib_1.__extends(TimeoutError, _super);\n    function TimeoutError() {\n        var _this = _super.call(this, 'Timeout has occurred') || this;\n        Object.setPrototypeOf(_this, TimeoutError.prototype);\n        return _this;\n    }\n    return TimeoutError;\n}(Error));\nexports.TimeoutError = TimeoutError;\n//# sourceMappingURL=TimeoutError.js.map\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction applyMixins(derivedCtor, baseCtors) {\n    for (var i = 0, len = baseCtors.length; i < len; i++) {\n        var baseCtor = baseCtors[i];\n        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {\n            var name_1 = propertyKeys[j];\n            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];\n        }\n    }\n}\nexports.applyMixins = applyMixins;\n//# sourceMappingURL=applyMixins.js.map\n\n/***/ }),\n/* 104 */,\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(401);\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(6);\r\nvar AxisCalculator = (function () {\r\n    function AxisCalculator(settings) {\r\n        this.settings = settings;\r\n        this.accuracy = settings.accuracy.default;\r\n        this.maxSum = settings.maxSum.default;\r\n        this.maxWave = settings.maxWave.default;\r\n        if (!AxisCalculator_1._instance) {\r\n            AxisCalculator_1._instance = this;\r\n        }\r\n        return AxisCalculator_1._instance;\r\n    }\r\n    AxisCalculator_1 = AxisCalculator;\r\n    AxisCalculator.prototype.setAccuracy = function (accuracy) {\r\n        this.accuracy = accuracy;\r\n        return this;\r\n    };\r\n    AxisCalculator.prototype.setMaxSum = function (min, max) {\r\n        this.maxSum = {\r\n            min: min,\r\n            max: max\r\n        };\r\n        return this;\r\n    };\r\n    AxisCalculator.prototype.setMaxWave = function (max) {\r\n        this.maxWave = {\r\n            min: this.maxWave.min,\r\n            max: max\r\n        };\r\n        return this;\r\n    };\r\n    AxisCalculator.prototype.countAngle = function (sumI, sumIII) {\r\n        var tanAlfa = ((sumIII / sumI) - Math.cos(120 * Math.PI / 180)) / Math.sin(120 * Math.PI / 180);\r\n        var alfa = Math.atan(tanAlfa) * 180 / Math.PI;\r\n        if (sumI < 0) {\r\n            if (alfa <= 0) {\r\n                alfa = alfa + 180;\r\n            }\r\n            else {\r\n                alfa = alfa - 180;\r\n            }\r\n        }\r\n        return Number(alfa.toFixed(this.accuracy));\r\n    };\r\n    AxisCalculator.prototype.countSumsThenAngle = function (rI, qsI, rIII, qsIII) {\r\n        var sumI = rI + qsI;\r\n        var sumIII = rIII + qsIII;\r\n        return this.countAngle(sumI, sumIII);\r\n    };\r\n    AxisCalculator = AxisCalculator_1 = __decorate([\r\n        core_1.Injectable(),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], AxisCalculator);\r\n    return AxisCalculator;\r\n    var AxisCalculator_1;\r\n}());\r\nexports.AxisCalculator = AxisCalculator;\r\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(6);\r\nvar ArrhythmiaService = (function () {\r\n    function ArrhythmiaService(data) {\r\n        this.settings = data;\r\n        this.coefficient = this.settings.coefficient.init;\r\n        this.difference = this.settings.difference.init;\r\n        this.accuracy = this.settings.accuracy.init;\r\n        this.moreThenOnly = this.settings.moreThenOnly;\r\n    }\r\n    ArrhythmiaService.prototype.countProportion = function (pp1, pp2) {\r\n        var maxPP = pp1 >= pp2 ? pp1 : pp2;\r\n        var minPP = pp1 < pp2 ? pp1 : pp2;\r\n        var delta = (maxPP - minPP) / minPP * 100;\r\n        return Number(delta.toFixed(this.accuracy));\r\n    };\r\n    ArrhythmiaService.prototype.countDifferenceTime = function (pp1, pp2) {\r\n        var maxPP = pp1 >= pp2 ? pp1 : pp2;\r\n        var minPP = pp1 < pp2 ? pp1 : pp2;\r\n        var delta = maxPP - minPP;\r\n        return Number(delta.toFixed(this.accuracy));\r\n    };\r\n    ArrhythmiaService.prototype.isArrhythmia = function (delta, baseDelta) {\r\n        var result;\r\n        if (this.moreThenOnly) {\r\n            result = delta > baseDelta;\r\n        }\r\n        else {\r\n            result = delta >= baseDelta;\r\n        }\r\n        return result;\r\n    };\r\n    ArrhythmiaService = __decorate([\r\n        core_1.Injectable(),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], ArrhythmiaService);\r\n    return ArrhythmiaService;\r\n}());\r\nexports.ArrhythmiaService = ArrhythmiaService;\r\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// angular\r\nvar core_1 = __webpack_require__(6);\r\nvar common_1 = __webpack_require__(34);\r\nvar forms_1 = __webpack_require__(15);\r\n// app\r\nvar faq_component_1 = __webpack_require__(58);\r\nvar btn_plus_component_1 = __webpack_require__(125);\r\nvar sum_field_component_1 = __webpack_require__(127);\r\nvar settings_field_component_1 = __webpack_require__(126);\r\nvar SharedModule = (function () {\r\n    function SharedModule() {\r\n    }\r\n    SharedModule = __decorate([\r\n        core_1.NgModule({\r\n            declarations: [\r\n                btn_plus_component_1.BtnPlus,\r\n                sum_field_component_1.SumFieldComponent,\r\n                settings_field_component_1.SettingsFieldComponent,\r\n                faq_component_1.FaqComponent\r\n            ],\r\n            exports: [\r\n                btn_plus_component_1.BtnPlus,\r\n                sum_field_component_1.SumFieldComponent,\r\n                settings_field_component_1.SettingsFieldComponent,\r\n                faq_component_1.FaqComponent\r\n            ],\r\n            imports: [\r\n                common_1.CommonModule,\r\n                forms_1.FormsModule,\r\n                forms_1.ReactiveFormsModule,\r\n            ],\r\n        })\r\n    ], SharedModule);\r\n    return SharedModule;\r\n}());\r\nexports.SharedModule = SharedModule;\r\n\n\n/***/ }),\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(6);\r\nvar forms_1 = __webpack_require__(15);\r\nvar BtnPlus = (function () {\r\n    function BtnPlus() {\r\n        this._loop = null;\r\n        this._delayBeforeLoop = null;\r\n    }\r\n    BtnPlus.prototype.increment = function () {\r\n        this.input.patchValue(this.input.value + this.step);\r\n    };\r\n    BtnPlus.prototype.incrementStart = function (event) {\r\n        var _this = this;\r\n        event.preventDefault();\r\n        this.increment();\r\n        if (this._delayBeforeLoop) {\r\n            clearTimeout(this._delayBeforeLoop);\r\n        }\r\n        if (this._loop) {\r\n            clearInterval(this._loop);\r\n        }\r\n        this._delayBeforeLoop = setTimeout(function () {\r\n            _this._loop = setInterval(function () {\r\n                _this.increment();\r\n            }, 25);\r\n        }, 250);\r\n    };\r\n    BtnPlus.prototype.incrementStop = function (event) {\r\n        event.preventDefault();\r\n        if (this._delayBeforeLoop) {\r\n            clearTimeout(this._delayBeforeLoop);\r\n        }\r\n        if (this._loop) {\r\n            clearInterval(this._loop);\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", forms_1.FormControl)\r\n    ], BtnPlus.prototype, \"input\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], BtnPlus.prototype, \"step\", void 0);\r\n    BtnPlus = __decorate([\r\n        core_1.Component({\r\n            selector: 'btn-plus',\r\n            template: __webpack_require__(132)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], BtnPlus);\r\n    return BtnPlus;\r\n}());\r\nexports.BtnPlus = BtnPlus;\r\n\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// angular\r\nvar core_1 = __webpack_require__(6);\r\nvar forms_1 = __webpack_require__(15);\r\nvar SettingsFieldComponent = (function () {\r\n    function SettingsFieldComponent() {\r\n    }\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", forms_1.FormControl)\r\n    ], SettingsFieldComponent.prototype, \"input\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], SettingsFieldComponent.prototype, \"step\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], SettingsFieldComponent.prototype, \"maximum\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], SettingsFieldComponent.prototype, \"minimum\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], SettingsFieldComponent.prototype, \"value\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SettingsFieldComponent.prototype, \"data\", void 0);\r\n    SettingsFieldComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'settings-field',\r\n            template: __webpack_require__(134)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], SettingsFieldComponent);\r\n    return SettingsFieldComponent;\r\n}());\r\nexports.SettingsFieldComponent = SettingsFieldComponent;\r\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// angular\r\nvar core_1 = __webpack_require__(6);\r\nvar forms_1 = __webpack_require__(15);\r\nvar SumFieldComponent = (function () {\r\n    function SumFieldComponent() {\r\n    }\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", forms_1.FormControl)\r\n    ], SumFieldComponent.prototype, \"input\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], SumFieldComponent.prototype, \"step\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], SumFieldComponent.prototype, \"maximum\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], SumFieldComponent.prototype, \"minimum\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SumFieldComponent.prototype, \"data\", void 0);\r\n    SumFieldComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'sum-field',\r\n            template: __webpack_require__(135)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], SumFieldComponent);\r\n    return SumFieldComponent;\r\n}());\r\nexports.SumFieldComponent = SumFieldComponent;\r\n\n\n/***/ }),\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<span class=\\\"\\\" (mousedown)=\\\"this.incrementStart ($event)\\\" (mouseup)=\\\"this.incrementStop ($event)\\\" (mouseleave)=\\\"this.incrementStop ($event)\\\">{{ step >= 0 ? '+' : '-' }}</span>\";\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<h2>FAQ</h2> {{ this.data }}\";\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<label class=\\\"form-label\\\"> <span [innerHTML]=\\\"data.title\\\"></span><br> <btn-plus [input]=\\\"input\\\" [step]=\\\"step\\\"></btn-plus> <input name=\\\"{{ this.data.name }}\\\" class=\\\"\\\" type=\\\"number\\\" [formControl]=\\\"input\\\"> <btn-plus [input]=\\\"input\\\" [step]=\\\"-1 * step\\\"></btn-plus><br> <output class=\\\"\\\"> {{ this.data.output }}{{ this.value }} </output> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('required')\\\">Поле не заполено</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidNumber') && !input.hasError('required')\\\">Введите число</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidMinimum')\\\">Введите {{ this.minimum }} или больше</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidMaximum')\\\">Введите {{ this.maximum }} или меньше</span> </label>\";\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<label class=\\\"form-label\\\"> <span [innerHTML]=\\\"data.title\\\"></span><br> <btn-plus [input]=\\\"input\\\" [step]=\\\"step\\\"></btn-plus> <input name=\\\"{{ this.data.name }}\\\" class=\\\"\\\" type=\\\"number\\\" [formControl]=\\\"input\\\"> <btn-plus [input]=\\\"input\\\" [step]=\\\"-1 * step\\\"></btn-plus> <br/> <output *ngIf=\\\"input.errors\\\"> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('required')\\\">Поле не заполено</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidNumber') && !input.hasError('required')\\\">Введите число</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidMinimum')\\\">Введите {{ this.minimum }} или больше</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidMaximum')\\\">Введите {{ this.maximum }} или меньше</span> </output> </label>\";\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:no-unused-variable */\n__webpack_require__(1);\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nvar Subject_1 = __webpack_require__(7);\nexports.Subject = Subject_1.Subject;\nexports.AnonymousSubject = Subject_1.AnonymousSubject;\n/* tslint:enable:no-unused-variable */\nvar Observable_1 = __webpack_require__(0);\nexports.Observable = Observable_1.Observable;\n// statics\n/* tslint:disable:no-use-before-declare */\n__webpack_require__(139);\n__webpack_require__(140);\n__webpack_require__(141);\n__webpack_require__(142);\n__webpack_require__(143);\n__webpack_require__(146);\n__webpack_require__(147);\n__webpack_require__(148);\n__webpack_require__(149);\n__webpack_require__(150);\n__webpack_require__(151);\n__webpack_require__(152);\n__webpack_require__(153);\n__webpack_require__(154);\n__webpack_require__(155);\n__webpack_require__(160);\n__webpack_require__(156);\n__webpack_require__(157);\n__webpack_require__(158);\n__webpack_require__(159);\n__webpack_require__(161);\n__webpack_require__(164);\n__webpack_require__(162);\n__webpack_require__(163);\n__webpack_require__(165);\n//dom\n__webpack_require__(144);\n__webpack_require__(145);\n//operators\n__webpack_require__(168);\n__webpack_require__(169);\n__webpack_require__(170);\n__webpack_require__(171);\n__webpack_require__(172);\n__webpack_require__(173);\n__webpack_require__(174);\n__webpack_require__(175);\n__webpack_require__(176);\n__webpack_require__(177);\n__webpack_require__(178);\n__webpack_require__(179);\n__webpack_require__(180);\n__webpack_require__(186);\n__webpack_require__(181);\n__webpack_require__(182);\n__webpack_require__(183);\n__webpack_require__(184);\n__webpack_require__(185);\n__webpack_require__(187);\n__webpack_require__(188);\n__webpack_require__(189);\n__webpack_require__(190);\n__webpack_require__(193);\n__webpack_require__(194);\n__webpack_require__(195);\n__webpack_require__(191);\n__webpack_require__(196);\n__webpack_require__(197);\n__webpack_require__(198);\n__webpack_require__(199);\n__webpack_require__(200);\n__webpack_require__(201);\n__webpack_require__(202);\n__webpack_require__(203);\n__webpack_require__(166);\n__webpack_require__(167);\n__webpack_require__(204);\n__webpack_require__(205);\n__webpack_require__(192);\n__webpack_require__(206);\n__webpack_require__(207);\n__webpack_require__(208);\n__webpack_require__(209);\n__webpack_require__(210);\n__webpack_require__(211);\n__webpack_require__(212);\n__webpack_require__(213);\n__webpack_require__(214);\n__webpack_require__(215);\n__webpack_require__(216);\n__webpack_require__(217);\n__webpack_require__(218);\n__webpack_require__(219);\n__webpack_require__(220);\n__webpack_require__(221);\n__webpack_require__(222);\n__webpack_require__(223);\n__webpack_require__(225);\n__webpack_require__(224);\n__webpack_require__(226);\n__webpack_require__(227);\n__webpack_require__(228);\n__webpack_require__(229);\n__webpack_require__(230);\n__webpack_require__(231);\n__webpack_require__(232);\n__webpack_require__(233);\n__webpack_require__(234);\n__webpack_require__(235);\n__webpack_require__(236);\n__webpack_require__(237);\n__webpack_require__(238);\n__webpack_require__(239);\n__webpack_require__(240);\n__webpack_require__(241);\n__webpack_require__(242);\n__webpack_require__(243);\n__webpack_require__(244);\n__webpack_require__(245);\n__webpack_require__(246);\n__webpack_require__(247);\n__webpack_require__(248);\n__webpack_require__(249);\n__webpack_require__(250);\n__webpack_require__(251);\n__webpack_require__(252);\n__webpack_require__(253);\n__webpack_require__(254);\n__webpack_require__(255);\n__webpack_require__(256);\n__webpack_require__(257);\n__webpack_require__(258);\n__webpack_require__(259);\n__webpack_require__(260);\n__webpack_require__(261);\n__webpack_require__(262);\n__webpack_require__(263);\n__webpack_require__(264);\n__webpack_require__(265);\n__webpack_require__(266);\n__webpack_require__(267);\nvar Subscription_1 = __webpack_require__(9);\nexports.Subscription = Subscription_1.Subscription;\nvar Subscriber_1 = __webpack_require__(2);\nexports.Subscriber = Subscriber_1.Subscriber;\nvar AsyncSubject_1 = __webpack_require__(35);\nexports.AsyncSubject = AsyncSubject_1.AsyncSubject;\nvar ReplaySubject_1 = __webpack_require__(36);\nexports.ReplaySubject = ReplaySubject_1.ReplaySubject;\nvar BehaviorSubject_1 = __webpack_require__(50);\nexports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;\nvar ConnectableObservable_1 = __webpack_require__(414);\nexports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;\nvar Notification_1 = __webpack_require__(26);\nexports.Notification = Notification_1.Notification;\nvar EmptyError_1 = __webpack_require__(31);\nexports.EmptyError = EmptyError_1.EmptyError;\nvar ArgumentOutOfRangeError_1 = __webpack_require__(30);\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\nvar ObjectUnsubscribedError_1 = __webpack_require__(64);\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;\nvar TimeoutError_1 = __webpack_require__(102);\nexports.TimeoutError = TimeoutError_1.TimeoutError;\nvar UnsubscriptionError_1 = __webpack_require__(418);\nexports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;\nvar timeInterval_1 = __webpack_require__(94);\nexports.TimeInterval = timeInterval_1.TimeInterval;\nvar timestamp_1 = __webpack_require__(95);\nexports.Timestamp = timestamp_1.Timestamp;\nvar TestScheduler_1 = __webpack_require__(392);\nexports.TestScheduler = TestScheduler_1.TestScheduler;\nvar VirtualTimeScheduler_1 = __webpack_require__(96);\nexports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;\nvar AjaxObservable_1 = __webpack_require__(78);\nexports.AjaxResponse = AjaxObservable_1.AjaxResponse;\nexports.AjaxError = AjaxObservable_1.AjaxError;\nexports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;\nvar asap_1 = __webpack_require__(97);\nvar async_1 = __webpack_require__(11);\nvar queue_1 = __webpack_require__(98);\nvar animationFrame_1 = __webpack_require__(389);\nvar rxSubscriber_1 = __webpack_require__(124);\nvar iterator_1 = __webpack_require__(44);\nvar observable_1 = __webpack_require__(99);\n/* tslint:enable:no-unused-variable */\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nvar Scheduler = {\n    asap: asap_1.asap,\n    queue: queue_1.queue,\n    animationFrame: animationFrame_1.animationFrame,\n    async: async_1.async\n};\nexports.Scheduler = Scheduler;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nvar Symbol = {\n    rxSubscriber: rxSubscriber_1.rxSubscriber,\n    observable: observable_1.observable,\n    iterator: iterator_1.iterator\n};\nexports.Symbol = Symbol;\n//# sourceMappingURL=Rx.js.map\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    return Scheduler;\n}());\nScheduler.now = Date.now ? Date.now : function () { return +new Date(); };\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar bindCallback_1 = __webpack_require__(286);\nObservable_1.Observable.bindCallback = bindCallback_1.bindCallback;\n//# sourceMappingURL=bindCallback.js.map\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar bindNodeCallback_1 = __webpack_require__(287);\nObservable_1.Observable.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar combineLatest_1 = __webpack_require__(288);\nObservable_1.Observable.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar concat_1 = __webpack_require__(289);\nObservable_1.Observable.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar defer_1 = __webpack_require__(290);\nObservable_1.Observable.defer = defer_1.defer;\n//# sourceMappingURL=defer.js.map\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar ajax_1 = __webpack_require__(292);\nObservable_1.Observable.ajax = ajax_1.ajax;\n//# sourceMappingURL=ajax.js.map\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar webSocket_1 = __webpack_require__(293);\nObservable_1.Observable.webSocket = webSocket_1.webSocket;\n//# sourceMappingURL=webSocket.js.map\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar empty_1 = __webpack_require__(294);\nObservable_1.Observable.empty = empty_1.empty;\n//# sourceMappingURL=empty.js.map\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar forkJoin_1 = __webpack_require__(79);\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar from_1 = __webpack_require__(80);\nObservable_1.Observable.from = from_1.from;\n//# sourceMappingURL=from.js.map\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar fromEvent_1 = __webpack_require__(295);\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar fromEventPattern_1 = __webpack_require__(296);\nObservable_1.Observable.fromEventPattern = fromEventPattern_1.fromEventPattern;\n//# sourceMappingURL=fromEventPattern.js.map\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar fromPromise_1 = __webpack_require__(51);\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n//# sourceMappingURL=fromPromise.js.map\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar GenerateObservable_1 = __webpack_require__(276);\nObservable_1.Observable.generate = GenerateObservable_1.GenerateObservable.create;\n//# sourceMappingURL=generate.js.map\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar if_1 = __webpack_require__(297);\nObservable_1.Observable.if = if_1._if;\n//# sourceMappingURL=if.js.map\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar interval_1 = __webpack_require__(298);\nObservable_1.Observable.interval = interval_1.interval;\n//# sourceMappingURL=interval.js.map\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar merge_1 = __webpack_require__(415);\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar never_1 = __webpack_require__(299);\nObservable_1.Observable.never = never_1.never;\n//# sourceMappingURL=never.js.map\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar of_1 = __webpack_require__(81);\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar onErrorResumeNext_1 = __webpack_require__(91);\nObservable_1.Observable.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNextStatic;\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar pairs_1 = __webpack_require__(300);\nObservable_1.Observable.pairs = pairs_1.pairs;\n//# sourceMappingURL=pairs.js.map\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar race_1 = __webpack_require__(92);\nObservable_1.Observable.race = race_1.raceStatic;\n//# sourceMappingURL=race.js.map\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar range_1 = __webpack_require__(301);\nObservable_1.Observable.range = range_1.range;\n//# sourceMappingURL=range.js.map\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar throw_1 = __webpack_require__(302);\nObservable_1.Observable.throw = throw_1._throw;\n//# sourceMappingURL=throw.js.map\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar timer_1 = __webpack_require__(303);\nObservable_1.Observable.timer = timer_1.timer;\n//# sourceMappingURL=timer.js.map\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar using_1 = __webpack_require__(304);\nObservable_1.Observable.using = using_1.using;\n//# sourceMappingURL=using.js.map\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar zip_1 = __webpack_require__(305);\nObservable_1.Observable.zip = zip_1.zip;\n//# sourceMappingURL=zip.js.map\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar audit_1 = __webpack_require__(306);\nObservable_1.Observable.prototype.audit = audit_1.audit;\n//# sourceMappingURL=audit.js.map\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar auditTime_1 = __webpack_require__(307);\nObservable_1.Observable.prototype.auditTime = auditTime_1.auditTime;\n//# sourceMappingURL=auditTime.js.map\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar buffer_1 = __webpack_require__(308);\nObservable_1.Observable.prototype.buffer = buffer_1.buffer;\n//# sourceMappingURL=buffer.js.map\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar bufferCount_1 = __webpack_require__(309);\nObservable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;\n//# sourceMappingURL=bufferCount.js.map\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar bufferTime_1 = __webpack_require__(310);\nObservable_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;\n//# sourceMappingURL=bufferTime.js.map\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar bufferToggle_1 = __webpack_require__(311);\nObservable_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;\n//# sourceMappingURL=bufferToggle.js.map\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar bufferWhen_1 = __webpack_require__(312);\nObservable_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;\n//# sourceMappingURL=bufferWhen.js.map\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar catch_1 = __webpack_require__(82);\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar combineAll_1 = __webpack_require__(313);\nObservable_1.Observable.prototype.combineAll = combineAll_1.combineAll;\n//# sourceMappingURL=combineAll.js.map\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar combineLatest_1 = __webpack_require__(52);\nObservable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar concat_1 = __webpack_require__(53);\nObservable_1.Observable.prototype.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar concatAll_1 = __webpack_require__(83);\nObservable_1.Observable.prototype.concatAll = concatAll_1.concatAll;\n//# sourceMappingURL=concatAll.js.map\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar concatMap_1 = __webpack_require__(84);\nObservable_1.Observable.prototype.concatMap = concatMap_1.concatMap;\n//# sourceMappingURL=concatMap.js.map\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar concatMapTo_1 = __webpack_require__(314);\nObservable_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar count_1 = __webpack_require__(315);\nObservable_1.Observable.prototype.count = count_1.count;\n//# sourceMappingURL=count.js.map\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar debounce_1 = __webpack_require__(316);\nObservable_1.Observable.prototype.debounce = debounce_1.debounce;\n//# sourceMappingURL=debounce.js.map\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar debounceTime_1 = __webpack_require__(317);\nObservable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n//# sourceMappingURL=debounceTime.js.map\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar defaultIfEmpty_1 = __webpack_require__(318);\nObservable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar delay_1 = __webpack_require__(319);\nObservable_1.Observable.prototype.delay = delay_1.delay;\n//# sourceMappingURL=delay.js.map\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar delayWhen_1 = __webpack_require__(320);\nObservable_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;\n//# sourceMappingURL=delayWhen.js.map\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar dematerialize_1 = __webpack_require__(321);\nObservable_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;\n//# sourceMappingURL=dematerialize.js.map\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar distinct_1 = __webpack_require__(322);\nObservable_1.Observable.prototype.distinct = distinct_1.distinct;\n//# sourceMappingURL=distinct.js.map\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar distinctUntilChanged_1 = __webpack_require__(85);\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar distinctUntilKeyChanged_1 = __webpack_require__(323);\nObservable_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar do_1 = __webpack_require__(324);\nObservable_1.Observable.prototype.do = do_1._do;\nObservable_1.Observable.prototype._do = do_1._do;\n//# sourceMappingURL=do.js.map\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar elementAt_1 = __webpack_require__(325);\nObservable_1.Observable.prototype.elementAt = elementAt_1.elementAt;\n//# sourceMappingURL=elementAt.js.map\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar every_1 = __webpack_require__(86);\nObservable_1.Observable.prototype.every = every_1.every;\n//# sourceMappingURL=every.js.map\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar exhaust_1 = __webpack_require__(326);\nObservable_1.Observable.prototype.exhaust = exhaust_1.exhaust;\n//# sourceMappingURL=exhaust.js.map\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar exhaustMap_1 = __webpack_require__(327);\nObservable_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;\n//# sourceMappingURL=exhaustMap.js.map\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar expand_1 = __webpack_require__(328);\nObservable_1.Observable.prototype.expand = expand_1.expand;\n//# sourceMappingURL=expand.js.map\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar filter_1 = __webpack_require__(54);\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar finally_1 = __webpack_require__(329);\nObservable_1.Observable.prototype.finally = finally_1._finally;\nObservable_1.Observable.prototype._finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar find_1 = __webpack_require__(87);\nObservable_1.Observable.prototype.find = find_1.find;\n//# sourceMappingURL=find.js.map\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar findIndex_1 = __webpack_require__(330);\nObservable_1.Observable.prototype.findIndex = findIndex_1.findIndex;\n//# sourceMappingURL=findIndex.js.map\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar first_1 = __webpack_require__(88);\nObservable_1.Observable.prototype.first = first_1.first;\n//# sourceMappingURL=first.js.map\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar groupBy_1 = __webpack_require__(331);\nObservable_1.Observable.prototype.groupBy = groupBy_1.groupBy;\n//# sourceMappingURL=groupBy.js.map\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar ignoreElements_1 = __webpack_require__(332);\nObservable_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;\n//# sourceMappingURL=ignoreElements.js.map\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar isEmpty_1 = __webpack_require__(333);\nObservable_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;\n//# sourceMappingURL=isEmpty.js.map\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar last_1 = __webpack_require__(89);\nObservable_1.Observable.prototype.last = last_1.last;\n//# sourceMappingURL=last.js.map\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar let_1 = __webpack_require__(334);\nObservable_1.Observable.prototype.let = let_1.letProto;\nObservable_1.Observable.prototype.letBind = let_1.letProto;\n//# sourceMappingURL=let.js.map\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar map_1 = __webpack_require__(27);\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar mapTo_1 = __webpack_require__(335);\nObservable_1.Observable.prototype.mapTo = mapTo_1.mapTo;\n//# sourceMappingURL=mapTo.js.map\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar materialize_1 = __webpack_require__(336);\nObservable_1.Observable.prototype.materialize = materialize_1.materialize;\n//# sourceMappingURL=materialize.js.map\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar max_1 = __webpack_require__(337);\nObservable_1.Observable.prototype.max = max_1.max;\n//# sourceMappingURL=max.js.map\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar merge_1 = __webpack_require__(416);\nObservable_1.Observable.prototype.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar mergeAll_1 = __webpack_require__(43);\nObservable_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;\n//# sourceMappingURL=mergeAll.js.map\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar mergeMap_1 = __webpack_require__(55);\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar mergeMapTo_1 = __webpack_require__(90);\nObservable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;\nObservable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar mergeScan_1 = __webpack_require__(338);\nObservable_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;\n//# sourceMappingURL=mergeScan.js.map\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar min_1 = __webpack_require__(339);\nObservable_1.Observable.prototype.min = min_1.min;\n//# sourceMappingURL=min.js.map\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar multicast_1 = __webpack_require__(24);\nObservable_1.Observable.prototype.multicast = multicast_1.multicast;\n//# sourceMappingURL=multicast.js.map\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar observeOn_1 = __webpack_require__(56);\nObservable_1.Observable.prototype.observeOn = observeOn_1.observeOn;\n//# sourceMappingURL=observeOn.js.map\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar onErrorResumeNext_1 = __webpack_require__(91);\nObservable_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar pairwise_1 = __webpack_require__(340);\nObservable_1.Observable.prototype.pairwise = pairwise_1.pairwise;\n//# sourceMappingURL=pairwise.js.map\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar partition_1 = __webpack_require__(341);\nObservable_1.Observable.prototype.partition = partition_1.partition;\n//# sourceMappingURL=partition.js.map\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar pluck_1 = __webpack_require__(342);\nObservable_1.Observable.prototype.pluck = pluck_1.pluck;\n//# sourceMappingURL=pluck.js.map\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar publish_1 = __webpack_require__(343);\nObservable_1.Observable.prototype.publish = publish_1.publish;\n//# sourceMappingURL=publish.js.map\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar publishBehavior_1 = __webpack_require__(344);\nObservable_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar publishLast_1 = __webpack_require__(345);\nObservable_1.Observable.prototype.publishLast = publishLast_1.publishLast;\n//# sourceMappingURL=publishLast.js.map\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar publishReplay_1 = __webpack_require__(346);\nObservable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar race_1 = __webpack_require__(92);\nObservable_1.Observable.prototype.race = race_1.race;\n//# sourceMappingURL=race.js.map\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar reduce_1 = __webpack_require__(37);\nObservable_1.Observable.prototype.reduce = reduce_1.reduce;\n//# sourceMappingURL=reduce.js.map\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar repeat_1 = __webpack_require__(347);\nObservable_1.Observable.prototype.repeat = repeat_1.repeat;\n//# sourceMappingURL=repeat.js.map\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar repeatWhen_1 = __webpack_require__(348);\nObservable_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar retry_1 = __webpack_require__(349);\nObservable_1.Observable.prototype.retry = retry_1.retry;\n//# sourceMappingURL=retry.js.map\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar retryWhen_1 = __webpack_require__(350);\nObservable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;\n//# sourceMappingURL=retryWhen.js.map\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar sample_1 = __webpack_require__(351);\nObservable_1.Observable.prototype.sample = sample_1.sample;\n//# sourceMappingURL=sample.js.map\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar sampleTime_1 = __webpack_require__(352);\nObservable_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;\n//# sourceMappingURL=sampleTime.js.map\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar scan_1 = __webpack_require__(353);\nObservable_1.Observable.prototype.scan = scan_1.scan;\n//# sourceMappingURL=scan.js.map\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar sequenceEqual_1 = __webpack_require__(354);\nObservable_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;\n//# sourceMappingURL=sequenceEqual.js.map\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar share_1 = __webpack_require__(417);\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar shareReplay_1 = __webpack_require__(355);\nObservable_1.Observable.prototype.shareReplay = shareReplay_1.shareReplay;\n//# sourceMappingURL=shareReplay.js.map\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar single_1 = __webpack_require__(356);\nObservable_1.Observable.prototype.single = single_1.single;\n//# sourceMappingURL=single.js.map\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar skip_1 = __webpack_require__(357);\nObservable_1.Observable.prototype.skip = skip_1.skip;\n//# sourceMappingURL=skip.js.map\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar skipLast_1 = __webpack_require__(358);\nObservable_1.Observable.prototype.skipLast = skipLast_1.skipLast;\n//# sourceMappingURL=skipLast.js.map\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar skipUntil_1 = __webpack_require__(359);\nObservable_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;\n//# sourceMappingURL=skipUntil.js.map\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar skipWhile_1 = __webpack_require__(360);\nObservable_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;\n//# sourceMappingURL=skipWhile.js.map\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar startWith_1 = __webpack_require__(361);\nObservable_1.Observable.prototype.startWith = startWith_1.startWith;\n//# sourceMappingURL=startWith.js.map\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar subscribeOn_1 = __webpack_require__(362);\nObservable_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar switch_1 = __webpack_require__(363);\nObservable_1.Observable.prototype.switch = switch_1._switch;\nObservable_1.Observable.prototype._switch = switch_1._switch;\n//# sourceMappingURL=switch.js.map\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar switchMap_1 = __webpack_require__(364);\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar switchMapTo_1 = __webpack_require__(365);\nObservable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;\n//# sourceMappingURL=switchMapTo.js.map\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar take_1 = __webpack_require__(366);\nObservable_1.Observable.prototype.take = take_1.take;\n//# sourceMappingURL=take.js.map\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar takeLast_1 = __webpack_require__(367);\nObservable_1.Observable.prototype.takeLast = takeLast_1.takeLast;\n//# sourceMappingURL=takeLast.js.map\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar takeUntil_1 = __webpack_require__(368);\nObservable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\n//# sourceMappingURL=takeUntil.js.map\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar takeWhile_1 = __webpack_require__(369);\nObservable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\n//# sourceMappingURL=takeWhile.js.map\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar throttle_1 = __webpack_require__(93);\nObservable_1.Observable.prototype.throttle = throttle_1.throttle;\n//# sourceMappingURL=throttle.js.map\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar throttleTime_1 = __webpack_require__(370);\nObservable_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;\n//# sourceMappingURL=throttleTime.js.map\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar timeInterval_1 = __webpack_require__(94);\nObservable_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;\n//# sourceMappingURL=timeInterval.js.map\n\n/***/ }),\n/* 255 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar timeout_1 = __webpack_require__(371);\nObservable_1.Observable.prototype.timeout = timeout_1.timeout;\n//# sourceMappingURL=timeout.js.map\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar timeoutWith_1 = __webpack_require__(372);\nObservable_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;\n//# sourceMappingURL=timeoutWith.js.map\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar timestamp_1 = __webpack_require__(95);\nObservable_1.Observable.prototype.timestamp = timestamp_1.timestamp;\n//# sourceMappingURL=timestamp.js.map\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar toArray_1 = __webpack_require__(373);\nObservable_1.Observable.prototype.toArray = toArray_1.toArray;\n//# sourceMappingURL=toArray.js.map\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar toPromise_1 = __webpack_require__(374);\nObservable_1.Observable.prototype.toPromise = toPromise_1.toPromise;\n//# sourceMappingURL=toPromise.js.map\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar window_1 = __webpack_require__(375);\nObservable_1.Observable.prototype.window = window_1.window;\n//# sourceMappingURL=window.js.map\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar windowCount_1 = __webpack_require__(376);\nObservable_1.Observable.prototype.windowCount = windowCount_1.windowCount;\n//# sourceMappingURL=windowCount.js.map\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar windowTime_1 = __webpack_require__(377);\nObservable_1.Observable.prototype.windowTime = windowTime_1.windowTime;\n//# sourceMappingURL=windowTime.js.map\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar windowToggle_1 = __webpack_require__(378);\nObservable_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;\n//# sourceMappingURL=windowToggle.js.map\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar windowWhen_1 = __webpack_require__(379);\nObservable_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;\n//# sourceMappingURL=windowWhen.js.map\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar withLatestFrom_1 = __webpack_require__(380);\nObservable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar zip_1 = __webpack_require__(57);\nObservable_1.Observable.prototype.zip = zip_1.zipProto;\n//# sourceMappingURL=zip.js.map\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = __webpack_require__(0);\nvar zipAll_1 = __webpack_require__(381);\nObservable_1.Observable.prototype.zipAll = zipAll_1.zipAll;\n//# sourceMappingURL=zipAll.js.map\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar ScalarObservable_1 = __webpack_require__(115);\nvar EmptyObservable_1 = __webpack_require__(22);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable = (function (_super) {\n    tslib_1.__extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.arrayLike = arrayLike;\n        _this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            _this._isScalar = true;\n            _this.value = arrayLike[0];\n        }\n        return _this;\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_1.Observable));\nexports.ArrayLikeObservable = ArrayLikeObservable;\n//# sourceMappingURL=ArrayLikeObservable.js.map\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar AsyncSubject_1 = __webpack_require__(35);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundCallbackObservable = (function (_super) {\n    tslib_1.__extends(BoundCallbackObservable, _super);\n    function BoundCallbackObservable(callbackFunc, selector, args, context, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.callbackFunc = callbackFunc;\n        _this.selector = selector;\n        _this.args = args;\n        _this.context = context;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a callback API to a function that returns an Observable.\n     *\n     * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n     * it will return a function `g` that when called as `g(x)` will output an\n     * Observable.</span>\n     *\n     * `bindCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, but the\n     * last parameter must be a callback function that `func` calls when it is\n     * done.\n     *\n     * The output of `bindCallback` is a function that takes the same parameters\n     * as `func`, except the last one (the callback). When the output function\n     * is called with arguments, it will return an Observable. If `func` function\n     * calls its callback with one argument, the Observable will emit that value.\n     * If on the other hand callback is called with multiple values, resulting\n     * Observable will emit an array with these arguments.\n     *\n     * It is very important to remember, that input function `func` is not called\n     * when output function is, but rather when Observable returned by output\n     * function is subscribed. This means if `func` makes AJAX request, that request\n     * will be made every time someone subscribes to resulting Observable, but not before.\n     *\n     * Optionally, selector function can be passed to `bindObservable`. That function\n     * takes the same arguments as callback, and returns value\n     * that will be emitted by Observable instead of callback parameters themselves.\n     * Even though by default multiple arguments passed to callback appear in the stream as array,\n     * selector function will be called with arguments directly, just as callback would.\n     * This means you can imagine default selector (when one is not provided explicitly)\n     * as function that aggregates all its arguments into array, or simply returns first argument,\n     * if there is only one.\n     *\n     * Last optional parameter - {@link Scheduler} - can be used to control when call\n     * to `func` happens after someone subscribes to Observable, as well as when results\n     * passed to callback will be emitted. By default subscription to Observable calls `func`\n     * synchronously, but using `Scheduler.async` as last parameter will defer call to input function,\n     * just like wrapping that call in `setTimeout` with time `0` would. So if you use async Scheduler\n     * and call `subscribe` on output Observable, all function calls that are currently executing,\n     * will end before `func` is invoked.\n     *\n     * When it comes to emitting results passed to callback, by default they are emitted\n     * immediately after `func` invokes callback. In particular, if callback is called synchronously,\n     * then subscription to resulting Observable will call `next` function synchronously as well.\n     * If you want to defer that call, using `Scheduler.async` will, again, do the job.\n     * This means that by using `Scheduler.async` you can, in a sense, ensure that `func`\n     * always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n     *\n     * Note that Observable created by output function will always emit only one value\n     * and then complete right after. Even if `func` calls callback multiple times, values from\n     * second and following calls will never appear in the stream. If you need to\n     * listen for multiple calls, you probably want to use {@link fromEvent} or\n     * {@link fromEventPattern} instead.\n     *\n     * If `func` depends on some context (`this` property), that context will be set\n     * to the same context that output function has at call time. In particular, if `func`\n     * is called as method of some object, in order to preserve proper behaviour,\n     * it is recommended to set context of output function to that object as well,\n     * provided `func` is not already bound.\n     *\n     * If input function calls its callback in \"node style\" (i.e. first argument to callback is\n     * optional error parameter signaling whether call failed or not), {@link bindNodeCallback}\n     * provides convenient error handling and probably is a better choice.\n     * `bindCallback` will treat such functions without any difference and error parameter\n     * (whether passed or not) will always be interpreted as regular callback argument.\n     *\n     *\n     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n     * // Suppose we have jQuery.getJSON('/my/url', callback)\n     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\n     * var result = getJSONAsObservable('/my/url');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     *\n     * @example <caption>Receive array of arguments passed to callback</caption>\n     * someFunction((a, b, c) => {\n     *   console.log(a); // 5\n     *   console.log(b); // 'some string'\n     *   console.log(c); // {someProperty: 'someValue'}\n     * });\n     *\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction);\n     * boundSomeFunction().subscribe(values => {\n     *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n     * });\n     *\n     *\n     * @example <caption>Use bindCallback with selector function</caption>\n     * someFunction((a, b, c) => {\n     *   console.log(a); // 'a'\n     *   console.log(b); // 'b'\n     *   console.log(c); // 'c'\n     * });\n     *\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction, (a, b, c) => a + b + c);\n     * boundSomeFunction().subscribe(value => {\n     *   console.log(value) // 'abc'\n     * });\n     *\n     *\n     * @example <caption>Compare behaviour with and without async Scheduler</caption>\n     * function iCallMyCallbackSynchronously(cb) {\n     *   cb();\n     * }\n     *\n     * const boundSyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously);\n     * const boundAsyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n     *\n     * boundSyncFn().subscribe(() => console.log('I was sync!'));\n     * boundAsyncFn().subscribe(() => console.log('I was async!'));\n     * console.log('This happened...');\n     *\n     * // Logs:\n     * // I was sync!\n     * // This happened...\n     * // I was async!\n     *\n     *\n     * @example <caption>Use bindCallback on object method</caption>\n     * const boundMethod = Rx.Observable.bindCallback(someObject.methodWithCallback);\n     * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n     * .subscribe(subscriber);\n     *\n     *\n     * @see {@link bindNodeCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func Function with a callback as the last parameter.\n     * @param {function} [selector] A function which takes the arguments from the\n     * callback and maps those to a value to emit on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the callback would deliver.\n     * @static true\n     * @name bindCallback\n     * @owner Observable\n     */\n    BoundCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new BoundCallbackObservable(func, selector, args, this, scheduler);\n        };\n    };\n    BoundCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\n        }\n    };\n    BoundCallbackObservable.dispatch = function (state) {\n        var self = this;\n        var source = state.source, subscriber = state.subscriber, context = state.context;\n        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;\n        var subject = source.subject;\n        if (!subject) {\n            subject = source.subject = new AsyncSubject_1.AsyncSubject();\n            var handler = function handlerFn() {\n                var innerArgs = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    innerArgs[_i] = arguments[_i];\n                }\n                var source = handlerFn.source;\n                var selector = source.selector, subject = source.subject;\n                if (selector) {\n                    var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                    if (result_2 === errorObject_1.errorObject) {\n                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                    }\n                    else {\n                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                    }\n                }\n                else {\n                    var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n                }\n            };\n            // use named function to pass values in without closure\n            handler.source = source;\n            var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));\n            if (result === errorObject_1.errorObject) {\n                subject.error(errorObject_1.errorObject.e);\n            }\n        }\n        self.add(subject.subscribe(subscriber));\n    };\n    return BoundCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundCallbackObservable = BoundCallbackObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundCallbackObservable.js.map\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar AsyncSubject_1 = __webpack_require__(35);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundNodeCallbackObservable = (function (_super) {\n    tslib_1.__extends(BoundNodeCallbackObservable, _super);\n    function BoundNodeCallbackObservable(callbackFunc, selector, args, context, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.callbackFunc = callbackFunc;\n        _this.selector = selector;\n        _this.args = args;\n        _this.context = context;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a Node.js-style callback API to a function that returns an\n     * Observable.\n     *\n     * <span class=\"informal\">It's just like {@link bindCallback}, but the\n     * callback is expected to be of type `callback(error, result)`.</span>\n     *\n     * `bindNodeCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, but the\n     * last parameter must be a callback function that `func` calls when it is\n     * done. The callback function is expected to follow Node.js conventions,\n     * where the first argument to the callback is an error object, signaling\n     * whether call was successful. If that object is passed to callback, it means\n     * something went wrong.\n     *\n     * The output of `bindNodeCallback` is a function that takes the same\n     * parameters as `func`, except the last one (the callback). When the output\n     * function is called with arguments, it will return an Observable.\n     * If `func` calls its callback with error parameter present, Observable will\n     * error with that value as well. If error parameter is not passed, Observable will emit\n     * second parameter. If there are more parameters (third and so on),\n     * Observable will emit an array with all arguments, except first error argument.\n     *\n     * Optionally `bindNodeCallback` accepts selector function, which allows you to\n     * make resulting Observable emit value computed by selector, instead of regular\n     * callback arguments. It works similarly to {@link bindCallback} selector, but\n     * Node.js-style error argument will never be passed to that function.\n     *\n     * Note that `func` will not be called at the same time output function is,\n     * but rather whenever resulting Observable is subscribed. By default call to\n     * `func` will happen synchronously after subscription, but that can be changed\n     * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n     * can also control when values from callback will be emitted by Observable.\n     * To find out more, check out documentation for {@link bindCallback}, where\n     * Scheduler works exactly the same.\n     *\n     * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n     * of returned function, when it is called.\n     *\n     * After Observable emits value, it will complete immediately. This means\n     * even if `func` calls callback again, values from second and consecutive\n     * calls will never appear on the stream. If you need to handle functions\n     * that call callbacks multiple times, check out {@link fromEvent} or\n     * {@link fromEventPattern} instead.\n     *\n     * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n     * \"Node.js-style\" callbacks are just a convention, so if you write for\n     * browsers or any other environment and API you use implements that callback style,\n     * `bindNodeCallback` can be safely used on that API functions as well.\n     *\n     * Remember that Error object passed to callback does not have to be an instance\n     * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n     * Error parameter of callback function is interpreted as \"present\", when value\n     * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n     * string or boolean `true`. In all of these cases resulting Observable would error\n     * with that value. This means usually regular style callbacks will fail very often when\n     * `bindNodeCallback` is used. If your Observable errors much more often then you\n     * would expect, check if callback really is called in Node.js-style and, if not,\n     * switch to {@link bindCallback} instead.\n     *\n     * Note that even if error parameter is technically present in callback, but its value\n     * is falsy, it still won't appear in array emitted by Observable or in selector function.\n     *\n     *\n     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n     * import * as fs from 'fs';\n     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\n     * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     *\n     * @example <caption>Use on function calling callback with multiple arguments</caption>\n     * someFunction((err, a, b) => {\n     *   console.log(err); // null\n     *   console.log(a); // 5\n     *   console.log(b); // \"some string\"\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n     * boundSomeFunction()\n     * .subscribe(value => {\n     *   console.log(value); // [5, \"some string\"]\n     * });\n     *\n     *\n     * @example <caption>Use with selector function</caption>\n     * someFunction((err, a, b) => {\n     *   console.log(err); // undefined\n     *   console.log(a); // \"abc\"\n     *   console.log(b); // \"DEF\"\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction, (a, b) => a + b);\n     * boundSomeFunction()\n     * .subscribe(value => {\n     *   console.log(value); // \"abcDEF\"\n     * });\n     *\n     *\n     * @example <caption>Use on function calling callback in regular style</caption>\n     * someFunction(a => {\n     *   console.log(a); // 5\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n     * boundSomeFunction()\n     * .subscribe(\n     *   value => {}             // never gets called\n     *   err => console.log(err) // 5\n     *);\n     *\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func Function with a Node.js-style callback as the last parameter.\n     * @param {function} [selector] A function which takes the arguments from the\n     * callback and maps those to a value to emit on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the Node.js callback would\n     * deliver.\n     * @static true\n     * @name bindNodeCallback\n     * @owner Observable\n     */\n    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new BoundNodeCallbackObservable(func, selector, args, this, scheduler);\n        };\n    };\n    BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    var err = innerArgs.shift();\n                    if (err) {\n                        subject.error(err);\n                    }\n                    else if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\n        }\n    };\n    return BoundNodeCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundNodeCallbackObservable = BoundNodeCallbackObservable;\nfunction dispatch(state) {\n    var self = this;\n    var source = state.source, subscriber = state.subscriber, context = state.context;\n    // XXX: cast to `any` to access to the private field in `source`.\n    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;\n    var subject = source.subject;\n    if (!subject) {\n        subject = source.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function handlerFn() {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var source = handlerFn.source;\n            var selector = source.selector, subject = source.subject;\n            var err = innerArgs.shift();\n            if (err) {\n                self.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n            }\n            else if (selector) {\n                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                if (result_2 === errorObject_1.errorObject) {\n                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                }\n                else {\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                }\n            }\n            else {\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        // use named function to pass values in without closure\n        handler.source = source;\n        var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));\n        if (result === errorObject_1.errorObject) {\n            self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n        }\n    }\n    self.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundNodeCallbackObservable.js.map\n\n/***/ }),\n/* 271 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar subscribeToResult_1 = __webpack_require__(4);\nvar OuterSubscriber_1 = __webpack_require__(3);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = (function (_super) {\n    tslib_1.__extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        var _this = _super.call(this) || this;\n        _this.observableFactory = observableFactory;\n        return _this;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * // Results in the following behavior:\n     * // If the result of Math.random() is greater than 0.5 it will listen\n     * // for clicks anywhere on the \"document\"; when document is clicked it\n     * // will log a MouseEvent object to the console. If the result is less\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n     *\n     * @see {@link create}\n     *\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable_1.Observable));\nexports.DeferObservable = DeferObservable;\nvar DeferSubscriber = (function (_super) {\n    tslib_1.__extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        var _this = _super.call(this, destination) || this;\n        _this.factory = factory;\n        _this.tryDefer();\n        return _this;\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=DeferObservable.js.map\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ErrorObservable = (function (_super) {\n    tslib_1.__extends(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.error = error;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        subscriber.syncErrorThrowable = true;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable_1.Observable));\nexports.ErrorObservable = ErrorObservable;\n//# sourceMappingURL=ErrorObservable.js.map\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar EmptyObservable_1 = __webpack_require__(22);\nvar isArray_1 = __webpack_require__(19);\nvar subscribeToResult_1 = __webpack_require__(4);\nvar OuterSubscriber_1 = __webpack_require__(3);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ForkJoinObservable = (function (_super) {\n    tslib_1.__extends(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        var _this = _super.call(this) || this;\n        _this.sources = sources;\n        _this.resultSelector = resultSelector;\n        return _this;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * @param sources\n     * @return {any}\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray_1.isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable_1.Observable));\nexports.ForkJoinObservable = ForkJoinObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = (function (_super) {\n    tslib_1.__extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.sources = sources;\n        _this.resultSelector = resultSelector;\n        _this.completed = 0;\n        _this.haveValues = 0;\n        var len = sources.length;\n        _this.total = len;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(_this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                _this.add(innerSubscription);\n            }\n        }\n        return _this;\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=ForkJoinObservable.js.map\n\n/***/ }),\n/* 274 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar tryCatch_1 = __webpack_require__(10);\nvar isFunction_1 = __webpack_require__(104);\nvar errorObject_1 = __webpack_require__(8);\nvar Subscription_1 = __webpack_require__(9);\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable = (function (_super) {\n    tslib_1.__extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        var _this = _super.call(this) || this;\n        _this.sourceObj = sourceObj;\n        _this.eventName = eventName;\n        _this.selector = selector;\n        _this.options = options;\n        return _this;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * Creates an Observable by attaching an event listener to an \"event target\",\n     * which may be an object with `addEventListener` and `removeEventListener`,\n     * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the\n     * DOM, or an HTMLCollection from the DOM. The event handler is attached when\n     * the output Observable is subscribed, and removed when the Subscription is\n     * unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console everytime a click\n     * // occurs on the document.\n     *\n     * @see {@link from}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOMElement, event target, Node.js\n     * EventEmitter, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction_1.isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n            if (result === errorObject_1.errorObject) {\n                subscriber.error(errorObject_1.errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable_1.Observable));\nexports.FromEventObservable = FromEventObservable;\n//# sourceMappingURL=FromEventObservable.js.map\n\n/***/ }),\n/* 275 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar isFunction_1 = __webpack_require__(104);\nvar Observable_1 = __webpack_require__(0);\nvar Subscription_1 = __webpack_require__(9);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventPatternObservable = (function (_super) {\n    tslib_1.__extends(FromEventPatternObservable, _super);\n    function FromEventPatternObservable(addHandler, removeHandler, selector) {\n        var _this = _super.call(this) || this;\n        _this.addHandler = addHandler;\n        _this.removeHandler = removeHandler;\n        _this.selector = selector;\n        return _this;\n    }\n    /**\n     * Creates an Observable from an API based on addHandler/removeHandler\n     * functions.\n     *\n     * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n     * Observable.</span>\n     *\n     * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n     *\n     * Creates an Observable by using the `addHandler` and `removeHandler`\n     * functions to add and remove the handlers, with an optional selector\n     * function to project the event arguments to a result. The `addHandler` is\n     * called when the output Observable is subscribed, and `removeHandler` is\n     * called when the Subscription is unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * function addClickHandler(handler) {\n     *   document.addEventListener('click', handler);\n     * }\n     *\n     * function removeClickHandler(handler) {\n     *   document.removeEventListener('click', handler);\n     * }\n     *\n     * var clicks = Rx.Observable.fromEventPattern(\n     *   addClickHandler,\n     *   removeClickHandler\n     * );\n     * clicks.subscribe(x => console.log(x));\n     *\n     * @see {@link from}\n     * @see {@link fromEvent}\n     *\n     * @param {function(handler: Function): any} addHandler A function that takes\n     * a `handler` function as argument and attaches it somehow to the actual\n     * source of events.\n     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n     * takes a `handler` function as argument and removes it in case it was\n     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n     * removeHandler function will forward it.\n     * @param {function(...args: any): T} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEventPattern\n     * @owner Observable\n     */\n    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\n        return new FromEventPatternObservable(addHandler, removeHandler, selector);\n    };\n    FromEventPatternObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var removeHandler = this.removeHandler;\n        var handler = !!this.selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            _this._callSelector(subscriber, args);\n        } : function (e) { subscriber.next(e); };\n        var retValue = this._callAddHandler(handler, subscriber);\n        if (!isFunction_1.isFunction(removeHandler)) {\n            return;\n        }\n        subscriber.add(new Subscription_1.Subscription(function () {\n            //TODO: determine whether or not to forward to error handler\n            removeHandler(handler, retValue);\n        }));\n    };\n    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {\n        try {\n            var result = this.selector.apply(this, args);\n            subscriber.next(result);\n        }\n        catch (e) {\n            subscriber.error(e);\n        }\n    };\n    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {\n        try {\n            return this.addHandler(handler) || null;\n        }\n        catch (e) {\n            errorSubscriber.error(e);\n        }\n    };\n    return FromEventPatternObservable;\n}(Observable_1.Observable));\nexports.FromEventPatternObservable = FromEventPatternObservable;\n//# sourceMappingURL=FromEventPatternObservable.js.map\n\n/***/ }),\n/* 276 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar isScheduler_1 = __webpack_require__(20);\nvar selfSelector = function (value) { return value; };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar GenerateObservable = (function (_super) {\n    tslib_1.__extends(GenerateObservable, _super);\n    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.initialState = initialState;\n        _this.condition = condition;\n        _this.iterate = iterate;\n        _this.resultSelector = resultSelector;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n        if (arguments.length == 1) {\n            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);\n        }\n        if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {\n            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);\n        }\n        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);\n    };\n    GenerateObservable.prototype._subscribe = function (subscriber) {\n        var state = this.initialState;\n        if (this.scheduler) {\n            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {\n                subscriber: subscriber,\n                iterate: this.iterate,\n                condition: this.condition,\n                resultSelector: this.resultSelector,\n                state: state\n            });\n        }\n        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        } while (true);\n    };\n    GenerateObservable.dispatch = function (state) {\n        var subscriber = state.subscriber, condition = state.condition;\n        if (subscriber.closed) {\n            return;\n        }\n        if (state.needIterate) {\n            try {\n                state.state = state.iterate(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        }\n        else {\n            state.needIterate = true;\n        }\n        if (condition) {\n            var conditionResult = void 0;\n            try {\n                conditionResult = condition(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            if (!conditionResult) {\n                subscriber.complete();\n                return;\n            }\n            if (subscriber.closed) {\n                return;\n            }\n        }\n        var value;\n        try {\n            value = state.resultSelector(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return;\n        }\n        if (subscriber.closed) {\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        return this.schedule(state);\n    };\n    return GenerateObservable;\n}(Observable_1.Observable));\nexports.GenerateObservable = GenerateObservable;\n//# sourceMappingURL=GenerateObservable.js.map\n\n/***/ }),\n/* 277 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar subscribeToResult_1 = __webpack_require__(4);\nvar OuterSubscriber_1 = __webpack_require__(3);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IfObservable = (function (_super) {\n    tslib_1.__extends(IfObservable, _super);\n    function IfObservable(condition, thenSource, elseSource) {\n        var _this = _super.call(this) || this;\n        _this.condition = condition;\n        _this.thenSource = thenSource;\n        _this.elseSource = elseSource;\n        return _this;\n    }\n    IfObservable.create = function (condition, thenSource, elseSource) {\n        return new IfObservable(condition, thenSource, elseSource);\n    };\n    IfObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        return new IfSubscriber(subscriber, condition, thenSource, elseSource);\n    };\n    return IfObservable;\n}(Observable_1.Observable));\nexports.IfObservable = IfObservable;\nvar IfSubscriber = (function (_super) {\n    tslib_1.__extends(IfSubscriber, _super);\n    function IfSubscriber(destination, condition, thenSource, elseSource) {\n        var _this = _super.call(this, destination) || this;\n        _this.condition = condition;\n        _this.thenSource = thenSource;\n        _this.elseSource = elseSource;\n        _this.tryIf();\n        return _this;\n    }\n    IfSubscriber.prototype.tryIf = function () {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        var result;\n        try {\n            result = condition();\n            var source = result ? thenSource : elseSource;\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n            else {\n                this._complete();\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return IfSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=IfObservable.js.map\n\n/***/ }),\n/* 278 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar isNumeric_1 = __webpack_require__(39);\nvar Observable_1 = __webpack_require__(0);\nvar async_1 = __webpack_require__(11);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IntervalObservable = (function (_super) {\n    tslib_1.__extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        var _this = _super.call(this) || this;\n        _this.period = period;\n        _this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\n            _this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = async_1.async;\n        }\n        return _this;\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified IScheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` IScheduler to provide a notion of time, but you may pass any\n     * IScheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable_1.Observable));\nexports.IntervalObservable = IntervalObservable;\n//# sourceMappingURL=IntervalObservable.js.map\n\n/***/ }),\n/* 279 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar root_1 = __webpack_require__(12);\nvar Observable_1 = __webpack_require__(0);\nvar iterator_1 = __webpack_require__(44);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = (function (_super) {\n    tslib_1.__extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        _this.iterator = getIterator(iterator);\n        return _this;\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_1.Observable));\nexports.IteratorObservable = IteratorObservable;\nvar StringIterator = (function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = str.length; }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator_1.iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = (function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = toLength(arr); }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator_1.iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[iterator_1.iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator_1.iterator]();\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root_1.root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map\n\n/***/ }),\n/* 280 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar noop_1 = __webpack_require__(105);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar NeverObservable = (function (_super) {\n    tslib_1.__extends(NeverObservable, _super);\n    function NeverObservable() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please note\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    NeverObservable.prototype._subscribe = function (subscriber) {\n        noop_1.noop();\n    };\n    return NeverObservable;\n}(Observable_1.Observable));\nexports.NeverObservable = NeverObservable;\n//# sourceMappingURL=NeverObservable.js.map\n\n/***/ }),\n/* 281 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nfunction dispatch(state) {\n    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;\n    if (index === length) {\n        subscriber.complete();\n        return;\n    }\n    var key = keys[index];\n    subscriber.next([key, obj[key]]);\n    state.index = index + 1;\n    this.schedule(state);\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PairsObservable = (function (_super) {\n    tslib_1.__extends(PairsObservable, _super);\n    function PairsObservable(obj, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.obj = obj;\n        _this.scheduler = scheduler;\n        _this.keys = Object.keys(obj);\n        return _this;\n    }\n    /**\n     * Convert an object into an observable sequence of [key, value] pairs\n     * using an optional IScheduler to enumerate the object.\n     *\n     * @example <caption>Converts a javascript object to an Observable</caption>\n     * var obj = {\n     *   foo: 42,\n     *   bar: 56,\n     *   baz: 78\n     * };\n     *\n     * var source = Rx.Observable.pairs(obj);\n     *\n     * var subscription = source.subscribe(\n     *   function (x) {\n     *     console.log('Next: %s', x);\n     *   },\n     *   function (err) {\n     *     console.log('Error: %s', err);\n     *   },\n     *   function () {\n     *     console.log('Completed');\n     *   });\n     *\n     * @param {Object} obj The object to inspect and turn into an\n     * Observable sequence.\n     * @param {Scheduler} [scheduler] An optional IScheduler to run the\n     * enumeration of the input sequence on.\n     * @returns {(Observable<Array<string | T>>)} An observable sequence of\n     * [key, value] pairs from the object.\n     */\n    PairsObservable.create = function (obj, scheduler) {\n        return new PairsObservable(obj, scheduler);\n    };\n    PairsObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, keys = _a.keys, scheduler = _a.scheduler;\n        var length = keys.length;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber\n            });\n        }\n        else {\n            for (var idx = 0; idx < length; idx++) {\n                var key = keys[idx];\n                subscriber.next([key, this.obj[key]]);\n            }\n            subscriber.complete();\n        }\n    };\n    return PairsObservable;\n}(Observable_1.Observable));\nexports.PairsObservable = PairsObservable;\n//# sourceMappingURL=PairsObservable.js.map\n\n/***/ }),\n/* 282 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    tslib_1.__extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.start = start;\n        _this._count = count;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * IScheduler and just delivers the notifications synchronously, but may use\n     * an optional IScheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nexports.RangeObservable = RangeObservable;\n//# sourceMappingURL=RangeObservable.js.map\n\n/***/ }),\n/* 283 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar asap_1 = __webpack_require__(97);\nvar isNumeric_1 = __webpack_require__(39);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar SubscribeOnObservable = (function (_super) {\n    tslib_1.__extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) { delayTime = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.delayTime = delayTime;\n        _this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {\n            _this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = asap_1.asap;\n        }\n        return _this;\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) { delay = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable_1.Observable));\nexports.SubscribeOnObservable = SubscribeOnObservable;\n//# sourceMappingURL=SubscribeOnObservable.js.map\n\n/***/ }),\n/* 284 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar isNumeric_1 = __webpack_require__(39);\nvar Observable_1 = __webpack_require__(0);\nvar async_1 = __webpack_require__(11);\nvar isScheduler_1 = __webpack_require__(20);\nvar isDate_1 = __webpack_require__(38);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    tslib_1.__extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        var _this = _super.call(this) || this;\n        _this.period = -1;\n        _this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            _this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        _this.scheduler = scheduler;\n        _this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - _this.scheduler.now()) :\n            dueTime;\n        return _this;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map\n\n/***/ }),\n/* 285 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar subscribeToResult_1 = __webpack_require__(4);\nvar OuterSubscriber_1 = __webpack_require__(3);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar UsingObservable = (function (_super) {\n    tslib_1.__extends(UsingObservable, _super);\n    function UsingObservable(resourceFactory, observableFactory) {\n        var _this = _super.call(this) || this;\n        _this.resourceFactory = resourceFactory;\n        _this.observableFactory = observableFactory;\n        return _this;\n    }\n    UsingObservable.create = function (resourceFactory, observableFactory) {\n        return new UsingObservable(resourceFactory, observableFactory);\n    };\n    UsingObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;\n        var resource;\n        try {\n            resource = resourceFactory();\n            return new UsingSubscriber(subscriber, resource, observableFactory);\n        }\n        catch (err) {\n            subscriber.error(err);\n        }\n    };\n    return UsingObservable;\n}(Observable_1.Observable));\nexports.UsingObservable = UsingObservable;\nvar UsingSubscriber = (function (_super) {\n    tslib_1.__extends(UsingSubscriber, _super);\n    function UsingSubscriber(destination, resource, observableFactory) {\n        var _this = _super.call(this, destination) || this;\n        _this.resource = resource;\n        _this.observableFactory = observableFactory;\n        destination.add(resource);\n        _this.tryUse();\n        return _this;\n    }\n    UsingSubscriber.prototype.tryUse = function () {\n        try {\n            var source = this.observableFactory.call(this, this.resource);\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return UsingSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=UsingObservable.js.map\n\n/***/ }),\n/* 286 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BoundCallbackObservable_1 = __webpack_require__(269);\nexports.bindCallback = BoundCallbackObservable_1.BoundCallbackObservable.create;\n//# sourceMappingURL=bindCallback.js.map\n\n/***/ }),\n/* 287 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BoundNodeCallbackObservable_1 = __webpack_require__(270);\nexports.bindNodeCallback = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n/***/ }),\n/* 288 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isScheduler_1 = __webpack_require__(20);\nvar isArray_1 = __webpack_require__(19);\nvar ArrayObservable_1 = __webpack_require__(18);\nvar combineLatest_1 = __webpack_require__(52);\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n/***/ }),\n/* 289 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar concat_1 = __webpack_require__(53);\nexports.concat = concat_1.concatStatic;\n//# sourceMappingURL=concat.js.map\n\n/***/ }),\n/* 290 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DeferObservable_1 = __webpack_require__(271);\nexports.defer = DeferObservable_1.DeferObservable.create;\n//# sourceMappingURL=defer.js.map\n\n/***/ }),\n/* 291 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subject_1 = __webpack_require__(7);\nvar Subscriber_1 = __webpack_require__(2);\nvar Observable_1 = __webpack_require__(0);\nvar Subscription_1 = __webpack_require__(9);\nvar root_1 = __webpack_require__(12);\nvar ReplaySubject_1 = __webpack_require__(36);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar assign_1 = __webpack_require__(399);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar WebSocketSubject = (function (_super) {\n    tslib_1.__extends(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        var _this = this;\n        if (urlConfigOrSource instanceof Observable_1.Observable) {\n            _this = _super.call(this, destination, urlConfigOrSource) || this;\n        }\n        else {\n            _this = _super.call(this) || this;\n            _this.WebSocketCtor = root_1.root.WebSocket;\n            _this._output = new Subject_1.Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                _this.url = urlConfigOrSource;\n            }\n            else {\n                // WARNING: config object could override important members here.\n                assign_1.assign(_this, urlConfigOrSource);\n            }\n            if (!_this.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            _this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n        return _this;\n    }\n    WebSocketSubject.prototype.resultSelector = function (e) {\n        return JSON.parse(e.data);\n    };\n    /**\n     * Wrapper around the w3c-compatible WebSocket object provided by the browser.\n     *\n     * @example <caption>Wraps browser WebSocket</caption>\n     *\n     * let socket$ = Observable.webSocket('ws://localhost:8081');\n     *\n     * socket$.subscribe(\n     *    (msg) => console.log('message received: ' + msg),\n     *    (err) => console.log(err),\n     *    () => console.log('complete')\n     *  );\n     *\n     * socket$.next(JSON.stringify({ op: 'hello' }));\n     *\n     * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>\n     *\n     * import { w3cwebsocket } from 'websocket';\n     *\n     * let socket$ = Observable.webSocket({\n     *   url: 'ws://localhost:8081',\n     *   WebSocketCtor: w3cwebsocket\n     * });\n     *\n     * socket$.subscribe(\n     *    (msg) => console.log('message received: ' + msg),\n     *    (err) => console.log(err),\n     *    () => console.log('complete')\n     *  );\n     *\n     * socket$.next(JSON.stringify({ op: 'hello' }));\n     *\n     * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object\n     * @return {WebSocketSubject}\n     * @static true\n     * @name webSocket\n     * @owner Observable\n     */\n    WebSocketSubject.create = function (urlConfigOrSource) {\n        return new WebSocketSubject(urlConfigOrSource);\n    };\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this, this.destination);\n        sock.operator = operator;\n        return sock;\n    };\n    WebSocketSubject.prototype._resetState = function () {\n        this.socket = null;\n        if (!this.source) {\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n        this._output = new Subject_1.Subject();\n    };\n    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new Observable_1.Observable(function (observer) {\n            var result = tryCatch_1.tryCatch(subMsg)();\n            if (result === errorObject_1.errorObject) {\n                observer.error(errorObject_1.errorObject.e);\n            }\n            else {\n                self.next(result);\n            }\n            var subscription = self.subscribe(function (x) {\n                var result = tryCatch_1.tryCatch(messageFilter)(x);\n                if (result === errorObject_1.errorObject) {\n                    observer.error(errorObject_1.errorObject.e);\n                }\n                else if (result) {\n                    observer.next(x);\n                }\n            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });\n            return function () {\n                var result = tryCatch_1.tryCatch(unsubMsg)();\n                if (result === errorObject_1.errorObject) {\n                    observer.error(errorObject_1.errorObject.e);\n                }\n                else {\n                    self.next(result);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var WebSocketCtor = this.WebSocketCtor;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = this.protocol ?\n                new WebSocketCtor(this.url, this.protocol) :\n                new WebSocketCtor(this.url);\n            this.socket = socket;\n            if (this.binaryType) {\n                this.socket.binaryType = this.binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new Subscription_1.Subscription(function () {\n            _this.socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (e) {\n            var openObserver = _this.openObserver;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            var queue = _this.destination;\n            _this.destination = Subscriber_1.Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +\n                        'and an optional reason: { code: number, reason: string }'));\n                }\n                _this._resetState();\n            }, function () {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this._resetState();\n            });\n            if (queue && queue instanceof ReplaySubject_1.ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) {\n            _this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = function (e) {\n            _this._resetState();\n            var closeObserver = _this.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            var result = tryCatch_1.tryCatch(_this.resultSelector)(e);\n            if (result === errorObject_1.errorObject) {\n                observer.error(errorObject_1.errorObject.e);\n            }\n            else {\n                observer.next(result);\n            }\n        };\n    };\n    WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this.socket) {\n            this._connectSocket();\n        }\n        var subscription = new Subscription_1.Subscription();\n        subscription.add(this._output.subscribe(subscriber));\n        subscription.add(function () {\n            var socket = _this.socket;\n            if (_this._output.observers.length === 0) {\n                if (socket && socket.readyState === 1) {\n                    socket.close();\n                }\n                _this._resetState();\n            }\n        });\n        return subscription;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _a = this, source = _a.source, socket = _a.socket;\n        if (socket && socket.readyState === 1) {\n            socket.close();\n            this._resetState();\n        }\n        _super.prototype.unsubscribe.call(this);\n        if (!source) {\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n    };\n    return WebSocketSubject;\n}(Subject_1.AnonymousSubject));\nexports.WebSocketSubject = WebSocketSubject;\n//# sourceMappingURL=WebSocketSubject.js.map\n\n/***/ }),\n/* 292 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AjaxObservable_1 = __webpack_require__(78);\nexports.ajax = AjaxObservable_1.AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n\n/***/ }),\n/* 293 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebSocketSubject_1 = __webpack_require__(291);\nexports.webSocket = WebSocketSubject_1.WebSocketSubject.create;\n//# sourceMappingURL=webSocket.js.map\n\n/***/ }),\n/* 294 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EmptyObservable_1 = __webpack_require__(22);\nexports.empty = EmptyObservable_1.EmptyObservable.create;\n//# sourceMappingURL=empty.js.map\n\n/***/ }),\n/* 295 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FromEventObservable_1 = __webpack_require__(274);\nexports.fromEvent = FromEventObservable_1.FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n\n/***/ }),\n/* 296 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FromEventPatternObservable_1 = __webpack_require__(275);\nexports.fromEventPattern = FromEventPatternObservable_1.FromEventPatternObservable.create;\n//# sourceMappingURL=fromEventPattern.js.map\n\n/***/ }),\n/* 297 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IfObservable_1 = __webpack_require__(277);\nexports._if = IfObservable_1.IfObservable.create;\n//# sourceMappingURL=if.js.map\n\n/***/ }),\n/* 298 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IntervalObservable_1 = __webpack_require__(278);\nexports.interval = IntervalObservable_1.IntervalObservable.create;\n//# sourceMappingURL=interval.js.map\n\n/***/ }),\n/* 299 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NeverObservable_1 = __webpack_require__(280);\nexports.never = NeverObservable_1.NeverObservable.create;\n//# sourceMappingURL=never.js.map\n\n/***/ }),\n/* 300 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PairsObservable_1 = __webpack_require__(281);\nexports.pairs = PairsObservable_1.PairsObservable.create;\n//# sourceMappingURL=pairs.js.map\n\n/***/ }),\n/* 301 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RangeObservable_1 = __webpack_require__(282);\nexports.range = RangeObservable_1.RangeObservable.create;\n//# sourceMappingURL=range.js.map\n\n/***/ }),\n/* 302 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ErrorObservable_1 = __webpack_require__(272);\nexports._throw = ErrorObservable_1.ErrorObservable.create;\n//# sourceMappingURL=throw.js.map\n\n/***/ }),\n/* 303 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimerObservable_1 = __webpack_require__(284);\nexports.timer = TimerObservable_1.TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n/***/ }),\n/* 304 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UsingObservable_1 = __webpack_require__(285);\nexports.using = UsingObservable_1.UsingObservable.create;\n//# sourceMappingURL=using.js.map\n\n/***/ }),\n/* 305 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar zip_1 = __webpack_require__(57);\nexports.zip = zip_1.zipStatic;\n//# sourceMappingURL=zip.js.map\n\n/***/ }),\n/* 306 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return this.lift(new AuditOperator(durationSelector));\n}\nexports.audit = audit;\nvar AuditOperator = (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = (function (_super) {\n    tslib_1.__extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        return _this;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);\n            if (duration === errorObject_1.errorObject) {\n                this.destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, duration);\n                if (innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n\n/***/ }),\n/* 307 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar async_1 = __webpack_require__(11);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new AuditTimeOperator(duration, scheduler));\n}\nexports.auditTime = auditTime;\nvar AuditTimeOperator = (function () {\n    function AuditTimeOperator(duration, scheduler) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n    }\n    AuditTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditTimeSubscriber(subscriber, this.duration, this.scheduler));\n    };\n    return AuditTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditTimeSubscriber = (function (_super) {\n    tslib_1.__extends(AuditTimeSubscriber, _super);\n    function AuditTimeSubscriber(destination, duration, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.duration = duration;\n        _this.scheduler = scheduler;\n        _this.hasValue = false;\n        return _this;\n    }\n    AuditTimeSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, this));\n        }\n    };\n    AuditTimeSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    return AuditTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=auditTime.js.map\n\n/***/ }),\n/* 308 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer(closingNotifier) {\n    return this.lift(new BufferOperator(closingNotifier));\n}\nexports.buffer = buffer;\nvar BufferOperator = (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        var bufferSubscriber = new BufferSubscriber(subscriber);\n        var subscription = source.subscribe(bufferSubscriber);\n        bufferSubscriber.subscribeToClosingNotifier(this.closingNotifier);\n        return subscription;\n    };\n    return BufferOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSubscriber = (function (_super) {\n    tslib_1.__extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.buffer = [];\n        return _this;\n    }\n    BufferSubscriber.prototype.subscribeToClosingNotifier = function (closingNotifier) {\n        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n    };\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=buffer.js.map\n\n/***/ }),\n/* 309 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return this.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n}\nexports.bufferCount = bufferCount;\nvar BufferCountOperator = (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferCountSubscriber = (function (_super) {\n    tslib_1.__extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.buffer = [];\n        return _this;\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSkipCountSubscriber = (function (_super) {\n    tslib_1.__extends(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.startBufferEvery = startBufferEvery;\n        _this.buffers = [];\n        _this.count = 0;\n        return _this;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=bufferCount.js.map\n\n/***/ }),\n/* 310 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar async_1 = __webpack_require__(11);\nvar Subscriber_1 = __webpack_require__(2);\nvar isScheduler_1 = __webpack_require__(20);\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async_1.async;\n    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return this.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n}\nexports.bufferTime = bufferTime;\nvar BufferTimeOperator = (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferTimeSubscriber = (function (_super) {\n    tslib_1.__extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferTimeSpan = bufferTimeSpan;\n        _this.bufferCreationInterval = bufferCreationInterval;\n        _this.maxBufferSize = maxBufferSize;\n        _this.scheduler = scheduler;\n        _this.contexts = [];\n        var context = _this.openContext();\n        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (_this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: _this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n        return _this;\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context_1 = contexts[i];\n            var buffer = context_1.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context_1;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            destination.next(context_2.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map\n\n/***/ }),\n/* 311 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscription_1 = __webpack_require__(9);\nvar subscribeToResult_1 = __webpack_require__(4);\nvar OuterSubscriber_1 = __webpack_require__(3);\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle(openings, closingSelector) {\n    return this.lift(new BufferToggleOperator(openings, closingSelector));\n}\nexports.bufferToggle = bufferToggle;\nvar BufferToggleOperator = (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferToggleSubscriber = (function (_super) {\n    tslib_1.__extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(subscribeToResult_1.subscribeToResult(_this, openings));\n        return _this;\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_1 = contexts.shift();\n            context_1.subscription.unsubscribe();\n            context_1.buffer = null;\n            context_1.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            this.destination.next(context_2.buffer);\n            context_2.subscription.unsubscribe();\n            context_2.buffer = null;\n            context_2.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription_1.Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map\n\n/***/ }),\n/* 312 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscription_1 = __webpack_require__(9);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return this.lift(new BufferWhenOperator(closingSelector));\n}\nexports.bufferWhen = bufferWhen;\nvar BufferWhenOperator = (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = (function (_super) {\n    tslib_1.__extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.closingSelector = closingSelector;\n        _this.subscribing = false;\n        _this.openBuffer();\n        return _this;\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription_1.Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map\n\n/***/ }),\n/* 313 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar combineLatest_1 = __webpack_require__(52);\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nfunction combineAll(project) {\n    return this.lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineAll = combineAll;\n//# sourceMappingURL=combineAll.js.map\n\n/***/ }),\n/* 314 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mergeMapTo_1 = __webpack_require__(90);\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo(innerObservable, resultSelector) {\n    return this.lift(new mergeMapTo_1.MergeMapToOperator(innerObservable, resultSelector, 1));\n}\nexports.concatMapTo = concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map\n\n/***/ }),\n/* 315 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count(predicate) {\n    return this.lift(new CountOperator(predicate, this));\n}\nexports.count = count;\nvar CountOperator = (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CountSubscriber = (function (_super) {\n    tslib_1.__extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.count = 0;\n        _this.index = 0;\n        return _this;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=count.js.map\n\n/***/ }),\n/* 316 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return this.lift(new DebounceOperator(durationSelector));\n}\nexports.debounce = debounce;\nvar DebounceOperator = (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = (function (_super) {\n    tslib_1.__extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        _this.durationSubscription = null;\n        return _this;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult_1.subscribeToResult(this, duration);\n        if (!subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=debounce.js.map\n\n/***/ }),\n/* 317 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar async_1 = __webpack_require__(11);\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nexports.debounceTime = debounceTime;\nvar DebounceTimeOperator = (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = (function (_super) {\n    tslib_1.__extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.dueTime = dueTime;\n        _this.scheduler = scheduler;\n        _this.debouncedSubscription = null;\n        _this.lastValue = null;\n        _this.hasValue = false;\n        return _this;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n\n/***/ }),\n/* 318 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return this.lift(new DefaultIfEmptyOperator(defaultValue));\n}\nexports.defaultIfEmpty = defaultIfEmpty;\nvar DefaultIfEmptyOperator = (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = (function (_super) {\n    tslib_1.__extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.defaultValue = defaultValue;\n        _this.isEmpty = true;\n        return _this;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n/***/ }),\n/* 319 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar async_1 = __webpack_require__(11);\nvar isDate_1 = __webpack_require__(38);\nvar Subscriber_1 = __webpack_require__(2);\nvar Notification_1 = __webpack_require__(26);\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteDelay = isDate_1.isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return this.lift(new DelayOperator(delayFor, scheduler));\n}\nexports.delay = delay;\nvar DelayOperator = (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelaySubscriber = (function (_super) {\n    tslib_1.__extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.delay = delay;\n        _this.scheduler = scheduler;\n        _this.queue = [];\n        _this.active = false;\n        _this.errored = false;\n        return _this;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification_1.Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification_1.Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber_1.Subscriber));\nvar DelayMessage = (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map\n\n/***/ }),\n/* 320 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar Observable_1 = __webpack_require__(0);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return new SubscriptionDelayObservable(this, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return this.lift(new DelayWhenOperator(delayDurationSelector));\n}\nexports.delayWhen = delayWhen;\nvar DelayWhenOperator = (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelayWhenSubscriber = (function (_super) {\n    tslib_1.__extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.delayDurationSelector = delayDurationSelector;\n        _this.completed = false;\n        _this.delayNotifierSubscriptions = [];\n        _this.values = [];\n        return _this;\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        var value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            this.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n        this.values.push(value);\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelayObservable = (function (_super) {\n    tslib_1.__extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subscriptionDelay = subscriptionDelay;\n        return _this;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable_1.Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelaySubscriber = (function (_super) {\n    tslib_1.__extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.source = source;\n        _this.sourceSubscribed = false;\n        return _this;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=delayWhen.js.map\n\n/***/ }),\n/* 321 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize() {\n    return this.lift(new DeMaterializeOperator());\n}\nexports.dematerialize = dematerialize;\nvar DeMaterializeOperator = (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DeMaterializeSubscriber = (function (_super) {\n    tslib_1.__extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=dematerialize.js.map\n\n/***/ }),\n/* 322 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\nvar Set_1 = __webpack_require__(398);\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct(keySelector, flushes) {\n    return this.lift(new DistinctOperator(keySelector, flushes));\n}\nexports.distinct = distinct;\nvar DistinctOperator = (function () {\n    function DistinctOperator(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    };\n    return DistinctOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctSubscriber = (function (_super) {\n    tslib_1.__extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.values = new Set_1.Set();\n        if (flushes) {\n            _this.add(subscribeToResult_1.subscribeToResult(_this, flushes));\n        }\n        return _this;\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.DistinctSubscriber = DistinctSubscriber;\n//# sourceMappingURL=distinct.js.map\n\n/***/ }),\n/* 323 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar distinctUntilChanged_1 = __webpack_require__(85);\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nfunction distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged_1.distinctUntilChanged.call(this, function (x, y) {\n        if (compare) {\n            return compare(x[key], y[key]);\n        }\n        return x[key] === y[key];\n    });\n}\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n/***/ }),\n/* 324 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\nexports._do = _do;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    tslib_1.__extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        var _this = _super.call(this, destination) || this;\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        _this.add(safeSubscriber);\n        _this.safeSubscriber = safeSubscriber;\n        return _this;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=do.js.map\n\n/***/ }),\n/* 325 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar ArgumentOutOfRangeError_1 = __webpack_require__(30);\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt(index, defaultValue) {\n    return this.lift(new ElementAtOperator(index, defaultValue));\n}\nexports.elementAt = elementAt;\nvar ElementAtOperator = (function () {\n    function ElementAtOperator(index, defaultValue) {\n        this.index = index;\n        this.defaultValue = defaultValue;\n        if (index < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    ElementAtOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n    };\n    return ElementAtOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ElementAtSubscriber = (function (_super) {\n    tslib_1.__extends(ElementAtSubscriber, _super);\n    function ElementAtSubscriber(destination, index, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.index = index;\n        _this.defaultValue = defaultValue;\n        return _this;\n    }\n    ElementAtSubscriber.prototype._next = function (x) {\n        if (this.index-- === 0) {\n            this.destination.next(x);\n            this.destination.complete();\n        }\n    };\n    ElementAtSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index >= 0) {\n            if (typeof this.defaultValue !== 'undefined') {\n                destination.next(this.defaultValue);\n            }\n            else {\n                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);\n            }\n        }\n        destination.complete();\n    };\n    return ElementAtSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=elementAt.js.map\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nfunction exhaust() {\n    return this.lift(new SwitchFirstOperator());\n}\nexports.exhaust = exhaust;\nvar SwitchFirstOperator = (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstSubscriber = (function (_super) {\n    tslib_1.__extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasCompleted = false;\n        _this.hasSubscription = false;\n        return _this;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaust.js.map\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nfunction exhaustMap(project, resultSelector) {\n    return this.lift(new SwitchFirstMapOperator(project, resultSelector));\n}\nexports.exhaustMap = exhaustMap;\nvar SwitchFirstMapOperator = (function () {\n    function SwitchFirstMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchFirstMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstMapSubscriber = (function (_super) {\n    tslib_1.__extends(SwitchFirstMapSubscriber, _super);\n    function SwitchFirstMapSubscriber(destination, project, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.resultSelector = resultSelector;\n        _this.hasSubscription = false;\n        _this.hasCompleted = false;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchFirstMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        try {\n            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n            destination.next(result);\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map\n\n/***/ }),\n/* 328 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return this.lift(new ExpandOperator(project, concurrent, scheduler));\n}\nexports.expand = expand;\nvar ExpandOperator = (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexports.ExpandOperator = ExpandOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExpandSubscriber = (function (_super) {\n    tslib_1.__extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.scheduler = scheduler;\n        _this.index = 0;\n        _this.active = 0;\n        _this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            _this.buffer = [];\n        }\n        return _this;\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch_1.tryCatch(this.project)(value, index);\n            if (result === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.ExpandSubscriber = ExpandSubscriber;\n//# sourceMappingURL=expand.js.map\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar Subscription_1 = __webpack_require__(9);\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return this.lift(new FinallyOperator(callback));\n}\nexports._finally = _finally;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    tslib_1.__extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        var _this = _super.call(this, destination) || this;\n        _this.add(new Subscription_1.Subscription(callback));\n        return _this;\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finally.js.map\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar find_1 = __webpack_require__(87);\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex(predicate, thisArg) {\n    return this.lift(new find_1.FindValueOperator(predicate, this, true, thisArg));\n}\nexports.findIndex = findIndex;\n//# sourceMappingURL=findIndex.js.map\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar Subscription_1 = __webpack_require__(9);\nvar Observable_1 = __webpack_require__(0);\nvar Subject_1 = __webpack_require__(7);\nvar Map_1 = __webpack_require__(396);\nvar FastMap_1 = __webpack_require__(394);\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return this.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = (function (_super) {\n    tslib_1.__extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.elementSelector = elementSelector;\n        _this.durationSelector = durationSelector;\n        _this.subjectSelector = subjectSelector;\n        _this.groups = null;\n        _this.attemptedToUnsubscribe = false;\n        _this.count = 0;\n        return _this;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = (function (_super) {\n    tslib_1.__extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        var _this = _super.call(this, group) || this;\n        _this.key = key;\n        _this.group = group;\n        _this.parent = parent;\n        return _this;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = (function (_super) {\n    tslib_1.__extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.groupSubject = groupSubject;\n        _this.refCountSubscription = refCountSubscription;\n        return _this;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = (function (_super) {\n    tslib_1.__extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        parent.count++;\n        return _this;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n//# sourceMappingURL=groupBy.js.map\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar noop_1 = __webpack_require__(105);\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return this.lift(new IgnoreElementsOperator());\n}\nexports.ignoreElements = ignoreElements;\nvar IgnoreElementsOperator = (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = (function (_super) {\n    tslib_1.__extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        noop_1.noop();\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ignoreElements.js.map\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nfunction isEmpty() {\n    return this.lift(new IsEmptyOperator());\n}\nexports.isEmpty = isEmpty;\nvar IsEmptyOperator = (function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IsEmptySubscriber = (function (_super) {\n    tslib_1.__extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=isEmpty.js.map\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nfunction letProto(func) {\n    return func(this);\n}\nexports.letProto = letProto;\n//# sourceMappingURL=let.js.map\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return this.lift(new MapToOperator(value));\n}\nexports.mapTo = mapTo;\nvar MapToOperator = (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = (function (_super) {\n    tslib_1.__extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        var _this = _super.call(this, destination) || this;\n        _this.value = value;\n        return _this;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=mapTo.js.map\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar Notification_1 = __webpack_require__(26);\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize() {\n    return this.lift(new MaterializeOperator());\n}\nexports.materialize = materialize;\nvar MaterializeOperator = (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MaterializeSubscriber = (function (_super) {\n    tslib_1.__extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification_1.Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=materialize.js.map\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar reduce_1 = __webpack_require__(37);\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nfunction max(comparer) {\n    var max = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\n        : function (x, y) { return x > y ? x : y; };\n    return this.lift(new reduce_1.ReduceOperator(max));\n}\nexports.max = max;\n//# sourceMappingURL=max.js.map\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar subscribeToResult_1 = __webpack_require__(4);\nvar OuterSubscriber_1 = __webpack_require__(3);\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return this.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\nexports.mergeScan = mergeScan;\nvar MergeScanOperator = (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexports.MergeScanOperator = MergeScanOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeScanSubscriber = (function (_super) {\n    tslib_1.__extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.acc = acc;\n        _this.concurrent = concurrent;\n        _this.hasValue = false;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch_1.tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeScanSubscriber = MergeScanSubscriber;\n//# sourceMappingURL=mergeScan.js.map\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar reduce_1 = __webpack_require__(37);\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nfunction min(comparer) {\n    var min = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\n        : function (x, y) { return x < y ? x : y; };\n    return this.lift(new reduce_1.ReduceOperator(min));\n}\nexports.min = min;\n//# sourceMappingURL=min.js.map\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return this.lift(new PairwiseOperator());\n}\nexports.pairwise = pairwise;\nvar PairwiseOperator = (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = (function (_super) {\n    tslib_1.__extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasPrev = false;\n        return _this;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=pairwise.js.map\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar not_1 = __webpack_require__(400);\nvar filter_1 = __webpack_require__(54);\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return [\n        filter_1.filter.call(this, predicate, thisArg),\n        filter_1.filter.call(this, not_1.not(predicate, thisArg))\n    ];\n}\nexports.partition = partition;\n//# sourceMappingURL=partition.js.map\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar map_1 = __webpack_require__(27);\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return map_1.map.call(this, plucker(properties, length));\n}\nexports.pluck = pluck;\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = __webpack_require__(7);\nvar multicast_1 = __webpack_require__(24);\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish(selector) {\n    return selector ? multicast_1.multicast.call(this, function () { return new Subject_1.Subject(); }, selector) :\n        multicast_1.multicast.call(this, new Subject_1.Subject());\n}\nexports.publish = publish;\n//# sourceMappingURL=publish.js.map\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BehaviorSubject_1 = __webpack_require__(50);\nvar multicast_1 = __webpack_require__(24);\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior(value) {\n    return multicast_1.multicast.call(this, new BehaviorSubject_1.BehaviorSubject(value));\n}\nexports.publishBehavior = publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsyncSubject_1 = __webpack_require__(35);\nvar multicast_1 = __webpack_require__(24);\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nfunction publishLast() {\n    return multicast_1.multicast.call(this, new AsyncSubject_1.AsyncSubject());\n}\nexports.publishLast = publishLast;\n//# sourceMappingURL=publishLast.js.map\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ReplaySubject_1 = __webpack_require__(36);\nvar multicast_1 = __webpack_require__(24);\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nfunction publishReplay(bufferSize, windowTime, scheduler) {\n    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n    return multicast_1.multicast.call(this, new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler));\n}\nexports.publishReplay = publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar EmptyObservable_1 = __webpack_require__(22);\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else if (count < 0) {\n        return this.lift(new RepeatOperator(-1, this));\n    }\n    else {\n        return this.lift(new RepeatOperator(count - 1, this));\n    }\n}\nexports.repeat = repeat;\nvar RepeatOperator = (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = (function (_super) {\n    tslib_1.__extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=repeat.js.map\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subject_1 = __webpack_require__(7);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen(notifier) {\n    return this.lift(new RepeatWhenOperator(notifier));\n}\nexports.repeatWhen = repeatWhen;\nvar RepeatWhenOperator = (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatWhenSubscriber = (function (_super) {\n    tslib_1.__extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        _this.sourceIsBeingSubscribedTo = true;\n        return _this;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            else if (this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.notifications = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this.notifications = notifications;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject_1.Subject();\n        var retries = tryCatch_1.tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject_1.errorObject) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry(count) {\n    if (count === void 0) { count = -1; }\n    return this.lift(new RetryOperator(count, this));\n}\nexports.retry = retry;\nvar RetryOperator = (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetrySubscriber = (function (_super) {\n    tslib_1.__extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=retry.js.map\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subject_1 = __webpack_require__(7);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return this.lift(new RetryWhenOperator(notifier, this));\n}\nexports.retryWhen = retryWhen;\nvar RetryWhenOperator = (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = (function (_super) {\n    tslib_1.__extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        return _this;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject_1.Subject();\n                retries = tryCatch_1.tryCatch(this.notifier)(errors);\n                if (retries === errorObject_1.errorObject) {\n                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);\n                }\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.errors = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this._unsubscribeAndRecycle();\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample(notifier) {\n    return this.lift(new SampleOperator(notifier));\n}\nexports.sample = sample;\nvar SampleOperator = (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = (function (_super) {\n    tslib_1.__extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.hasValue = false;\n        return _this;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=sample.js.map\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar async_1 = __webpack_require__(11);\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new SampleTimeOperator(period, scheduler));\n}\nexports.sampleTime = sampleTime;\nvar SampleTimeOperator = (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = (function (_super) {\n    tslib_1.__extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.period = period;\n        _this.scheduler = scheduler;\n        _this.hasValue = false;\n        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));\n        return _this;\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return this.lift(new ScanOperator(accumulator, seed, hasSeed));\n}\nexports.scan = scan;\nvar ScanOperator = (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    tslib_1.__extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this._seed = _seed;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        return _this;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=scan.js.map\n\n/***/ }),\n/* 354 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual(compareTo, comparor) {\n    return this.lift(new SequenceEqualOperator(compareTo, comparor));\n}\nexports.sequenceEqual = sequenceEqual;\nvar SequenceEqualOperator = (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nexports.SequenceEqualOperator = SequenceEqualOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SequenceEqualSubscriber = (function (_super) {\n    tslib_1.__extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        var _this = _super.call(this, destination) || this;\n        _this.compareTo = compareTo;\n        _this.comparor = comparor;\n        _this._a = [];\n        _this._b = [];\n        _this._oneComplete = false;\n        _this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n        return _this;\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch_1.tryCatch(comparor)(a, b);\n                if (areEqual === errorObject_1.errorObject) {\n                    this.destination.error(errorObject_1.errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SequenceEqualSubscriber = SequenceEqualSubscriber;\nvar SequenceEqualCompareToSubscriber = (function (_super) {\n    tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar multicast_1 = __webpack_require__(24);\nvar ReplaySubject_1 = __webpack_require__(36);\n/**\n * @method shareReplay\n * @owner Observable\n */\nfunction shareReplay(bufferSize, windowTime, scheduler) {\n    var subject;\n    var connectable = multicast_1.multicast.call(this, function shareReplaySubjectFactory() {\n        if (this._isComplete) {\n            return subject;\n        }\n        else {\n            return (subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler));\n        }\n    });\n    return connectable.refCount();\n}\nexports.shareReplay = shareReplay;\n//# sourceMappingURL=shareReplay.js.map\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar EmptyError_1 = __webpack_require__(31);\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single(predicate) {\n    return this.lift(new SingleOperator(predicate, this));\n}\nexports.single = single;\nvar SingleOperator = (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SingleSubscriber = (function (_super) {\n    tslib_1.__extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.seenValue = false;\n        _this.index = 0;\n        return _this;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=single.js.map\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(count) {\n    return this.lift(new SkipOperator(count));\n}\nexports.skip = skip;\nvar SkipOperator = (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = (function (_super) {\n    tslib_1.__extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skip.js.map\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar ArgumentOutOfRangeError_1 = __webpack_require__(30);\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nfunction skipLast(count) {\n    return this.lift(new SkipLastOperator(count));\n}\nexports.skipLast = skipLast;\nvar SkipLastOperator = (function () {\n    function SkipLastOperator(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    SkipLastOperator.prototype.call = function (subscriber, source) {\n        if (this._skipCount === 0) {\n            // If we don't want to skip any values then just subscribe\n            // to Subscriber without any further logic.\n            return source.subscribe(new Subscriber_1.Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    };\n    return SkipLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipLastSubscriber = (function (_super) {\n    tslib_1.__extends(SkipLastSubscriber, _super);\n    function SkipLastSubscriber(destination, _skipCount) {\n        var _this = _super.call(this, destination) || this;\n        _this._skipCount = _skipCount;\n        _this._count = 0;\n        _this._ring = new Array(_skipCount);\n        return _this;\n    }\n    SkipLastSubscriber.prototype._next = function (value) {\n        var skipCount = this._skipCount;\n        var count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            var currentIndex = count % skipCount;\n            var ring = this._ring;\n            var oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    };\n    return SkipLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skipLast.js.map\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil(notifier) {\n    return this.lift(new SkipUntilOperator(notifier));\n}\nexports.skipUntil = skipUntil;\nvar SkipUntilOperator = (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipUntilSubscriber = (function (_super) {\n    tslib_1.__extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasValue = false;\n        _this.isInnerStopped = false;\n        _this.add(subscribeToResult_1.subscribeToResult(_this, notifier));\n        return _this;\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype._complete = function () {\n        if (this.isInnerStopped) {\n            _super.prototype._complete.call(this);\n        }\n        else {\n            this.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n        this.isInnerStopped = true;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=skipUntil.js.map\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n    return this.lift(new SkipWhileOperator(predicate));\n}\nexports.skipWhile = skipWhile;\nvar SkipWhileOperator = (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipWhileSubscriber = (function (_super) {\n    tslib_1.__extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.skipping = true;\n        _this.index = 0;\n        return _this;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skipWhile.js.map\n\n/***/ }),\n/* 361 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayObservable_1 = __webpack_require__(18);\nvar ScalarObservable_1 = __webpack_require__(115);\nvar EmptyObservable_1 = __webpack_require__(22);\nvar concat_1 = __webpack_require__(53);\nvar isScheduler_1 = __webpack_require__(20);\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    var scheduler = array[array.length - 1];\n    if (isScheduler_1.isScheduler(scheduler)) {\n        array.pop();\n    }\n    else {\n        scheduler = null;\n    }\n    var len = array.length;\n    if (len === 1) {\n        return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0], scheduler), this);\n    }\n    else if (len > 1) {\n        return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array, scheduler), this);\n    }\n    else {\n        return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler), this);\n    }\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map\n\n/***/ }),\n/* 362 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SubscribeOnObservable_1 = __webpack_require__(283);\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new SubscribeOnOperator(scheduler, delay));\n}\nexports.subscribeOn = subscribeOn;\nvar SubscribeOnOperator = (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n//# sourceMappingURL=subscribeOn.js.map\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nfunction _switch() {\n    return this.lift(new SwitchOperator());\n}\nexports._switch = _switch;\nvar SwitchOperator = (function () {\n    function SwitchOperator() {\n    }\n    SwitchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchSubscriber(subscriber));\n    };\n    return SwitchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchSubscriber = (function (_super) {\n    tslib_1.__extends(SwitchSubscriber, _super);\n    function SwitchSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.active = 0;\n        _this.hasCompleted = false;\n        return _this;\n    }\n    SwitchSubscriber.prototype._next = function (value) {\n        this.unsubscribeInner();\n        this.active++;\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, value));\n    };\n    SwitchSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    SwitchSubscriber.prototype.unsubscribeInner = function () {\n        this.active = this.active > 0 ? this.active - 1 : 0;\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n            this.remove(innerSubscription);\n        }\n    };\n    SwitchSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    SwitchSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchSubscriber.prototype.notifyComplete = function () {\n        this.unsubscribeInner();\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return SwitchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switch.js.map\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    tslib_1.__extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.resultSelector = resultSelector;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo(innerObservable, resultSelector) {\n    return this.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\nexports.switchMapTo = switchMapTo;\nvar SwitchMapToOperator = (function () {\n    function SwitchMapToOperator(observable, resultSelector) {\n        this.observable = observable;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n    };\n    return SwitchMapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapToSubscriber = (function (_super) {\n    tslib_1.__extends(SwitchMapToSubscriber, _super);\n    function SwitchMapToSubscriber(destination, inner, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.inner = inner;\n        _this.resultSelector = resultSelector;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapToSubscriber.prototype._next = function (value) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));\n    };\n    SwitchMapToSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    return SwitchMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMapTo.js.map\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar ArgumentOutOfRangeError_1 = __webpack_require__(30);\nvar EmptyObservable_1 = __webpack_require__(22);\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeOperator(count));\n    }\n}\nexports.take = take;\nvar TakeOperator = (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = (function (_super) {\n    tslib_1.__extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=take.js.map\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar ArgumentOutOfRangeError_1 = __webpack_require__(30);\nvar EmptyObservable_1 = __webpack_require__(22);\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeLastOperator(count));\n    }\n}\nexports.takeLast = takeLast;\nvar TakeLastOperator = (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = (function (_super) {\n    tslib_1.__extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.ring = new Array();\n        _this.count = 0;\n        return _this;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeLast.js.map\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return this.lift(new TakeUntilOperator(notifier));\n}\nexports.takeUntil = takeUntil;\nvar TakeUntilOperator = (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = (function (_super) {\n    tslib_1.__extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.add(subscribeToResult_1.subscribeToResult(_this, notifier));\n        return _this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return this.lift(new TakeWhileOperator(predicate));\n}\nexports.takeWhile = takeWhile;\nvar TakeWhileOperator = (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = (function (_super) {\n    tslib_1.__extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.index = 0;\n        return _this;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            this.unsubscribe();\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n            this.unsubscribe();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeWhile.js.map\n\n/***/ }),\n/* 370 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar async_1 = __webpack_require__(11);\nvar throttle_1 = __webpack_require__(93);\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }\n    return this.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nexports.throttleTime = throttleTime;\nvar ThrottleTimeOperator = (function () {\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    };\n    return ThrottleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleTimeSubscriber = (function (_super) {\n    tslib_1.__extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.duration = duration;\n        _this.scheduler = scheduler;\n        _this.leading = leading;\n        _this.trailing = trailing;\n        _this._hasTrailingValue = false;\n        _this._trailingValue = null;\n        return _this;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map\n\n/***/ }),\n/* 371 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar async_1 = __webpack_require__(11);\nvar isDate_1 = __webpack_require__(38);\nvar Subscriber_1 = __webpack_require__(2);\nvar TimeoutError_1 = __webpack_require__(102);\n/**\n * @param {number} due\n * @param {Scheduler} [scheduler]\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return this.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError_1.TimeoutError()));\n}\nexports.timeout = timeout;\nvar TimeoutOperator = (function () {\n    function TimeoutOperator(waitFor, absoluteTimeout, scheduler, errorInstance) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n    }\n    TimeoutOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance));\n    };\n    return TimeoutOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutSubscriber = (function (_super) {\n    tslib_1.__extends(TimeoutSubscriber, _super);\n    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, scheduler, errorInstance) {\n        var _this = _super.call(this, destination) || this;\n        _this.absoluteTimeout = absoluteTimeout;\n        _this.waitFor = waitFor;\n        _this.scheduler = scheduler;\n        _this.errorInstance = errorInstance;\n        _this.action = null;\n        _this.scheduleTimeout();\n        return _this;\n    }\n    TimeoutSubscriber.dispatchTimeout = function (subscriber) {\n        subscriber.error(subscriber.errorInstance);\n    };\n    TimeoutSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    TimeoutSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.errorInstance = null;\n    };\n    return TimeoutSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeout.js.map\n\n/***/ }),\n/* 372 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar async_1 = __webpack_require__(11);\nvar isDate_1 = __webpack_require__(38);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/* tslint:enable:max-line-length */\n/**\n * @param due\n * @param withObservable\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return this.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n}\nexports.timeoutWith = timeoutWith;\nvar TimeoutWithOperator = (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutWithSubscriber = (function (_super) {\n    tslib_1.__extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.absoluteTimeout = absoluteTimeout;\n        _this.waitFor = waitFor;\n        _this.withObservable = withObservable;\n        _this.scheduler = scheduler;\n        _this.action = null;\n        _this.scheduleTimeout();\n        return _this;\n    }\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n        var withObservable = subscriber.withObservable;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult_1.subscribeToResult(subscriber, withObservable));\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    TimeoutWithSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=timeoutWith.js.map\n\n/***/ }),\n/* 373 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray() {\n    return this.lift(new ToArrayOperator());\n}\nexports.toArray = toArray;\nvar ToArrayOperator = (function () {\n    function ToArrayOperator() {\n    }\n    ToArrayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ToArraySubscriber(subscriber));\n    };\n    return ToArrayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ToArraySubscriber = (function (_super) {\n    tslib_1.__extends(ToArraySubscriber, _super);\n    function ToArraySubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.array = [];\n        return _this;\n    }\n    ToArraySubscriber.prototype._next = function (x) {\n        this.array.push(x);\n    };\n    ToArraySubscriber.prototype._complete = function () {\n        this.destination.next(this.array);\n        this.destination.complete();\n    };\n    return ToArraySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=toArray.js.map\n\n/***/ }),\n/* 374 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = __webpack_require__(12);\n/* tslint:enable:max-line-length */\n/**\n * Converts an Observable sequence to a ES2015 compliant promise.\n *\n * @example\n * // Using normal ES2015\n * let source = Rx.Observable\n *   .of(42)\n *   .toPromise();\n *\n * source.then((value) => console.log('Value: %s', value));\n * // => Value: 42\n *\n * // Rejected Promise\n * // Using normal ES2015\n * let source = Rx.Observable\n *   .throw(new Error('woops'))\n *   .toPromise();\n *\n * source\n *   .then((value) => console.log('Value: %s', value))\n *   .catch((err) => console.log('Error: %s', err));\n * // => Error: Error: woops\n *\n * // Setting via the config\n * Rx.config.Promise = RSVP.Promise;\n *\n * let source = Rx.Observable\n *   .of(42)\n *   .toPromise();\n *\n * source.then((value) => console.log('Value: %s', value));\n * // => Value: 42\n *\n * // Setting via the method\n * let source = Rx.Observable\n *   .of(42)\n *   .toPromise(RSVP.Promise);\n *\n * source.then((value) => console.log('Value: %s', value));\n * // => Value: 42\n *\n * @param {PromiseConstructor} [PromiseCtor] The constructor of the promise. If not provided,\n * it will look for a constructor first in Rx.config.Promise then fall back to\n * the native Promise constructor if available.\n * @return {Promise<T>} An ES2015 compatible promise with the last value from\n * the observable sequence.\n * @method toPromise\n * @owner Observable\n */\nfunction toPromise(PromiseCtor) {\n    var _this = this;\n    if (!PromiseCtor) {\n        if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n            PromiseCtor = root_1.root.Rx.config.Promise;\n        }\n        else if (root_1.root.Promise) {\n            PromiseCtor = root_1.root.Promise;\n        }\n    }\n    if (!PromiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return new PromiseCtor(function (resolve, reject) {\n        var value;\n        _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n    });\n}\nexports.toPromise = toPromise;\n//# sourceMappingURL=toPromise.js.map\n\n/***/ }),\n/* 375 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subject_1 = __webpack_require__(7);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window(windowBoundaries) {\n    return this.lift(new WindowOperator(windowBoundaries));\n}\nexports.window = window;\nvar WindowOperator = (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    tslib_1.__extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.window = new Subject_1.Subject();\n        destination.next(_this.window);\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject_1.Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=window.js.map\n\n/***/ }),\n/* 376 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscriber_1 = __webpack_require__(2);\nvar Subject_1 = __webpack_require__(7);\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return this.lift(new WindowCountOperator(windowSize, startWindowEvery));\n}\nexports.windowCount = windowCount;\nvar WindowCountOperator = (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowCountSubscriber = (function (_super) {\n    tslib_1.__extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowSize = windowSize;\n        _this.startWindowEvery = startWindowEvery;\n        _this.windows = [new Subject_1.Subject()];\n        _this.count = 0;\n        destination.next(_this.windows[0]);\n        return _this;\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject_1.Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=windowCount.js.map\n\n/***/ }),\n/* 377 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subject_1 = __webpack_require__(7);\nvar async_1 = __webpack_require__(11);\nvar Subscriber_1 = __webpack_require__(2);\nvar isNumeric_1 = __webpack_require__(39);\nvar isScheduler_1 = __webpack_require__(20);\nfunction windowTime(windowTimeSpan) {\n    var scheduler = async_1.async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler_1.isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler_1.isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric_1.isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler_1.isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric_1.isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return this.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n}\nexports.windowTime = windowTime;\nvar WindowTimeOperator = (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = (function (_super) {\n    tslib_1.__extends(CountedSubject, _super);\n    function CountedSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._numberOfNextedValues = 0;\n        return _this;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject_1.Subject));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowTimeSubscriber = (function (_super) {\n    tslib_1.__extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowTimeSpan = windowTimeSpan;\n        _this.windowCreationInterval = windowCreationInterval;\n        _this.maxWindowSize = maxWindowSize;\n        _this.scheduler = scheduler;\n        _this.windows = [];\n        var window = _this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: _this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };\n            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n        return _this;\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map\n\n/***/ }),\n/* 378 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subject_1 = __webpack_require__(7);\nvar Subscription_1 = __webpack_require__(9);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle(openings, closingSelector) {\n    return this.lift(new WindowToggleOperator(openings, closingSelector));\n}\nexports.windowToggle = windowToggle;\nvar WindowToggleOperator = (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowToggleSubscriber = (function (_super) {\n    tslib_1.__extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(_this.openSubscription = subscribeToResult_1.subscribeToResult(_this, openings, openings));\n        return _this;\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_1 = contexts[index];\n                context_1.window.error(err);\n                context_1.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_2 = contexts[index];\n                context_2.window.complete();\n                context_2.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_3 = contexts[index];\n                context_3.window.unsubscribe();\n                context_3.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject_1.errorObject) {\n                return this.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var window_1 = new Subject_1.Subject();\n                var subscription = new Subscription_1.Subscription();\n                var context_4 = { window: window_1, subscription: subscription };\n                this.contexts.push(context_4);\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context_4);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context_4;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map\n\n/***/ }),\n/* 379 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subject_1 = __webpack_require__(7);\nvar tryCatch_1 = __webpack_require__(10);\nvar errorObject_1 = __webpack_require__(8);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return this.lift(new WindowOperator(closingSelector));\n}\nexports.windowWhen = windowWhen;\nvar WindowOperator = (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    tslib_1.__extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.closingSelector = closingSelector;\n        _this.openWindow();\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) { innerSub = null; }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject_1.Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            var err = errorObject_1.errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map\n\n/***/ }),\n/* 380 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar OuterSubscriber_1 = __webpack_require__(3);\nvar subscribeToResult_1 = __webpack_require__(4);\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var project;\n    if (typeof args[args.length - 1] === 'function') {\n        project = args.pop();\n    }\n    var observables = args;\n    return this.lift(new WithLatestFromOperator(observables, project));\n}\nexports.withLatestFrom = withLatestFrom;\nvar WithLatestFromOperator = (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = (function (_super) {\n    tslib_1.__extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.observables = observables;\n        _this.project = project;\n        _this.toRespond = [];\n        var len = observables.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            _this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            _this.add(subscribeToResult_1.subscribeToResult(_this, observable, observable, i));\n        }\n        return _this;\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map\n\n/***/ }),\n/* 381 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar zip_1 = __webpack_require__(57);\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nfunction zipAll(project) {\n    return this.lift(new zip_1.ZipOperator(project));\n}\nexports.zipAll = zipAll;\n//# sourceMappingURL=zipAll.js.map\n\n/***/ }),\n/* 382 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subscription_1 = __webpack_require__(9);\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    tslib_1.__extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n/***/ }),\n/* 383 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar AsyncAction_1 = __webpack_require__(28);\nvar AnimationFrame_1 = __webpack_require__(393);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AnimationFrameAction = (function (_super) {\n    tslib_1.__extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If an animation frame has already been requested, don't request another\n        // one. If an animation frame hasn't been requested yet, request one. Return\n        // the current animation frame request id.\n        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested animation frame and\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\n        // request its own.\n        if (scheduler.actions.length === 0) {\n            AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction_1.AsyncAction));\nexports.AnimationFrameAction = AnimationFrameAction;\n//# sourceMappingURL=AnimationFrameAction.js.map\n\n/***/ }),\n/* 384 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar AsyncScheduler_1 = __webpack_require__(29);\nvar AnimationFrameScheduler = (function (_super) {\n    tslib_1.__extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnimationFrameScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AnimationFrameScheduler = AnimationFrameScheduler;\n//# sourceMappingURL=AnimationFrameScheduler.js.map\n\n/***/ }),\n/* 385 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Immediate_1 = __webpack_require__(395);\nvar AsyncAction_1 = __webpack_require__(28);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsapAction = (function (_super) {\n    tslib_1.__extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If a microtask has already been scheduled, don't schedule another\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n        // the current scheduled microtask id.\n        return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested microtask and\n        // set the scheduled flag to undefined so the next AsapAction will schedule\n        // its own.\n        if (scheduler.actions.length === 0) {\n            Immediate_1.Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction_1.AsyncAction));\nexports.AsapAction = AsapAction;\n//# sourceMappingURL=AsapAction.js.map\n\n/***/ }),\n/* 386 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar AsyncScheduler_1 = __webpack_require__(29);\nvar AsapScheduler = (function (_super) {\n    tslib_1.__extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AsapScheduler = AsapScheduler;\n//# sourceMappingURL=AsapScheduler.js.map\n\n/***/ }),\n/* 387 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar AsyncAction_1 = __webpack_require__(28);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    tslib_1.__extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nexports.QueueAction = QueueAction;\n//# sourceMappingURL=QueueAction.js.map\n\n/***/ }),\n/* 388 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar AsyncScheduler_1 = __webpack_require__(29);\nvar QueueScheduler = (function (_super) {\n    tslib_1.__extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.QueueScheduler = QueueScheduler;\n//# sourceMappingURL=QueueScheduler.js.map\n\n/***/ }),\n/* 389 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AnimationFrameAction_1 = __webpack_require__(383);\nvar AnimationFrameScheduler_1 = __webpack_require__(384);\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * @example <caption>Schedule div height animation</caption>\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n *\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\nexports.animationFrame = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map\n\n/***/ }),\n/* 390 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar Subscription_1 = __webpack_require__(9);\nvar SubscriptionLoggable_1 = __webpack_require__(101);\nvar applyMixins_1 = __webpack_require__(103);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ColdObservable = (function (_super) {\n    tslib_1.__extends(ColdObservable, _super);\n    function ColdObservable(messages, scheduler) {\n        var _this = _super.call(this, function (subscriber) {\n            var observable = this;\n            var index = observable.logSubscribedFrame();\n            subscriber.add(new Subscription_1.Subscription(function () {\n                observable.logUnsubscribedFrame(index);\n            }));\n            observable.scheduleMessages(subscriber);\n            return subscriber;\n        }) || this;\n        _this.messages = messages;\n        _this.subscriptions = [];\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    ColdObservable.prototype.scheduleMessages = function (subscriber) {\n        var messagesLength = this.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            var message = this.messages[i];\n            subscriber.add(this.scheduler.schedule(function (_a) {\n                var message = _a.message, subscriber = _a.subscriber;\n                message.notification.observe(subscriber);\n            }, message.frame, { message: message, subscriber: subscriber }));\n        }\n    };\n    return ColdObservable;\n}(Observable_1.Observable));\nexports.ColdObservable = ColdObservable;\napplyMixins_1.applyMixins(ColdObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n//# sourceMappingURL=ColdObservable.js.map\n\n/***/ }),\n/* 391 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Subject_1 = __webpack_require__(7);\nvar Subscription_1 = __webpack_require__(9);\nvar SubscriptionLoggable_1 = __webpack_require__(101);\nvar applyMixins_1 = __webpack_require__(103);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar HotObservable = (function (_super) {\n    tslib_1.__extends(HotObservable, _super);\n    function HotObservable(messages, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.messages = messages;\n        _this.subscriptions = [];\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    HotObservable.prototype._subscribe = function (subscriber) {\n        var subject = this;\n        var index = subject.logSubscribedFrame();\n        subscriber.add(new Subscription_1.Subscription(function () {\n            subject.logUnsubscribedFrame(index);\n        }));\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    HotObservable.prototype.setup = function () {\n        var subject = this;\n        var messagesLength = subject.messages.length;\n        /* tslint:disable:no-var-keyword */\n        for (var i = 0; i < messagesLength; i++) {\n            (function () {\n                var message = subject.messages[i];\n                /* tslint:enable */\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    };\n    return HotObservable;\n}(Subject_1.Subject));\nexports.HotObservable = HotObservable;\napplyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n//# sourceMappingURL=HotObservable.js.map\n\n/***/ }),\n/* 392 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(1);\nvar Observable_1 = __webpack_require__(0);\nvar Notification_1 = __webpack_require__(26);\nvar ColdObservable_1 = __webpack_require__(390);\nvar HotObservable_1 = __webpack_require__(391);\nvar SubscriptionLog_1 = __webpack_require__(100);\nvar VirtualTimeScheduler_1 = __webpack_require__(96);\nvar defaultMaxFrame = 750;\nvar TestScheduler = (function (_super) {\n    tslib_1.__extends(TestScheduler, _super);\n    function TestScheduler(assertDeepEqual) {\n        var _this = _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame) || this;\n        _this.assertDeepEqual = assertDeepEqual;\n        _this.hotObservables = [];\n        _this.coldObservables = [];\n        _this.flushTests = [];\n        return _this;\n    }\n    TestScheduler.prototype.createTime = function (marbles) {\n        var indexOf = marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    };\n    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var cold = new ColdObservable_1.ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    };\n    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var subject = new HotObservable_1.HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    };\n    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n        var _this = this;\n        var messages = [];\n        observable.subscribe(function (value) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });\n        }, function (err) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });\n        }, function () {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });\n        });\n        return messages;\n    };\n    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {\n        var _this = this;\n        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }\n        var actual = [];\n        var flushTest = { actual: actual, ready: false };\n        var unsubscriptionFrame = TestScheduler\n            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n        var subscription;\n        this.schedule(function () {\n            subscription = observable.subscribe(function (x) {\n                var value = x;\n                // Support Observable-of-Observables\n                if (x instanceof Observable_1.Observable) {\n                    value = _this.materializeInnerObservable(value, _this.frame);\n                }\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });\n            }, function (err) {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });\n            }, function () {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });\n            });\n        }, 0);\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n            }\n        };\n    };\n    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n        var flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles) {\n                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray.map(function (marbles) {\n                    return TestScheduler.parseMarblesAsSubscriptions(marbles);\n                });\n            }\n        };\n    };\n    TestScheduler.prototype.flush = function () {\n        var hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        _super.prototype.flush.call(this);\n        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });\n        while (readyFlushTests.length > 0) {\n            var test_1 = readyFlushTests.shift();\n            this.assertDeepEqual(test_1.actual, test_1.expected);\n        }\n    };\n    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);\n        }\n        var len = marbles.length;\n        var groupStart = -1;\n        var subscriptionFrame = Number.POSITIVE_INFINITY;\n        var unsubscriptionFrame = Number.POSITIVE_INFINITY;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\n            }\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    };\n    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {\n        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' +\n                'unsubscription marker \"!\"');\n        }\n        var len = marbles.length;\n        var testMessages = [];\n        var subIndex = marbles.indexOf('^');\n        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n        var getValue = typeof values !== 'object' ?\n            function (x) { return x; } :\n            function (x) {\n                // Support Observable-of-Observables\n                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        var groupStart = -1;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor + frameOffset;\n            var notification = void 0;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '|':\n                    notification = Notification_1.Notification.createComplete();\n                    break;\n                case '^':\n                    break;\n                case '#':\n                    notification = Notification_1.Notification.createError(errorValue || 'error');\n                    break;\n                default:\n                    notification = Notification_1.Notification.createNext(getValue(c));\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });\n            }\n        }\n        return testMessages;\n    };\n    return TestScheduler;\n}(VirtualTimeScheduler_1.VirtualTimeScheduler));\nexports.TestScheduler = TestScheduler;\n//# sourceMappingURL=TestScheduler.js.map\n\n/***/ }),\n/* 393 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = __webpack_require__(12);\nvar RequestAnimationFrameDefinition = (function () {\n    function RequestAnimationFrameDefinition(root) {\n        if (root.requestAnimationFrame) {\n            this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.requestAnimationFrame.bind(root);\n        }\n        else if (root.mozRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);\n        }\n        else if (root.webkitRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);\n        }\n        else if (root.msRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);\n        }\n        else if (root.oRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);\n        }\n        else {\n            this.cancelAnimationFrame = root.clearTimeout.bind(root);\n            this.requestAnimationFrame = function (cb) { return root.setTimeout(cb, 1000 / 60); };\n        }\n    }\n    return RequestAnimationFrameDefinition;\n}());\nexports.RequestAnimationFrameDefinition = RequestAnimationFrameDefinition;\nexports.AnimationFrame = new RequestAnimationFrameDefinition(root_1.root);\n//# sourceMappingURL=AnimationFrame.js.map\n\n/***/ }),\n/* 394 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FastMap = (function () {\n    function FastMap() {\n        this.values = {};\n    }\n    FastMap.prototype.delete = function (key) {\n        this.values[key] = null;\n        return true;\n    };\n    FastMap.prototype.set = function (key, value) {\n        this.values[key] = value;\n        return this;\n    };\n    FastMap.prototype.get = function (key) {\n        return this.values[key];\n    };\n    FastMap.prototype.forEach = function (cb, thisArg) {\n        var values = this.values;\n        for (var key in values) {\n            if (values.hasOwnProperty(key) && values[key] !== null) {\n                cb.call(thisArg, values[key], key);\n            }\n        }\n    };\n    FastMap.prototype.clear = function () {\n        this.values = {};\n    };\n    return FastMap;\n}());\nexports.FastMap = FastMap;\n//# sourceMappingURL=FastMap.js.map\n\n/***/ }),\n/* 395 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(clearImmediate, setImmediate) {\n/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = __webpack_require__(12);\nvar ImmediateDefinition = (function () {\n    function ImmediateDefinition(root) {\n        this.root = root;\n        if (root.setImmediate && typeof root.setImmediate === 'function') {\n            this.setImmediate = root.setImmediate.bind(root);\n            this.clearImmediate = root.clearImmediate.bind(root);\n        }\n        else {\n            this.nextHandle = 1;\n            this.tasksByHandle = {};\n            this.currentlyRunningATask = false;\n            // Don't get fooled by e.g. browserify environments.\n            if (this.canUseProcessNextTick()) {\n                // For Node.js before 0.9\n                this.setImmediate = this.createProcessNextTickSetImmediate();\n            }\n            else if (this.canUsePostMessage()) {\n                // For non-IE10 modern browsers\n                this.setImmediate = this.createPostMessageSetImmediate();\n            }\n            else if (this.canUseMessageChannel()) {\n                // For web workers, where supported\n                this.setImmediate = this.createMessageChannelSetImmediate();\n            }\n            else if (this.canUseReadyStateChange()) {\n                // For IE 6–8\n                this.setImmediate = this.createReadyStateChangeSetImmediate();\n            }\n            else {\n                // For older browsers\n                this.setImmediate = this.createSetTimeoutSetImmediate();\n            }\n            var ci = function clearImmediate(handle) {\n                delete clearImmediate.instance.tasksByHandle[handle];\n            };\n            ci.instance = this;\n            this.clearImmediate = ci;\n        }\n    }\n    ImmediateDefinition.prototype.identify = function (o) {\n        return this.root.Object.prototype.toString.call(o);\n    };\n    ImmediateDefinition.prototype.canUseProcessNextTick = function () {\n        return this.identify(this.root.process) === '[object process]';\n    };\n    ImmediateDefinition.prototype.canUseMessageChannel = function () {\n        return Boolean(this.root.MessageChannel);\n    };\n    ImmediateDefinition.prototype.canUseReadyStateChange = function () {\n        var document = this.root.document;\n        return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n    };\n    ImmediateDefinition.prototype.canUsePostMessage = function () {\n        var root = this.root;\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `root.postMessage` means something completely different and can't be used for this purpose.\n        if (root.postMessage && !root.importScripts) {\n            var postMessageIsAsynchronous_1 = true;\n            var oldOnMessage = root.onmessage;\n            root.onmessage = function () {\n                postMessageIsAsynchronous_1 = false;\n            };\n            root.postMessage('', '*');\n            root.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous_1;\n        }\n        return false;\n    };\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    ImmediateDefinition.prototype.partiallyApplied = function (handler) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var fn = function result() {\n            var _a = result, handler = _a.handler, args = _a.args;\n            if (typeof handler === 'function') {\n                handler.apply(undefined, args);\n            }\n            else {\n                (new Function('' + handler))();\n            }\n        };\n        fn.handler = handler;\n        fn.args = args;\n        return fn;\n    };\n    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {\n        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n        return this.nextHandle++;\n    };\n    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n        var root = this.root;\n        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n        var onGlobalMessage = function globalMessageHandler(event) {\n            var instance = globalMessageHandler.instance;\n            if (event.source === root &&\n                typeof event.data === 'string' &&\n                event.data.indexOf(messagePrefix) === 0) {\n                instance.runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n        onGlobalMessage.instance = this;\n        root.addEventListener('message', onGlobalMessage, false);\n        var fn = function setImmediate() {\n            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.postMessage(messagePrefix + handle, '*');\n            return handle;\n        };\n        fn.instance = this;\n        fn.messagePrefix = messagePrefix;\n        return fn;\n    };\n    ImmediateDefinition.prototype.runIfPresent = function (handle) {\n        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (this.currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // 'too much recursion' error.\n            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n        }\n        else {\n            var task = this.tasksByHandle[handle];\n            if (task) {\n                this.currentlyRunningATask = true;\n                try {\n                    task();\n                }\n                finally {\n                    this.clearImmediate(handle);\n                    this.currentlyRunningATask = false;\n                }\n            }\n        }\n    };\n    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {\n        var _this = this;\n        var channel = new this.root.MessageChannel();\n        channel.port1.onmessage = function (event) {\n            var handle = event.data;\n            _this.runIfPresent(handle);\n        };\n        var fn = function setImmediate() {\n            var _a = setImmediate, channel = _a.channel, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n        fn.channel = channel;\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var root = instance.root;\n            var doc = root.document;\n            var html = doc.documentElement;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement('script');\n            script.onreadystatechange = function () {\n                instance.runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    return ImmediateDefinition;\n}());\nexports.ImmediateDefinition = ImmediateDefinition;\nexports.Immediate = new ImmediateDefinition(root_1.root);\n//# sourceMappingURL=Immediate.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(106).clearImmediate, __webpack_require__(106).setImmediate))\n\n/***/ }),\n/* 396 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = __webpack_require__(12);\nvar MapPolyfill_1 = __webpack_require__(397);\nexports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();\n//# sourceMappingURL=Map.js.map\n\n/***/ }),\n/* 397 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MapPolyfill = (function () {\n    function MapPolyfill() {\n        this.size = 0;\n        this._values = [];\n        this._keys = [];\n    }\n    MapPolyfill.prototype.get = function (key) {\n        var i = this._keys.indexOf(key);\n        return i === -1 ? undefined : this._values[i];\n    };\n    MapPolyfill.prototype.set = function (key, value) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            this._keys.push(key);\n            this._values.push(value);\n            this.size++;\n        }\n        else {\n            this._values[i] = value;\n        }\n        return this;\n    };\n    MapPolyfill.prototype.delete = function (key) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            return false;\n        }\n        this._values.splice(i, 1);\n        this._keys.splice(i, 1);\n        this.size--;\n        return true;\n    };\n    MapPolyfill.prototype.clear = function () {\n        this._keys.length = 0;\n        this._values.length = 0;\n        this.size = 0;\n    };\n    MapPolyfill.prototype.forEach = function (cb, thisArg) {\n        for (var i = 0; i < this.size; i++) {\n            cb.call(thisArg, this._values[i], this._keys[i]);\n        }\n    };\n    return MapPolyfill;\n}());\nexports.MapPolyfill = MapPolyfill;\n//# sourceMappingURL=MapPolyfill.js.map\n\n/***/ }),\n/* 398 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = __webpack_require__(12);\nfunction minimalSetImpl() {\n    // THIS IS NOT a full impl of Set, this is just the minimum\n    // bits of functionality we need for this library.\n    return (function () {\n        function MinimalSet() {\n            this._values = [];\n        }\n        MinimalSet.prototype.add = function (value) {\n            if (!this.has(value)) {\n                this._values.push(value);\n            }\n        };\n        MinimalSet.prototype.has = function (value) {\n            return this._values.indexOf(value) !== -1;\n        };\n        Object.defineProperty(MinimalSet.prototype, \"size\", {\n            get: function () {\n                return this._values.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MinimalSet.prototype.clear = function () {\n            this._values.length = 0;\n        };\n        return MinimalSet;\n    }());\n}\nexports.minimalSetImpl = minimalSetImpl;\nexports.Set = root_1.root.Set || minimalSetImpl();\n//# sourceMappingURL=Set.js.map\n\n/***/ }),\n/* 399 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = __webpack_require__(12);\nfunction assignImpl(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    var len = sources.length;\n    for (var i = 0; i < len; i++) {\n        var source = sources[i];\n        for (var k in source) {\n            if (source.hasOwnProperty(k)) {\n                target[k] = source[k];\n            }\n        }\n    }\n    return target;\n}\nexports.assignImpl = assignImpl;\nfunction getAssign(root) {\n    return root.Object.assign || assignImpl;\n}\nexports.getAssign = getAssign;\nexports.assign = getAssign(root_1.root);\n//# sourceMappingURL=assign.js.map\n\n/***/ }),\n/* 400 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\nexports.not = not;\n//# sourceMappingURL=not.js.map\n\n/***/ }),\n/* 401 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(116), __webpack_require__(136)))\n\n/***/ }),\n/* 402 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// angular\r\nvar core_1 = __webpack_require__(6);\r\nvar common_1 = __webpack_require__(34);\r\nvar router_1 = __webpack_require__(40);\r\nvar forms_1 = __webpack_require__(15);\r\n// services\r\nvar axis_calculator_service_1 = __webpack_require__(107);\r\n// components\r\nvar faq_component_1 = __webpack_require__(58);\r\nvar calculator_component_1 = __webpack_require__(422);\r\nvar axis_settings_component_1 = __webpack_require__(421);\r\nvar _1 = __webpack_require__(109);\r\nvar routes = [\r\n    //{ path: '', redirectTo: 'calculator', pathMatch: 'full' },\r\n    { path: 'calculator', component: calculator_component_1.CalculatorComponent },\r\n    { path: 'settings', component: axis_settings_component_1.AxisSettingsComponent },\r\n    { path: 'faq', component: faq_component_1.FaqComponent },\r\n];\r\nvar AxisHeartModule = (function () {\r\n    function AxisHeartModule() {\r\n    }\r\n    AxisHeartModule = __decorate([\r\n        core_1.NgModule({\r\n            declarations: [\r\n                calculator_component_1.CalculatorComponent,\r\n                axis_settings_component_1.AxisSettingsComponent,\r\n            ],\r\n            providers: [\r\n                { provide: axis_calculator_service_1.AxisCalculator, useFactory: function () {\r\n                        var axisCalculatorSettings = {\r\n                            accuracy: {\r\n                                min: 0,\r\n                                max: 15,\r\n                                default: 2,\r\n                            },\r\n                            maxSum: {\r\n                                min: 0,\r\n                                max: 1000,\r\n                                default: {\r\n                                    min: -20,\r\n                                    max: 20,\r\n                                },\r\n                                initValue: 1,\r\n                            },\r\n                            maxWave: {\r\n                                min: 0,\r\n                                max: 1000,\r\n                                default: {\r\n                                    min: 0,\r\n                                    max: 20,\r\n                                },\r\n                                initR: 1,\r\n                                initQS: 0,\r\n                            },\r\n                        };\r\n                        return new axis_calculator_service_1.AxisCalculator(axisCalculatorSettings);\r\n                    }\r\n                },\r\n            ],\r\n            imports: [\r\n                router_1.RouterModule.forChild(routes),\r\n                common_1.CommonModule,\r\n                forms_1.FormsModule,\r\n                forms_1.ReactiveFormsModule,\r\n                _1.SharedModule\r\n            ],\r\n        })\r\n    ], AxisHeartModule);\r\n    return AxisHeartModule;\r\n}());\r\nexports.AxisHeartModule = AxisHeartModule;\r\n\n\n/***/ }),\n/* 403 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// angular\r\nvar core_1 = __webpack_require__(6);\r\nvar common_1 = __webpack_require__(34);\r\nvar router_1 = __webpack_require__(40);\r\nvar forms_1 = __webpack_require__(15);\r\n// services\r\nvar arrhythmia_service_1 = __webpack_require__(108);\r\n// components\r\nvar faq_component_1 = __webpack_require__(58);\r\nvar arrhythmia_component_1 = __webpack_require__(423);\r\nvar arrhythmia_settings_component_1 = __webpack_require__(424);\r\nvar _1 = __webpack_require__(109);\r\nvar routes = [\r\n    //{ path: '', redirectTo: 'calculator', pathMatch: 'full' },\r\n    { path: 'calculator', component: arrhythmia_component_1.ArrhythmiaComponent },\r\n    { path: 'settings', component: arrhythmia_settings_component_1.ArrhythmiaSettingsComponent },\r\n    { path: 'faq', component: faq_component_1.FaqComponent },\r\n];\r\nvar IsArrhythmiaModule = (function () {\r\n    function IsArrhythmiaModule() {\r\n    }\r\n    IsArrhythmiaModule = __decorate([\r\n        core_1.NgModule({\r\n            declarations: [\r\n                arrhythmia_component_1.ArrhythmiaComponent,\r\n                arrhythmia_settings_component_1.ArrhythmiaSettingsComponent,\r\n            ],\r\n            providers: [\r\n                { provide: arrhythmia_service_1.ArrhythmiaService, useFactory: function () {\r\n                        var settings = {\r\n                            coefficient: {\r\n                                min: 1,\r\n                                max: 100,\r\n                                init: 15\r\n                            },\r\n                            difference: {\r\n                                min: 1,\r\n                                max: 1000,\r\n                                init: 120\r\n                            },\r\n                            accuracy: {\r\n                                min: 0,\r\n                                max: 15,\r\n                                init: 2\r\n                            },\r\n                            interval: {\r\n                                min: 200,\r\n                                max: 3000,\r\n                                init: 1000\r\n                            },\r\n                            moreThenOnly: true\r\n                        };\r\n                        return new arrhythmia_service_1.ArrhythmiaService(settings);\r\n                    }\r\n                },\r\n            ],\r\n            imports: [\r\n                router_1.RouterModule.forChild(routes),\r\n                common_1.CommonModule,\r\n                forms_1.FormsModule,\r\n                forms_1.ReactiveFormsModule,\r\n                _1.SharedModule\r\n            ],\r\n        })\r\n    ], IsArrhythmiaModule);\r\n    return IsArrhythmiaModule;\r\n}());\r\nexports.IsArrhythmiaModule = IsArrhythmiaModule;\r\n\n\n/***/ }),\n/* 404 */,\n/* 405 */,\n/* 406 */,\n/* 407 */,\n/* 408 */,\n/* 409 */,\n/* 410 */,\n/* 411 */,\n/* 412 */,\n/* 413 */,\n/* 414 */,\n/* 415 */,\n/* 416 */,\n/* 417 */,\n/* 418 */,\n/* 419 */,\n/* 420 */,\n/* 421 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// angular\r\nvar core_1 = __webpack_require__(6);\r\nvar forms_1 = __webpack_require__(15);\r\n// services and helpers\r\nvar validators_1 = __webpack_require__(59);\r\nvar axis_calculator_service_1 = __webpack_require__(107);\r\nvar app_state_service_1 = __webpack_require__(33);\r\nvar AxisSettingsComponent = (function () {\r\n    function AxisSettingsComponent(fb, axisCalculatorModel, state) {\r\n        var _this = this;\r\n        this.axisCalculatorModel = axisCalculatorModel;\r\n        this.state = state;\r\n        this.useSums = state.getValue('useSums').use;\r\n        this.settingsForm = fb.group({\r\n            'accuracy': [\r\n                this.axisCalculatorModel.settings.accuracy.default,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.axisCalculatorModel.settings.accuracy.min),\r\n                    validators_1.checkMaximum(this.axisCalculatorModel.settings.accuracy.max)\r\n                ])\r\n            ],\r\n            'maxSum': [\r\n                this.axisCalculatorModel.settings.maxSum.default.max,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.axisCalculatorModel.settings.maxSum.min),\r\n                    validators_1.checkMaximum(this.axisCalculatorModel.settings.maxSum.max)\r\n                ])\r\n            ],\r\n            'maxWave': [\r\n                this.axisCalculatorModel.settings.maxWave.default.max,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.axisCalculatorModel.settings.maxWave.min),\r\n                    validators_1.checkMaximum(this.axisCalculatorModel.settings.maxWave.max)\r\n                ])\r\n            ],\r\n            'useSums': [\r\n                !this.useSums\r\n            ],\r\n        });\r\n        this.accuracy = this.settingsForm.controls['accuracy'];\r\n        this.maxSum = this.settingsForm.controls['maxSum'];\r\n        this.maxWave = this.settingsForm.controls['maxWave'];\r\n        this.useSumsField = this.settingsForm.controls['useSums'];\r\n        state.getStream('useSums').subscribe(function (value) {\r\n            _this.useSums = value.use;\r\n        });\r\n        this.settingsForm.valueChanges.subscribe(function (data) {\r\n            _this.formChanged = _this.checkFormChanges(data);\r\n        });\r\n        this.useSumsField.valueChanges.subscribe(function (data) {\r\n            _this.changeInputs(!data);\r\n        });\r\n    }\r\n    AxisSettingsComponent.prototype.ngOnInit = function () {\r\n        var formValue = sessionStorage.getItem('lastSettings');\r\n        if (formValue !== null) {\r\n            this.settingsForm.setValue(JSON.parse(formValue));\r\n            this.setSettings();\r\n        }\r\n    };\r\n    AxisSettingsComponent.prototype.ngOnDestroy = function () {\r\n        sessionStorage.setItem('lastSettings', JSON.stringify(this.settingsForm.value));\r\n    };\r\n    AxisSettingsComponent.prototype.onSubmit = function (val) {\r\n        if (this.settingsForm.valid) {\r\n            this.setSettings();\r\n            this.formChanged = false;\r\n            this.showResult('сохранено');\r\n        }\r\n    };\r\n    AxisSettingsComponent.prototype.setSettings = function () {\r\n        this.axisCalculatorModel\r\n            .setAccuracy(this.accuracy.value)\r\n            .setMaxSum(-1 * this.maxSum.value, this.maxSum.value)\r\n            .setMaxWave(this.maxWave.value);\r\n    };\r\n    AxisSettingsComponent.prototype.reset = function (event) {\r\n        event.preventDefault();\r\n        this.accuracy.reset(this.axisCalculatorModel.settings.accuracy.default);\r\n        this.maxSum.reset(this.axisCalculatorModel.settings.maxSum.default.max);\r\n        this.maxWave.reset(this.axisCalculatorModel.settings.maxWave.default.max);\r\n        this.state.toggle('useSums', true);\r\n        this.setSettings();\r\n        this.formChanged = false;\r\n        this.showResult('сброшено');\r\n    };\r\n    AxisSettingsComponent.prototype.changeInputs = function (direction) {\r\n        this.state.toggle('useSums', direction);\r\n    };\r\n    AxisSettingsComponent.prototype.showResult = function (message) {\r\n        var _this = this;\r\n        this.message = message;\r\n        if (this.messageLoop) {\r\n            clearTimeout(this.messageLoop);\r\n        }\r\n        this.messageLoop = setTimeout(function () {\r\n            _this.message = void (0);\r\n        }, 3000);\r\n    };\r\n    AxisSettingsComponent.prototype.checkFormChanges = function (val) {\r\n        return val['accuracy'] !== this.axisCalculatorModel.accuracy\r\n            || val['maxSum'] !== this.axisCalculatorModel.maxSum.max\r\n            || val['maxWave'] !== this.axisCalculatorModel.maxWave.max\r\n            || val['useSums'] === this.useSums;\r\n    };\r\n    AxisSettingsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'axis-settings',\r\n            template: __webpack_require__(446)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [forms_1.FormBuilder,\r\n            axis_calculator_service_1.AxisCalculator,\r\n            app_state_service_1.AppState])\r\n    ], AxisSettingsComponent);\r\n    return AxisSettingsComponent;\r\n}());\r\nexports.AxisSettingsComponent = AxisSettingsComponent;\r\n\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// angular\r\nvar core_1 = __webpack_require__(6);\r\nvar forms_1 = __webpack_require__(15);\r\n// services and helpers\r\nvar validators_1 = __webpack_require__(59);\r\nvar axis_calculator_service_1 = __webpack_require__(107);\r\nvar app_state_service_1 = __webpack_require__(33);\r\nvar CalculatorComponent = (function () {\r\n    function CalculatorComponent(fb, axisCalculatorModel, state) {\r\n        var _this = this;\r\n        this.axisCalculatorModel = axisCalculatorModel;\r\n        this.state = state;\r\n        this.calculatorForm = fb.group({\r\n            'sumI': [\r\n                this.axisCalculatorModel.settings.maxSum.initValue,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.axisCalculatorModel.maxSum.min),\r\n                    validators_1.checkMaximum(this.axisCalculatorModel.maxSum.max)\r\n                ])\r\n            ],\r\n            'sumIII': [\r\n                this.axisCalculatorModel.settings.maxSum.initValue,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.axisCalculatorModel.maxSum.min),\r\n                    validators_1.checkMaximum(this.axisCalculatorModel.maxSum.max)\r\n                ])\r\n            ],\r\n            'r1': [\r\n                this.axisCalculatorModel.settings.maxWave.initR,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.axisCalculatorModel.maxWave.min),\r\n                    validators_1.checkMaximum(this.axisCalculatorModel.maxWave.max)\r\n                ])\r\n            ],\r\n            'qs1': [\r\n                this.axisCalculatorModel.settings.maxWave.initQS,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.axisCalculatorModel.maxWave.min),\r\n                    validators_1.checkMaximum(this.axisCalculatorModel.maxWave.max)\r\n                ])\r\n            ],\r\n            'r3': [\r\n                this.axisCalculatorModel.settings.maxWave.initR,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.axisCalculatorModel.maxWave.min),\r\n                    validators_1.checkMaximum(this.axisCalculatorModel.maxWave.max)\r\n                ])\r\n            ],\r\n            'qs3': [\r\n                this.axisCalculatorModel.settings.maxWave.initQS,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.axisCalculatorModel.maxWave.min),\r\n                    validators_1.checkMaximum(this.axisCalculatorModel.maxWave.max)\r\n                ])\r\n            ],\r\n        }, { validator: forms_1.Validators.compose([\r\n                validators_1.allValuesNotZero('sumI', 'sumIII'),\r\n                validators_1.sumOfValuesNotZero(['r1', 'qs1'], ['r3', 'qs3']),\r\n            ])\r\n        });\r\n        this.sumI = this.calculatorForm.controls['sumI'];\r\n        this.sumIII = this.calculatorForm.controls['sumIII'];\r\n        this.r1 = this.calculatorForm.controls['r1'];\r\n        this.qs1 = this.calculatorForm.controls['qs1'];\r\n        this.r3 = this.calculatorForm.controls['r3'];\r\n        this.qs3 = this.calculatorForm.controls['qs3'];\r\n        this.calculatorForm.valueChanges.subscribe(function () {\r\n            _this.displayValue();\r\n        });\r\n        this.useSums = this.state.getValue('useSums').use;\r\n        this.state.getStream('useSums').subscribe(function (value) {\r\n            _this.useSums = value.use;\r\n            if (_this.useSums) {\r\n                _this.resetWaves();\r\n            }\r\n            else {\r\n                _this.resetSums();\r\n            }\r\n        });\r\n    }\r\n    CalculatorComponent.prototype.ngOnInit = function () {\r\n        var formValue = sessionStorage.getItem('lastSums');\r\n        if (formValue !== null) {\r\n            this.calculatorForm.setValue(JSON.parse(formValue));\r\n        }\r\n        if (this.useSums) {\r\n            this.resetWaves();\r\n        }\r\n        else {\r\n            this.resetSums();\r\n        }\r\n    };\r\n    CalculatorComponent.prototype.ngOnDestroy = function () {\r\n        sessionStorage.setItem('lastSums', JSON.stringify(this.calculatorForm.value));\r\n    };\r\n    CalculatorComponent.prototype.getValue = function () {\r\n        if (this.useSums) {\r\n            return this.axisCalculatorModel.countAngle(this.sumI.value, this.sumIII.value);\r\n        }\r\n        else {\r\n            return this.axisCalculatorModel.countSumsThenAngle(this.r1.value, this.qs1.value, this.r3.value, this.qs3.value);\r\n        }\r\n    };\r\n    CalculatorComponent.prototype.displayValue = function () {\r\n        if (this.calculatorForm.invalid) {\r\n            this.outputValue = 'Форма заполнена не корректно';\r\n        }\r\n        else {\r\n            try {\r\n                var result = this.getValue();\r\n                if (isNaN(result)) {\r\n                    throw new Error('result is not a number');\r\n                }\r\n                this.outputValue = result + \"\\u00B0\";\r\n            }\r\n            catch (error) {\r\n                this.outputValue = 'Форма заполнена не корректно';\r\n            }\r\n        }\r\n    };\r\n    CalculatorComponent.prototype.reset = function (event) {\r\n        event.preventDefault();\r\n        this.resetSums();\r\n        this.resetWaves();\r\n    };\r\n    CalculatorComponent.prototype.resetSums = function () {\r\n        this.sumI.reset(this.axisCalculatorModel.settings.maxSum.initValue);\r\n        this.sumIII.reset(this.axisCalculatorModel.settings.maxSum.initValue);\r\n    };\r\n    CalculatorComponent.prototype.resetWaves = function () {\r\n        this.r1.reset(this.axisCalculatorModel.settings.maxWave.initR);\r\n        this.qs1.reset(this.axisCalculatorModel.settings.maxWave.initQS);\r\n        this.r3.reset(this.axisCalculatorModel.settings.maxWave.initR);\r\n        this.qs3.reset(this.axisCalculatorModel.settings.maxWave.initQS);\r\n    };\r\n    CalculatorComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'calc',\r\n            template: __webpack_require__(447),\r\n        }),\r\n        __metadata(\"design:paramtypes\", [forms_1.FormBuilder,\r\n            axis_calculator_service_1.AxisCalculator,\r\n            app_state_service_1.AppState])\r\n    ], CalculatorComponent);\r\n    return CalculatorComponent;\r\n}());\r\nexports.CalculatorComponent = CalculatorComponent;\r\n\n\n/***/ }),\n/* 423 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// angular\r\nvar core_1 = __webpack_require__(6);\r\nvar forms_1 = __webpack_require__(15);\r\n// services and helpers\r\nvar validators_1 = __webpack_require__(59);\r\nvar arrhythmia_service_1 = __webpack_require__(108);\r\nvar app_state_service_1 = __webpack_require__(33);\r\nvar ArrhythmiaComponent = (function () {\r\n    function ArrhythmiaComponent(fb, arrhythmiaModel, state) {\r\n        var _this = this;\r\n        this.arrhythmiaModel = arrhythmiaModel;\r\n        this.state = state;\r\n        this.isArrhythmia = false;\r\n        this.arrhythmiaForm = fb.group({\r\n            'pp1': [\r\n                this.arrhythmiaModel.settings.interval.init,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.arrhythmiaModel.settings.interval.min),\r\n                    validators_1.checkMaximum(this.arrhythmiaModel.settings.interval.max)\r\n                ])\r\n            ],\r\n            'pp2': [\r\n                this.arrhythmiaModel.settings.interval.init,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.arrhythmiaModel.settings.interval.min),\r\n                    validators_1.checkMaximum(this.arrhythmiaModel.settings.interval.max)\r\n                ])\r\n            ],\r\n        });\r\n        this.pp1 = this.arrhythmiaForm.controls['pp1'];\r\n        this.pp2 = this.arrhythmiaForm.controls['pp2'];\r\n        this.arrhythmiaForm.valueChanges.subscribe(function () {\r\n            _this.displayValue();\r\n        });\r\n        this.usePercentage = state.getValue('usePercentage').use;\r\n        state.getStream('usePercentage').subscribe(function (value) { return _this.usePercentage = value.use; });\r\n    }\r\n    ArrhythmiaComponent.prototype.ngOnInit = function () {\r\n        var formValue = sessionStorage.getItem('lastPP');\r\n        if (formValue !== null) {\r\n            this.arrhythmiaForm.setValue(JSON.parse(formValue));\r\n        }\r\n        this.displayValue();\r\n    };\r\n    ArrhythmiaComponent.prototype.ngOnDestroy = function () {\r\n        sessionStorage.setItem('lastPP', JSON.stringify(this.arrhythmiaForm.value));\r\n    };\r\n    ArrhythmiaComponent.prototype.getValue = function () {\r\n        var result;\r\n        if (this.usePercentage) {\r\n            result = this.arrhythmiaModel.countProportion(this.pp1.value, this.pp2.value);\r\n            this.isArrhythmia = this.arrhythmiaModel.isArrhythmia(result, this.arrhythmiaModel.coefficient);\r\n        }\r\n        else {\r\n            result = this.arrhythmiaModel.countDifferenceTime(this.pp1.value, this.pp2.value);\r\n            this.isArrhythmia = this.arrhythmiaModel.isArrhythmia(result, this.arrhythmiaModel.difference);\r\n        }\r\n        return result;\r\n    };\r\n    ArrhythmiaComponent.prototype.displayValue = function () {\r\n        if (this.arrhythmiaForm.invalid) {\r\n            this.output = 'Форма заполнена не корректно';\r\n        }\r\n        else {\r\n            var result = this.getValue();\r\n            this.output = result + \" \" + (this.usePercentage ? '%' : 'мс');\r\n        }\r\n    };\r\n    ArrhythmiaComponent.prototype.reset = function (event) {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n        this.pp1.reset(this.arrhythmiaModel.settings.interval.init);\r\n        this.pp2.reset(this.arrhythmiaModel.settings.interval.init);\r\n    };\r\n    ArrhythmiaComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'arrhythmia',\r\n            template: __webpack_require__(448),\r\n        }),\r\n        __metadata(\"design:paramtypes\", [forms_1.FormBuilder,\r\n            arrhythmia_service_1.ArrhythmiaService,\r\n            app_state_service_1.AppState])\r\n    ], ArrhythmiaComponent);\r\n    return ArrhythmiaComponent;\r\n}());\r\nexports.ArrhythmiaComponent = ArrhythmiaComponent;\r\n\n\n/***/ }),\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// angular\r\nvar core_1 = __webpack_require__(6);\r\nvar forms_1 = __webpack_require__(15);\r\n// services and helpers\r\nvar validators_1 = __webpack_require__(59);\r\nvar arrhythmia_service_1 = __webpack_require__(108);\r\nvar app_state_service_1 = __webpack_require__(33);\r\nvar ArrhythmiaSettingsComponent = (function () {\r\n    function ArrhythmiaSettingsComponent(fb, service, state) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.state = state;\r\n        this.usePercentage = state.getValue('usePercentage').use;\r\n        this.moreThenOnly = this.service.moreThenOnly;\r\n        this.settingsForm = fb.group({\r\n            'accuracy': [\r\n                this.service.settings.accuracy.init,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.service.settings.accuracy.min),\r\n                    validators_1.checkMaximum(this.service.settings.accuracy.max)\r\n                ])\r\n            ],\r\n            'coefficient': [\r\n                this.service.settings.coefficient.init,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.service.settings.coefficient.min),\r\n                    validators_1.checkMaximum(this.service.settings.coefficient.max)\r\n                ])\r\n            ],\r\n            'difference': [\r\n                this.service.settings.difference.init,\r\n                forms_1.Validators.compose([\r\n                    forms_1.Validators.required,\r\n                    validators_1.verifyNum,\r\n                    validators_1.checkMinimum(this.service.settings.difference.min),\r\n                    validators_1.checkMaximum(this.service.settings.difference.max)\r\n                ])\r\n            ],\r\n            'moreThenOnly': [\r\n                this.moreThenOnly\r\n            ],\r\n            'usePercentage': [\r\n                this.usePercentage\r\n            ],\r\n        });\r\n        this.accuracy = this.settingsForm.controls['accuracy'];\r\n        this.coefficient = this.settingsForm.controls['coefficient'];\r\n        this.difference = this.settingsForm.controls['difference'];\r\n        this.usePercentageField = this.settingsForm.controls['usePercentage'];\r\n        this.moreThenOnlyField = this.settingsForm.controls['moreThenOnly'];\r\n        state.getStream('usePercentage').subscribe(function (value) {\r\n            _this.usePercentage = value.use;\r\n        });\r\n        this.settingsForm.valueChanges.subscribe(function (data) {\r\n            _this.formChanged = _this.checkFormChanges(data);\r\n        });\r\n        this.usePercentageField.valueChanges.subscribe(function (data) {\r\n            _this.state.toggle('usePercentage', data);\r\n        });\r\n        this.moreThenOnlyField.valueChanges.subscribe(function (data) {\r\n            _this.moreThenOnly = data;\r\n            _this.service.moreThenOnly = data;\r\n        });\r\n    }\r\n    ArrhythmiaSettingsComponent.prototype.ngOnInit = function () {\r\n        var formValue = sessionStorage.getItem('lastArrhythmiaSettings');\r\n        if (formValue !== null) {\r\n            this.settingsForm.setValue(JSON.parse(formValue));\r\n            this.setSettings();\r\n        }\r\n    };\r\n    ArrhythmiaSettingsComponent.prototype.ngOnDestroy = function () {\r\n        sessionStorage.setItem('lastArrhythmiaSettings', JSON.stringify(this.settingsForm.value));\r\n    };\r\n    ArrhythmiaSettingsComponent.prototype.onSubmit = function (val) {\r\n        if (this.settingsForm.valid) {\r\n            this.setSettings();\r\n            this.formChanged = false;\r\n            this.showResult('сохранено');\r\n        }\r\n    };\r\n    ArrhythmiaSettingsComponent.prototype.setSettings = function () {\r\n        this.service.accuracy = this.accuracy.value;\r\n        this.service.coefficient = this.coefficient.value;\r\n        this.service.difference = this.difference.value;\r\n        this.service.moreThenOnly = this.moreThenOnlyField.value;\r\n    };\r\n    ArrhythmiaSettingsComponent.prototype.reset = function (event) {\r\n        event.preventDefault();\r\n        this.accuracy.reset(this.service.settings.accuracy.init);\r\n        this.coefficient.reset(this.service.settings.coefficient.init);\r\n        this.difference.reset(this.service.settings.difference.init);\r\n        this.moreThenOnlyField.reset(this.service.settings.moreThenOnly);\r\n        this.state.toggle('usePercentage', true);\r\n        this.setSettings();\r\n        this.formChanged = false;\r\n        this.showResult('сброшено');\r\n    };\r\n    ArrhythmiaSettingsComponent.prototype.showResult = function (message) {\r\n        var _this = this;\r\n        this.message = message;\r\n        if (this.messageLoop) {\r\n            clearTimeout(this.messageLoop);\r\n        }\r\n        this.messageLoop = setTimeout(function () {\r\n            _this.message = void (0);\r\n        }, 3000);\r\n    };\r\n    ArrhythmiaSettingsComponent.prototype.checkFormChanges = function (val) {\r\n        return val['accuracy'] !== this.service.accuracy\r\n            || val['coefficient'] !== this.service.coefficient\r\n            || val['difference'] !== this.service.difference\r\n            || val['moreThenOnly'] !== this.service.moreThenOnly;\r\n    };\r\n    ArrhythmiaSettingsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'arrhythmia-settings',\r\n            template: __webpack_require__(449)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [forms_1.FormBuilder,\r\n            arrhythmia_service_1.ArrhythmiaService,\r\n            app_state_service_1.AppState])\r\n    ], ArrhythmiaSettingsComponent);\r\n    return ArrhythmiaSettingsComponent;\r\n}());\r\nexports.ArrhythmiaSettingsComponent = ArrhythmiaSettingsComponent;\r\n\n\n/***/ }),\n/* 425 */,\n/* 426 */,\n/* 427 */,\n/* 428 */,\n/* 429 */,\n/* 430 */,\n/* 431 */,\n/* 432 */,\n/* 433 */,\n/* 434 */,\n/* 435 */,\n/* 436 */,\n/* 437 */,\n/* 438 */,\n/* 439 */,\n/* 440 */,\n/* 441 */,\n/* 442 */,\n/* 443 */,\n/* 444 */,\n/* 445 */,\n/* 446 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<h2>Настройки</h2> <form id=\\\"count-form\\\" [formGroup]=\\\"settingsForm\\\" (ngSubmit)=\\\"onSubmit(settingsForm.value)\\\" class=\\\"count-form\\\"> <settings-field [input]=\\\"accuracy\\\" [step]=\\\"1\\\" [value]=\\\"axisCalculatorModel.accuracy\\\" [maximum]=\\\"axisCalculatorModel.settings.accuracy.max\\\" [minimum]=\\\"axisCalculatorModel.settings.accuracy.min\\\" [data]=\\\"{\\r\\n        'name': 'accuracy',\\r\\n        'title': 'Точность - количество знаков после запятой.',\\r\\n        'output': 'Точность - '\\r\\n      }\\\"> </settings-field> <settings-field *ngIf=\\\"useSums\\\" [input]=\\\"maxSum\\\" [step]=\\\"1\\\" [value]=\\\"axisCalculatorModel.maxSum.max\\\" [maximum]=\\\"axisCalculatorModel.settings.maxSum.max\\\" [minimum]=\\\"axisCalculatorModel.settings.maxSum.min\\\" [data]=\\\"{\\r\\n        'name': 'maxSum',\\r\\n        'title': 'Максимальная алгебраическая сумма зубцов.',\\r\\n        'output': 'Максимальная сумма - '\\r\\n      }\\\"> </settings-field> <settings-field *ngIf=\\\"!useSums\\\" [input]=\\\"maxWave\\\" [step]=\\\"1\\\" [value]=\\\"axisCalculatorModel.maxWave.max\\\" [maximum]=\\\"axisCalculatorModel.settings.maxWave.max\\\" [minimum]=\\\"axisCalculatorModel.settings.maxWave.min\\\" [data]=\\\"{\\r\\n        'name': 'maxWave',\\r\\n        'title': 'Максимальная амплитуда зубцов.',\\r\\n        'output': 'Максимальная амплитуда - '\\r\\n      }\\\"> </settings-field> <label class=\\\"form-label\\\"> <input name=\\\"use-sums\\\" class=\\\"\\\" type=\\\"checkbox\\\" [formControl]=\\\"useSumsField\\\"> Использовать амплитуды отдельных зубцов </label> <p> <span class=\\\"use-sums-state\\\" *ngIf=\\\"useSums\\\"> Расчитывать используя суммы амплитуд QRS </span> <span class=\\\"use-sums-state\\\" *ngIf=\\\"!useSums\\\"> Расчитывать используя амплитуды зубцов QRS </span> </p> <button id=\\\"to-count\\\" type=\\\"submit\\\">Сохранить</button> <span class=\\\"form-alert\\\" *ngIf=\\\"formChanged\\\">не сохранено</span> <button type=\\\"reset\\\" (click)=\\\"reset($event)\\\">Сбросить</button> <label class=\\\"form-label\\\"> <output *ngIf=\\\"message\\\" id=\\\"message\\\" class=\\\"\\\"> {{ this.message }} </output> </label> </form>\";\n\n/***/ }),\n/* 447 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<h1>Расчет ЭОС</h1> <form id=\\\"count-form\\\" [formGroup]=\\\"calculatorForm\\\" (ngSubmit)=\\\"onSubmit(calculatorForm.value)\\\" class=\\\"count-form\\\"> <sum-field *ngIf=\\\"useSums\\\" [input]=\\\"sumI\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxSum.max\\\" [minimum]=\\\"axisCalculatorModel.maxSum.min\\\" [data]=\\\"{'name':'sumI', 'title':'Алгебраическая сумма зубцов QRS I отведения.'}\\\"> </sum-field> <sum-field *ngIf=\\\"useSums\\\" [input]=\\\"sumIII\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxSum.max\\\" [minimum]=\\\"axisCalculatorModel.maxSum.min\\\" [data]=\\\"{'name':'sumIII', 'title':'Алгебраическая сумма зубцов QRS III отведения.'}\\\"> </sum-field> <sum-field *ngIf=\\\"!useSums\\\" [input]=\\\"r1\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxWave.max\\\" [minimum]=\\\"axisCalculatorModel.maxWave.min\\\" [data]=\\\"{'name':'r1', 'title':'Зубец R I отведения.'}\\\"> </sum-field> <sum-field *ngIf=\\\"!useSums\\\" [input]=\\\"qs1\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxWave.max\\\" [minimum]=\\\"axisCalculatorModel.maxWave.min\\\" [data]=\\\"{'name':'qs1', 'title':'Самый глубокий зубец Q или S I отведения.'}\\\"> </sum-field> <sum-field *ngIf=\\\"!useSums\\\" [input]=\\\"r3\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxWave.max\\\" [minimum]=\\\"axisCalculatorModel.maxWave.min\\\" [data]=\\\"{'name':'r3', 'title':'Зубец R III отведения.'}\\\"> </sum-field> <sum-field *ngIf=\\\"!useSums\\\" [input]=\\\"qs3\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxWave.max\\\" [minimum]=\\\"axisCalculatorModel.maxWave.min\\\" [data]=\\\"{'name':'qs3', 'title':'Самый глубокий зубец Q или S III отведения.'}\\\"> </sum-field> <label>Угл альфа в градусах<br> <output id=\\\"output\\\" class=\\\"\\\"> {{ this.outputValue }} <span class=\\\"form-error\\\" *ngIf=\\\"calculatorForm.hasError('allValueIsZero')\\\"> Все суммы не должны быть равны нулю </span> <span class=\\\"form-error\\\" *ngIf=\\\"calculatorForm.hasError('allSumsIsZero')\\\"> Все суммы амплитуд не должны быть равны нулю </span> </output> </label><br> <button type=\\\"reset\\\" (click)=\\\"reset($event)\\\">Сбросить</button> </form>\";\n\n/***/ }),\n/* 448 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<h1>Расчет пропорции интервалов PP</h1> <form action=\\\"\\\" class=\\\"\\\" [formGroup]=\\\"arrhythmiaForm\\\"> <sum-field [input]=\\\"pp1\\\" [step]=\\\"10\\\" [maximum]=\\\"arrhythmiaModel.settings.interval.max\\\" [minimum]=\\\"arrhythmiaModel.settings.interval.min\\\" [data]=\\\"{'name':'pp1', 'title':'P<sub>0</sub>P<sub>1</sub> интервал'}\\\"> </sum-field> <sum-field [input]=\\\"pp2\\\" [step]=\\\"10\\\" [maximum]=\\\"arrhythmiaModel.settings.interval.max\\\" [minimum]=\\\"arrhythmiaModel.settings.interval.min\\\" [data]=\\\"{'name':'pp2', 'title':'P<sub>1</sub>P<sub>2</sub> интервал'}\\\"> </sum-field> <label *ngIf=\\\"useSeconds\\\">Разница в миллисекундах<br> <output class=\\\"\\\"> {{ this.output }} </output> </label><br> <label *ngIf=\\\"!useSeconds\\\">Разница в процентах<br> <output class=\\\"form-output\\\"> {{ this.output }} </output> </label><br> <span class=\\\"form-alert\\\" *ngIf=\\\"isArrhythmia\\\">Аритмия - по данным значениям интервалов PP</span> <button type=\\\"reset\\\" (click)=\\\"reset($event)\\\">Сбросить</button> </form>\";\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<h2>Настройки</h2> <form action=\\\"\\\" [formGroup]=\\\"settingsForm\\\" (ngSubmit)=\\\"onSubmit(settingsForm.value)\\\" class=\\\"count-form\\\"> <settings-field [input]=\\\"accuracy\\\" [step]=\\\"1\\\" [value]=\\\"service.accuracy\\\" [maximum]=\\\"service.settings.accuracy.max\\\" [minimum]=\\\"service.settings.accuracy.min\\\" [data]=\\\"{\\r\\n        'name': 'accuracy',\\r\\n        'title': 'Точность - количество знаков после запятой.',\\r\\n        'output': 'Точность - '\\r\\n      }\\\"> </settings-field> <settings-field *ngIf=\\\"usePercentage\\\" [input]=\\\"coefficient\\\" [step]=\\\"1\\\" [value]=\\\"service.coefficient\\\" [maximum]=\\\"service.settings.coefficient.max\\\" [minimum]=\\\"service.settings.coefficient.min\\\" [data]=\\\"{\\r\\n        'name': 'coefficient',\\r\\n        'title': 'Разница в %, когда диагностируется аритмия',\\r\\n        'output': 'Разница в % - '\\r\\n      }\\\"> </settings-field> <settings-field *ngIf=\\\"!usePercentage\\\" [input]=\\\"difference\\\" [step]=\\\"10\\\" [value]=\\\"service.difference\\\" [maximum]=\\\"service.settings.difference.max\\\" [minimum]=\\\"service.settings.difference.min\\\" [data]=\\\"{\\r\\n        'name': 'difference',\\r\\n        'title': 'Разница в милисекундах, когда диагностируется аритмия',\\r\\n        'output': 'Разница в милисекундах - '\\r\\n      }\\\"> </settings-field> <label class=\\\"form-label\\\"> <input class=\\\"\\\" type=\\\"checkbox\\\" name=\\\"more-then-only\\\" [formControl]=\\\"moreThenOnlyField\\\"> Диагностировать аритмию, когда результат больше разницы </label> <p> <span class=\\\"state-alert\\\" *ngIf=\\\"moreThenOnly\\\"> Расчитывать если результат больше разницы </span> <span class=\\\"state-alert\\\" *ngIf=\\\"!moreThenOnly\\\"> Расчитывать если результат больше и/или равен разницы </span> </p> <label class=\\\"form-label\\\"> <input class=\\\"\\\" type=\\\"checkbox\\\" name=\\\"use-percentage\\\" [formControl]=\\\"usePercentageField\\\"> Использовать разность в % </label> <p> <span class=\\\"state-alert\\\" *ngIf=\\\"usePercentage\\\"> Расчитывать используя разность в % </span> <span class=\\\"state-alert\\\" *ngIf=\\\"!usePercentage\\\"> Расчитывать используя разность в милисекундах </span> </p> <button id=\\\"to-count\\\" type=\\\"submit\\\">Сохранить</button> <span class=\\\"form-alert\\\" *ngIf=\\\"formChanged\\\">не сохранено</span> <button type=\\\"reset\\\" (click)=\\\"reset($event)\\\">Сбросить</button> <label class=\\\"form-label\\\"> <output *ngIf=\\\"message\\\" id=\\\"message\\\" class=\\\"\\\"> {{ this.message }} </output> </label> </form>\";\n\n/***/ }),\n/* 450 */,\n/* 451 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(6);\r\nvar router_1 = __webpack_require__(40);\r\nvar app_state_service_1 = __webpack_require__(33);\r\nvar CalcWrapperComponent = (function () {\r\n    function CalcWrapperComponent(route, state) {\r\n        var _this = this;\r\n        this.route = route;\r\n        this.state = state;\r\n        route\r\n            .url\r\n            .subscribe(function (value) { return _this.calculatorType = value[0].path; });\r\n        state\r\n            .getDataStream('calcWrapperData')\r\n            .subscribe(function (value) { return _this.title = value[_this.calculatorType].title; });\r\n    }\r\n    CalcWrapperComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'calc-wrap',\r\n            template: __webpack_require__(652)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [router_1.ActivatedRoute,\r\n            app_state_service_1.AppState])\r\n    ], CalcWrapperComponent);\r\n    return CalcWrapperComponent;\r\n}());\r\nexports.CalcWrapperComponent = CalcWrapperComponent;\r\n\n\n/***/ }),\n/* 452 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(6);\r\nvar FAQListComponent = (function () {\r\n    function FAQListComponent() {\r\n    }\r\n    FAQListComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'faq-list',\r\n            template: __webpack_require__(653)\r\n        })\r\n    ], FAQListComponent);\r\n    return FAQListComponent;\r\n}());\r\nexports.FAQListComponent = FAQListComponent;\r\n\n\n/***/ }),\n/* 453 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(6);\r\nvar IndexComponent = (function () {\r\n    function IndexComponent() {\r\n    }\r\n    IndexComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'index',\r\n            template: __webpack_require__(654)\r\n        })\r\n    ], IndexComponent);\r\n    return IndexComponent;\r\n}());\r\nexports.IndexComponent = IndexComponent;\r\n\n\n/***/ }),\n/* 454 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(6);\r\nvar NotFoundComponent = (function () {\r\n    function NotFoundComponent() {\r\n    }\r\n    NotFoundComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'not-found.',\r\n            template: __webpack_require__(655)\r\n        })\r\n    ], NotFoundComponent);\r\n    return NotFoundComponent;\r\n}());\r\nexports.NotFoundComponent = NotFoundComponent;\r\n\n\n/***/ }),\n/* 455 */,\n/* 456 */,\n/* 457 */,\n/* 458 */,\n/* 459 */,\n/* 460 */,\n/* 461 */,\n/* 462 */,\n/* 463 */,\n/* 464 */,\n/* 465 */,\n/* 466 */,\n/* 467 */,\n/* 468 */,\n/* 469 */,\n/* 470 */,\n/* 471 */,\n/* 472 */,\n/* 473 */,\n/* 474 */,\n/* 475 */,\n/* 476 */,\n/* 477 */,\n/* 478 */,\n/* 479 */,\n/* 480 */,\n/* 481 */,\n/* 482 */,\n/* 483 */,\n/* 484 */,\n/* 485 */,\n/* 486 */,\n/* 487 */,\n/* 488 */,\n/* 489 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// angular\r\nvar core_1 = __webpack_require__(6);\r\nvar AppComponent = (function () {\r\n    function AppComponent() {\r\n    }\r\n    AppComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'app',\r\n            template: __webpack_require__(651),\r\n            styles: [\r\n                __webpack_require__(656)\r\n            ],\r\n            encapsulation: core_1.ViewEncapsulation.None,\r\n        }),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], AppComponent);\r\n    return AppComponent;\r\n}());\r\nexports.AppComponent = AppComponent;\r\n\n\n/***/ }),\n/* 490 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// components\r\nvar not_found_component_1 = __webpack_require__(454);\r\nvar calc_wrapper_component_1 = __webpack_require__(451);\r\nvar index_component_1 = __webpack_require__(453);\r\nvar faq_list_component_1 = __webpack_require__(452);\r\nexports.routes = [\r\n    {\r\n        path: '',\r\n        component: index_component_1.IndexComponent\r\n    },\r\n    {\r\n        path: 'heart-axis',\r\n        redirectTo: 'heart-axis/calculator',\r\n        pathMatch: 'full'\r\n    },\r\n    {\r\n        path: 'heart-axis',\r\n        component: calc_wrapper_component_1.CalcWrapperComponent,\r\n        loadChildren: function () { return new Promise(function (resolve) { new Promise(function(resolve) { resolve(); }).then((function (require) { resolve(__webpack_require__(402)['AxisHeartModule']); }).bind(null, __webpack_require__)).catch(__webpack_require__.oe); }); },\r\n    },\r\n    {\r\n        path: 'is-arrhythmia',\r\n        redirectTo: 'is-arrhythmia/calculator',\r\n        pathMatch: 'full'\r\n    },\r\n    {\r\n        path: 'is-arrhythmia',\r\n        component: calc_wrapper_component_1.CalcWrapperComponent,\r\n        loadChildren: function () { return new Promise(function (resolve) { new Promise(function(resolve) { resolve(); }).then((function (require) { resolve(__webpack_require__(403)['IsArrhythmiaModule']); }).bind(null, __webpack_require__)).catch(__webpack_require__.oe); }); },\r\n    },\r\n    {\r\n        path: 'faq-list',\r\n        component: faq_list_component_1.FAQListComponent\r\n    },\r\n    {\r\n        path: '**',\r\n        component: not_found_component_1.NotFoundComponent\r\n    },\r\n];\r\n\n\n/***/ }),\n/* 491 */,\n/* 492 */,\n/* 493 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// angular\r\nvar core_1 = __webpack_require__(6);\r\nvar platform_browser_1 = __webpack_require__(65);\r\nvar platform_browser_dynamic_1 = __webpack_require__(450);\r\nvar common_1 = __webpack_require__(34);\r\nvar router_1 = __webpack_require__(40);\r\n// services\r\nvar app_state_service_1 = __webpack_require__(33);\r\nvar app_routes_1 = __webpack_require__(490);\r\n// app\r\nvar app_component_1 = __webpack_require__(489);\r\nvar calc_wrapper_component_1 = __webpack_require__(451);\r\nvar not_found_component_1 = __webpack_require__(454);\r\nvar index_component_1 = __webpack_require__(453);\r\nvar faq_list_component_1 = __webpack_require__(452);\r\n// nested modules\r\nvar index_1 = __webpack_require__(402);\r\nvar index_2 = __webpack_require__(403);\r\nvar AppModule = (function () {\r\n    function AppModule() {\r\n    }\r\n    AppModule = __decorate([\r\n        core_1.NgModule({\r\n            declarations: [\r\n                app_component_1.AppComponent,\r\n                calc_wrapper_component_1.CalcWrapperComponent,\r\n                not_found_component_1.NotFoundComponent,\r\n                index_component_1.IndexComponent,\r\n                faq_list_component_1.FAQListComponent,\r\n            ],\r\n            imports: [\r\n                platform_browser_1.BrowserModule,\r\n                index_1.AxisHeartModule,\r\n                index_2.IsArrhythmiaModule,\r\n                router_1.RouterModule.forRoot(app_routes_1.routes),\r\n            ],\r\n            bootstrap: [app_component_1.AppComponent],\r\n            providers: [\r\n                { provide: common_1.LocationStrategy, useClass: common_1.HashLocationStrategy },\r\n                { provide: common_1.APP_BASE_HREF, useValue: '/' },\r\n                app_state_service_1.AppState\r\n            ]\r\n        })\r\n    ], AppModule);\r\n    return AppModule;\r\n}());\r\nexports.AppModule = AppModule;\r\nplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(AppModule).catch(function (err) { return console.error(err); });\r\n\n\n/***/ }),\n/* 494 */,\n/* 495 */,\n/* 496 */,\n/* 497 */,\n/* 498 */,\n/* 499 */,\n/* 500 */,\n/* 501 */,\n/* 502 */,\n/* 503 */,\n/* 504 */,\n/* 505 */,\n/* 506 */,\n/* 507 */,\n/* 508 */,\n/* 509 */,\n/* 510 */,\n/* 511 */,\n/* 512 */,\n/* 513 */,\n/* 514 */,\n/* 515 */,\n/* 516 */,\n/* 517 */,\n/* 518 */,\n/* 519 */,\n/* 520 */,\n/* 521 */,\n/* 522 */,\n/* 523 */,\n/* 524 */,\n/* 525 */,\n/* 526 */,\n/* 527 */,\n/* 528 */,\n/* 529 */,\n/* 530 */,\n/* 531 */,\n/* 532 */,\n/* 533 */,\n/* 534 */,\n/* 535 */,\n/* 536 */,\n/* 537 */,\n/* 538 */,\n/* 539 */,\n/* 540 */,\n/* 541 */,\n/* 542 */,\n/* 543 */,\n/* 544 */,\n/* 545 */,\n/* 546 */,\n/* 547 */,\n/* 548 */,\n/* 549 */,\n/* 550 */,\n/* 551 */,\n/* 552 */,\n/* 553 */,\n/* 554 */,\n/* 555 */,\n/* 556 */,\n/* 557 */,\n/* 558 */,\n/* 559 */,\n/* 560 */,\n/* 561 */,\n/* 562 */,\n/* 563 */,\n/* 564 */,\n/* 565 */,\n/* 566 */,\n/* 567 */,\n/* 568 */,\n/* 569 */,\n/* 570 */,\n/* 571 */,\n/* 572 */,\n/* 573 */,\n/* 574 */,\n/* 575 */,\n/* 576 */,\n/* 577 */,\n/* 578 */,\n/* 579 */,\n/* 580 */,\n/* 581 */,\n/* 582 */,\n/* 583 */,\n/* 584 */,\n/* 585 */,\n/* 586 */,\n/* 587 */,\n/* 588 */,\n/* 589 */,\n/* 590 */,\n/* 591 */,\n/* 592 */,\n/* 593 */,\n/* 594 */,\n/* 595 */,\n/* 596 */,\n/* 597 */,\n/* 598 */,\n/* 599 */,\n/* 600 */,\n/* 601 */,\n/* 602 */,\n/* 603 */,\n/* 604 */,\n/* 605 */,\n/* 606 */,\n/* 607 */,\n/* 608 */,\n/* 609 */,\n/* 610 */,\n/* 611 */,\n/* 612 */,\n/* 613 */,\n/* 614 */,\n/* 615 */,\n/* 616 */,\n/* 617 */,\n/* 618 */,\n/* 619 */,\n/* 620 */,\n/* 621 */,\n/* 622 */,\n/* 623 */,\n/* 624 */,\n/* 625 */,\n/* 626 */,\n/* 627 */,\n/* 628 */,\n/* 629 */,\n/* 630 */,\n/* 631 */,\n/* 632 */,\n/* 633 */,\n/* 634 */,\n/* 635 */,\n/* 636 */,\n/* 637 */,\n/* 638 */,\n/* 639 */,\n/* 640 */,\n/* 641 */,\n/* 642 */,\n/* 643 */,\n/* 644 */,\n/* 645 */,\n/* 646 */,\n/* 647 */,\n/* 648 */,\n/* 649 */,\n/* 650 */,\n/* 651 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<h1>Приложение функциональная диагностика.</h1> <nav> <ul> <li><a [routerLink]=\\\"['']\\\" routerLinkActive=\\\"active\\\">Главная</a></li> <ul> <li><a [routerLink]=\\\"['heart-axis']\\\" routerLinkActive=\\\"active\\\">Расчет ЭОС</a></li> <li><a [routerLink]=\\\"['is-arrhythmia']\\\" routerLinkActive=\\\"active\\\">Расчет соотношения PP</a></li> </ul> <li><a [routerLink]=\\\"['faq-list']\\\" routerLinkActive=\\\"active\\\">FAQ</a></li> </ul> </nav> <router-outlet></router-outlet>\";\n\n/***/ }),\n/* 652 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<h2>{{ title }}</h2> <nav> <ul> <li><a [routerLink]=\\\"['calculator']\\\" routerLinkActive=\\\"active\\\">Калькулятор</a></li> <li><a [routerLink]=\\\"['settings']\\\" routerLinkActive=\\\"active\\\">Настройки расчетов</a></li> <li><a [routerLink]=\\\"['faq']\\\" routerLinkActive=\\\"active\\\">FAQ</a></li> </ul> </nav> <router-outlet></router-outlet>\";\n\n/***/ }),\n/* 653 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<h2>FAQ список</h2> <p>Общая справка - ...</p> <nav> <h3>Список приложений</h3> <ul> <li><a [routerLink]=\\\"['/heart-axis/faq']\\\">FAQ по расчету ЭОС</a></li> <li><a [routerLink]=\\\"['/is-arrhythmia/faq']\\\">FAQ по расчету соотношения PP</a></li> </ul> </nav> <router-outlet></router-outlet>\";\n\n/***/ }),\n/* 654 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<p>main page</p>\";\n\n/***/ }),\n/* 655 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<h2>404</h2> <a href=\\\"/\\\">Вернуться на главную</a>\";\n\n/***/ }),\n/* 656 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"body{font-family:'Arial', sans-serif;font-weight:400;font-size:1rem;line-height:1.2em;color:#010101}h1{font-family:'Arial', sans-serif;font-weight:600;font-size:40px;line-height:1.2em;color:#171717}input[type=number]{-moz-appearance:textfield}input[type=number]::-webkit-outer-spin-button,input[type=number]::-webkit-inner-spin-button{-webkit-appearance:none;-moz-appearance:none;margin:0}input.ng-invalid{border:1px solid crimson;box-shadow:0 0 10px 0 crimson}.form-label{display:block}\\n\"\n\n/***/ })\n],[493]);\n\n\n// WEBPACK FOOTER //\n// app.js","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsyncAction_1 = require(\"./AsyncAction\");\nvar AsyncScheduler_1 = require(\"./AsyncScheduler\");\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/async.js\n// module id = 11\n// module chunks = 0 1 2","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.3.5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Directive, ElementRef, EventEmitter, Host, Inject, Injectable, InjectionToken, Injector, Input, NgModule, Optional, Output, Renderer2, Self, SkipSelf, Version, forwardRef, ɵisObservable, ɵisPromise, ɵlooseIdentical } from '@angular/core';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { map } from 'rxjs/operator/map';\nimport { ɵgetDOM } from '@angular/platform-browser';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControlDirective = (function () {\n    function AbstractControlDirective() {\n    }\n    /**\n     * The {\\@link FormControl}, {\\@link FormGroup}, or {\\@link FormArray}\n     * that backs this directive. Most properties fall through to that\n     * instance.\n     * @abstract\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.control = function () { };\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.disabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.enabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.errors : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () {\n            return this.control ? this.control.statusChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () {\n            return this.control ? this.control.valueChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        /**\n         * Returns an array that represents the path from the top-level form\n         * to this control. Each index is the string name of the control on\n         * that level.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * For more information, see {\\@link AbstractControl}.\n     * @param {?=} value\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.reset = function (value) {\n        if (value === void 0) { value = undefined; }\n        if (this.control)\n            this.control.reset(value);\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.getError = function (errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    };\n    return AbstractControlDirective;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A directive that contains multiple {\\@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar ControlContainer = (function (_super) {\n    tslib_1.__extends(ControlContainer, _super);\n    function ControlContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * Get the form to which this container belongs.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * Get the path to this container.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * Providers for validators to be used for {\\@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * \\@stable\n */\nvar NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {\\@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {\\@link NG_VALIDATORS} for more details.\n *\n * \\@stable\n */\nvar NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\nvar EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {\\@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * \\@stable\n */\nvar Validators = (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a value greater than a number.\n     * @param {?} min\n     * @return {?}\n     */\n    Validators.min = function (min) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value less than a number.\n     * @param {?} max\n     * @return {?}\n     */\n    Validators.max = function (max) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a non-empty value.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.required = function (control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    };\n    /**\n     * Validator that requires control value to be true.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.requiredTrue = function (control) {\n        return control.value === true ? null : { 'required': true };\n    };\n    /**\n     * Validator that performs email validation.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.email = function (control) {\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     * @param {?} minLength\n     * @return {?}\n     */\n    Validators.minLength = function (minLength) {\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     * @param {?} maxLength\n     * @return {?}\n     */\n    Validators.maxLength = function (maxLength) {\n        return function (control) {\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     * @param {?} pattern\n     * @return {?}\n     */\n    Validators.pattern = function (pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        var /** @type {?} */ regex;\n        var /** @type {?} */ regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = \"^\" + pattern + \"$\";\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    };\n    /**\n     * No-op validator.\n     * @param {?} c\n     * @return {?}\n     */\n    Validators.nullValidator = function (c) { return null; };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.compose = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.composeAsync = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var /** @type {?} */ observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return map.call(forkJoin(observables), _mergeErrors);\n        };\n    };\n    return Validators;\n}());\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    var /** @type {?} */ obs = ɵisPromise(r) ? fromPromise(r) : r;\n    if (!(ɵisObservable(obs))) {\n        throw new Error(\"Expected validator to return Promise or Observable.\");\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n        return errors != null ? Object.assign({}, /** @type {?} */ ((res)), errors) : ((res));\n    }, {});\n    return Object.keys(res).length === 0 ? null : res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a {\\@link ControlValueAccessor} for form controls.\n *\n * See {\\@link DefaultValueAccessor} for how to implement one.\n * \\@stable\n */\nvar NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return CheckboxControlValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n *\n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar CheckboxControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return CheckboxControlValueAccessor;\n}());\nCheckboxControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return DefaultValueAccessor; }),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    var /** @type {?} */ userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nvar COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar DefaultValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _compositionMode\n     */\n    function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        /**\n         * Whether the user is creating a composition string (IME events).\n         */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.writeValue = function (value) {\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._handleInput = function (value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionStart = function () { this._composing = true; };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionEnd = function (value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    };\n    return DefaultValueAccessor;\n}());\nDefaultValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '_handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '_compositionStart()',\n                    '(compositionend)': '_compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nDefaultValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NumberValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nvar NumberValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return NumberValueAccessor;\n}());\nNumberValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nNumberValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n *\n * Used internally by Angular forms.\n *\n * \\@stable\n * @abstract\n */\nvar NgControl = (function (_super) {\n    tslib_1.__extends(NgControl, _super);\n    function NgControl() {\n        var _this = _super.apply(this, arguments) || this;\n        /**\n         * \\@internal\n         */\n        _this._parent = null;\n        _this.name = null;\n        _this.valueAccessor = null;\n        /**\n         * \\@internal\n         */\n        _this._rawValidators = [];\n        /**\n         * \\@internal\n         */\n        _this._rawAsyncValidators = [];\n        return _this;\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @abstract\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgControl.prototype.viewToModelUpdate = function (newValue) { };\n    return NgControl;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nvar RadioControlRegistry = (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.add = function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.remove = function (accessor) {\n        for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.select = function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    };\n    return RadioControlRegistry;\n}());\nRadioControlRegistry.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRadioControlRegistry.ctorParameters = function () { return []; };\n/**\n * \\@whatItDoes Writes radio control values and listens to radio control changes.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use radio buttons with form directives\n *\n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n *\n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n *\n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  \\@stable\n */\nvar RadioControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _registry\n     * @param {?} _injector\n     */\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnInit = function () {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.writeValue = function (value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._checkName = function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._throwNameError = function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    return RadioControlValueAccessor;\n}());\nRadioControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRadioControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n    { type: RadioControlRegistry, },\n    { type: Injector, },\n]; };\nRadioControlValueAccessor.propDecorators = {\n    'name': [{ type: Input },],\n    'formControlName': [{ type: Input },],\n    'value': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RangeValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nvar RangeValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function RangeValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return RangeValueAccessor;\n}());\nRangeValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRangeValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@whatItDoes Writes values and listens to changes on a select element.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use select controls with form directives\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Caveat: Option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar SelectControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    Object.defineProperty(SelectControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.writeValue = function (value) {\n        this.value = value;\n        var /** @type {?} */ id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        var /** @type {?} */ valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = _this._getOptionValue(valueString);\n            fn(_this.value);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    };\n    return SelectControlValueAccessor;\n}());\nSelectControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\nSelectControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: Input },],\n};\n/**\n * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * \\@howToUse\n *\n * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n *\n * \\@stable\n */\nvar NgSelectOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectOption;\n}());\nNgSelectOption.decorators = [\n    { type: Directive, args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectOption.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n]; };\nNgSelectOption.propDecorators = {\n    'ngValue': [{ type: Input, args: ['ngValue',] },],\n    'value': [{ type: Input, args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (typeof value === 'string')\n        value = \"'\" + value + \"'\";\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n *  ### Caveat: Options selection\n *\n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * \\@stable\n */\nvar SelectMultipleControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    Object.defineProperty(SelectMultipleControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n        var _this = this;\n        this.value = value;\n        var /** @type {?} */ optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n        }\n        else {\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var /** @type {?} */ selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var /** @type {?} */ options = _.selectedOptions;\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            else {\n                var /** @type {?} */ options = (_.options);\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    if (opt.selected) {\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            _this.value = selected;\n            fn(selected);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n        var /** @type {?} */ id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(/** @type {?} */ ((this._optionMap.get(id)))._value, value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? ((this._optionMap.get(id)))._value : valueString;\n    };\n    return SelectMultipleControlValueAccessor;\n}());\nSelectMultipleControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectMultipleControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\nSelectMultipleControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: Input },],\n};\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * ### Example\n *\n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nvar NgSelectMultipleOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setSelected = function (selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectMultipleOption;\n}());\nNgSelectMultipleOption.decorators = [\n    { type: Directive, args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectMultipleOption.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n]; };\nNgSelectMultipleOption.propDecorators = {\n    'ngValue': [{ type: Input, args: ['ngValue',] },],\n    'value': [{ type: Input, args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return ((parent.path)).concat([name]);\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([/** @type {?} */ ((control.validator)), dir.validator]);\n    control.asyncValidator = Validators.composeAsync([/** @type {?} */ ((control.asyncValidator)), dir.asyncValidator]); /** @type {?} */\n    ((dir.valueAccessor)).writeValue(control.value); /** @type {?} */\n    ((\n    // view -> model\n    dir.valueAccessor)).registerOnChange(function (newValue) {\n        dir.viewToModelUpdate(newValue);\n        control.markAsDirty();\n        control.setValue(newValue, { emitModelToViewChange: false });\n    }); /** @type {?} */\n    ((\n    // touched\n    dir.valueAccessor)).registerOnTouched(function () { return control.markAsTouched(); });\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        ((\n        // control -> view\n        dir.valueAccessor)).writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n    if (((dir.valueAccessor)).setDisabledState) {\n        control.registerOnDisabledChange(function (isDisabled) { /** @type {?} */ ((((dir.valueAccessor)).setDisabledState))(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((((validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((((validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    ((dir.valueAccessor)).registerOnChange(function () { return _noControlError(dir); }); /** @type {?} */\n    ((dir.valueAccessor)).registerOnTouched(function () { return _noControlError(dir); });\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    var /** @type {?} */ messageEnd;\n    if (((dir.path)).length > 1) {\n        messageEnd = \"path: '\" + ((dir.path)).join(' -> ') + \"'\";\n    }\n    else if (((dir.path))[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(message + \" \" + messageEnd);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    var /** @type {?} */ change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !ɵlooseIdentical(viewModel, change.currentValue);\n}\nvar BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    var /** @type {?} */ defaultAccessor = undefined;\n    var /** @type {?} */ builtinAccessor = undefined;\n    var /** @type {?} */ customAccessor = undefined;\n    valueAccessors.forEach(function (v) {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n *\n * \\@stable\n */\nvar AbstractFormGroupDirective = (function (_super) {\n    tslib_1.__extends(AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnInit = function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormGroup(this);\n    };\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {\\@link FormGroup} backing this binding.\n         * @return {?}\n         */\n        get: function () { return ((this.formDirective)).getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {\\@link Form} to which this group belongs.\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype._checkParentType = function () { };\n    return AbstractFormGroupDirective;\n}(ControlContainer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AbstractControlStatus = (function () {\n    /**\n     * @param {?} cd\n     */\n    function AbstractControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.touched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.valid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pending : false; },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractControlStatus;\n}());\nvar ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * \\@stable\n */\nvar NgControlStatus = (function (_super) {\n    tslib_1.__extends(NgControlStatus, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatus(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatus;\n}(AbstractControlStatus));\nNgControlStatus.decorators = [\n    { type: Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatus.ctorParameters = function () { return [\n    { type: NgControl, decorators: [{ type: Self },] },\n]; };\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@stable\n */\nvar NgControlStatusGroup = (function (_super) {\n    tslib_1.__extends(NgControlStatusGroup, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatusGroup(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatusGroup;\n}(AbstractControlStatus));\nNgControlStatusGroup.decorators = [\n    { type: Directive, args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatusGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Self },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nvar VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nvar INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nvar PENDING = 'PENDING';\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nvar DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!(path instanceof Array)) {\n        path = ((path)).split(delimiter);\n    }\n    if (path instanceof Array && (path.length === 0))\n        return null;\n    return ((path)).reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return v.controls[name] || null;\n        }\n        if (v instanceof FormArray) {\n            return v.at(/** @type {?} */ (name)) || null;\n        }\n        return null;\n    }, control);\n}\n/**\n * @param {?=} validator\n * @return {?}\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * @param {?=} asyncValidator\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n        asyncValidator || null;\n}\n/**\n * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n * {\\@link FormArray}.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControl = (function () {\n    /**\n     * @param {?} validator\n     * @param {?} asyncValidator\n     */\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = function () { };\n        this._pristine = true;\n        this._touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    Object.defineProperty(AbstractControl.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"parent\", {\n        /**\n         * The parent control.\n         * @return {?}\n         */\n        get: function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"status\", {\n        /**\n         * The validation status of the control. There are four possible\n         * validation statuses:\n         *\n         * * **VALID**:  control has passed all validation checks\n         * * **INVALID**: control has failed at least one validation check\n         * * **PENDING**: control is in the midst of conducting a validation check\n         * * **DISABLED**: control is exempt from validation checks\n         *\n         * These statuses are mutually exclusive, so a control cannot be\n         * both valid AND invalid or invalid AND disabled.\n         * @return {?}\n         */\n        get: function () { return this._status; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this._status == PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this._status === DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this._status !== DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this._errors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this._pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return !this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () { return this._valueChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () { return this._statusChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setValidators = function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n    /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n    /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsUntouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsDirty = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    };\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = true;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * Marks the control as `pending`.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPending = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = PENDING;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    };\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.disable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = DISABLED;\n        this._errors = null;\n        this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        this._updateAncestors(!!opts.onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n    };\n    /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.enable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = VALID;\n        this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(!!opts.onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n    };\n    /**\n     * @param {?} onlySelf\n     * @return {?}\n     */\n    AbstractControl.prototype._updateAncestors = function (onlySelf) {\n        if (this._parent && !onlySelf) {\n            this._parent.updateValueAndValidity();\n            this._parent._updatePristine();\n            this._parent._updateTouched();\n        }\n    };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n    /**\n     * Sets the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.setValue = function (value, options) { };\n    /**\n     * Patches the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.patchValue = function (value, options) { };\n    /**\n     * Resets the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.reset = function (value, options) { };\n    /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.updateValueAndValidity = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this._errors = this._runValidator();\n            this._status = this._calculateStatus();\n            if (this._status === VALID || this._status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTreeValidity = function (opts) {\n        if (opts === void 0) { opts = { emitEvent: true }; }\n        this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity(opts); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._runValidator = function () {\n        return this.validator ? this.validator(this) : null;\n    };\n    /**\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n        var _this = this;\n        if (this.asyncValidator) {\n            this._status = PENDING;\n            var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe(function (errors) { return _this.setErrors(errors, { emitEvent: emitEvent }); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._cancelExistingSubscription = function () {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.setErrors = function (errors, opts) {\n        if (opts === void 0) { opts = {}; }\n        this._errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    };\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.getError = function (errorCode, path) {\n        var /** @type {?} */ control = path ? this.get(path) : this;\n        return control && control._errors ? control._errors[errorCode] : null;\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.hasError = function (errorCode, path) { return !!this.getError(errorCode, path); };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        /**\n         * Retrieves the top-level ancestor of this control.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ x = this;\n            while (x._parent) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n        this._status = this._calculateStatus();\n        if (emitEvent) {\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._initObservables = function () {\n        this._valueChanges = new EventEmitter();\n        this._statusChanges = new EventEmitter();\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._calculateStatus = function () {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this._errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} cb\n     * @return {?}\n     */\n    AbstractControl.prototype._forEachChild = function (cb) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} condition\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControls = function (condition) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._allControlsDisabled = function () { };\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n        return this._anyControls(function (control) { return control.status === status; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsDirty = function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsTouched = function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updatePristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    AbstractControl.prototype._isBoxedValue = function (formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n    return AbstractControl;\n}());\n/**\n * \\@whatItDoes Tracks the value and validation status of an individual form control.\n *\n * It is one of the three fundamental building blocks of Angular forms, along with\n * {\\@link FormGroup} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n * first argument. Example:\n *\n * ```ts\n * const ctrl = new FormControl('some value');\n * console.log(ctrl.value);     // 'some value'\n * ```\n *\n * You can also initialize the control with a form state object on instantiation,\n * which includes both the value and whether or not the control is disabled.\n * You can't use the value key without the disabled key; both are required\n * to use this way of initialization.\n *\n * ```ts\n * const ctrl = new FormControl({value: 'n/a', disabled: true});\n * console.log(ctrl.value);     // 'n/a'\n * console.log(ctrl.status);   // 'DISABLED'\n * ```\n *\n * To include a sync validator (or an array of sync validators) with the control,\n * pass it in as the second argument. Async validators are also supported, but\n * have to be passed in separately as the third arg.\n *\n * ```ts\n * const ctrl = new FormControl('', Validators.required);\n * console.log(ctrl.value);     // ''\n * console.log(ctrl.status);   // 'INVALID'\n * ```\n *\n * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormControl = (function (_super) {\n    tslib_1.__extends(FormControl, _super);\n    /**\n     * @param {?=} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormControl(formState, validator, asyncValidator) {\n        if (formState === void 0) { formState = null; }\n        var _this = _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator)) || this;\n        /**\n         * \\@internal\n         */\n        _this._onChange = [];\n        _this._applyFormState(formState);\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        _this._initObservables();\n        return _this;\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._value = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this._value, options.emitViewToModelChange !== false); });\n        }\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue} on `FormGroups` and `FormArrays`,\n     * where it does behave differently.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.patchValue = function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.reset = function (formState, options) {\n        if (formState === void 0) { formState = null; }\n        if (options === void 0) { options = {}; }\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this._value, options);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormControl.prototype._anyControls = function (condition) { return false; };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n    /**\n     * Register a listener for change events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._clearChangeFns = function () {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = function () { };\n    };\n    /**\n     * Register a listener for disabled events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnDisabledChange = function (fn) {\n        this._onDisabledChange.push(fn);\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormControl.prototype._forEachChild = function (cb) { };\n    /**\n     * @param {?} formState\n     * @return {?}\n     */\n    FormControl.prototype._applyFormState = function (formState) {\n        if (this._isBoxedValue(formState)) {\n            this._value = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this._value = formState;\n        }\n    };\n    return FormControl;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n * instances.\n *\n * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n * with each control name as the key.  It calculates its status by reducing the statuses\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n * argument. The key for each child will be the name under which it is registered.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * You can also include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormGroup = (function (_super) {\n    tslib_1.__extends(FormGroup, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormGroup(controls, validator, asyncValidator) {\n        var _this = _super.call(this, validator || null, asyncValidator || null) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update value or validity of the control, so for\n     * most cases you'll want to use {\\@link FormGroup#addControl} instead.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.registerControl = function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.addControl = function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove a control from this group.\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype.removeControl = function (name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.setControl = function (name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for\n     * existence in the group only, use {\\@link AbstractControl#get} instead.\n     * @param {?} controlName\n     * @return {?}\n     */\n    FormGroup.prototype.contains = function (controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    };\n    /**\n     *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(function (name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        Object.keys(value).forEach(function (name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {\\@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.reset = function (value, options) {\n        if (value === void 0) { value = {}; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     * @return {?}\n     */\n    FormGroup.prototype.getRawValue = function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control instanceof FormControl ? control.value : ((control)).getRawValue();\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype._throwIfControlMissing = function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new Error(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormGroup.prototype._forEachChild = function (cb) {\n        var _this = this;\n        Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) {\n            control.setParent(_this);\n            control._registerOnCollectionChange(_this._onCollectionChange);\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormGroup.prototype._anyControls = function (condition) {\n        var _this = this;\n        var /** @type {?} */ res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._reduceValue = function () {\n        var _this = this;\n        return this._reduceChildren({}, function (acc, control, name) {\n            if (control.enabled || _this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    FormGroup.prototype._reduceChildren = function (initValue, fn) {\n        var /** @type {?} */ res = initValue;\n        this._forEachChild(function (control, name) { res = fn(res, control, name); });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n            var controlName = _a[_i];\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroup.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n * {\\@link FormGroup} or {\\@link FormArray} instances.\n *\n * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n * It calculates its status by reducing the statuses of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormGroup}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n * argument.\n *\n * ### Example\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * You can also include array-level validators as the second arg, or array-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormArray = (function (_super) {\n    tslib_1.__extends(FormArray, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormArray(controls, validator, asyncValidator) {\n        var _this = _super.call(this, validator || null, asyncValidator || null) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Get the {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.at = function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {\\@link AbstractControl} at the end of the array.\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.push = function (control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.insert = function (index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove the control at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.removeAt = function (index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.setControl = function (index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         * @return {?}\n         */\n        get: function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {\\@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.reset = function (value, options) {\n        if (value === void 0) { value = []; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    FormArray.prototype.getRawValue = function () {\n        return this.controls.map(function (control) {\n            return control instanceof FormControl ? control.value : ((control)).getRawValue();\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype._throwIfControlMissing = function (index) {\n        if (!this.controls.length) {\n            throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new Error(\"Cannot find form control at index \" + index);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormArray.prototype._forEachChild = function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._updateValue = function () {\n        var _this = this;\n        this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n            .map(function (control) { return control.value; });\n    };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormArray.prototype._anyControls = function (condition) {\n        return this.controls.some(function (control) { return control.enabled && condition(control); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) { return _this._registerControl(control); });\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormArray.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n            var control = _a[_i];\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    };\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype._registerControl = function (control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    };\n    return FormArray;\n}(AbstractControl));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgForm; })\n};\nvar resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * \\@howToUse\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n *\n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgForm = (function (_super) {\n    tslib_1.__extends(NgForm, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgForm(validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._submitted = false;\n        _this.ngSubmit = new EventEmitter();\n        _this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        return _this;\n    }\n    Object.defineProperty(NgForm.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            dir._control = (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            var /** @type {?} */ group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.updateModel = function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ ctrl = (_this.form.get(/** @type {?} */ ((dir.path))));\n            ctrl.setValue(value);\n        });\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NgForm.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    NgForm.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    NgForm.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    NgForm.prototype._findContainer = function (path) {\n        path.pop();\n        return path.length ? (this.form.get(path)) : this.form;\n    };\n    return NgForm;\n}(ControlContainer));\nNgForm.decorators = [\n    { type: Directive, args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgForm.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; index as i\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TemplateDrivenErrors = (function () {\n    function TemplateDrivenErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelParentException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + FormErrorExamples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + FormErrorExamples.ngModelWithFormGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.formGroupNameException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.missingNameException = function () {\n        throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelGroupParentException = function () {\n        throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    return TemplateDrivenErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgModelGroup; })\n};\n/**\n * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n * within `<form>` tags).\n *\n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n *\n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n * \\@stable\n */\nvar NgModelGroup = (function (_super) {\n    tslib_1.__extends(NgModelGroup, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgModelGroup(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgModelGroup.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    return NgModelGroup;\n}(AbstractFormGroupDirective));\nNgModelGroup.decorators = [\n    { type: Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n];\n/**\n * @nocollapse\n */\nNgModelGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nNgModelGroup.propDecorators = {\n    'name': [{ type: Input, args: ['ngModelGroup',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return NgModel; })\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nvar resolvedPromise$1 = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n * to a form control element.\n *\n * The {\\@link FormControl} instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n *\n * \\@howToUse\n *\n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional {\\@link Input}. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n *\n * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in {\\@link AbstractControlDirective}.\n *\n * The following is an example of a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * Take a look at an example of using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * To see `ngModel` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgModel = (function (_super) {\n    tslib_1.__extends(NgModel, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function NgModel(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        /**\n         * \\@internal\n         */\n        _this._control = new FormControl();\n        /**\n         * \\@internal\n         */\n        _this._registered = false;\n        _this.update = new EventEmitter();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype.ngOnChanges = function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgModel.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpControl = function () {\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._isStandalone = function () {\n        return !this._parent || !!(this.options && this.options.standalone);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpStandalone = function () {\n        setUpControl(this._control, this);\n        this._control.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkForErrors = function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkName = function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgModel.prototype._updateValue = function (value) {\n        var _this = this;\n        resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype._updateDisabled = function (changes) {\n        var _this = this;\n        var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n        var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(function () {\n            if (isDisabled && !_this.control.disabled) {\n                _this.control.disable();\n            }\n            else if (!isDisabled && _this.control.disabled) {\n                _this.control.enable();\n            }\n        });\n    };\n    return NgModel;\n}(NgControl));\nNgModel.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgModel.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nNgModel.propDecorators = {\n    'name': [{ type: Input },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'options': [{ type: Input, args: ['ngModelOptions',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReactiveErrors = (function () {\n    function ReactiveErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.controlParentException = function () {\n        throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.ngModelGroupException = function () {\n        throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + FormErrorExamples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.missingFormException = function () {\n        throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.groupParentException = function () {\n        throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formGroupName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.arrayParentException = function () {\n        throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + FormErrorExamples.formArrayName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.disabledAttrWarning = function () {\n        console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n    };\n    return ReactiveErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlDirective; })\n};\n/**\n * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n * {\\@link FormControlDirective}.\n *\n * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n * it does not require that your {\\@link FormControl} instance be part of any parent\n * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n * exists above it.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormControl} instance. See a full list of available properties in\n * {\\@link AbstractControl}.\n *\n * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n * or you can set it programmatically later using {\\@link AbstractControl#setValue} or\n * {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n *  \\@stable\n */\nvar FormControlDirective = (function (_super) {\n    tslib_1.__extends(FormControlDirective, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlDirective(validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.update = new EventEmitter();\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype.ngOnChanges = function (changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && ((this.valueAccessor)).setDisabledState) {\n                ((((this.valueAccessor)).setDisabledState))(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype._isControlChanged = function (changes) {\n        return changes.hasOwnProperty('form');\n    };\n    return FormControlDirective;\n}(NgControl));\nFormControlDirective.decorators = [\n    { type: Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n];\n/**\n * @nocollapse\n */\nFormControlDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlDirective.propDecorators = {\n    'form': [{ type: Input, args: ['formControl',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupDirective; })\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n *\n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue} methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * its {\\@link AbstractControl#statusChanges} event to be notified when the validation status is\n * re-calculated.\n *\n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormGroupDirective = (function (_super) {\n    tslib_1.__extends(FormGroupDirective, _super);\n    /**\n     * @param {?} _validators\n     * @param {?} _asyncValidators\n     */\n    function FormGroupDirective(_validators, _asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._validators = _validators;\n        _this._asyncValidators = _asyncValidators;\n        _this._submitted = false;\n        _this.directives = [];\n        _this.form = ((null));\n        _this.ngSubmit = new EventEmitter();\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormGroupDirective.prototype.ngOnChanges = function (changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addControl = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeControl = function (dir) { remove(this.directives, dir); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormGroup = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormArray = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormArray = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.updateModel = function (dir, value) {\n        var /** @type {?} */ ctrl = (this.form.get(dir.path));\n        ctrl.setValue(value);\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateDomValue = function () {\n        var _this = this;\n        this.directives.forEach(function (dir) {\n            var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n            if (dir._control !== newCtrl) {\n                cleanUpControl(dir._control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir._control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateRegistrations = function () {\n        var _this = this;\n        this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(function () { });\n        this._oldForm = this.form;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateValidators = function () {\n        var /** @type {?} */ sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([/** @type {?} */ ((this.form.validator)), /** @type {?} */ ((sync))]);\n        var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([/** @type {?} */ ((this.form.asyncValidator)), /** @type {?} */ ((async))]);\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._checkFormPresent = function () {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    };\n    return FormGroupDirective;\n}(ControlContainer));\nFormGroupDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nFormGroupDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupDirective.propDecorators = {\n    'form': [{ type: Input, args: ['formGroup',] },],\n    'ngSubmit': [{ type: Output },],\n};\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n * will look for a {\\@link FormGroup} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n *\n * **Access the group**: You can access the associated {\\@link FormGroup} using the\n * {\\@link AbstractControl#get} method. Ex: `this.form.get('name')`.\n *\n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormGroup}, or you can set it programmatically later using\n * {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormGroupName = (function (_super) {\n    tslib_1.__extends(FormGroupName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormGroupName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    };\n    return FormGroupName;\n}(AbstractFormGroupDirective));\nFormGroupName.decorators = [\n    { type: Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormGroupName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupName.propDecorators = {\n    'name': [{ type: Input, args: ['formGroupName',] },],\n};\nvar formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormArrayName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n * will look for a {\\@link FormArray} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n *\n * **Access the array**: You can access the associated {\\@link FormArray} using the\n * {\\@link AbstractControl#get} method on the parent {\\@link FormGroup}.\n * Ex: `this.form.get('cities')`.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormArray}, or you can set the value programmatically later using the\n * {\\@link FormArray}'s {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl#valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl#statusChanges} event to be notified when the validation\n * status is re-calculated.\n *\n * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by\n * calling its {\\@link FormArray#push} method.\n *  Ex: `this.form.get('cities').push(new FormControl());`\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormArrayName = (function (_super) {\n    tslib_1.__extends(FormArrayName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormArrayName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnInit = function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormArray(this);\n    };\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return ((this.formDirective)).getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? (this._parent.formDirective) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    };\n    return FormArrayName;\n}(ControlContainer));\nFormArrayName.decorators = [\n    { type: Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormArrayName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormArrayName.propDecorators = {\n    'name': [{ type: Input, args: ['formArrayName',] },],\n};\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlName; })\n};\n/**\n * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n * element by name.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the {\\@link FormControl} instance you want to\n * link, and will look for a {\\@link FormControl} registered with that name in the\n * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n *\n * **Access the control**: You can access the {\\@link FormControl} associated with\n * this directive by using the {\\@link AbstractControl#get} method.\n * Ex: `this.form.get('first');`\n *\n * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n * See a full list of available properties in {\\@link AbstractControl}.\n *\n *  **Set value**: You can set an initial value for the control when instantiating the\n *  {\\@link FormControl}, or you can set it programmatically later using\n *  {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormControlName = (function (_super) {\n    tslib_1.__extends(FormControlName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this._added = false;\n        _this.update = new EventEmitter();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnChanges = function (changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    };\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlName.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, /** @type {?} */ ((this._parent))); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return ((composeAsyncValidators(this._rawAsyncValidators)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._checkParentType = function () {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._setUpControl = function () {\n        this._checkParentType();\n        this._control = this.formDirective.addControl(this);\n        if (this.control.disabled && ((this.valueAccessor)).setDisabledState) {\n            ((((this.valueAccessor)).setDisabledState))(true);\n        }\n        this._added = true;\n    };\n    return FormControlName;\n}(NgControl));\nFormControlName.decorators = [\n    { type: Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n];\n/**\n * @nocollapse\n */\nFormControlName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlName.propDecorators = {\n    'name': [{ type: Input, args: ['formControlName',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return RequiredValidator; }),\n    multi: true\n};\nvar CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return CheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@stable\n */\nvar RequiredValidator = (function () {\n    function RequiredValidator() {\n    }\n    Object.defineProperty(RequiredValidator.prototype, \"required\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._required = value != null && value !== false && \"\" + value !== 'false';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    RequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.required(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return RequiredValidator;\n}());\nRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nRequiredValidator.ctorParameters = function () { return []; };\nRequiredValidator.propDecorators = {\n    'required': [{ type: Input },],\n};\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@experimental\n */\nvar CheckboxRequiredValidator = (function (_super) {\n    tslib_1.__extends(CheckboxRequiredValidator, _super);\n    function CheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    CheckboxRequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.requiredTrue(c) : null;\n    };\n    return CheckboxRequiredValidator;\n}(RequiredValidator));\nCheckboxRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxRequiredValidator.ctorParameters = function () { return []; };\n/**\n * Provider which adds {\\@link EmailValidator} to {\\@link NG_VALIDATORS}.\n */\nvar EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return EmailValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@experimental\n */\nvar EmailValidator = (function () {\n    function EmailValidator() {\n    }\n    Object.defineProperty(EmailValidator.prototype, \"email\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    EmailValidator.prototype.validate = function (c) {\n        return this._enabled ? Validators.email(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    EmailValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return EmailValidator;\n}());\nEmailValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nEmailValidator.ctorParameters = function () { return []; };\nEmailValidator.propDecorators = {\n    'email': [{ type: Input },],\n};\n/**\n * Provider which adds {\\@link MinLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='min'}\n */\nvar MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MinLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n *\n * \\@stable\n */\nvar MinLengthValidator = (function () {\n    function MinLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MinLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MinLengthValidator.prototype.validate = function (c) {\n        return this.minlength == null ? null : this._validator(c);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MinLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    };\n    return MinLengthValidator;\n}());\nMinLengthValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMinLengthValidator.ctorParameters = function () { return []; };\nMinLengthValidator.propDecorators = {\n    'minlength': [{ type: Input },],\n};\n/**\n * Provider which adds {\\@link MaxLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='max'}\n */\nvar MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MaxLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n *\n * \\@stable\n */\nvar MaxLengthValidator = (function () {\n    function MaxLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.validate = function (c) {\n        return this.maxlength != null ? this._validator(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MaxLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    };\n    return MaxLengthValidator;\n}());\nMaxLengthValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMaxLengthValidator.ctorParameters = function () { return []; };\nMaxLengthValidator.propDecorators = {\n    'maxlength': [{ type: Input },],\n};\nvar PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return PatternValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n *\n * ### Example\n *\n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * \\@stable\n */\nvar PatternValidator = (function () {\n    function PatternValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PatternValidator.prototype.ngOnChanges = function (changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n    return PatternValidator;\n}());\nPatternValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nPatternValidator.ctorParameters = function () { return []; };\nPatternValidator.propDecorators = {\n    'pattern': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n *\n * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n * forms.\n *\n * \\@howToUse\n *\n * To use, inject `FormBuilder` into your component class. You can then call its methods\n * directly.\n *\n * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  * **NgModule**: {\\@link ReactiveFormsModule}\n *\n * \\@stable\n */\nvar FormBuilder = (function () {\n    function FormBuilder() {\n    }\n    /**\n     * Construct a new {\\@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {\\@link FormGroup} constructor for more details.\n     * @param {?} controlsConfig\n     * @param {?=} extra\n     * @return {?}\n     */\n    FormBuilder.prototype.group = function (controlsConfig, extra) {\n        if (extra === void 0) { extra = null; }\n        var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n        var /** @type {?} */ validator = extra != null ? extra['validator'] : null;\n        var /** @type {?} */ asyncValidator = extra != null ? extra['asyncValidator'] : null;\n        return new FormGroup(controls, validator, asyncValidator);\n    };\n    /**\n     * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     * @param {?} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n        return new FormControl(formState, validator, asyncValidator);\n    };\n    /**\n     * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     * @param {?} controlsConfig\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n        var _this = this;\n        var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new FormArray(controls, validator, asyncValidator);\n    };\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._reduceControls = function (controlsConfig) {\n        var _this = this;\n        var /** @type {?} */ controls = {};\n        Object.keys(controlsConfig).forEach(function (controlName) {\n            controls[controlName] = _this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    };\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._createControl = function (controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            var /** @type {?} */ value = controlConfig[0];\n            var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    return FormBuilder;\n}());\nFormBuilder.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nFormBuilder.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.3.5');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@experimental\n */\nvar NgNoValidate = (function () {\n    function NgNoValidate() {\n    }\n    return NgNoValidate;\n}());\nNgNoValidate.decorators = [\n    { type: Directive, args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' },\n            },] },\n];\n/**\n * @nocollapse\n */\nNgNoValidate.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SHARED_FORM_DIRECTIVES = [\n    NgNoValidate,\n    NgSelectOption,\n    NgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nvar TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nvar REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nvar InternalFormsSharedModule = (function () {\n    function InternalFormsSharedModule() {\n    }\n    return InternalFormsSharedModule;\n}());\nInternalFormsSharedModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES,\n            },] },\n];\n/**\n * @nocollapse\n */\nInternalFormsSharedModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The ng module for forms.\n * \\@stable\n */\nvar FormsModule = (function () {\n    function FormsModule() {\n    }\n    return FormsModule;\n}());\nFormsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nFormsModule.ctorParameters = function () { return []; };\n/**\n * The ng module for reactive forms.\n * \\@stable\n */\nvar ReactiveFormsModule = (function () {\n    function ReactiveFormsModule() {\n    }\n    return ReactiveFormsModule;\n}());\nReactiveFormsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nReactiveFormsModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link FormGroup} that\n * consists of {@link FormControl} objects, and mapping them onto the DOM. {@link FormControl}\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { AbstractControlDirective, AbstractFormGroupDirective, CheckboxControlValueAccessor, ControlContainer, NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE, DefaultValueAccessor, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, RadioControlValueAccessor, FormControlDirective, FormControlName, FormGroupDirective, FormArrayName, FormGroupName, NgSelectOption, SelectControlValueAccessor, SelectMultipleControlValueAccessor, CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator, FormBuilder, AbstractControl, FormArray, FormControl, FormGroup, NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators, VERSION, FormsModule, ReactiveFormsModule, InternalFormsSharedModule as ɵba, REACTIVE_DRIVEN_DIRECTIVES as ɵz, SHARED_FORM_DIRECTIVES as ɵx, TEMPLATE_DRIVEN_DIRECTIVES as ɵy, CHECKBOX_VALUE_ACCESSOR as ɵa, DEFAULT_VALUE_ACCESSOR as ɵb, AbstractControlStatus as ɵc, ngControlStatusHost as ɵd, formDirectiveProvider as ɵe, formControlBinding as ɵf, modelGroupProvider as ɵg, NgNoValidate as ɵbf, NUMBER_VALUE_ACCESSOR as ɵbb, NumberValueAccessor as ɵbc, RADIO_VALUE_ACCESSOR as ɵh, RadioControlRegistry as ɵi, RANGE_VALUE_ACCESSOR as ɵbd, RangeValueAccessor as ɵbe, formControlBinding$1 as ɵj, controlNameBinding as ɵk, formDirectiveProvider$1 as ɵl, formArrayNameProvider as ɵn, formGroupNameProvider as ɵm, SELECT_VALUE_ACCESSOR as ɵo, NgSelectMultipleOption as ɵq, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵp, CHECKBOX_REQUIRED_VALIDATOR as ɵs, EMAIL_VALIDATOR as ɵt, MAX_LENGTH_VALIDATOR as ɵv, MIN_LENGTH_VALIDATOR as ɵu, PATTERN_VALIDATOR as ɵw, REQUIRED_VALIDATOR as ɵr };\n//# sourceMappingURL=forms.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/@angular/forms.es5.js\n// module id = 15\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"./Observable\");\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.error);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return this.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return this.completeNotification;\n    };\n    return Notification;\n}());\nNotification.completeNotification = new Notification('C');\nNotification.undefinedValueNotification = new Notification('N', undefined);\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Notification.js\n// module id = 26\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/map.js\n// module id = 27\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar root_1 = require(\"../util/root\");\nvar Action_1 = require(\"./Action\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncAction.js\n// module id = 28\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Scheduler_1 = require(\"../Scheduler\");\nvar AsyncScheduler = (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        _this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncScheduler.js\n// module id = 29\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = (function (_super) {\n    tslib_1.__extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var _this = _super.call(this, 'argument out of range') || this;\n        _this.name = 'ArgumentOutOfRangeError';\n        Object.setPrototypeOf(_this, ArgumentOutOfRangeError.prototype);\n        return _this;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/ArgumentOutOfRangeError.js\n// module id = 30\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = (function (_super) {\n    tslib_1.__extends(EmptyError, _super);\n    function EmptyError() {\n        var _this = _super.call(this, 'no elements in sequence') || this;\n        _this.name = 'EmptyError';\n        Object.setPrototypeOf(_this, EmptyError.prototype);\n        return _this;\n    }\n    return EmptyError;\n}(Error));\nexports.EmptyError = EmptyError;\n//# sourceMappingURL=EmptyError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/EmptyError.js\n// module id = 31\n// module chunks = 0 1 2","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport interface isUsed {\r\n  [type: string]: boolean,\r\n}\r\n\r\n@Injectable ()\r\nexport class AppState {\r\n  private useSums: BehaviorSubject <isUsed> = new BehaviorSubject <isUsed>(null);\r\n  private usePercentage: BehaviorSubject <isUsed> = new BehaviorSubject <isUsed>(null);\r\n  private calcWrapperData: BehaviorSubject <object> = new BehaviorSubject <object>(null);\r\n  private faqData: BehaviorSubject <object> = new BehaviorSubject <object>(null);\r\n\r\n  constructor () {\r\n    this.usePercentage.next ({ use: true });\r\n    this.useSums.next ({ use: true });\r\n    this.calcWrapperData.next ({\r\n      'heart-axis': { title: 'Расчет электрической оси сердца.' },\r\n      'is-arrhythmia': { title: 'Расчет соотношения интервалов PP' }\r\n    });\r\n    this.faqData.next ({\r\n      'heart-axis': { data: 'heart-axis FAQ' },\r\n      'is-arrhythmia': { data: 'is-arrhythmia FAQ' }\r\n    });\r\n  }\r\n\r\n  toggle (data: string, direction?: boolean): AppState {\r\n    let value: isUsed;\r\n    if (typeof direction !== 'undefined') {\r\n      value = {\r\n        use: direction,\r\n      };\r\n    } else {\r\n      value = {\r\n        use: !this.getValue (data).use,\r\n      };\r\n    }\r\n    this[data].next (value);\r\n    return this;\r\n  }\r\n\r\n  getValue (data: string): isUsed {\r\n    return this[data].getValue ();\r\n  }\r\n\r\n  getStream (data: string): Observable<isUsed> {\r\n    return this[data].asObservable ();\r\n  }\r\n\r\n  getDataStream (data: string): Observable<object> {\r\n    return this[data].asObservable ();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/services/app_state.service.ts","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subject_1 = require(\"./Subject\");\nvar Subscription_1 = require(\"./Subscription\");\n/**\n * @class AsyncSubject<T>\n */\nvar AsyncSubject = (function (_super) {\n    tslib_1.__extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.value = null;\n        _this.hasNext = false;\n        _this.hasCompleted = false;\n        return _this;\n    }\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject_1.Subject));\nexports.AsyncSubject = AsyncSubject;\n//# sourceMappingURL=AsyncSubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/AsyncSubject.js\n// module id = 35\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subject_1 = require(\"./Subject\");\nvar queue_1 = require(\"./scheduler/queue\");\nvar Subscription_1 = require(\"./Subscription\");\nvar observeOn_1 = require(\"./operator/observeOn\");\nvar ObjectUnsubscribedError_1 = require(\"./util/ObjectUnsubscribedError\");\nvar SubjectSubscription_1 = require(\"./SubjectSubscription\");\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = (function (_super) {\n    tslib_1.__extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        return _this;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/ReplaySubject.js\n// module id = 36\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return this.lift(new ReduceOperator(accumulator, seed, hasSeed));\n}\nexports.reduce = reduce;\nvar ReduceOperator = (function () {\n    function ReduceOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ReduceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ReduceSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ReduceOperator;\n}());\nexports.ReduceOperator = ReduceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ReduceSubscriber = (function (_super) {\n    tslib_1.__extends(ReduceSubscriber, _super);\n    function ReduceSubscriber(destination, accumulator, seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        _this.hasValue = false;\n        _this.acc = seed;\n        if (!_this.hasSeed) {\n            _this.index++;\n        }\n        return _this;\n    }\n    ReduceSubscriber.prototype._next = function (value) {\n        if (this.hasValue || (this.hasValue = this.hasSeed)) {\n            this._tryReduce(value);\n        }\n        else {\n            this.acc = value;\n            this.hasValue = true;\n        }\n    };\n    ReduceSubscriber.prototype._tryReduce = function (value) {\n        var result;\n        try {\n            result = this.accumulator(this.acc, value, this.index++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.acc = result;\n    };\n    ReduceSubscriber.prototype._complete = function () {\n        if (this.hasValue || this.hasSeed) {\n            this.destination.next(this.acc);\n        }\n        this.destination.complete();\n    };\n    return ReduceSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ReduceSubscriber = ReduceSubscriber;\n//# sourceMappingURL=reduce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/reduce.js\n// module id = 37\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isDate.js\n// module id = 38\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray_1 = require(\"../util/isArray\");\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n//# sourceMappingURL=isNumeric.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isNumeric.js\n// module id = 39\n// module chunks = 0 1 2","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.3.5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { APP_BASE_HREF, HashLocationStrategy, LOCATION_INITIALIZED, Location, LocationStrategy, PathLocationStrategy, PlatformLocation } from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationRef, Attribute, ChangeDetectorRef, Compiler, ComponentFactoryResolver, ContentChildren, Directive, ElementRef, EventEmitter, HostBinding, HostListener, Inject, Injectable, InjectionToken, Injector, Input, NgModule, NgModuleFactory, NgModuleFactoryLoader, NgModuleRef, NgProbeToken, Optional, Output, Renderer2, SkipSelf, SystemJsNgModuleLoader, Version, ViewContainerRef, isDevMode, ɵisObservable, ɵisPromise } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { from } from 'rxjs/observable/from';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operator/concatMap';\nimport { every } from 'rxjs/operator/every';\nimport { first } from 'rxjs/operator/first';\nimport { last } from 'rxjs/operator/last';\nimport { map } from 'rxjs/operator/map';\nimport { mergeMap } from 'rxjs/operator/mergeMap';\nimport { reduce } from 'rxjs/operator/reduce';\nimport { Observable } from 'rxjs/Observable';\nimport { _catch } from 'rxjs/operator/catch';\nimport { concatAll } from 'rxjs/operator/concatAll';\nimport { EmptyError } from 'rxjs/util/EmptyError';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { mergeAll } from 'rxjs/operator/mergeAll';\nimport { ɵgetDOM } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operator/filter';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    function NavigationStart(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    function NavigationEnd(id, url, urlAfterRedirects) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    function NavigationCancel(id, url, reason) {\n        this.id = id;\n        this.url = url;\n        this.reason = reason;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    function NavigationError(id, url, error) {\n        this.id = id;\n        this.url = url;\n        this.error = error;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function RoutesRecognized(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}());\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function GuardsCheckStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     * @param {?} shouldActivate\n     */\n    function GuardsCheckEnd(id, url, urlAfterRedirects, state, shouldActivate) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveEnd(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = (function () {\n    /**\n     * @param {?} params\n     */\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    ((error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return ((error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = (function () {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @param {?} bools\n * @return {?}\n */\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = map.call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = concatAll.call(of.apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = last.call(concat$);\n    return map.call(last$, function () { return res; });\n}\n/**\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = mergeAll.call(observables);\n    return every.call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (ɵisObservable(value)) {\n        return value;\n    }\n    if (ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return fromPromise(Promise.resolve(value));\n    }\n    return of(/** @type {?} */ (value));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = (function () {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = (function () {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /**\n         * Number of child segments\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = (function () {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = (function () {\n    function UrlSerializer() {\n    }\n    /**\n     * Parse a url into a {\\@link UrlTree}\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlSerializer.prototype.parse = function (url) { };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @abstract\n     * @param {?} tree\n     * @return {?}\n     */\n    UrlSerializer.prototype.serialize = function (tree) { };\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = (function () {\n    function DefaultUrlSerializer() {\n    }\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI(/** @type {?} */ ((tree.fragment))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = (function () {\n    /**\n     * @param {?} url\n     */\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = (function () {\n    /**\n     * @param {?=} segmentGroup\n     */\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = (function () {\n    /**\n     * @param {?} urlTree\n     */\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = (function () {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment))); });\n        return _catch.call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment))); });\n        return _catch.call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return map.call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = of.apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = map.call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return _catch.call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return of(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = concatAll.call(processedRoutes$);\n        var /** @type {?} */ first$ = first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return _catch.call(first$, function (e, _) {\n            if (e instanceof EmptyError) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return map.call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return mergeMap.call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return map.call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return map.call(expanded$, function (cs) { return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children); });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return of(route._loadedConfig);\n            }\n            return mergeMap.call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return map.call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return of(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return of(true);\n    var /** @type {?} */ obs = map.call(from(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = (function () {\n    /**\n     * @param {?} root\n     */\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = (function () {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = (function (_super) {\n    tslib_1.__extends(RouterState, _super);\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new BehaviorSubject({});\n    var /** @type {?} */ emptyData = new BehaviorSubject({});\n    var /** @type {?} */ emptyQueryParams = new BehaviorSubject({});\n    var /** @type {?} */ fragment = new BehaviorSubject('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = map.call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    map.call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n    while (inhertingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n        var /** @type {?} */ parent = pathToRoot[inhertingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inhertingStartingFrom--;\n            // parent is componentless => current route should inherit its params and data\n        }\n        else if (!parent.component) {\n            inhertingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = Object.assign({}, res.params, curr.params);\n        var /** @type {?} */ data = Object.assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = Object.assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this._routeConfig ? this._routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = (function (_super) {\n    tslib_1.__extends(RouterStateSnapshot, _super);\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            ((route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            ((route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            ((route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            ((route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            ((route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        ((route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree_1 = ((routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree_1);\n        return tree_1;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = (function () {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = (function () {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_2 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_2[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_2[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_2);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = (function () {\n    function NoMatch$1() {\n    }\n    return NoMatch$1;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     */\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return of(routeState);\n        }\n        catch (e) {\n            return new Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? ((last$1(segments))).parameters : {};\n            var /** @type {?} */ snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            return [new TreeNode(snapshot_1, [])];\n        }\n        var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n        var /** @type {?} */ snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_3 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_3)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? Object.assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_3 = routes; _i < routes_3.length; _i++) {\n        var r = routes_3[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_4 = routes; _i < routes_4.length; _i++) {\n        var r = routes_4[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = (function () {\n    function RouteReuseStrategy() {\n    }\n    /**\n     * Determines if this route (and its subtree) should be detached to be reused later\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldDetach = function (route) { };\n    /**\n     * Stores the detached route.\n     *\n     * Storing a `null` value should erase the previously stored value.\n     * @abstract\n     * @param {?} route\n     * @param {?} handle\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.store = function (route, handle) { };\n    /**\n     * Determines if this route (and its subtree) should be reattached\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldAttach = function (route) { };\n    /**\n     * Retrieves the previously stored route\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.retrieve = function (route) { };\n    /**\n     * Determines if a route should be reused\n     * @abstract\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) { };\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new InjectionToken('ROUTES');\nvar RouterConfigLoader = (function () {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return map.call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return fromPromise(this.loader.load(loadChildren));\n        }\n        else {\n            return mergeMap.call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof NgModuleFactory) {\n                    return of(t);\n                }\n                else {\n                    return fromPromise(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = (function () {\n    function UrlHandlingStrategy() {\n    }\n    /**\n     * Tells the router if this URL should be processed.\n     *\n     * When it returns true, the router will execute the regular navigation.\n     * When it returns false, the router will set the router state to an empty state.\n     * As a result, all the active components will be destroyed.\n     *\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { };\n    /**\n     * Extracts the part of the URL that should be handled by the router.\n     * The rest of the URL will remain untouched.\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.extract = function (url) { };\n    /**\n     * Merges the URL fragment with the rest of the URL.\n     * @abstract\n     * @param {?} newUrlPart\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.merge = function (newUrlPart, rawUrl) { };\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return (of(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} rootContexts\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new BehaviorSubject(/** @type {?} */ ((null)));\n        this.routerEvents = new Subject();\n        this.navigationId = 0;\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.currentRouterState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"routerState\", {\n        /**\n         * The current route state\n         * @return {?}\n         */\n        get: function () { return this.currentRouterState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"url\", {\n        /**\n         * The current url\n         * @return {?}\n         */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"events\", {\n        /**\n         * An observable of router events\n         * @return {?}\n         */\n        get: function () { return this.routerEvents; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = function (e) { this.routerEvents.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config;\n        this.navigated = false;\n    };\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (isDevMode() && preserveQueryParams && (console) && (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n            extras.queryParams = this.removeEmptyProps(extras.queryParams);\n        }\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        concatMap\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return (of(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n            this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = mergeMap.call(redirectsApplied$, function (appliedUrl) {\n                    return map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = mergeMap.call(urlAndSnapshot$, function (p) {\n                return map.call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationTraverse$ = map.call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation =\n                    new PreActivation(snapshot, _this.currentRouterState.snapshot, moduleInjector);\n                preActivation.traverse(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = mergeMap.call(preactivationTraverse$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return of(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return map.call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = mergeMap.call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return map.call(preActivation.resolveData(), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return of(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = mergeMap.call(preactivationResolveData$, function (p) {\n                return map.call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = map.call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.currentRouterState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.currentRouterState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.currentRouterState = state;\n                if (!shouldPreventPushState) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState)\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n                _this.currentRouterState = storedState;\n                _this.currentUrlTree = storedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        var /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n        this.location.replaceState(path);\n    };\n    return Router;\n}());\nvar CanActivate = (function () {\n    /**\n     * @param {?} path\n     */\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = (function () {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\nvar PreActivation = (function () {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     */\n    function PreActivation(future, curr, moduleInjector) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.traverse = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.traverseChildRoutes(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return of(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return mergeMap.call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : of(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = function () {\n        var _this = this;\n        if (!this.isActivating())\n            return of(null);\n        var /** @type {?} */ checks$ = from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = concatMap.call(checks$, function (check) { return _this.runResolve(check.route); });\n        return reduce.call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseChildRoutes = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.traverseRoutes(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) { return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k)); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseRoutes = function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future._routeConfig === curr._routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future._routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = ((((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = from(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = mergeMap.call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = concatMap.call(checks$, function (check) { return andObservables(from([_this.runCanActivateChild(check.path), _this.runCanActivate(check.route)])); });\n        return every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return of(true);\n        var /** @type {?} */ obs = map.call(from(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return first.call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(map.call(from(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = map.call(from(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return first.call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return of(true);\n        var /** @type {?} */ canDeactivate$ = mergeMap.call(from(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return first.call(observable);\n        });\n        return every.call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return map.call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = Object.assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return of({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return map.call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = mergeMap.call(from(keys), function (key) {\n            return map.call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return map.call(last.call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nvar ActivateRoutes = (function () {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     */\n    function ActivateRoutes(routeReuseStrategy, futureState, currState) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) { _this.activateRoutes(c, children[c.value.outlet], contexts); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = ((this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' preserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras#queryParamsHandling}\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * \\@ngModule RouterModule\n *\n * See {\\@link Router#createUrlTree} for more information.\n *\n * \\@stable\n */\nvar RouterLink = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLink;\n}());\nRouterLink.decorators = [\n    { type: Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLink.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['tabindex',] },] },\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\nRouterLink.propDecorators = {\n    'queryParams': [{ type: Input },],\n    'fragment': [{ type: Input },],\n    'queryParamsHandling': [{ type: Input },],\n    'preserveFragment': [{ type: Input },],\n    'skipLocationChange': [{ type: Input },],\n    'replaceUrl': [{ type: Input },],\n    'routerLink': [{ type: Input },],\n    'preserveQueryParams': [{ type: Input },],\n    'onClick': [{ type: HostListener, args: ['click',] },],\n};\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLinkWithHref;\n}());\nRouterLinkWithHref.decorators = [\n    { type: Directive, args: [{ selector: 'a[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkWithHref.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: LocationStrategy, },\n]; };\nRouterLinkWithHref.propDecorators = {\n    'target': [{ type: HostBinding, args: ['attr.target',] }, { type: Input },],\n    'queryParams': [{ type: Input },],\n    'fragment': [{ type: Input },],\n    'queryParamsHandling': [{ type: Input },],\n    'preserveFragment': [{ type: Input },],\n    'skipLocationChange': [{ type: Input },],\n    'replaceUrl': [{ type: Input },],\n    'href': [{ type: HostBinding },],\n    'routerLink': [{ type: Input },],\n    'preserveQueryParams': [{ type: Input },],\n    'onClick': [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = (function () {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.active = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.active; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set: function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        var /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n        // react only when status has changed to prevent unnecessary dom updates\n        if (this.active !== hasActiveLinks) {\n            this.classes.forEach(function (c) {\n                if (hasActiveLinks) {\n                    _this.renderer.addClass(_this.element.nativeElement, c);\n                }\n                else {\n                    _this.renderer.removeClass(_this.element.nativeElement, c);\n                }\n            });\n            Promise.resolve(hasActiveLinks).then(function (active) { return _this.active = active; });\n        }\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) { return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact); };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    return RouterLinkActive;\n}());\nRouterLinkActive.decorators = [\n    { type: Directive, args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkActive.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: ChangeDetectorRef, },\n]; };\nRouterLinkActive.propDecorators = {\n    'links': [{ type: ContentChildren, args: [RouterLink, { descendants: true },] },],\n    'linksWithHrefs': [{ type: ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n    'routerLinkActiveOptions': [{ type: Input },],\n    'routerLinkActive': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = (function () {\n    /**\n     * @param {?} parentContexts\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     * @param {?} changeDetector\n     */\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new EventEmitter();\n        this.deactivateEvents = new EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.location.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = (((snapshot._routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    return RouterOutlet;\n}());\nRouterOutlet.decorators = [\n    { type: Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n];\n/**\n * @nocollapse\n */\nRouterOutlet.ctorParameters = function () { return [\n    { type: ChildrenOutletContexts, },\n    { type: ViewContainerRef, },\n    { type: ComponentFactoryResolver, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['name',] },] },\n    { type: ChangeDetectorRef, },\n]; };\nRouterOutlet.propDecorators = {\n    'activateEvents': [{ type: Output, args: ['activate',] },],\n    'deactivateEvents': [{ type: Output, args: ['deactivate',] },],\n};\nvar OutletInjector = (function () {\n    /**\n     * @param {?} route\n     * @param {?} childContexts\n     * @param {?} parent\n     */\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = (function () {\n    function PreloadingStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadingStrategy.prototype.preload = function (route, fn) { };\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return _catch.call(fn(), function () { return of(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = function (route, fn) { return of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = (function () {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    ;\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = concatMap.call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = function () {\n        var /** @type {?} */ ngModule = this.injector.get(NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_5 = routes; _i < routes_5.length; _i++) {\n            var route = routes_5[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return mergeAll.call(from(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return mergeMap.call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    return RouterPreloader;\n}());\nRouterPreloader.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRouterPreloader.ctorParameters = function () { return [\n    { type: Router, },\n    { type: NgModuleFactoryLoader, },\n    { type: Compiler, },\n    { type: Injector, },\n    { type: PreloadingStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            ApplicationRef, UrlSerializer, ChildrenOutletContexts, Location, Injector,\n            NgModuleFactoryLoader, Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = (function () {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new Optional(), new SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    return RouterModule;\n}());\nRouterModule.decorators = [\n    { type: NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n];\n/**\n * @nocollapse\n */\nRouterModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n    { type: Router, decorators: [{ type: Optional },] },\n]; };\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((e.constructor)).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = (function () {\n    /**\n     * @param {?} injector\n     */\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return (of(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    return RouterInitializer;\n}());\nRouterInitializer.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRouterInitializer.ctorParameters = function () { return [\n    { type: Injector, },\n]; };\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.3.5');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { RouterLink, RouterLinkWithHref, RouterLinkActive, RouterOutlet, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RoutesRecognized, RouteReuseStrategy, Router, ROUTES, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, RouterModule, provideRoutes, ChildrenOutletContexts, OutletContext, NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader, ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, PRIMARY_OUTLET, convertToParamMap, UrlHandlingStrategy, DefaultUrlSerializer, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, flatten as ɵflatten, ROUTER_FORROOT_GUARD as ɵa, RouterInitializer as ɵg, getAppInitializer as ɵh, getBootstrapListener as ɵi, provideForRootGuard as ɵd, provideLocationStrategy as ɵc, provideRouterInitializer as ɵj, rootRoute as ɵf, routerNgProbeToken as ɵb, setupRouter as ɵe, Tree as ɵk, TreeNode as ɵl };\n//# sourceMappingURL=router.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/router/@angular/router.es5.js\n// module id = 40\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subject_1 = require(\"./Subject\");\nvar ObjectUnsubscribedError_1 = require(\"./util/ObjectUnsubscribedError\");\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    tslib_1.__extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/BehaviorSubject.js\n// module id = 50\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PromiseObservable_1 = require(\"./PromiseObservable\");\nexports.fromPromise = PromiseObservable_1.PromiseObservable.create;\n//# sourceMappingURL=fromPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/fromPromise.js\n// module id = 51\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ArrayObservable_1 = require(\"../observable/ArrayObservable\");\nvar isArray_1 = require(\"../util/isArray\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar none = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    observables.unshift(this);\n    return this.lift.call(new ArrayObservable_1.ArrayObservable(observables), new CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/combineLatest.js\n// module id = 52\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\nvar ArrayObservable_1 = require(\"../observable/ArrayObservable\");\nvar mergeAll_1 = require(\"./mergeAll\");\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/concat.js\n// module id = 53\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        _this.predicate = predicate;\n        return _this;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/filter.js\n// module id = 54\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    tslib_1.__extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.resultSelector = resultSelector;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mergeMap.js\n// module id = 55\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Notification_1 = require(\"../Notification\");\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new ObserveOnOperator(scheduler, delay));\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    tslib_1.__extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/observeOn.js\n// module id = 56\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ArrayObservable_1 = require(\"../observable/ArrayObservable\");\nvar isArray_1 = require(\"../util/isArray\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar iterator_1 = require(\"../symbol/iterator\");\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(zipStatic.apply(void 0, [this].concat(observables)));\n}\nexports.zipProto = zipProto;\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexports.zipStatic = zipStatic;\nvar ZipOperator = (function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\nexports.ZipOperator = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = (function (_super) {\n    tslib_1.__extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) { values = Object.create(null); }\n        var _this = _super.call(this, destination) || this;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.project = (typeof project === 'function') ? project : null;\n        _this.values = values;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray_1.isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator_1.iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_1.iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ZipSubscriber = ZipSubscriber;\nvar StaticIterator = (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = (function (_super) {\n    tslib_1.__extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/zip.js\n// module id = 57\n// module chunks = 0 1 2","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AppState } from '../../services/app_state.service';\r\n\r\n@Component ({\r\n  selector: 'faq',\r\n  template: require('./faq.component.html')\r\n})\r\n\r\nexport class FaqComponent {\r\n  data: string;\r\n  calculatorType: any;\r\n\r\n  constructor (\r\n    private route: ActivatedRoute,\r\n    private state: AppState\r\n  ) {\r\n    route\r\n      .parent\r\n      .url\r\n      .subscribe ( value => this.calculatorType = value[0].path );\r\n    state\r\n      .getDataStream ('faqData')\r\n      .subscribe ( value => this.data = value[this.calculatorType].data );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/shared/faq.component/faq.component.ts","import { FormGroup, FormControl, ValidatorFn } from '@angular/forms';\r\n\r\ninterface customError {\r\n  [s: string]: boolean,\r\n}\r\n\r\nexport function checkMinimum (minimum: number): ValidatorFn {\r\n  return (control: FormControl): customError => {\r\n    if (control.value < minimum) {\r\n      return { invalidMinimum: true };\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkMaximum (maximum: number): ValidatorFn {\r\n  return (control: FormControl): customError => {\r\n    if (control.value > maximum) {\r\n      return { invalidMaximum: true };\r\n    }\r\n  }\r\n}\r\n\r\nexport function verifyNum (control: FormControl): customError {\r\n  if (typeof control.value !== 'number' || !isFinite (control.value)) {\r\n    return { invalidNumber: true };\r\n  }\r\n}\r\n\r\nexport function allValuesNotZero (...controlsKeys: string[]): ValidatorFn {\r\n  return (form: FormGroup): customError => {\r\n    let values: number[] = [];\r\n\r\n    controlsKeys.map ((elem) => {\r\n      values.push (form.controls[elem].value);\r\n    });\r\n\r\n    if (values.every (elem => elem === 0)) {\r\n      return { allValueIsZero: true };\r\n    }\r\n  }\r\n}\r\n\r\nexport function sumOfValuesNotZero (...controlCouples: string[][]): ValidatorFn {\r\n  return (form: FormGroup): { [s: string]: boolean } => {\r\n    let values: number[] = [];\r\n\r\n    controlCouples.map (couple => {\r\n      values.push (\r\n        form.controls[couple[0]].value - form.controls[couple[1]].value\r\n      );\r\n    });\r\n\r\n    if (values.every (elem => elem === 0)) {\r\n      return { allSumsIsZero: true };\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/helpers/validators.ts","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar isArray_1 = require(\"../util/isArray\");\nvar isArrayLike_1 = require(\"../util/isArrayLike\");\nvar isPromise_1 = require(\"../util/isPromise\");\nvar PromiseObservable_1 = require(\"./PromiseObservable\");\nvar IteratorObservable_1 = require(\"./IteratorObservable\");\nvar ArrayObservable_1 = require(\"./ArrayObservable\");\nvar ArrayLikeObservable_1 = require(\"./ArrayLikeObservable\");\nvar iterator_1 = require(\"../symbol/iterator\");\nvar Observable_1 = require(\"../Observable\");\nvar observeOn_1 = require(\"../operator/observeOn\");\nvar observable_1 = require(\"../symbol/observable\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    tslib_1.__extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        var _this = _super.call(this, null) || this;\n        _this.ish = ish;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_1.observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray_1.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike_1.isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_1.observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nexports.FromObservable = FromObservable;\n//# sourceMappingURL=FromObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/FromObservable.js\n// module id = 76\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar root_1 = require(\"../util/root\");\nvar Observable_1 = require(\"../Observable\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    tslib_1.__extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.promise = promise;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {PromiseLike<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/PromiseObservable.js\n// module id = 77\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar root_1 = require(\"../../util/root\");\nvar tryCatch_1 = require(\"../../util/tryCatch\");\nvar errorObject_1 = require(\"../../util/errorObject\");\nvar Observable_1 = require(\"../../Observable\");\nvar Subscriber_1 = require(\"../../Subscriber\");\nvar map_1 = require(\"../../operator/map\");\nrequire(\"tslib\");\nfunction getCORSRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else if (!!root_1.root.XDomainRequest) {\n        return new root_1.root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root_1.root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                    //suppress exceptions\n                }\n            }\n            return new root_1.root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nfunction ajaxGet(url, headers) {\n    if (headers === void 0) { headers = null; }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nexports.ajaxGet = ajaxGet;\nfunction ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nexports.ajaxPost = ajaxPost;\nfunction ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nexports.ajaxDelete = ajaxDelete;\nfunction ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nexports.ajaxPut = ajaxPut;\nfunction ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\nexports.ajaxPatch = ajaxPatch;\nfunction ajaxGetJSON(url, headers) {\n    return new AjaxObservable({ method: 'GET', url: url, responseType: 'json', headers: headers })\n        .lift(new map_1.MapOperator(function (x, index) { return x.response; }, null));\n}\nexports.ajaxGetJSON = ajaxGetJSON;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = (function (_super) {\n    tslib_1.__extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        var _this = _super.call(this) || this;\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        _this.request = request;\n        return _this;\n    }\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    return AjaxObservable;\n}(Observable_1.Observable));\n/**\n * Creates an observable for an Ajax request with either a request object with\n * url, headers, etc or a string for a URL.\n *\n * @example\n * source = Rx.Observable.ajax('/products');\n * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n *\n * @param {string|Object} request Can be one of the following:\n *   A string of the URL to make the Ajax call.\n *   An object with the following properties\n *   - url: URL of the request\n *   - body: The body of the request\n *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n *   - async: Whether the request is async\n *   - headers: Optional headers\n *   - crossDomain: true if a cross domain request, else false\n *   - createXHR: a function to override if you need to use an alternate\n *   XMLHttpRequest implementation.\n *   - resultSelector: a function to use to alter the output value type of\n *   the Observable. Gets {@link AjaxResponse} as an argument.\n * @return {Observable} An observable sequence containing the XMLHttpRequest.\n * @static true\n * @name ajax\n * @owner Observable\n*/\nAjaxObservable.create = (function () {\n    var create = function (urlOrRequest) {\n        return new AjaxObservable(urlOrRequest);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n})();\nexports.AjaxObservable = AjaxObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxSubscriber = (function (_super) {\n    tslib_1.__extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        var _this = _super.call(this, destination) || this;\n        _this.request = request;\n        _this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = _this.serializeBody(request.body, request.headers['Content-Type']);\n        _this.send();\n        return _this;\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n        if (xhr === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return encodeURI(key) + \"=\" + encodeURI(body[key]); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root_1.root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber_1.Subscriber));\nexports.AjaxSubscriber = AjaxSubscriber;\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        switch (this.responseType) {\n            case 'json':\n                if ('response' in xhr) {\n                    //IE does not support json as responseType, parse it internally\n                    this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n                }\n                else {\n                    this.response = JSON.parse(xhr.responseText || 'null');\n                }\n                break;\n            case 'document':\n                this.response = xhr.responseXML;\n                break;\n            case 'text':\n            default:\n                this.response = ('response' in xhr) ? xhr.response : xhr.responseText;\n                break;\n        }\n    }\n    return AjaxResponse;\n}());\nexports.AjaxResponse = AjaxResponse;\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = (function (_super) {\n    tslib_1.__extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        var _this = _super.call(this, message) || this;\n        _this.xhr = xhr;\n        _this.request = request;\n        _this.name = 'AjaxError';\n        _this.status = xhr.status;\n        Object.setPrototypeOf(_this, AjaxError.prototype);\n        return _this;\n    }\n    return AjaxError;\n}(Error));\nexports.AjaxError = AjaxError;\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = (function (_super) {\n    tslib_1.__extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        var _this = _super.call(this, 'ajax timeout', xhr, request) || this;\n        Object.setPrototypeOf(_this, AjaxTimeoutError.prototype);\n        return _this;\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\nexports.AjaxTimeoutError = AjaxTimeoutError;\n//# sourceMappingURL=AjaxObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/AjaxObservable.js\n// module id = 78\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ForkJoinObservable_1 = require(\"./ForkJoinObservable\");\nexports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;\n//# sourceMappingURL=forkJoin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/forkJoin.js\n// module id = 79\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FromObservable_1 = require(\"./FromObservable\");\nexports.from = FromObservable_1.FromObservable.create;\n//# sourceMappingURL=from.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/from.js\n// module id = 80\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayObservable_1 = require(\"./ArrayObservable\");\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/of.js\n// module id = 81\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    var operator = new CatchOperator(selector);\n    var caught = this.lift(operator);\n    return (operator.caught = caught);\n}\nexports._catch = _catch;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    tslib_1.__extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        var _this = _super.call(this, destination) || this;\n        _this.selector = selector;\n        _this.caught = caught;\n        return _this;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=catch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/catch.js\n// module id = 82\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mergeAll_1 = require(\"./mergeAll\");\n/* tslint:enable:max-line-length */\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return this.lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatAll = concatAll;\n//# sourceMappingURL=concatAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/concatAll.js\n// module id = 83\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mergeMap_1 = require(\"./mergeMap\");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n    return this.lift(new mergeMap_1.MergeMapOperator(project, resultSelector, 1));\n}\nexports.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/concatMap.js\n// module id = 84\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nexports.distinctUntilChanged = distinctUntilChanged;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.hasKey = false;\n        if (typeof compare === 'function') {\n            _this.compare = compare;\n        }\n        return _this;\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/distinctUntilChanged.js\n// module id = 85\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n    return this.lift(new EveryOperator(predicate, thisArg, this));\n}\nexports.every = every;\nvar EveryOperator = (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar EverySubscriber = (function (_super) {\n    tslib_1.__extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.source = source;\n        _this.index = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=every.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/every.js\n// module id = 86\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/* tslint:enable:max-line-length */\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return this.lift(new FindValueOperator(predicate, this, false, thisArg));\n}\nexports.find = find;\nvar FindValueOperator = (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nexports.FindValueOperator = FindValueOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FindValueSubscriber = (function (_super) {\n    tslib_1.__extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.yieldIndex = yieldIndex;\n        _this.thisArg = thisArg;\n        _this.index = 0;\n        return _this;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        if (this.yieldIndex) {\n            this.notifyComplete(-1);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return FindValueSubscriber;\n}(Subscriber_1.Subscriber));\nexports.FindValueSubscriber = FindValueSubscriber;\n//# sourceMappingURL=find.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/find.js\n// module id = 87\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar EmptyError_1 = require(\"../util/EmptyError\");\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first(predicate, resultSelector, defaultValue) {\n    return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.first = first;\nvar FirstOperator = (function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = (function (_super) {\n    tslib_1.__extends(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.resultSelector = resultSelector;\n        _this.defaultValue = defaultValue;\n        _this.source = source;\n        _this.index = 0;\n        _this.hasCompleted = false;\n        _this._emitted = false;\n        return _this;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        if (!this._emitted) {\n            this._emitted = true;\n            destination.next(value);\n            destination.complete();\n            this.unsubscribe();\n            this.hasCompleted = true;\n        }\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n            this.unsubscribe();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError_1.EmptyError);\n            this.unsubscribe();\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=first.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/first.js\n// module id = 88\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar EmptyError_1 = require(\"../util/EmptyError\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last(predicate, resultSelector, defaultValue) {\n    return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.last = last;\nvar LastOperator = (function () {\n    function LastOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    LastOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return LastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar LastSubscriber = (function (_super) {\n    tslib_1.__extends(LastSubscriber, _super);\n    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.resultSelector = resultSelector;\n        _this.defaultValue = defaultValue;\n        _this.source = source;\n        _this.hasValue = false;\n        _this.index = 0;\n        if (typeof defaultValue !== 'undefined') {\n            _this.lastValue = defaultValue;\n            _this.hasValue = true;\n        }\n        return _this;\n    }\n    LastSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.lastValue = result;\n        this.hasValue = true;\n    };\n    LastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.hasValue) {\n            destination.next(this.lastValue);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return LastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=last.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/last.js\n// module id = 89\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent));\n}\nexports.mergeMapTo = mergeMapTo;\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nvar MergeMapToOperator = (function () {\n    function MergeMapToOperator(ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapToOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n    };\n    return MergeMapToOperator;\n}());\nexports.MergeMapToOperator = MergeMapToOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapToSubscriber = (function (_super) {\n    tslib_1.__extends(MergeMapToSubscriber, _super);\n    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this, destination) || this;\n        _this.ish = ish;\n        _this.resultSelector = resultSelector;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapToSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var resultSelector = this.resultSelector;\n            var index = this.index++;\n            var ish = this.ish;\n            var destination = this.destination;\n            this.active++;\n            this._innerSub(ish, destination, resultSelector, value, index);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapToSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    MergeMapToSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapToSubscriber = MergeMapToSubscriber;\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mergeMapTo.js\n// module id = 90\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar FromObservable_1 = require(\"../observable/FromObservable\");\nvar isArray_1 = require(\"../util/isArray\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore though of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nfunction onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return this.lift(new OnErrorResumeNextOperator(nextSources));\n}\nexports.onErrorResumeNext = onErrorResumeNext;\n/* tslint:enable:max-line-length */\nfunction onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    var source = null;\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nexports.onErrorResumeNextStatic = onErrorResumeNextStatic;\nvar OnErrorResumeNextOperator = (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = (function (_super) {\n    tslib_1.__extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.nextSources = nextSources;\n        return _this;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult_1.subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/onErrorResumeNext.js\n// module id = 91\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar isArray_1 = require(\"../util/isArray\");\nvar ArrayObservable_1 = require(\"../observable/ArrayObservable\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return this.lift.call(raceStatic.apply(void 0, [this].concat(observables)));\n}\nexports.race = race;\nfunction raceStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `race([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray_1.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());\n}\nexports.raceStatic = raceStatic;\nvar RaceOperator = (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexports.RaceOperator = RaceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RaceSubscriber = (function (_super) {\n    tslib_1.__extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasFirst = false;\n        _this.observables = [];\n        _this.subscriptions = [];\n        return _this;\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.RaceSubscriber = RaceSubscriber;\n//# sourceMappingURL=race.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/race.js\n// module id = 92\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nexports.defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector, config) {\n    if (config === void 0) { config = exports.defaultThrottleConfig; }\n    return this.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\nexports.throttle = throttle;\nvar ThrottleOperator = (function () {\n    function ThrottleOperator(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = (function (_super) {\n    tslib_1.__extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.durationSelector = durationSelector;\n        _this._leading = _leading;\n        _this._trailing = _trailing;\n        _this._hasTrailingValue = false;\n        return _this;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this._trailing) {\n                this._hasTrailingValue = true;\n                this._trailingValue = value;\n            }\n        }\n        else {\n            var duration = this.tryDurationSelector(value);\n            if (duration) {\n                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n            }\n            if (this._leading) {\n                this.destination.next(value);\n                if (this._trailing) {\n                    this._hasTrailingValue = true;\n                    this._trailingValue = value;\n                }\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    ThrottleSubscriber.prototype._unsubscribe = function () {\n        var _a = this, throttled = _a.throttled, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue, _trailing = _a._trailing;\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n    };\n    ThrottleSubscriber.prototype._sendTrailing = function () {\n        var _a = this, destination = _a.destination, throttled = _a.throttled, _trailing = _a._trailing, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue;\n        if (throttled && _trailing && _hasTrailingValue) {\n            destination.next(_trailingValue);\n            this._trailingValue = null;\n            this._hasTrailingValue = false;\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=throttle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/throttle.js\n// module id = 93\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar async_1 = require(\"../scheduler/async\");\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nfunction timeInterval(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new TimeIntervalOperator(scheduler));\n}\nexports.timeInterval = timeInterval;\nvar TimeInterval = (function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\nexports.TimeInterval = TimeInterval;\nvar TimeIntervalOperator = (function () {\n    function TimeIntervalOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimeIntervalOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n    };\n    return TimeIntervalOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeIntervalSubscriber = (function (_super) {\n    tslib_1.__extends(TimeIntervalSubscriber, _super);\n    function TimeIntervalSubscriber(destination, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.lastTime = 0;\n        _this.lastTime = scheduler.now();\n        return _this;\n    }\n    TimeIntervalSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        var span = now - this.lastTime;\n        this.lastTime = now;\n        this.destination.next(new TimeInterval(value, span));\n    };\n    return TimeIntervalSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeInterval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/timeInterval.js\n// module id = 94\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar async_1 = require(\"../scheduler/async\");\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nfunction timestamp(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new TimestampOperator(scheduler));\n}\nexports.timestamp = timestamp;\nvar Timestamp = (function () {\n    function Timestamp(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n    return Timestamp;\n}());\nexports.Timestamp = Timestamp;\nvar TimestampOperator = (function () {\n    function TimestampOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimestampOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new TimestampSubscriber(observer, this.scheduler));\n    };\n    return TimestampOperator;\n}());\nvar TimestampSubscriber = (function (_super) {\n    tslib_1.__extends(TimestampSubscriber, _super);\n    function TimestampSubscriber(destination, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    TimestampSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        this.destination.next(new Timestamp(value, now));\n    };\n    return TimestampSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timestamp.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/timestamp.js\n// module id = 95\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar AsyncAction_1 = require(\"./AsyncAction\");\nvar AsyncScheduler_1 = require(\"./AsyncScheduler\");\nvar VirtualTimeScheduler = (function (_super) {\n    tslib_1.__extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }\n        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\n        _this.maxFrames = maxFrames;\n        _this.frame = 0;\n        _this.index = -1;\n        return _this;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return VirtualTimeScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nVirtualTimeScheduler.frameTimeFactor = 10;\nexports.VirtualTimeScheduler = VirtualTimeScheduler;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar VirtualAction = (function (_super) {\n    tslib_1.__extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) { index = scheduler.index += 1; }\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.index = index;\n        _this.active = true;\n        _this.index = scheduler.index = index;\n        return _this;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        // If an action is rescheduled, we save allocations by mutating its state,\n        // pushing it to the end of the scheduler queue, and recycling the action.\n        // But since the VirtualTimeScheduler is used for testing, VirtualActions\n        // must be immutable so they can be inspected later.\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction_1.AsyncAction));\nexports.VirtualAction = VirtualAction;\n//# sourceMappingURL=VirtualTimeScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/VirtualTimeScheduler.js\n// module id = 96\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsapAction_1 = require(\"./AsapAction\");\nvar AsapScheduler_1 = require(\"./AsapScheduler\");\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * @example <caption>Compare async and asap scheduler</caption>\n *\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n *\n * @static true\n * @name asap\n * @owner Scheduler\n */\nexports.asap = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);\n//# sourceMappingURL=asap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/asap.js\n// module id = 97\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueueAction_1 = require(\"./QueueAction\");\nvar QueueScheduler_1 = require(\"./QueueScheduler\");\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nexports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n//# sourceMappingURL=queue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/queue.js\n// module id = 98\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SubscriptionLog = (function () {\n    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {\n        if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }\n        this.subscribedFrame = subscribedFrame;\n        this.unsubscribedFrame = unsubscribedFrame;\n    }\n    return SubscriptionLog;\n}());\nexports.SubscriptionLog = SubscriptionLog;\n//# sourceMappingURL=SubscriptionLog.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/testing/SubscriptionLog.js\n// module id = 100\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SubscriptionLog_1 = require(\"./SubscriptionLog\");\nvar SubscriptionLoggable = (function () {\n    function SubscriptionLoggable() {\n        this.subscriptions = [];\n    }\n    SubscriptionLoggable.prototype.logSubscribedFrame = function () {\n        this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));\n        return this.subscriptions.length - 1;\n    };\n    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {\n        var subscriptionLogs = this.subscriptions;\n        var oldSubscriptionLog = subscriptionLogs[index];\n        subscriptionLogs[index] = new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\n    };\n    return SubscriptionLoggable;\n}());\nexports.SubscriptionLoggable = SubscriptionLoggable;\n//# sourceMappingURL=SubscriptionLoggable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/testing/SubscriptionLoggable.js\n// module id = 101\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nvar TimeoutError = (function (_super) {\n    tslib_1.__extends(TimeoutError, _super);\n    function TimeoutError() {\n        var _this = _super.call(this, 'Timeout has occurred') || this;\n        Object.setPrototypeOf(_this, TimeoutError.prototype);\n        return _this;\n    }\n    return TimeoutError;\n}(Error));\nexports.TimeoutError = TimeoutError;\n//# sourceMappingURL=TimeoutError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/TimeoutError.js\n// module id = 102\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction applyMixins(derivedCtor, baseCtors) {\n    for (var i = 0, len = baseCtors.length; i < len; i++) {\n        var baseCtor = baseCtors[i];\n        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {\n            var name_1 = propertyKeys[j];\n            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];\n        }\n    }\n}\nexports.applyMixins = applyMixins;\n//# sourceMappingURL=applyMixins.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/applyMixins.js\n// module id = 103\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/noop.js\n// module id = 105\n// module chunks = 0 1 2","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 106\n// module chunks = 0 1 2","import { Injectable } from '@angular/core';\r\n\r\nexport interface axisCalculatorParams {\r\n  accuracy: {\r\n    min: number,\r\n    max: number,\r\n    default: number,\r\n  },\r\n\r\n  maxSum: {\r\n    min: number,\r\n    max: number,\r\n    default: {\r\n      min: number,\r\n      max: number,\r\n    },\r\n    initValue: number,\r\n  },\r\n\r\n  maxWave: {\r\n    min: number,\r\n    max: number,\r\n    default: {\r\n      min: number,\r\n      max: number,\r\n    },\r\n    initR: number,\r\n    initQS: number;\r\n  },\r\n}\r\n\r\n@Injectable ()\r\nexport class AxisCalculator {\r\n  private static _instance: AxisCalculator;\r\n  readonly settings: axisCalculatorParams;\r\n\r\n  accuracy: number;\r\n  maxSum: {\r\n    min: number,\r\n    max: number,\r\n  };\r\n  maxWave: {\r\n    min: number,\r\n    max: number,\r\n  };\r\n\r\n  constructor ( settings: axisCalculatorParams ) {\r\n    this.settings = settings;\r\n    this.accuracy = settings.accuracy.default;\r\n    this.maxSum = settings.maxSum.default;\r\n    this.maxWave = settings.maxWave.default;\r\n\r\n    if (!AxisCalculator._instance) {\r\n      AxisCalculator._instance = this;\r\n    }\r\n\r\n    return AxisCalculator._instance;\r\n  }\r\n\r\n  setAccuracy (accuracy: number): AxisCalculator {\r\n    this.accuracy = accuracy;\r\n    return this;\r\n  }\r\n\r\n  setMaxSum (min: number, max: number): AxisCalculator {\r\n    this.maxSum = {\r\n      min,\r\n      max\r\n    };\r\n    return this;\r\n  }\r\n\r\n  setMaxWave (max: number): AxisCalculator {\r\n    this.maxWave = {\r\n      min: this.maxWave.min,\r\n      max\r\n    };\r\n    return this;\r\n  }\r\n\r\n  countAngle (sumI: number, sumIII: number): number {\r\n    let tanAlfa: number = ((sumIII / sumI) - Math.cos (120 * Math.PI / 180)) / Math.sin (120 * Math.PI / 180);\r\n    let alfa: number = Math.atan (tanAlfa) * 180 / Math.PI;\r\n\r\n    if (sumI < 0) {\r\n      if (alfa <= 0) {\r\n        alfa = alfa + 180;\r\n      }\r\n      else {\r\n        alfa = alfa - 180;\r\n      }\r\n    }\r\n\r\n    return Number (alfa.toFixed(this.accuracy));\r\n  }\r\n\r\n  countSumsThenAngle (rI: number, qsI: number, rIII: number, qsIII: number) {\r\n    let sumI: number = rI + qsI;\r\n    let sumIII: number = rIII + qsIII;\r\n\r\n    return this.countAngle (sumI, sumIII);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/axis-heart/services/axis_calculator.service.ts","import { Injectable } from '@angular/core';\r\n\r\nexport interface arrhythmiaServiceSettings {\r\n  coefficient: {\r\n    min: number,\r\n    max: number,\r\n    init: number\r\n  },\r\n  difference: {\r\n    min: number,\r\n    max: number,\r\n    init: number\r\n  },\r\n  accuracy: {\r\n    min: number,\r\n    max: number,\r\n    init: number\r\n  },\r\n  interval: {\r\n    min: number,\r\n    max: number,\r\n    init: number\r\n  }\r\n  moreThenOnly: boolean\r\n}\r\n\r\n@Injectable ()\r\nexport class ArrhythmiaService {\r\n  settings: arrhythmiaServiceSettings;\r\n  coefficient: number;\r\n  difference: number;\r\n  accuracy: number;\r\n  moreThenOnly: boolean;\r\n\r\n  constructor (data: arrhythmiaServiceSettings) {\r\n    this.settings = data;\r\n    this.coefficient = this.settings.coefficient.init;\r\n    this.difference = this.settings.difference.init;\r\n    this.accuracy = this.settings.accuracy.init;\r\n    this.moreThenOnly = this.settings.moreThenOnly;\r\n  }\r\n\r\n  countProportion (pp1: number, pp2: number): number {\r\n    let maxPP: number = pp1 >= pp2 ? pp1 : pp2;\r\n    let minPP: number = pp1 < pp2 ? pp1 : pp2;\r\n    let delta: number = (maxPP - minPP) / minPP * 100;\r\n\r\n    return Number (delta.toFixed(this.accuracy));\r\n  }\r\n\r\n  countDifferenceTime (pp1: number, pp2: number): number {\r\n    let maxPP: number = pp1 >= pp2 ? pp1 : pp2;\r\n    let minPP: number = pp1 < pp2 ? pp1 : pp2;\r\n    let delta: number = maxPP - minPP;\r\n\r\n    return Number (delta.toFixed(this.accuracy));\r\n  }\r\n\r\n  isArrhythmia (delta: number, baseDelta: number): boolean {\r\n    let result: boolean;\r\n\r\n    if (this.moreThenOnly) {\r\n      result = delta > baseDelta\r\n    } else {\r\n      result = delta >= baseDelta\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/is-arrhythmia/services/arrhythmia.service.ts","// angular\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n// app\r\nimport { FaqComponent } from \"../shared/faq.component/faq.component\";\r\nimport { BtnPlus } from \"../shared/btn_plus.component/btn_plus.component\";\r\nimport { SumFieldComponent } from \"../shared/sum_field.component/sum_field.component\";\r\nimport { SettingsFieldComponent } from \"../shared/settings_field.component/settings_field.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BtnPlus,\r\n    SumFieldComponent,\r\n    SettingsFieldComponent,\r\n    FaqComponent\r\n  ],\r\n  exports: [\r\n    BtnPlus,\r\n    SumFieldComponent,\r\n    SettingsFieldComponent,\r\n    FaqComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n})\r\n\r\nexport class SharedModule {}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/shared/index.ts","import { Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'btn-plus',\r\n  template: require('./btn_plus.component.html')\r\n})\r\n\r\nexport class BtnPlus {\r\n  @Input() input: FormControl;\r\n  @Input() step: number;\r\n  private _loop: any = null;\r\n  private _delayBeforeLoop: any = null;\r\n\r\n  constructor () {}\r\n\r\n  increment (): void {\r\n    this.input.patchValue (this.input.value + this.step);\r\n  }\r\n\r\n  incrementStart (event: MouseEvent): void {\r\n    event.preventDefault ();\r\n\r\n    this.increment ();\r\n\r\n    if (this._delayBeforeLoop) {\r\n      clearTimeout (this._delayBeforeLoop);\r\n    }\r\n\r\n    if (this._loop) {\r\n      clearInterval (this._loop);\r\n    }\r\n\r\n    this._delayBeforeLoop = setTimeout (() => {\r\n      this._loop = setInterval (() => {\r\n        this.increment ();\r\n      }, 25);\r\n\r\n    }, 250);\r\n  }\r\n\r\n  incrementStop (event: MouseEvent): void {\r\n    event.preventDefault ();\r\n\r\n    if (this._delayBeforeLoop) {\r\n      clearTimeout (this._delayBeforeLoop);\r\n    }\r\n\r\n    if (this._loop) {\r\n      clearInterval (this._loop);\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/shared/btn_plus.component/btn_plus.component.ts","// angular\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n// components\r\nimport { BtnPlus } from \"../btn_plus.component/btn_plus.component\";\r\n\r\n@Component ({\r\n  selector: 'settings-field',\r\n  template: require('./settings_field.component.html')\r\n})\r\n\r\nexport class SettingsFieldComponent {\r\n  @Input() input: FormControl;\r\n  @Input() step: number;\r\n  @Input() maximum: number;\r\n  @Input() minimum: number;\r\n  @Input() value: number;\r\n  @Input() data: {[s: string]: any};\r\n\r\n  constructor () {}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/shared/settings_field.component/settings_field.component.ts","// angular\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n// components\r\nimport { BtnPlus } from \"../btn_plus.component/btn_plus.component\";\r\n\r\n@Component ({\r\n  selector: 'sum-field',\r\n  template: require('./sum_field.component.html')\r\n})\r\n\r\nexport class SumFieldComponent {\r\n  @Input() input: FormControl;\r\n  @Input() step: number;\r\n  @Input() maximum: number;\r\n  @Input() minimum: number;\r\n  @Input() data: {[s: string]: string};\r\n\r\n  constructor () {}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/shared/sum_field.component/sum_field.component.ts","module.exports = \"<span class=\\\"\\\" (mousedown)=\\\"this.incrementStart ($event)\\\" (mouseup)=\\\"this.incrementStop ($event)\\\" (mouseleave)=\\\"this.incrementStop ($event)\\\">{{ step >= 0 ? '+' : '-' }}</span>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/btn_plus.component/btn_plus.component.html\n// module id = 132\n// module chunks = 0 1 2","module.exports = \"<h2>FAQ</h2> {{ this.data }}\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/faq.component/faq.component.html\n// module id = 133\n// module chunks = 0 1 2","module.exports = \"<label class=\\\"form-label\\\"> <span [innerHTML]=\\\"data.title\\\"></span><br> <btn-plus [input]=\\\"input\\\" [step]=\\\"step\\\"></btn-plus> <input name=\\\"{{ this.data.name }}\\\" class=\\\"\\\" type=\\\"number\\\" [formControl]=\\\"input\\\"> <btn-plus [input]=\\\"input\\\" [step]=\\\"-1 * step\\\"></btn-plus><br> <output class=\\\"\\\"> {{ this.data.output }}{{ this.value }} </output> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('required')\\\">Поле не заполено</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidNumber') && !input.hasError('required')\\\">Введите число</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidMinimum')\\\">Введите {{ this.minimum }} или больше</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidMaximum')\\\">Введите {{ this.maximum }} или меньше</span> </label>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/settings_field.component/settings_field.component.html\n// module id = 134\n// module chunks = 0 1 2","module.exports = \"<label class=\\\"form-label\\\"> <span [innerHTML]=\\\"data.title\\\"></span><br> <btn-plus [input]=\\\"input\\\" [step]=\\\"step\\\"></btn-plus> <input name=\\\"{{ this.data.name }}\\\" class=\\\"\\\" type=\\\"number\\\" [formControl]=\\\"input\\\"> <btn-plus [input]=\\\"input\\\" [step]=\\\"-1 * step\\\"></btn-plus> <br/> <output *ngIf=\\\"input.errors\\\"> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('required')\\\">Поле не заполено</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidNumber') && !input.hasError('required')\\\">Введите число</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidMinimum')\\\">Введите {{ this.minimum }} или больше</span> <span class=\\\"input-error\\\" *ngIf=\\\"input.hasError('invalidMaximum')\\\">Введите {{ this.maximum }} или меньше</span> </output> </label>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/sum_field.component/sum_field.component.html\n// module id = 135\n// module chunks = 0 1 2","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 136\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:no-unused-variable */\nrequire(\"tslib\");\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nvar Subject_1 = require(\"./Subject\");\nexports.Subject = Subject_1.Subject;\nexports.AnonymousSubject = Subject_1.AnonymousSubject;\n/* tslint:enable:no-unused-variable */\nvar Observable_1 = require(\"./Observable\");\nexports.Observable = Observable_1.Observable;\n// statics\n/* tslint:disable:no-use-before-declare */\nrequire(\"./add/observable/bindCallback\");\nrequire(\"./add/observable/bindNodeCallback\");\nrequire(\"./add/observable/combineLatest\");\nrequire(\"./add/observable/concat\");\nrequire(\"./add/observable/defer\");\nrequire(\"./add/observable/empty\");\nrequire(\"./add/observable/forkJoin\");\nrequire(\"./add/observable/from\");\nrequire(\"./add/observable/fromEvent\");\nrequire(\"./add/observable/fromEventPattern\");\nrequire(\"./add/observable/fromPromise\");\nrequire(\"./add/observable/generate\");\nrequire(\"./add/observable/if\");\nrequire(\"./add/observable/interval\");\nrequire(\"./add/observable/merge\");\nrequire(\"./add/observable/race\");\nrequire(\"./add/observable/never\");\nrequire(\"./add/observable/of\");\nrequire(\"./add/observable/onErrorResumeNext\");\nrequire(\"./add/observable/pairs\");\nrequire(\"./add/observable/range\");\nrequire(\"./add/observable/using\");\nrequire(\"./add/observable/throw\");\nrequire(\"./add/observable/timer\");\nrequire(\"./add/observable/zip\");\n//dom\nrequire(\"./add/observable/dom/ajax\");\nrequire(\"./add/observable/dom/webSocket\");\n//operators\nrequire(\"./add/operator/buffer\");\nrequire(\"./add/operator/bufferCount\");\nrequire(\"./add/operator/bufferTime\");\nrequire(\"./add/operator/bufferToggle\");\nrequire(\"./add/operator/bufferWhen\");\nrequire(\"./add/operator/catch\");\nrequire(\"./add/operator/combineAll\");\nrequire(\"./add/operator/combineLatest\");\nrequire(\"./add/operator/concat\");\nrequire(\"./add/operator/concatAll\");\nrequire(\"./add/operator/concatMap\");\nrequire(\"./add/operator/concatMapTo\");\nrequire(\"./add/operator/count\");\nrequire(\"./add/operator/dematerialize\");\nrequire(\"./add/operator/debounce\");\nrequire(\"./add/operator/debounceTime\");\nrequire(\"./add/operator/defaultIfEmpty\");\nrequire(\"./add/operator/delay\");\nrequire(\"./add/operator/delayWhen\");\nrequire(\"./add/operator/distinct\");\nrequire(\"./add/operator/distinctUntilChanged\");\nrequire(\"./add/operator/distinctUntilKeyChanged\");\nrequire(\"./add/operator/do\");\nrequire(\"./add/operator/exhaust\");\nrequire(\"./add/operator/exhaustMap\");\nrequire(\"./add/operator/expand\");\nrequire(\"./add/operator/elementAt\");\nrequire(\"./add/operator/filter\");\nrequire(\"./add/operator/finally\");\nrequire(\"./add/operator/find\");\nrequire(\"./add/operator/findIndex\");\nrequire(\"./add/operator/first\");\nrequire(\"./add/operator/groupBy\");\nrequire(\"./add/operator/ignoreElements\");\nrequire(\"./add/operator/isEmpty\");\nrequire(\"./add/operator/audit\");\nrequire(\"./add/operator/auditTime\");\nrequire(\"./add/operator/last\");\nrequire(\"./add/operator/let\");\nrequire(\"./add/operator/every\");\nrequire(\"./add/operator/map\");\nrequire(\"./add/operator/mapTo\");\nrequire(\"./add/operator/materialize\");\nrequire(\"./add/operator/max\");\nrequire(\"./add/operator/merge\");\nrequire(\"./add/operator/mergeAll\");\nrequire(\"./add/operator/mergeMap\");\nrequire(\"./add/operator/mergeMapTo\");\nrequire(\"./add/operator/mergeScan\");\nrequire(\"./add/operator/min\");\nrequire(\"./add/operator/multicast\");\nrequire(\"./add/operator/observeOn\");\nrequire(\"./add/operator/onErrorResumeNext\");\nrequire(\"./add/operator/pairwise\");\nrequire(\"./add/operator/partition\");\nrequire(\"./add/operator/pluck\");\nrequire(\"./add/operator/publish\");\nrequire(\"./add/operator/publishBehavior\");\nrequire(\"./add/operator/publishReplay\");\nrequire(\"./add/operator/publishLast\");\nrequire(\"./add/operator/race\");\nrequire(\"./add/operator/reduce\");\nrequire(\"./add/operator/repeat\");\nrequire(\"./add/operator/repeatWhen\");\nrequire(\"./add/operator/retry\");\nrequire(\"./add/operator/retryWhen\");\nrequire(\"./add/operator/sample\");\nrequire(\"./add/operator/sampleTime\");\nrequire(\"./add/operator/scan\");\nrequire(\"./add/operator/sequenceEqual\");\nrequire(\"./add/operator/share\");\nrequire(\"./add/operator/shareReplay\");\nrequire(\"./add/operator/single\");\nrequire(\"./add/operator/skip\");\nrequire(\"./add/operator/skipLast\");\nrequire(\"./add/operator/skipUntil\");\nrequire(\"./add/operator/skipWhile\");\nrequire(\"./add/operator/startWith\");\nrequire(\"./add/operator/subscribeOn\");\nrequire(\"./add/operator/switch\");\nrequire(\"./add/operator/switchMap\");\nrequire(\"./add/operator/switchMapTo\");\nrequire(\"./add/operator/take\");\nrequire(\"./add/operator/takeLast\");\nrequire(\"./add/operator/takeUntil\");\nrequire(\"./add/operator/takeWhile\");\nrequire(\"./add/operator/throttle\");\nrequire(\"./add/operator/throttleTime\");\nrequire(\"./add/operator/timeInterval\");\nrequire(\"./add/operator/timeout\");\nrequire(\"./add/operator/timeoutWith\");\nrequire(\"./add/operator/timestamp\");\nrequire(\"./add/operator/toArray\");\nrequire(\"./add/operator/toPromise\");\nrequire(\"./add/operator/window\");\nrequire(\"./add/operator/windowCount\");\nrequire(\"./add/operator/windowTime\");\nrequire(\"./add/operator/windowToggle\");\nrequire(\"./add/operator/windowWhen\");\nrequire(\"./add/operator/withLatestFrom\");\nrequire(\"./add/operator/zip\");\nrequire(\"./add/operator/zipAll\");\nvar Subscription_1 = require(\"./Subscription\");\nexports.Subscription = Subscription_1.Subscription;\nvar Subscriber_1 = require(\"./Subscriber\");\nexports.Subscriber = Subscriber_1.Subscriber;\nvar AsyncSubject_1 = require(\"./AsyncSubject\");\nexports.AsyncSubject = AsyncSubject_1.AsyncSubject;\nvar ReplaySubject_1 = require(\"./ReplaySubject\");\nexports.ReplaySubject = ReplaySubject_1.ReplaySubject;\nvar BehaviorSubject_1 = require(\"./BehaviorSubject\");\nexports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;\nvar ConnectableObservable_1 = require(\"./observable/ConnectableObservable\");\nexports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;\nvar Notification_1 = require(\"./Notification\");\nexports.Notification = Notification_1.Notification;\nvar EmptyError_1 = require(\"./util/EmptyError\");\nexports.EmptyError = EmptyError_1.EmptyError;\nvar ArgumentOutOfRangeError_1 = require(\"./util/ArgumentOutOfRangeError\");\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\nvar ObjectUnsubscribedError_1 = require(\"./util/ObjectUnsubscribedError\");\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;\nvar TimeoutError_1 = require(\"./util/TimeoutError\");\nexports.TimeoutError = TimeoutError_1.TimeoutError;\nvar UnsubscriptionError_1 = require(\"./util/UnsubscriptionError\");\nexports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;\nvar timeInterval_1 = require(\"./operator/timeInterval\");\nexports.TimeInterval = timeInterval_1.TimeInterval;\nvar timestamp_1 = require(\"./operator/timestamp\");\nexports.Timestamp = timestamp_1.Timestamp;\nvar TestScheduler_1 = require(\"./testing/TestScheduler\");\nexports.TestScheduler = TestScheduler_1.TestScheduler;\nvar VirtualTimeScheduler_1 = require(\"./scheduler/VirtualTimeScheduler\");\nexports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;\nvar AjaxObservable_1 = require(\"./observable/dom/AjaxObservable\");\nexports.AjaxResponse = AjaxObservable_1.AjaxResponse;\nexports.AjaxError = AjaxObservable_1.AjaxError;\nexports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;\nvar asap_1 = require(\"./scheduler/asap\");\nvar async_1 = require(\"./scheduler/async\");\nvar queue_1 = require(\"./scheduler/queue\");\nvar animationFrame_1 = require(\"./scheduler/animationFrame\");\nvar rxSubscriber_1 = require(\"./symbol/rxSubscriber\");\nvar iterator_1 = require(\"./symbol/iterator\");\nvar observable_1 = require(\"./symbol/observable\");\n/* tslint:enable:no-unused-variable */\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nvar Scheduler = {\n    asap: asap_1.asap,\n    queue: queue_1.queue,\n    animationFrame: animationFrame_1.animationFrame,\n    async: async_1.async\n};\nexports.Scheduler = Scheduler;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nvar Symbol = {\n    rxSubscriber: rxSubscriber_1.rxSubscriber,\n    observable: observable_1.observable,\n    iterator: iterator_1.iterator\n};\nexports.Symbol = Symbol;\n//# sourceMappingURL=Rx.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Rx.js\n// module id = 137\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    return Scheduler;\n}());\nScheduler.now = Date.now ? Date.now : function () { return +new Date(); };\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Scheduler.js\n// module id = 138\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar bindCallback_1 = require(\"../../observable/bindCallback\");\nObservable_1.Observable.bindCallback = bindCallback_1.bindCallback;\n//# sourceMappingURL=bindCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/bindCallback.js\n// module id = 139\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar bindNodeCallback_1 = require(\"../../observable/bindNodeCallback\");\nObservable_1.Observable.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/bindNodeCallback.js\n// module id = 140\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar combineLatest_1 = require(\"../../observable/combineLatest\");\nObservable_1.Observable.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/combineLatest.js\n// module id = 141\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar concat_1 = require(\"../../observable/concat\");\nObservable_1.Observable.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/concat.js\n// module id = 142\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar defer_1 = require(\"../../observable/defer\");\nObservable_1.Observable.defer = defer_1.defer;\n//# sourceMappingURL=defer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/defer.js\n// module id = 143\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../../Observable\");\nvar ajax_1 = require(\"../../../observable/dom/ajax\");\nObservable_1.Observable.ajax = ajax_1.ajax;\n//# sourceMappingURL=ajax.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/dom/ajax.js\n// module id = 144\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../../Observable\");\nvar webSocket_1 = require(\"../../../observable/dom/webSocket\");\nObservable_1.Observable.webSocket = webSocket_1.webSocket;\n//# sourceMappingURL=webSocket.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/dom/webSocket.js\n// module id = 145\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar empty_1 = require(\"../../observable/empty\");\nObservable_1.Observable.empty = empty_1.empty;\n//# sourceMappingURL=empty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/empty.js\n// module id = 146\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar forkJoin_1 = require(\"../../observable/forkJoin\");\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/forkJoin.js\n// module id = 147\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar from_1 = require(\"../../observable/from\");\nObservable_1.Observable.from = from_1.from;\n//# sourceMappingURL=from.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/from.js\n// module id = 148\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar fromEvent_1 = require(\"../../observable/fromEvent\");\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/fromEvent.js\n// module id = 149\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar fromEventPattern_1 = require(\"../../observable/fromEventPattern\");\nObservable_1.Observable.fromEventPattern = fromEventPattern_1.fromEventPattern;\n//# sourceMappingURL=fromEventPattern.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/fromEventPattern.js\n// module id = 150\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar fromPromise_1 = require(\"../../observable/fromPromise\");\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n//# sourceMappingURL=fromPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/fromPromise.js\n// module id = 151\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar GenerateObservable_1 = require(\"../../observable/GenerateObservable\");\nObservable_1.Observable.generate = GenerateObservable_1.GenerateObservable.create;\n//# sourceMappingURL=generate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/generate.js\n// module id = 152\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar if_1 = require(\"../../observable/if\");\nObservable_1.Observable.if = if_1._if;\n//# sourceMappingURL=if.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/if.js\n// module id = 153\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar interval_1 = require(\"../../observable/interval\");\nObservable_1.Observable.interval = interval_1.interval;\n//# sourceMappingURL=interval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/interval.js\n// module id = 154\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar merge_1 = require(\"../../observable/merge\");\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/merge.js\n// module id = 155\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar never_1 = require(\"../../observable/never\");\nObservable_1.Observable.never = never_1.never;\n//# sourceMappingURL=never.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/never.js\n// module id = 156\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar of_1 = require(\"../../observable/of\");\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/of.js\n// module id = 157\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar onErrorResumeNext_1 = require(\"../../operator/onErrorResumeNext\");\nObservable_1.Observable.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNextStatic;\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/onErrorResumeNext.js\n// module id = 158\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar pairs_1 = require(\"../../observable/pairs\");\nObservable_1.Observable.pairs = pairs_1.pairs;\n//# sourceMappingURL=pairs.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/pairs.js\n// module id = 159\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar race_1 = require(\"../../operator/race\");\nObservable_1.Observable.race = race_1.raceStatic;\n//# sourceMappingURL=race.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/race.js\n// module id = 160\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar range_1 = require(\"../../observable/range\");\nObservable_1.Observable.range = range_1.range;\n//# sourceMappingURL=range.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/range.js\n// module id = 161\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar throw_1 = require(\"../../observable/throw\");\nObservable_1.Observable.throw = throw_1._throw;\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/throw.js\n// module id = 162\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar timer_1 = require(\"../../observable/timer\");\nObservable_1.Observable.timer = timer_1.timer;\n//# sourceMappingURL=timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/timer.js\n// module id = 163\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar using_1 = require(\"../../observable/using\");\nObservable_1.Observable.using = using_1.using;\n//# sourceMappingURL=using.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/using.js\n// module id = 164\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar zip_1 = require(\"../../observable/zip\");\nObservable_1.Observable.zip = zip_1.zip;\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/zip.js\n// module id = 165\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar audit_1 = require(\"../../operator/audit\");\nObservable_1.Observable.prototype.audit = audit_1.audit;\n//# sourceMappingURL=audit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/audit.js\n// module id = 166\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar auditTime_1 = require(\"../../operator/auditTime\");\nObservable_1.Observable.prototype.auditTime = auditTime_1.auditTime;\n//# sourceMappingURL=auditTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/auditTime.js\n// module id = 167\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar buffer_1 = require(\"../../operator/buffer\");\nObservable_1.Observable.prototype.buffer = buffer_1.buffer;\n//# sourceMappingURL=buffer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/buffer.js\n// module id = 168\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar bufferCount_1 = require(\"../../operator/bufferCount\");\nObservable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;\n//# sourceMappingURL=bufferCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/bufferCount.js\n// module id = 169\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar bufferTime_1 = require(\"../../operator/bufferTime\");\nObservable_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;\n//# sourceMappingURL=bufferTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/bufferTime.js\n// module id = 170\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar bufferToggle_1 = require(\"../../operator/bufferToggle\");\nObservable_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;\n//# sourceMappingURL=bufferToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/bufferToggle.js\n// module id = 171\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar bufferWhen_1 = require(\"../../operator/bufferWhen\");\nObservable_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;\n//# sourceMappingURL=bufferWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/bufferWhen.js\n// module id = 172\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar catch_1 = require(\"../../operator/catch\");\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/catch.js\n// module id = 173\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar combineAll_1 = require(\"../../operator/combineAll\");\nObservable_1.Observable.prototype.combineAll = combineAll_1.combineAll;\n//# sourceMappingURL=combineAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/combineAll.js\n// module id = 174\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar combineLatest_1 = require(\"../../operator/combineLatest\");\nObservable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/combineLatest.js\n// module id = 175\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar concat_1 = require(\"../../operator/concat\");\nObservable_1.Observable.prototype.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/concat.js\n// module id = 176\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar concatAll_1 = require(\"../../operator/concatAll\");\nObservable_1.Observable.prototype.concatAll = concatAll_1.concatAll;\n//# sourceMappingURL=concatAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/concatAll.js\n// module id = 177\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar concatMap_1 = require(\"../../operator/concatMap\");\nObservable_1.Observable.prototype.concatMap = concatMap_1.concatMap;\n//# sourceMappingURL=concatMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/concatMap.js\n// module id = 178\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar concatMapTo_1 = require(\"../../operator/concatMapTo\");\nObservable_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/concatMapTo.js\n// module id = 179\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar count_1 = require(\"../../operator/count\");\nObservable_1.Observable.prototype.count = count_1.count;\n//# sourceMappingURL=count.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/count.js\n// module id = 180\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar debounce_1 = require(\"../../operator/debounce\");\nObservable_1.Observable.prototype.debounce = debounce_1.debounce;\n//# sourceMappingURL=debounce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/debounce.js\n// module id = 181\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar debounceTime_1 = require(\"../../operator/debounceTime\");\nObservable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n//# sourceMappingURL=debounceTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/debounceTime.js\n// module id = 182\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar defaultIfEmpty_1 = require(\"../../operator/defaultIfEmpty\");\nObservable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/defaultIfEmpty.js\n// module id = 183\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar delay_1 = require(\"../../operator/delay\");\nObservable_1.Observable.prototype.delay = delay_1.delay;\n//# sourceMappingURL=delay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/delay.js\n// module id = 184\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar delayWhen_1 = require(\"../../operator/delayWhen\");\nObservable_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;\n//# sourceMappingURL=delayWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/delayWhen.js\n// module id = 185\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar dematerialize_1 = require(\"../../operator/dematerialize\");\nObservable_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;\n//# sourceMappingURL=dematerialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/dematerialize.js\n// module id = 186\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar distinct_1 = require(\"../../operator/distinct\");\nObservable_1.Observable.prototype.distinct = distinct_1.distinct;\n//# sourceMappingURL=distinct.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/distinct.js\n// module id = 187\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar distinctUntilChanged_1 = require(\"../../operator/distinctUntilChanged\");\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/distinctUntilChanged.js\n// module id = 188\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar distinctUntilKeyChanged_1 = require(\"../../operator/distinctUntilKeyChanged\");\nObservable_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/distinctUntilKeyChanged.js\n// module id = 189\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar do_1 = require(\"../../operator/do\");\nObservable_1.Observable.prototype.do = do_1._do;\nObservable_1.Observable.prototype._do = do_1._do;\n//# sourceMappingURL=do.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/do.js\n// module id = 190\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar elementAt_1 = require(\"../../operator/elementAt\");\nObservable_1.Observable.prototype.elementAt = elementAt_1.elementAt;\n//# sourceMappingURL=elementAt.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/elementAt.js\n// module id = 191\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar every_1 = require(\"../../operator/every\");\nObservable_1.Observable.prototype.every = every_1.every;\n//# sourceMappingURL=every.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/every.js\n// module id = 192\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar exhaust_1 = require(\"../../operator/exhaust\");\nObservable_1.Observable.prototype.exhaust = exhaust_1.exhaust;\n//# sourceMappingURL=exhaust.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/exhaust.js\n// module id = 193\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar exhaustMap_1 = require(\"../../operator/exhaustMap\");\nObservable_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;\n//# sourceMappingURL=exhaustMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/exhaustMap.js\n// module id = 194\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar expand_1 = require(\"../../operator/expand\");\nObservable_1.Observable.prototype.expand = expand_1.expand;\n//# sourceMappingURL=expand.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/expand.js\n// module id = 195\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar filter_1 = require(\"../../operator/filter\");\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/filter.js\n// module id = 196\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar finally_1 = require(\"../../operator/finally\");\nObservable_1.Observable.prototype.finally = finally_1._finally;\nObservable_1.Observable.prototype._finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/finally.js\n// module id = 197\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar find_1 = require(\"../../operator/find\");\nObservable_1.Observable.prototype.find = find_1.find;\n//# sourceMappingURL=find.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/find.js\n// module id = 198\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar findIndex_1 = require(\"../../operator/findIndex\");\nObservable_1.Observable.prototype.findIndex = findIndex_1.findIndex;\n//# sourceMappingURL=findIndex.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/findIndex.js\n// module id = 199\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar first_1 = require(\"../../operator/first\");\nObservable_1.Observable.prototype.first = first_1.first;\n//# sourceMappingURL=first.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/first.js\n// module id = 200\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar groupBy_1 = require(\"../../operator/groupBy\");\nObservable_1.Observable.prototype.groupBy = groupBy_1.groupBy;\n//# sourceMappingURL=groupBy.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/groupBy.js\n// module id = 201\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar ignoreElements_1 = require(\"../../operator/ignoreElements\");\nObservable_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;\n//# sourceMappingURL=ignoreElements.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/ignoreElements.js\n// module id = 202\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar isEmpty_1 = require(\"../../operator/isEmpty\");\nObservable_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;\n//# sourceMappingURL=isEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/isEmpty.js\n// module id = 203\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar last_1 = require(\"../../operator/last\");\nObservable_1.Observable.prototype.last = last_1.last;\n//# sourceMappingURL=last.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/last.js\n// module id = 204\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar let_1 = require(\"../../operator/let\");\nObservable_1.Observable.prototype.let = let_1.letProto;\nObservable_1.Observable.prototype.letBind = let_1.letProto;\n//# sourceMappingURL=let.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/let.js\n// module id = 205\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar map_1 = require(\"../../operator/map\");\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/map.js\n// module id = 206\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar mapTo_1 = require(\"../../operator/mapTo\");\nObservable_1.Observable.prototype.mapTo = mapTo_1.mapTo;\n//# sourceMappingURL=mapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mapTo.js\n// module id = 207\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar materialize_1 = require(\"../../operator/materialize\");\nObservable_1.Observable.prototype.materialize = materialize_1.materialize;\n//# sourceMappingURL=materialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/materialize.js\n// module id = 208\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar max_1 = require(\"../../operator/max\");\nObservable_1.Observable.prototype.max = max_1.max;\n//# sourceMappingURL=max.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/max.js\n// module id = 209\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar merge_1 = require(\"../../operator/merge\");\nObservable_1.Observable.prototype.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/merge.js\n// module id = 210\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar mergeAll_1 = require(\"../../operator/mergeAll\");\nObservable_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;\n//# sourceMappingURL=mergeAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mergeAll.js\n// module id = 211\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar mergeMap_1 = require(\"../../operator/mergeMap\");\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mergeMap.js\n// module id = 212\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar mergeMapTo_1 = require(\"../../operator/mergeMapTo\");\nObservable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;\nObservable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mergeMapTo.js\n// module id = 213\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar mergeScan_1 = require(\"../../operator/mergeScan\");\nObservable_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;\n//# sourceMappingURL=mergeScan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mergeScan.js\n// module id = 214\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar min_1 = require(\"../../operator/min\");\nObservable_1.Observable.prototype.min = min_1.min;\n//# sourceMappingURL=min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/min.js\n// module id = 215\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar multicast_1 = require(\"../../operator/multicast\");\nObservable_1.Observable.prototype.multicast = multicast_1.multicast;\n//# sourceMappingURL=multicast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/multicast.js\n// module id = 216\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar observeOn_1 = require(\"../../operator/observeOn\");\nObservable_1.Observable.prototype.observeOn = observeOn_1.observeOn;\n//# sourceMappingURL=observeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/observeOn.js\n// module id = 217\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar onErrorResumeNext_1 = require(\"../../operator/onErrorResumeNext\");\nObservable_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/onErrorResumeNext.js\n// module id = 218\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar pairwise_1 = require(\"../../operator/pairwise\");\nObservable_1.Observable.prototype.pairwise = pairwise_1.pairwise;\n//# sourceMappingURL=pairwise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/pairwise.js\n// module id = 219\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar partition_1 = require(\"../../operator/partition\");\nObservable_1.Observable.prototype.partition = partition_1.partition;\n//# sourceMappingURL=partition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/partition.js\n// module id = 220\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar pluck_1 = require(\"../../operator/pluck\");\nObservable_1.Observable.prototype.pluck = pluck_1.pluck;\n//# sourceMappingURL=pluck.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/pluck.js\n// module id = 221\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar publish_1 = require(\"../../operator/publish\");\nObservable_1.Observable.prototype.publish = publish_1.publish;\n//# sourceMappingURL=publish.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/publish.js\n// module id = 222\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar publishBehavior_1 = require(\"../../operator/publishBehavior\");\nObservable_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/publishBehavior.js\n// module id = 223\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar publishLast_1 = require(\"../../operator/publishLast\");\nObservable_1.Observable.prototype.publishLast = publishLast_1.publishLast;\n//# sourceMappingURL=publishLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/publishLast.js\n// module id = 224\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar publishReplay_1 = require(\"../../operator/publishReplay\");\nObservable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/publishReplay.js\n// module id = 225\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar race_1 = require(\"../../operator/race\");\nObservable_1.Observable.prototype.race = race_1.race;\n//# sourceMappingURL=race.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/race.js\n// module id = 226\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar reduce_1 = require(\"../../operator/reduce\");\nObservable_1.Observable.prototype.reduce = reduce_1.reduce;\n//# sourceMappingURL=reduce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/reduce.js\n// module id = 227\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar repeat_1 = require(\"../../operator/repeat\");\nObservable_1.Observable.prototype.repeat = repeat_1.repeat;\n//# sourceMappingURL=repeat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/repeat.js\n// module id = 228\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar repeatWhen_1 = require(\"../../operator/repeatWhen\");\nObservable_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/repeatWhen.js\n// module id = 229\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar retry_1 = require(\"../../operator/retry\");\nObservable_1.Observable.prototype.retry = retry_1.retry;\n//# sourceMappingURL=retry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/retry.js\n// module id = 230\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar retryWhen_1 = require(\"../../operator/retryWhen\");\nObservable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;\n//# sourceMappingURL=retryWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/retryWhen.js\n// module id = 231\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar sample_1 = require(\"../../operator/sample\");\nObservable_1.Observable.prototype.sample = sample_1.sample;\n//# sourceMappingURL=sample.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/sample.js\n// module id = 232\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar sampleTime_1 = require(\"../../operator/sampleTime\");\nObservable_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;\n//# sourceMappingURL=sampleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/sampleTime.js\n// module id = 233\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar scan_1 = require(\"../../operator/scan\");\nObservable_1.Observable.prototype.scan = scan_1.scan;\n//# sourceMappingURL=scan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/scan.js\n// module id = 234\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar sequenceEqual_1 = require(\"../../operator/sequenceEqual\");\nObservable_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;\n//# sourceMappingURL=sequenceEqual.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/sequenceEqual.js\n// module id = 235\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar share_1 = require(\"../../operator/share\");\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/share.js\n// module id = 236\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar shareReplay_1 = require(\"../../operator/shareReplay\");\nObservable_1.Observable.prototype.shareReplay = shareReplay_1.shareReplay;\n//# sourceMappingURL=shareReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/shareReplay.js\n// module id = 237\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar single_1 = require(\"../../operator/single\");\nObservable_1.Observable.prototype.single = single_1.single;\n//# sourceMappingURL=single.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/single.js\n// module id = 238\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar skip_1 = require(\"../../operator/skip\");\nObservable_1.Observable.prototype.skip = skip_1.skip;\n//# sourceMappingURL=skip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/skip.js\n// module id = 239\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar skipLast_1 = require(\"../../operator/skipLast\");\nObservable_1.Observable.prototype.skipLast = skipLast_1.skipLast;\n//# sourceMappingURL=skipLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/skipLast.js\n// module id = 240\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar skipUntil_1 = require(\"../../operator/skipUntil\");\nObservable_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;\n//# sourceMappingURL=skipUntil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/skipUntil.js\n// module id = 241\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar skipWhile_1 = require(\"../../operator/skipWhile\");\nObservable_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;\n//# sourceMappingURL=skipWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/skipWhile.js\n// module id = 242\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar startWith_1 = require(\"../../operator/startWith\");\nObservable_1.Observable.prototype.startWith = startWith_1.startWith;\n//# sourceMappingURL=startWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/startWith.js\n// module id = 243\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar subscribeOn_1 = require(\"../../operator/subscribeOn\");\nObservable_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/subscribeOn.js\n// module id = 244\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar switch_1 = require(\"../../operator/switch\");\nObservable_1.Observable.prototype.switch = switch_1._switch;\nObservable_1.Observable.prototype._switch = switch_1._switch;\n//# sourceMappingURL=switch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/switch.js\n// module id = 245\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar switchMap_1 = require(\"../../operator/switchMap\");\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/switchMap.js\n// module id = 246\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar switchMapTo_1 = require(\"../../operator/switchMapTo\");\nObservable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;\n//# sourceMappingURL=switchMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/switchMapTo.js\n// module id = 247\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar take_1 = require(\"../../operator/take\");\nObservable_1.Observable.prototype.take = take_1.take;\n//# sourceMappingURL=take.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/take.js\n// module id = 248\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar takeLast_1 = require(\"../../operator/takeLast\");\nObservable_1.Observable.prototype.takeLast = takeLast_1.takeLast;\n//# sourceMappingURL=takeLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/takeLast.js\n// module id = 249\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar takeUntil_1 = require(\"../../operator/takeUntil\");\nObservable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\n//# sourceMappingURL=takeUntil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/takeUntil.js\n// module id = 250\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar takeWhile_1 = require(\"../../operator/takeWhile\");\nObservable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\n//# sourceMappingURL=takeWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/takeWhile.js\n// module id = 251\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar throttle_1 = require(\"../../operator/throttle\");\nObservable_1.Observable.prototype.throttle = throttle_1.throttle;\n//# sourceMappingURL=throttle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/throttle.js\n// module id = 252\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar throttleTime_1 = require(\"../../operator/throttleTime\");\nObservable_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;\n//# sourceMappingURL=throttleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/throttleTime.js\n// module id = 253\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar timeInterval_1 = require(\"../../operator/timeInterval\");\nObservable_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;\n//# sourceMappingURL=timeInterval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/timeInterval.js\n// module id = 254\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar timeout_1 = require(\"../../operator/timeout\");\nObservable_1.Observable.prototype.timeout = timeout_1.timeout;\n//# sourceMappingURL=timeout.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/timeout.js\n// module id = 255\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar timeoutWith_1 = require(\"../../operator/timeoutWith\");\nObservable_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;\n//# sourceMappingURL=timeoutWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/timeoutWith.js\n// module id = 256\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar timestamp_1 = require(\"../../operator/timestamp\");\nObservable_1.Observable.prototype.timestamp = timestamp_1.timestamp;\n//# sourceMappingURL=timestamp.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/timestamp.js\n// module id = 257\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar toArray_1 = require(\"../../operator/toArray\");\nObservable_1.Observable.prototype.toArray = toArray_1.toArray;\n//# sourceMappingURL=toArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/toArray.js\n// module id = 258\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar toPromise_1 = require(\"../../operator/toPromise\");\nObservable_1.Observable.prototype.toPromise = toPromise_1.toPromise;\n//# sourceMappingURL=toPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/toPromise.js\n// module id = 259\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar window_1 = require(\"../../operator/window\");\nObservable_1.Observable.prototype.window = window_1.window;\n//# sourceMappingURL=window.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/window.js\n// module id = 260\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar windowCount_1 = require(\"../../operator/windowCount\");\nObservable_1.Observable.prototype.windowCount = windowCount_1.windowCount;\n//# sourceMappingURL=windowCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/windowCount.js\n// module id = 261\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar windowTime_1 = require(\"../../operator/windowTime\");\nObservable_1.Observable.prototype.windowTime = windowTime_1.windowTime;\n//# sourceMappingURL=windowTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/windowTime.js\n// module id = 262\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar windowToggle_1 = require(\"../../operator/windowToggle\");\nObservable_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;\n//# sourceMappingURL=windowToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/windowToggle.js\n// module id = 263\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar windowWhen_1 = require(\"../../operator/windowWhen\");\nObservable_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;\n//# sourceMappingURL=windowWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/windowWhen.js\n// module id = 264\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar withLatestFrom_1 = require(\"../../operator/withLatestFrom\");\nObservable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/withLatestFrom.js\n// module id = 265\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar zip_1 = require(\"../../operator/zip\");\nObservable_1.Observable.prototype.zip = zip_1.zipProto;\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/zip.js\n// module id = 266\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar zipAll_1 = require(\"../../operator/zipAll\");\nObservable_1.Observable.prototype.zipAll = zipAll_1.zipAll;\n//# sourceMappingURL=zipAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/zipAll.js\n// module id = 267\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar ScalarObservable_1 = require(\"./ScalarObservable\");\nvar EmptyObservable_1 = require(\"./EmptyObservable\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable = (function (_super) {\n    tslib_1.__extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.arrayLike = arrayLike;\n        _this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            _this._isScalar = true;\n            _this.value = arrayLike[0];\n        }\n        return _this;\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_1.Observable));\nexports.ArrayLikeObservable = ArrayLikeObservable;\n//# sourceMappingURL=ArrayLikeObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/ArrayLikeObservable.js\n// module id = 268\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\nvar AsyncSubject_1 = require(\"../AsyncSubject\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundCallbackObservable = (function (_super) {\n    tslib_1.__extends(BoundCallbackObservable, _super);\n    function BoundCallbackObservable(callbackFunc, selector, args, context, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.callbackFunc = callbackFunc;\n        _this.selector = selector;\n        _this.args = args;\n        _this.context = context;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a callback API to a function that returns an Observable.\n     *\n     * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n     * it will return a function `g` that when called as `g(x)` will output an\n     * Observable.</span>\n     *\n     * `bindCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, but the\n     * last parameter must be a callback function that `func` calls when it is\n     * done.\n     *\n     * The output of `bindCallback` is a function that takes the same parameters\n     * as `func`, except the last one (the callback). When the output function\n     * is called with arguments, it will return an Observable. If `func` function\n     * calls its callback with one argument, the Observable will emit that value.\n     * If on the other hand callback is called with multiple values, resulting\n     * Observable will emit an array with these arguments.\n     *\n     * It is very important to remember, that input function `func` is not called\n     * when output function is, but rather when Observable returned by output\n     * function is subscribed. This means if `func` makes AJAX request, that request\n     * will be made every time someone subscribes to resulting Observable, but not before.\n     *\n     * Optionally, selector function can be passed to `bindObservable`. That function\n     * takes the same arguments as callback, and returns value\n     * that will be emitted by Observable instead of callback parameters themselves.\n     * Even though by default multiple arguments passed to callback appear in the stream as array,\n     * selector function will be called with arguments directly, just as callback would.\n     * This means you can imagine default selector (when one is not provided explicitly)\n     * as function that aggregates all its arguments into array, or simply returns first argument,\n     * if there is only one.\n     *\n     * Last optional parameter - {@link Scheduler} - can be used to control when call\n     * to `func` happens after someone subscribes to Observable, as well as when results\n     * passed to callback will be emitted. By default subscription to Observable calls `func`\n     * synchronously, but using `Scheduler.async` as last parameter will defer call to input function,\n     * just like wrapping that call in `setTimeout` with time `0` would. So if you use async Scheduler\n     * and call `subscribe` on output Observable, all function calls that are currently executing,\n     * will end before `func` is invoked.\n     *\n     * When it comes to emitting results passed to callback, by default they are emitted\n     * immediately after `func` invokes callback. In particular, if callback is called synchronously,\n     * then subscription to resulting Observable will call `next` function synchronously as well.\n     * If you want to defer that call, using `Scheduler.async` will, again, do the job.\n     * This means that by using `Scheduler.async` you can, in a sense, ensure that `func`\n     * always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n     *\n     * Note that Observable created by output function will always emit only one value\n     * and then complete right after. Even if `func` calls callback multiple times, values from\n     * second and following calls will never appear in the stream. If you need to\n     * listen for multiple calls, you probably want to use {@link fromEvent} or\n     * {@link fromEventPattern} instead.\n     *\n     * If `func` depends on some context (`this` property), that context will be set\n     * to the same context that output function has at call time. In particular, if `func`\n     * is called as method of some object, in order to preserve proper behaviour,\n     * it is recommended to set context of output function to that object as well,\n     * provided `func` is not already bound.\n     *\n     * If input function calls its callback in \"node style\" (i.e. first argument to callback is\n     * optional error parameter signaling whether call failed or not), {@link bindNodeCallback}\n     * provides convenient error handling and probably is a better choice.\n     * `bindCallback` will treat such functions without any difference and error parameter\n     * (whether passed or not) will always be interpreted as regular callback argument.\n     *\n     *\n     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n     * // Suppose we have jQuery.getJSON('/my/url', callback)\n     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\n     * var result = getJSONAsObservable('/my/url');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     *\n     * @example <caption>Receive array of arguments passed to callback</caption>\n     * someFunction((a, b, c) => {\n     *   console.log(a); // 5\n     *   console.log(b); // 'some string'\n     *   console.log(c); // {someProperty: 'someValue'}\n     * });\n     *\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction);\n     * boundSomeFunction().subscribe(values => {\n     *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n     * });\n     *\n     *\n     * @example <caption>Use bindCallback with selector function</caption>\n     * someFunction((a, b, c) => {\n     *   console.log(a); // 'a'\n     *   console.log(b); // 'b'\n     *   console.log(c); // 'c'\n     * });\n     *\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction, (a, b, c) => a + b + c);\n     * boundSomeFunction().subscribe(value => {\n     *   console.log(value) // 'abc'\n     * });\n     *\n     *\n     * @example <caption>Compare behaviour with and without async Scheduler</caption>\n     * function iCallMyCallbackSynchronously(cb) {\n     *   cb();\n     * }\n     *\n     * const boundSyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously);\n     * const boundAsyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n     *\n     * boundSyncFn().subscribe(() => console.log('I was sync!'));\n     * boundAsyncFn().subscribe(() => console.log('I was async!'));\n     * console.log('This happened...');\n     *\n     * // Logs:\n     * // I was sync!\n     * // This happened...\n     * // I was async!\n     *\n     *\n     * @example <caption>Use bindCallback on object method</caption>\n     * const boundMethod = Rx.Observable.bindCallback(someObject.methodWithCallback);\n     * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n     * .subscribe(subscriber);\n     *\n     *\n     * @see {@link bindNodeCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func Function with a callback as the last parameter.\n     * @param {function} [selector] A function which takes the arguments from the\n     * callback and maps those to a value to emit on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the callback would deliver.\n     * @static true\n     * @name bindCallback\n     * @owner Observable\n     */\n    BoundCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new BoundCallbackObservable(func, selector, args, this, scheduler);\n        };\n    };\n    BoundCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\n        }\n    };\n    BoundCallbackObservable.dispatch = function (state) {\n        var self = this;\n        var source = state.source, subscriber = state.subscriber, context = state.context;\n        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;\n        var subject = source.subject;\n        if (!subject) {\n            subject = source.subject = new AsyncSubject_1.AsyncSubject();\n            var handler = function handlerFn() {\n                var innerArgs = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    innerArgs[_i] = arguments[_i];\n                }\n                var source = handlerFn.source;\n                var selector = source.selector, subject = source.subject;\n                if (selector) {\n                    var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                    if (result_2 === errorObject_1.errorObject) {\n                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                    }\n                    else {\n                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                    }\n                }\n                else {\n                    var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n                }\n            };\n            // use named function to pass values in without closure\n            handler.source = source;\n            var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));\n            if (result === errorObject_1.errorObject) {\n                subject.error(errorObject_1.errorObject.e);\n            }\n        }\n        self.add(subject.subscribe(subscriber));\n    };\n    return BoundCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundCallbackObservable = BoundCallbackObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundCallbackObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/BoundCallbackObservable.js\n// module id = 269\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\nvar AsyncSubject_1 = require(\"../AsyncSubject\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundNodeCallbackObservable = (function (_super) {\n    tslib_1.__extends(BoundNodeCallbackObservable, _super);\n    function BoundNodeCallbackObservable(callbackFunc, selector, args, context, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.callbackFunc = callbackFunc;\n        _this.selector = selector;\n        _this.args = args;\n        _this.context = context;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a Node.js-style callback API to a function that returns an\n     * Observable.\n     *\n     * <span class=\"informal\">It's just like {@link bindCallback}, but the\n     * callback is expected to be of type `callback(error, result)`.</span>\n     *\n     * `bindNodeCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, but the\n     * last parameter must be a callback function that `func` calls when it is\n     * done. The callback function is expected to follow Node.js conventions,\n     * where the first argument to the callback is an error object, signaling\n     * whether call was successful. If that object is passed to callback, it means\n     * something went wrong.\n     *\n     * The output of `bindNodeCallback` is a function that takes the same\n     * parameters as `func`, except the last one (the callback). When the output\n     * function is called with arguments, it will return an Observable.\n     * If `func` calls its callback with error parameter present, Observable will\n     * error with that value as well. If error parameter is not passed, Observable will emit\n     * second parameter. If there are more parameters (third and so on),\n     * Observable will emit an array with all arguments, except first error argument.\n     *\n     * Optionally `bindNodeCallback` accepts selector function, which allows you to\n     * make resulting Observable emit value computed by selector, instead of regular\n     * callback arguments. It works similarly to {@link bindCallback} selector, but\n     * Node.js-style error argument will never be passed to that function.\n     *\n     * Note that `func` will not be called at the same time output function is,\n     * but rather whenever resulting Observable is subscribed. By default call to\n     * `func` will happen synchronously after subscription, but that can be changed\n     * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n     * can also control when values from callback will be emitted by Observable.\n     * To find out more, check out documentation for {@link bindCallback}, where\n     * Scheduler works exactly the same.\n     *\n     * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n     * of returned function, when it is called.\n     *\n     * After Observable emits value, it will complete immediately. This means\n     * even if `func` calls callback again, values from second and consecutive\n     * calls will never appear on the stream. If you need to handle functions\n     * that call callbacks multiple times, check out {@link fromEvent} or\n     * {@link fromEventPattern} instead.\n     *\n     * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n     * \"Node.js-style\" callbacks are just a convention, so if you write for\n     * browsers or any other environment and API you use implements that callback style,\n     * `bindNodeCallback` can be safely used on that API functions as well.\n     *\n     * Remember that Error object passed to callback does not have to be an instance\n     * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n     * Error parameter of callback function is interpreted as \"present\", when value\n     * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n     * string or boolean `true`. In all of these cases resulting Observable would error\n     * with that value. This means usually regular style callbacks will fail very often when\n     * `bindNodeCallback` is used. If your Observable errors much more often then you\n     * would expect, check if callback really is called in Node.js-style and, if not,\n     * switch to {@link bindCallback} instead.\n     *\n     * Note that even if error parameter is technically present in callback, but its value\n     * is falsy, it still won't appear in array emitted by Observable or in selector function.\n     *\n     *\n     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n     * import * as fs from 'fs';\n     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\n     * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     *\n     * @example <caption>Use on function calling callback with multiple arguments</caption>\n     * someFunction((err, a, b) => {\n     *   console.log(err); // null\n     *   console.log(a); // 5\n     *   console.log(b); // \"some string\"\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n     * boundSomeFunction()\n     * .subscribe(value => {\n     *   console.log(value); // [5, \"some string\"]\n     * });\n     *\n     *\n     * @example <caption>Use with selector function</caption>\n     * someFunction((err, a, b) => {\n     *   console.log(err); // undefined\n     *   console.log(a); // \"abc\"\n     *   console.log(b); // \"DEF\"\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction, (a, b) => a + b);\n     * boundSomeFunction()\n     * .subscribe(value => {\n     *   console.log(value); // \"abcDEF\"\n     * });\n     *\n     *\n     * @example <caption>Use on function calling callback in regular style</caption>\n     * someFunction(a => {\n     *   console.log(a); // 5\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n     * boundSomeFunction()\n     * .subscribe(\n     *   value => {}             // never gets called\n     *   err => console.log(err) // 5\n     *);\n     *\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func Function with a Node.js-style callback as the last parameter.\n     * @param {function} [selector] A function which takes the arguments from the\n     * callback and maps those to a value to emit on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the Node.js callback would\n     * deliver.\n     * @static true\n     * @name bindNodeCallback\n     * @owner Observable\n     */\n    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new BoundNodeCallbackObservable(func, selector, args, this, scheduler);\n        };\n    };\n    BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    var err = innerArgs.shift();\n                    if (err) {\n                        subject.error(err);\n                    }\n                    else if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\n        }\n    };\n    return BoundNodeCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundNodeCallbackObservable = BoundNodeCallbackObservable;\nfunction dispatch(state) {\n    var self = this;\n    var source = state.source, subscriber = state.subscriber, context = state.context;\n    // XXX: cast to `any` to access to the private field in `source`.\n    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;\n    var subject = source.subject;\n    if (!subject) {\n        subject = source.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function handlerFn() {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var source = handlerFn.source;\n            var selector = source.selector, subject = source.subject;\n            var err = innerArgs.shift();\n            if (err) {\n                self.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n            }\n            else if (selector) {\n                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                if (result_2 === errorObject_1.errorObject) {\n                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                }\n                else {\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                }\n            }\n            else {\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        // use named function to pass values in without closure\n        handler.source = source;\n        var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));\n        if (result === errorObject_1.errorObject) {\n            self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n        }\n    }\n    self.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundNodeCallbackObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/BoundNodeCallbackObservable.js\n// module id = 270\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = (function (_super) {\n    tslib_1.__extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        var _this = _super.call(this) || this;\n        _this.observableFactory = observableFactory;\n        return _this;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * // Results in the following behavior:\n     * // If the result of Math.random() is greater than 0.5 it will listen\n     * // for clicks anywhere on the \"document\"; when document is clicked it\n     * // will log a MouseEvent object to the console. If the result is less\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n     *\n     * @see {@link create}\n     *\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable_1.Observable));\nexports.DeferObservable = DeferObservable;\nvar DeferSubscriber = (function (_super) {\n    tslib_1.__extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        var _this = _super.call(this, destination) || this;\n        _this.factory = factory;\n        _this.tryDefer();\n        return _this;\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=DeferObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/DeferObservable.js\n// module id = 271\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ErrorObservable = (function (_super) {\n    tslib_1.__extends(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.error = error;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        subscriber.syncErrorThrowable = true;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable_1.Observable));\nexports.ErrorObservable = ErrorObservable;\n//# sourceMappingURL=ErrorObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/ErrorObservable.js\n// module id = 272\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar EmptyObservable_1 = require(\"./EmptyObservable\");\nvar isArray_1 = require(\"../util/isArray\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ForkJoinObservable = (function (_super) {\n    tslib_1.__extends(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        var _this = _super.call(this) || this;\n        _this.sources = sources;\n        _this.resultSelector = resultSelector;\n        return _this;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * @param sources\n     * @return {any}\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray_1.isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable_1.Observable));\nexports.ForkJoinObservable = ForkJoinObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = (function (_super) {\n    tslib_1.__extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.sources = sources;\n        _this.resultSelector = resultSelector;\n        _this.completed = 0;\n        _this.haveValues = 0;\n        var len = sources.length;\n        _this.total = len;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(_this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                _this.add(innerSubscription);\n            }\n        }\n        return _this;\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=ForkJoinObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/ForkJoinObservable.js\n// module id = 273\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar isFunction_1 = require(\"../util/isFunction\");\nvar errorObject_1 = require(\"../util/errorObject\");\nvar Subscription_1 = require(\"../Subscription\");\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable = (function (_super) {\n    tslib_1.__extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        var _this = _super.call(this) || this;\n        _this.sourceObj = sourceObj;\n        _this.eventName = eventName;\n        _this.selector = selector;\n        _this.options = options;\n        return _this;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * Creates an Observable by attaching an event listener to an \"event target\",\n     * which may be an object with `addEventListener` and `removeEventListener`,\n     * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the\n     * DOM, or an HTMLCollection from the DOM. The event handler is attached when\n     * the output Observable is subscribed, and removed when the Subscription is\n     * unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console everytime a click\n     * // occurs on the document.\n     *\n     * @see {@link from}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOMElement, event target, Node.js\n     * EventEmitter, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction_1.isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n            if (result === errorObject_1.errorObject) {\n                subscriber.error(errorObject_1.errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable_1.Observable));\nexports.FromEventObservable = FromEventObservable;\n//# sourceMappingURL=FromEventObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/FromEventObservable.js\n// module id = 274\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar isFunction_1 = require(\"../util/isFunction\");\nvar Observable_1 = require(\"../Observable\");\nvar Subscription_1 = require(\"../Subscription\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventPatternObservable = (function (_super) {\n    tslib_1.__extends(FromEventPatternObservable, _super);\n    function FromEventPatternObservable(addHandler, removeHandler, selector) {\n        var _this = _super.call(this) || this;\n        _this.addHandler = addHandler;\n        _this.removeHandler = removeHandler;\n        _this.selector = selector;\n        return _this;\n    }\n    /**\n     * Creates an Observable from an API based on addHandler/removeHandler\n     * functions.\n     *\n     * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n     * Observable.</span>\n     *\n     * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n     *\n     * Creates an Observable by using the `addHandler` and `removeHandler`\n     * functions to add and remove the handlers, with an optional selector\n     * function to project the event arguments to a result. The `addHandler` is\n     * called when the output Observable is subscribed, and `removeHandler` is\n     * called when the Subscription is unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * function addClickHandler(handler) {\n     *   document.addEventListener('click', handler);\n     * }\n     *\n     * function removeClickHandler(handler) {\n     *   document.removeEventListener('click', handler);\n     * }\n     *\n     * var clicks = Rx.Observable.fromEventPattern(\n     *   addClickHandler,\n     *   removeClickHandler\n     * );\n     * clicks.subscribe(x => console.log(x));\n     *\n     * @see {@link from}\n     * @see {@link fromEvent}\n     *\n     * @param {function(handler: Function): any} addHandler A function that takes\n     * a `handler` function as argument and attaches it somehow to the actual\n     * source of events.\n     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n     * takes a `handler` function as argument and removes it in case it was\n     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n     * removeHandler function will forward it.\n     * @param {function(...args: any): T} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEventPattern\n     * @owner Observable\n     */\n    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\n        return new FromEventPatternObservable(addHandler, removeHandler, selector);\n    };\n    FromEventPatternObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var removeHandler = this.removeHandler;\n        var handler = !!this.selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            _this._callSelector(subscriber, args);\n        } : function (e) { subscriber.next(e); };\n        var retValue = this._callAddHandler(handler, subscriber);\n        if (!isFunction_1.isFunction(removeHandler)) {\n            return;\n        }\n        subscriber.add(new Subscription_1.Subscription(function () {\n            //TODO: determine whether or not to forward to error handler\n            removeHandler(handler, retValue);\n        }));\n    };\n    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {\n        try {\n            var result = this.selector.apply(this, args);\n            subscriber.next(result);\n        }\n        catch (e) {\n            subscriber.error(e);\n        }\n    };\n    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {\n        try {\n            return this.addHandler(handler) || null;\n        }\n        catch (e) {\n            errorSubscriber.error(e);\n        }\n    };\n    return FromEventPatternObservable;\n}(Observable_1.Observable));\nexports.FromEventPatternObservable = FromEventPatternObservable;\n//# sourceMappingURL=FromEventPatternObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/FromEventPatternObservable.js\n// module id = 275\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\nvar selfSelector = function (value) { return value; };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar GenerateObservable = (function (_super) {\n    tslib_1.__extends(GenerateObservable, _super);\n    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.initialState = initialState;\n        _this.condition = condition;\n        _this.iterate = iterate;\n        _this.resultSelector = resultSelector;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n        if (arguments.length == 1) {\n            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);\n        }\n        if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {\n            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);\n        }\n        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);\n    };\n    GenerateObservable.prototype._subscribe = function (subscriber) {\n        var state = this.initialState;\n        if (this.scheduler) {\n            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {\n                subscriber: subscriber,\n                iterate: this.iterate,\n                condition: this.condition,\n                resultSelector: this.resultSelector,\n                state: state\n            });\n        }\n        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        } while (true);\n    };\n    GenerateObservable.dispatch = function (state) {\n        var subscriber = state.subscriber, condition = state.condition;\n        if (subscriber.closed) {\n            return;\n        }\n        if (state.needIterate) {\n            try {\n                state.state = state.iterate(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        }\n        else {\n            state.needIterate = true;\n        }\n        if (condition) {\n            var conditionResult = void 0;\n            try {\n                conditionResult = condition(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            if (!conditionResult) {\n                subscriber.complete();\n                return;\n            }\n            if (subscriber.closed) {\n                return;\n            }\n        }\n        var value;\n        try {\n            value = state.resultSelector(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return;\n        }\n        if (subscriber.closed) {\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        return this.schedule(state);\n    };\n    return GenerateObservable;\n}(Observable_1.Observable));\nexports.GenerateObservable = GenerateObservable;\n//# sourceMappingURL=GenerateObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/GenerateObservable.js\n// module id = 276\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IfObservable = (function (_super) {\n    tslib_1.__extends(IfObservable, _super);\n    function IfObservable(condition, thenSource, elseSource) {\n        var _this = _super.call(this) || this;\n        _this.condition = condition;\n        _this.thenSource = thenSource;\n        _this.elseSource = elseSource;\n        return _this;\n    }\n    IfObservable.create = function (condition, thenSource, elseSource) {\n        return new IfObservable(condition, thenSource, elseSource);\n    };\n    IfObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        return new IfSubscriber(subscriber, condition, thenSource, elseSource);\n    };\n    return IfObservable;\n}(Observable_1.Observable));\nexports.IfObservable = IfObservable;\nvar IfSubscriber = (function (_super) {\n    tslib_1.__extends(IfSubscriber, _super);\n    function IfSubscriber(destination, condition, thenSource, elseSource) {\n        var _this = _super.call(this, destination) || this;\n        _this.condition = condition;\n        _this.thenSource = thenSource;\n        _this.elseSource = elseSource;\n        _this.tryIf();\n        return _this;\n    }\n    IfSubscriber.prototype.tryIf = function () {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        var result;\n        try {\n            result = condition();\n            var source = result ? thenSource : elseSource;\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n            else {\n                this._complete();\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return IfSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=IfObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/IfObservable.js\n// module id = 277\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar isNumeric_1 = require(\"../util/isNumeric\");\nvar Observable_1 = require(\"../Observable\");\nvar async_1 = require(\"../scheduler/async\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IntervalObservable = (function (_super) {\n    tslib_1.__extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        var _this = _super.call(this) || this;\n        _this.period = period;\n        _this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\n            _this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = async_1.async;\n        }\n        return _this;\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified IScheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` IScheduler to provide a notion of time, but you may pass any\n     * IScheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable_1.Observable));\nexports.IntervalObservable = IntervalObservable;\n//# sourceMappingURL=IntervalObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/IntervalObservable.js\n// module id = 278\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar root_1 = require(\"../util/root\");\nvar Observable_1 = require(\"../Observable\");\nvar iterator_1 = require(\"../symbol/iterator\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = (function (_super) {\n    tslib_1.__extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        _this.iterator = getIterator(iterator);\n        return _this;\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_1.Observable));\nexports.IteratorObservable = IteratorObservable;\nvar StringIterator = (function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = str.length; }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator_1.iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = (function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = toLength(arr); }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator_1.iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[iterator_1.iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator_1.iterator]();\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root_1.root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/IteratorObservable.js\n// module id = 279\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar noop_1 = require(\"../util/noop\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar NeverObservable = (function (_super) {\n    tslib_1.__extends(NeverObservable, _super);\n    function NeverObservable() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please note\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    NeverObservable.prototype._subscribe = function (subscriber) {\n        noop_1.noop();\n    };\n    return NeverObservable;\n}(Observable_1.Observable));\nexports.NeverObservable = NeverObservable;\n//# sourceMappingURL=NeverObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/NeverObservable.js\n// module id = 280\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nfunction dispatch(state) {\n    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;\n    if (index === length) {\n        subscriber.complete();\n        return;\n    }\n    var key = keys[index];\n    subscriber.next([key, obj[key]]);\n    state.index = index + 1;\n    this.schedule(state);\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PairsObservable = (function (_super) {\n    tslib_1.__extends(PairsObservable, _super);\n    function PairsObservable(obj, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.obj = obj;\n        _this.scheduler = scheduler;\n        _this.keys = Object.keys(obj);\n        return _this;\n    }\n    /**\n     * Convert an object into an observable sequence of [key, value] pairs\n     * using an optional IScheduler to enumerate the object.\n     *\n     * @example <caption>Converts a javascript object to an Observable</caption>\n     * var obj = {\n     *   foo: 42,\n     *   bar: 56,\n     *   baz: 78\n     * };\n     *\n     * var source = Rx.Observable.pairs(obj);\n     *\n     * var subscription = source.subscribe(\n     *   function (x) {\n     *     console.log('Next: %s', x);\n     *   },\n     *   function (err) {\n     *     console.log('Error: %s', err);\n     *   },\n     *   function () {\n     *     console.log('Completed');\n     *   });\n     *\n     * @param {Object} obj The object to inspect and turn into an\n     * Observable sequence.\n     * @param {Scheduler} [scheduler] An optional IScheduler to run the\n     * enumeration of the input sequence on.\n     * @returns {(Observable<Array<string | T>>)} An observable sequence of\n     * [key, value] pairs from the object.\n     */\n    PairsObservable.create = function (obj, scheduler) {\n        return new PairsObservable(obj, scheduler);\n    };\n    PairsObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, keys = _a.keys, scheduler = _a.scheduler;\n        var length = keys.length;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber\n            });\n        }\n        else {\n            for (var idx = 0; idx < length; idx++) {\n                var key = keys[idx];\n                subscriber.next([key, this.obj[key]]);\n            }\n            subscriber.complete();\n        }\n    };\n    return PairsObservable;\n}(Observable_1.Observable));\nexports.PairsObservable = PairsObservable;\n//# sourceMappingURL=PairsObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/PairsObservable.js\n// module id = 281\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    tslib_1.__extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.start = start;\n        _this._count = count;\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * IScheduler and just delivers the notifications synchronously, but may use\n     * an optional IScheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nexports.RangeObservable = RangeObservable;\n//# sourceMappingURL=RangeObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/RangeObservable.js\n// module id = 282\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar asap_1 = require(\"../scheduler/asap\");\nvar isNumeric_1 = require(\"../util/isNumeric\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar SubscribeOnObservable = (function (_super) {\n    tslib_1.__extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) { delayTime = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.delayTime = delayTime;\n        _this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {\n            _this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = asap_1.asap;\n        }\n        return _this;\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) { delay = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable_1.Observable));\nexports.SubscribeOnObservable = SubscribeOnObservable;\n//# sourceMappingURL=SubscribeOnObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/SubscribeOnObservable.js\n// module id = 283\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar isNumeric_1 = require(\"../util/isNumeric\");\nvar Observable_1 = require(\"../Observable\");\nvar async_1 = require(\"../scheduler/async\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\nvar isDate_1 = require(\"../util/isDate\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    tslib_1.__extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        var _this = _super.call(this) || this;\n        _this.period = -1;\n        _this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            _this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        _this.scheduler = scheduler;\n        _this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - _this.scheduler.now()) :\n            dueTime;\n        return _this;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/TimerObservable.js\n// module id = 284\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar UsingObservable = (function (_super) {\n    tslib_1.__extends(UsingObservable, _super);\n    function UsingObservable(resourceFactory, observableFactory) {\n        var _this = _super.call(this) || this;\n        _this.resourceFactory = resourceFactory;\n        _this.observableFactory = observableFactory;\n        return _this;\n    }\n    UsingObservable.create = function (resourceFactory, observableFactory) {\n        return new UsingObservable(resourceFactory, observableFactory);\n    };\n    UsingObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;\n        var resource;\n        try {\n            resource = resourceFactory();\n            return new UsingSubscriber(subscriber, resource, observableFactory);\n        }\n        catch (err) {\n            subscriber.error(err);\n        }\n    };\n    return UsingObservable;\n}(Observable_1.Observable));\nexports.UsingObservable = UsingObservable;\nvar UsingSubscriber = (function (_super) {\n    tslib_1.__extends(UsingSubscriber, _super);\n    function UsingSubscriber(destination, resource, observableFactory) {\n        var _this = _super.call(this, destination) || this;\n        _this.resource = resource;\n        _this.observableFactory = observableFactory;\n        destination.add(resource);\n        _this.tryUse();\n        return _this;\n    }\n    UsingSubscriber.prototype.tryUse = function () {\n        try {\n            var source = this.observableFactory.call(this, this.resource);\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return UsingSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=UsingObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/UsingObservable.js\n// module id = 285\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BoundCallbackObservable_1 = require(\"./BoundCallbackObservable\");\nexports.bindCallback = BoundCallbackObservable_1.BoundCallbackObservable.create;\n//# sourceMappingURL=bindCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/bindCallback.js\n// module id = 286\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BoundNodeCallbackObservable_1 = require(\"./BoundNodeCallbackObservable\");\nexports.bindNodeCallback = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/bindNodeCallback.js\n// module id = 287\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isScheduler_1 = require(\"../util/isScheduler\");\nvar isArray_1 = require(\"../util/isArray\");\nvar ArrayObservable_1 = require(\"./ArrayObservable\");\nvar combineLatest_1 = require(\"../operator/combineLatest\");\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/combineLatest.js\n// module id = 288\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar concat_1 = require(\"../operator/concat\");\nexports.concat = concat_1.concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/concat.js\n// module id = 289\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DeferObservable_1 = require(\"./DeferObservable\");\nexports.defer = DeferObservable_1.DeferObservable.create;\n//# sourceMappingURL=defer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/defer.js\n// module id = 290\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subject_1 = require(\"../../Subject\");\nvar Subscriber_1 = require(\"../../Subscriber\");\nvar Observable_1 = require(\"../../Observable\");\nvar Subscription_1 = require(\"../../Subscription\");\nvar root_1 = require(\"../../util/root\");\nvar ReplaySubject_1 = require(\"../../ReplaySubject\");\nvar tryCatch_1 = require(\"../../util/tryCatch\");\nvar errorObject_1 = require(\"../../util/errorObject\");\nvar assign_1 = require(\"../../util/assign\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar WebSocketSubject = (function (_super) {\n    tslib_1.__extends(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        var _this = this;\n        if (urlConfigOrSource instanceof Observable_1.Observable) {\n            _this = _super.call(this, destination, urlConfigOrSource) || this;\n        }\n        else {\n            _this = _super.call(this) || this;\n            _this.WebSocketCtor = root_1.root.WebSocket;\n            _this._output = new Subject_1.Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                _this.url = urlConfigOrSource;\n            }\n            else {\n                // WARNING: config object could override important members here.\n                assign_1.assign(_this, urlConfigOrSource);\n            }\n            if (!_this.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            _this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n        return _this;\n    }\n    WebSocketSubject.prototype.resultSelector = function (e) {\n        return JSON.parse(e.data);\n    };\n    /**\n     * Wrapper around the w3c-compatible WebSocket object provided by the browser.\n     *\n     * @example <caption>Wraps browser WebSocket</caption>\n     *\n     * let socket$ = Observable.webSocket('ws://localhost:8081');\n     *\n     * socket$.subscribe(\n     *    (msg) => console.log('message received: ' + msg),\n     *    (err) => console.log(err),\n     *    () => console.log('complete')\n     *  );\n     *\n     * socket$.next(JSON.stringify({ op: 'hello' }));\n     *\n     * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>\n     *\n     * import { w3cwebsocket } from 'websocket';\n     *\n     * let socket$ = Observable.webSocket({\n     *   url: 'ws://localhost:8081',\n     *   WebSocketCtor: w3cwebsocket\n     * });\n     *\n     * socket$.subscribe(\n     *    (msg) => console.log('message received: ' + msg),\n     *    (err) => console.log(err),\n     *    () => console.log('complete')\n     *  );\n     *\n     * socket$.next(JSON.stringify({ op: 'hello' }));\n     *\n     * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object\n     * @return {WebSocketSubject}\n     * @static true\n     * @name webSocket\n     * @owner Observable\n     */\n    WebSocketSubject.create = function (urlConfigOrSource) {\n        return new WebSocketSubject(urlConfigOrSource);\n    };\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this, this.destination);\n        sock.operator = operator;\n        return sock;\n    };\n    WebSocketSubject.prototype._resetState = function () {\n        this.socket = null;\n        if (!this.source) {\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n        this._output = new Subject_1.Subject();\n    };\n    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new Observable_1.Observable(function (observer) {\n            var result = tryCatch_1.tryCatch(subMsg)();\n            if (result === errorObject_1.errorObject) {\n                observer.error(errorObject_1.errorObject.e);\n            }\n            else {\n                self.next(result);\n            }\n            var subscription = self.subscribe(function (x) {\n                var result = tryCatch_1.tryCatch(messageFilter)(x);\n                if (result === errorObject_1.errorObject) {\n                    observer.error(errorObject_1.errorObject.e);\n                }\n                else if (result) {\n                    observer.next(x);\n                }\n            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });\n            return function () {\n                var result = tryCatch_1.tryCatch(unsubMsg)();\n                if (result === errorObject_1.errorObject) {\n                    observer.error(errorObject_1.errorObject.e);\n                }\n                else {\n                    self.next(result);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var WebSocketCtor = this.WebSocketCtor;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = this.protocol ?\n                new WebSocketCtor(this.url, this.protocol) :\n                new WebSocketCtor(this.url);\n            this.socket = socket;\n            if (this.binaryType) {\n                this.socket.binaryType = this.binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new Subscription_1.Subscription(function () {\n            _this.socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (e) {\n            var openObserver = _this.openObserver;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            var queue = _this.destination;\n            _this.destination = Subscriber_1.Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +\n                        'and an optional reason: { code: number, reason: string }'));\n                }\n                _this._resetState();\n            }, function () {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this._resetState();\n            });\n            if (queue && queue instanceof ReplaySubject_1.ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) {\n            _this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = function (e) {\n            _this._resetState();\n            var closeObserver = _this.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            var result = tryCatch_1.tryCatch(_this.resultSelector)(e);\n            if (result === errorObject_1.errorObject) {\n                observer.error(errorObject_1.errorObject.e);\n            }\n            else {\n                observer.next(result);\n            }\n        };\n    };\n    WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this.socket) {\n            this._connectSocket();\n        }\n        var subscription = new Subscription_1.Subscription();\n        subscription.add(this._output.subscribe(subscriber));\n        subscription.add(function () {\n            var socket = _this.socket;\n            if (_this._output.observers.length === 0) {\n                if (socket && socket.readyState === 1) {\n                    socket.close();\n                }\n                _this._resetState();\n            }\n        });\n        return subscription;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _a = this, source = _a.source, socket = _a.socket;\n        if (socket && socket.readyState === 1) {\n            socket.close();\n            this._resetState();\n        }\n        _super.prototype.unsubscribe.call(this);\n        if (!source) {\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n    };\n    return WebSocketSubject;\n}(Subject_1.AnonymousSubject));\nexports.WebSocketSubject = WebSocketSubject;\n//# sourceMappingURL=WebSocketSubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/WebSocketSubject.js\n// module id = 291\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AjaxObservable_1 = require(\"./AjaxObservable\");\nexports.ajax = AjaxObservable_1.AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/ajax.js\n// module id = 292\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebSocketSubject_1 = require(\"./WebSocketSubject\");\nexports.webSocket = WebSocketSubject_1.WebSocketSubject.create;\n//# sourceMappingURL=webSocket.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/webSocket.js\n// module id = 293\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EmptyObservable_1 = require(\"./EmptyObservable\");\nexports.empty = EmptyObservable_1.EmptyObservable.create;\n//# sourceMappingURL=empty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/empty.js\n// module id = 294\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FromEventObservable_1 = require(\"./FromEventObservable\");\nexports.fromEvent = FromEventObservable_1.FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/fromEvent.js\n// module id = 295\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FromEventPatternObservable_1 = require(\"./FromEventPatternObservable\");\nexports.fromEventPattern = FromEventPatternObservable_1.FromEventPatternObservable.create;\n//# sourceMappingURL=fromEventPattern.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/fromEventPattern.js\n// module id = 296\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IfObservable_1 = require(\"./IfObservable\");\nexports._if = IfObservable_1.IfObservable.create;\n//# sourceMappingURL=if.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/if.js\n// module id = 297\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IntervalObservable_1 = require(\"./IntervalObservable\");\nexports.interval = IntervalObservable_1.IntervalObservable.create;\n//# sourceMappingURL=interval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/interval.js\n// module id = 298\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NeverObservable_1 = require(\"./NeverObservable\");\nexports.never = NeverObservable_1.NeverObservable.create;\n//# sourceMappingURL=never.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/never.js\n// module id = 299\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PairsObservable_1 = require(\"./PairsObservable\");\nexports.pairs = PairsObservable_1.PairsObservable.create;\n//# sourceMappingURL=pairs.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/pairs.js\n// module id = 300\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RangeObservable_1 = require(\"./RangeObservable\");\nexports.range = RangeObservable_1.RangeObservable.create;\n//# sourceMappingURL=range.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/range.js\n// module id = 301\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ErrorObservable_1 = require(\"./ErrorObservable\");\nexports._throw = ErrorObservable_1.ErrorObservable.create;\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/throw.js\n// module id = 302\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TimerObservable_1 = require(\"./TimerObservable\");\nexports.timer = TimerObservable_1.TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/timer.js\n// module id = 303\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UsingObservable_1 = require(\"./UsingObservable\");\nexports.using = UsingObservable_1.UsingObservable.create;\n//# sourceMappingURL=using.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/using.js\n// module id = 304\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar zip_1 = require(\"../operator/zip\");\nexports.zip = zip_1.zipStatic;\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/zip.js\n// module id = 305\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return this.lift(new AuditOperator(durationSelector));\n}\nexports.audit = audit;\nvar AuditOperator = (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = (function (_super) {\n    tslib_1.__extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        return _this;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);\n            if (duration === errorObject_1.errorObject) {\n                this.destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, duration);\n                if (innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/audit.js\n// module id = 306\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar async_1 = require(\"../scheduler/async\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new AuditTimeOperator(duration, scheduler));\n}\nexports.auditTime = auditTime;\nvar AuditTimeOperator = (function () {\n    function AuditTimeOperator(duration, scheduler) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n    }\n    AuditTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditTimeSubscriber(subscriber, this.duration, this.scheduler));\n    };\n    return AuditTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditTimeSubscriber = (function (_super) {\n    tslib_1.__extends(AuditTimeSubscriber, _super);\n    function AuditTimeSubscriber(destination, duration, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.duration = duration;\n        _this.scheduler = scheduler;\n        _this.hasValue = false;\n        return _this;\n    }\n    AuditTimeSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, this));\n        }\n    };\n    AuditTimeSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    return AuditTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=auditTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/auditTime.js\n// module id = 307\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer(closingNotifier) {\n    return this.lift(new BufferOperator(closingNotifier));\n}\nexports.buffer = buffer;\nvar BufferOperator = (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        var bufferSubscriber = new BufferSubscriber(subscriber);\n        var subscription = source.subscribe(bufferSubscriber);\n        bufferSubscriber.subscribeToClosingNotifier(this.closingNotifier);\n        return subscription;\n    };\n    return BufferOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSubscriber = (function (_super) {\n    tslib_1.__extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.buffer = [];\n        return _this;\n    }\n    BufferSubscriber.prototype.subscribeToClosingNotifier = function (closingNotifier) {\n        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n    };\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=buffer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/buffer.js\n// module id = 308\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return this.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n}\nexports.bufferCount = bufferCount;\nvar BufferCountOperator = (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferCountSubscriber = (function (_super) {\n    tslib_1.__extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.buffer = [];\n        return _this;\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSkipCountSubscriber = (function (_super) {\n    tslib_1.__extends(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.startBufferEvery = startBufferEvery;\n        _this.buffers = [];\n        _this.count = 0;\n        return _this;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=bufferCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/bufferCount.js\n// module id = 309\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar async_1 = require(\"../scheduler/async\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async_1.async;\n    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return this.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n}\nexports.bufferTime = bufferTime;\nvar BufferTimeOperator = (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferTimeSubscriber = (function (_super) {\n    tslib_1.__extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferTimeSpan = bufferTimeSpan;\n        _this.bufferCreationInterval = bufferCreationInterval;\n        _this.maxBufferSize = maxBufferSize;\n        _this.scheduler = scheduler;\n        _this.contexts = [];\n        var context = _this.openContext();\n        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (_this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: _this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n        return _this;\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context_1 = contexts[i];\n            var buffer = context_1.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context_1;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            destination.next(context_2.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/bufferTime.js\n// module id = 310\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"../Subscription\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle(openings, closingSelector) {\n    return this.lift(new BufferToggleOperator(openings, closingSelector));\n}\nexports.bufferToggle = bufferToggle;\nvar BufferToggleOperator = (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferToggleSubscriber = (function (_super) {\n    tslib_1.__extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(subscribeToResult_1.subscribeToResult(_this, openings));\n        return _this;\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_1 = contexts.shift();\n            context_1.subscription.unsubscribe();\n            context_1.buffer = null;\n            context_1.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            this.destination.next(context_2.buffer);\n            context_2.subscription.unsubscribe();\n            context_2.buffer = null;\n            context_2.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription_1.Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/bufferToggle.js\n// module id = 311\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"../Subscription\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return this.lift(new BufferWhenOperator(closingSelector));\n}\nexports.bufferWhen = bufferWhen;\nvar BufferWhenOperator = (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = (function (_super) {\n    tslib_1.__extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.closingSelector = closingSelector;\n        _this.subscribing = false;\n        _this.openBuffer();\n        return _this;\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription_1.Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/bufferWhen.js\n// module id = 312\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar combineLatest_1 = require(\"./combineLatest\");\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nfunction combineAll(project) {\n    return this.lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineAll = combineAll;\n//# sourceMappingURL=combineAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/combineAll.js\n// module id = 313\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mergeMapTo_1 = require(\"./mergeMapTo\");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo(innerObservable, resultSelector) {\n    return this.lift(new mergeMapTo_1.MergeMapToOperator(innerObservable, resultSelector, 1));\n}\nexports.concatMapTo = concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/concatMapTo.js\n// module id = 314\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count(predicate) {\n    return this.lift(new CountOperator(predicate, this));\n}\nexports.count = count;\nvar CountOperator = (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CountSubscriber = (function (_super) {\n    tslib_1.__extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.count = 0;\n        _this.index = 0;\n        return _this;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=count.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/count.js\n// module id = 315\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return this.lift(new DebounceOperator(durationSelector));\n}\nexports.debounce = debounce;\nvar DebounceOperator = (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = (function (_super) {\n    tslib_1.__extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        _this.durationSubscription = null;\n        return _this;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult_1.subscribeToResult(this, duration);\n        if (!subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=debounce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/debounce.js\n// module id = 316\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar async_1 = require(\"../scheduler/async\");\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nexports.debounceTime = debounceTime;\nvar DebounceTimeOperator = (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = (function (_super) {\n    tslib_1.__extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.dueTime = dueTime;\n        _this.scheduler = scheduler;\n        _this.debouncedSubscription = null;\n        _this.lastValue = null;\n        _this.hasValue = false;\n        return _this;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/debounceTime.js\n// module id = 317\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return this.lift(new DefaultIfEmptyOperator(defaultValue));\n}\nexports.defaultIfEmpty = defaultIfEmpty;\nvar DefaultIfEmptyOperator = (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = (function (_super) {\n    tslib_1.__extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.defaultValue = defaultValue;\n        _this.isEmpty = true;\n        return _this;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/defaultIfEmpty.js\n// module id = 318\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar async_1 = require(\"../scheduler/async\");\nvar isDate_1 = require(\"../util/isDate\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Notification_1 = require(\"../Notification\");\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteDelay = isDate_1.isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return this.lift(new DelayOperator(delayFor, scheduler));\n}\nexports.delay = delay;\nvar DelayOperator = (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelaySubscriber = (function (_super) {\n    tslib_1.__extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.delay = delay;\n        _this.scheduler = scheduler;\n        _this.queue = [];\n        _this.active = false;\n        _this.errored = false;\n        return _this;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification_1.Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification_1.Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber_1.Subscriber));\nvar DelayMessage = (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/delay.js\n// module id = 319\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Observable_1 = require(\"../Observable\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return new SubscriptionDelayObservable(this, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return this.lift(new DelayWhenOperator(delayDurationSelector));\n}\nexports.delayWhen = delayWhen;\nvar DelayWhenOperator = (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelayWhenSubscriber = (function (_super) {\n    tslib_1.__extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.delayDurationSelector = delayDurationSelector;\n        _this.completed = false;\n        _this.delayNotifierSubscriptions = [];\n        _this.values = [];\n        return _this;\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        var value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            this.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n        this.values.push(value);\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelayObservable = (function (_super) {\n    tslib_1.__extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subscriptionDelay = subscriptionDelay;\n        return _this;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable_1.Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelaySubscriber = (function (_super) {\n    tslib_1.__extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.source = source;\n        _this.sourceSubscribed = false;\n        return _this;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=delayWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/delayWhen.js\n// module id = 320\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize() {\n    return this.lift(new DeMaterializeOperator());\n}\nexports.dematerialize = dematerialize;\nvar DeMaterializeOperator = (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DeMaterializeSubscriber = (function (_super) {\n    tslib_1.__extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=dematerialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/dematerialize.js\n// module id = 321\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar Set_1 = require(\"../util/Set\");\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct(keySelector, flushes) {\n    return this.lift(new DistinctOperator(keySelector, flushes));\n}\nexports.distinct = distinct;\nvar DistinctOperator = (function () {\n    function DistinctOperator(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    };\n    return DistinctOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctSubscriber = (function (_super) {\n    tslib_1.__extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.values = new Set_1.Set();\n        if (flushes) {\n            _this.add(subscribeToResult_1.subscribeToResult(_this, flushes));\n        }\n        return _this;\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.DistinctSubscriber = DistinctSubscriber;\n//# sourceMappingURL=distinct.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/distinct.js\n// module id = 322\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar distinctUntilChanged_1 = require(\"./distinctUntilChanged\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nfunction distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged_1.distinctUntilChanged.call(this, function (x, y) {\n        if (compare) {\n            return compare(x[key], y[key]);\n        }\n        return x[key] === y[key];\n    });\n}\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/distinctUntilKeyChanged.js\n// module id = 323\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\nexports._do = _do;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    tslib_1.__extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        var _this = _super.call(this, destination) || this;\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        _this.add(safeSubscriber);\n        _this.safeSubscriber = safeSubscriber;\n        return _this;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=do.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/do.js\n// module id = 324\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar ArgumentOutOfRangeError_1 = require(\"../util/ArgumentOutOfRangeError\");\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt(index, defaultValue) {\n    return this.lift(new ElementAtOperator(index, defaultValue));\n}\nexports.elementAt = elementAt;\nvar ElementAtOperator = (function () {\n    function ElementAtOperator(index, defaultValue) {\n        this.index = index;\n        this.defaultValue = defaultValue;\n        if (index < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    ElementAtOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n    };\n    return ElementAtOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ElementAtSubscriber = (function (_super) {\n    tslib_1.__extends(ElementAtSubscriber, _super);\n    function ElementAtSubscriber(destination, index, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.index = index;\n        _this.defaultValue = defaultValue;\n        return _this;\n    }\n    ElementAtSubscriber.prototype._next = function (x) {\n        if (this.index-- === 0) {\n            this.destination.next(x);\n            this.destination.complete();\n        }\n    };\n    ElementAtSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index >= 0) {\n            if (typeof this.defaultValue !== 'undefined') {\n                destination.next(this.defaultValue);\n            }\n            else {\n                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);\n            }\n        }\n        destination.complete();\n    };\n    return ElementAtSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=elementAt.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/elementAt.js\n// module id = 325\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nfunction exhaust() {\n    return this.lift(new SwitchFirstOperator());\n}\nexports.exhaust = exhaust;\nvar SwitchFirstOperator = (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstSubscriber = (function (_super) {\n    tslib_1.__extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasCompleted = false;\n        _this.hasSubscription = false;\n        return _this;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaust.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/exhaust.js\n// module id = 326\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nfunction exhaustMap(project, resultSelector) {\n    return this.lift(new SwitchFirstMapOperator(project, resultSelector));\n}\nexports.exhaustMap = exhaustMap;\nvar SwitchFirstMapOperator = (function () {\n    function SwitchFirstMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchFirstMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstMapSubscriber = (function (_super) {\n    tslib_1.__extends(SwitchFirstMapSubscriber, _super);\n    function SwitchFirstMapSubscriber(destination, project, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.resultSelector = resultSelector;\n        _this.hasSubscription = false;\n        _this.hasCompleted = false;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchFirstMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        try {\n            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n            destination.next(result);\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/exhaustMap.js\n// module id = 327\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return this.lift(new ExpandOperator(project, concurrent, scheduler));\n}\nexports.expand = expand;\nvar ExpandOperator = (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexports.ExpandOperator = ExpandOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExpandSubscriber = (function (_super) {\n    tslib_1.__extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.scheduler = scheduler;\n        _this.index = 0;\n        _this.active = 0;\n        _this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            _this.buffer = [];\n        }\n        return _this;\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch_1.tryCatch(this.project)(value, index);\n            if (result === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.ExpandSubscriber = ExpandSubscriber;\n//# sourceMappingURL=expand.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/expand.js\n// module id = 328\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Subscription_1 = require(\"../Subscription\");\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return this.lift(new FinallyOperator(callback));\n}\nexports._finally = _finally;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    tslib_1.__extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        var _this = _super.call(this, destination) || this;\n        _this.add(new Subscription_1.Subscription(callback));\n        return _this;\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finally.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/finally.js\n// module id = 329\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar find_1 = require(\"./find\");\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex(predicate, thisArg) {\n    return this.lift(new find_1.FindValueOperator(predicate, this, true, thisArg));\n}\nexports.findIndex = findIndex;\n//# sourceMappingURL=findIndex.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/findIndex.js\n// module id = 330\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Subscription_1 = require(\"../Subscription\");\nvar Observable_1 = require(\"../Observable\");\nvar Subject_1 = require(\"../Subject\");\nvar Map_1 = require(\"../util/Map\");\nvar FastMap_1 = require(\"../util/FastMap\");\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return this.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = (function (_super) {\n    tslib_1.__extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.elementSelector = elementSelector;\n        _this.durationSelector = durationSelector;\n        _this.subjectSelector = subjectSelector;\n        _this.groups = null;\n        _this.attemptedToUnsubscribe = false;\n        _this.count = 0;\n        return _this;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = (function (_super) {\n    tslib_1.__extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        var _this = _super.call(this, group) || this;\n        _this.key = key;\n        _this.group = group;\n        _this.parent = parent;\n        return _this;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = (function (_super) {\n    tslib_1.__extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.groupSubject = groupSubject;\n        _this.refCountSubscription = refCountSubscription;\n        return _this;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = (function (_super) {\n    tslib_1.__extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        parent.count++;\n        return _this;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n//# sourceMappingURL=groupBy.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/groupBy.js\n// module id = 331\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar noop_1 = require(\"../util/noop\");\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return this.lift(new IgnoreElementsOperator());\n}\nexports.ignoreElements = ignoreElements;\nvar IgnoreElementsOperator = (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = (function (_super) {\n    tslib_1.__extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        noop_1.noop();\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ignoreElements.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/ignoreElements.js\n// module id = 332\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nfunction isEmpty() {\n    return this.lift(new IsEmptyOperator());\n}\nexports.isEmpty = isEmpty;\nvar IsEmptyOperator = (function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IsEmptySubscriber = (function (_super) {\n    tslib_1.__extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=isEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/isEmpty.js\n// module id = 333\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nfunction letProto(func) {\n    return func(this);\n}\nexports.letProto = letProto;\n//# sourceMappingURL=let.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/let.js\n// module id = 334\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return this.lift(new MapToOperator(value));\n}\nexports.mapTo = mapTo;\nvar MapToOperator = (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = (function (_super) {\n    tslib_1.__extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        var _this = _super.call(this, destination) || this;\n        _this.value = value;\n        return _this;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=mapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mapTo.js\n// module id = 335\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Notification_1 = require(\"../Notification\");\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize() {\n    return this.lift(new MaterializeOperator());\n}\nexports.materialize = materialize;\nvar MaterializeOperator = (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MaterializeSubscriber = (function (_super) {\n    tslib_1.__extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification_1.Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=materialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/materialize.js\n// module id = 336\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar reduce_1 = require(\"./reduce\");\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nfunction max(comparer) {\n    var max = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\n        : function (x, y) { return x > y ? x : y; };\n    return this.lift(new reduce_1.ReduceOperator(max));\n}\nexports.max = max;\n//# sourceMappingURL=max.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/max.js\n// module id = 337\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return this.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\nexports.mergeScan = mergeScan;\nvar MergeScanOperator = (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexports.MergeScanOperator = MergeScanOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeScanSubscriber = (function (_super) {\n    tslib_1.__extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.acc = acc;\n        _this.concurrent = concurrent;\n        _this.hasValue = false;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch_1.tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeScanSubscriber = MergeScanSubscriber;\n//# sourceMappingURL=mergeScan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mergeScan.js\n// module id = 338\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar reduce_1 = require(\"./reduce\");\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nfunction min(comparer) {\n    var min = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\n        : function (x, y) { return x < y ? x : y; };\n    return this.lift(new reduce_1.ReduceOperator(min));\n}\nexports.min = min;\n//# sourceMappingURL=min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/min.js\n// module id = 339\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return this.lift(new PairwiseOperator());\n}\nexports.pairwise = pairwise;\nvar PairwiseOperator = (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = (function (_super) {\n    tslib_1.__extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasPrev = false;\n        return _this;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=pairwise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/pairwise.js\n// module id = 340\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar not_1 = require(\"../util/not\");\nvar filter_1 = require(\"./filter\");\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return [\n        filter_1.filter.call(this, predicate, thisArg),\n        filter_1.filter.call(this, not_1.not(predicate, thisArg))\n    ];\n}\nexports.partition = partition;\n//# sourceMappingURL=partition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/partition.js\n// module id = 341\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar map_1 = require(\"./map\");\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return map_1.map.call(this, plucker(properties, length));\n}\nexports.pluck = pluck;\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/pluck.js\n// module id = 342\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = require(\"../Subject\");\nvar multicast_1 = require(\"./multicast\");\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish(selector) {\n    return selector ? multicast_1.multicast.call(this, function () { return new Subject_1.Subject(); }, selector) :\n        multicast_1.multicast.call(this, new Subject_1.Subject());\n}\nexports.publish = publish;\n//# sourceMappingURL=publish.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/publish.js\n// module id = 343\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BehaviorSubject_1 = require(\"../BehaviorSubject\");\nvar multicast_1 = require(\"./multicast\");\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior(value) {\n    return multicast_1.multicast.call(this, new BehaviorSubject_1.BehaviorSubject(value));\n}\nexports.publishBehavior = publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/publishBehavior.js\n// module id = 344\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AsyncSubject_1 = require(\"../AsyncSubject\");\nvar multicast_1 = require(\"./multicast\");\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nfunction publishLast() {\n    return multicast_1.multicast.call(this, new AsyncSubject_1.AsyncSubject());\n}\nexports.publishLast = publishLast;\n//# sourceMappingURL=publishLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/publishLast.js\n// module id = 345\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ReplaySubject_1 = require(\"../ReplaySubject\");\nvar multicast_1 = require(\"./multicast\");\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nfunction publishReplay(bufferSize, windowTime, scheduler) {\n    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n    return multicast_1.multicast.call(this, new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler));\n}\nexports.publishReplay = publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/publishReplay.js\n// module id = 346\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar EmptyObservable_1 = require(\"../observable/EmptyObservable\");\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else if (count < 0) {\n        return this.lift(new RepeatOperator(-1, this));\n    }\n    else {\n        return this.lift(new RepeatOperator(count - 1, this));\n    }\n}\nexports.repeat = repeat;\nvar RepeatOperator = (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = (function (_super) {\n    tslib_1.__extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=repeat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/repeat.js\n// module id = 347\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subject_1 = require(\"../Subject\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen(notifier) {\n    return this.lift(new RepeatWhenOperator(notifier));\n}\nexports.repeatWhen = repeatWhen;\nvar RepeatWhenOperator = (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatWhenSubscriber = (function (_super) {\n    tslib_1.__extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        _this.sourceIsBeingSubscribedTo = true;\n        return _this;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            else if (this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.notifications = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this.notifications = notifications;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject_1.Subject();\n        var retries = tryCatch_1.tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject_1.errorObject) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/repeatWhen.js\n// module id = 348\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry(count) {\n    if (count === void 0) { count = -1; }\n    return this.lift(new RetryOperator(count, this));\n}\nexports.retry = retry;\nvar RetryOperator = (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetrySubscriber = (function (_super) {\n    tslib_1.__extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=retry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/retry.js\n// module id = 349\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subject_1 = require(\"../Subject\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return this.lift(new RetryWhenOperator(notifier, this));\n}\nexports.retryWhen = retryWhen;\nvar RetryWhenOperator = (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = (function (_super) {\n    tslib_1.__extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        return _this;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject_1.Subject();\n                retries = tryCatch_1.tryCatch(this.notifier)(errors);\n                if (retries === errorObject_1.errorObject) {\n                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);\n                }\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.errors = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this._unsubscribeAndRecycle();\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/retryWhen.js\n// module id = 350\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample(notifier) {\n    return this.lift(new SampleOperator(notifier));\n}\nexports.sample = sample;\nvar SampleOperator = (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = (function (_super) {\n    tslib_1.__extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.hasValue = false;\n        return _this;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=sample.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/sample.js\n// module id = 351\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar async_1 = require(\"../scheduler/async\");\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new SampleTimeOperator(period, scheduler));\n}\nexports.sampleTime = sampleTime;\nvar SampleTimeOperator = (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = (function (_super) {\n    tslib_1.__extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.period = period;\n        _this.scheduler = scheduler;\n        _this.hasValue = false;\n        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));\n        return _this;\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/sampleTime.js\n// module id = 352\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return this.lift(new ScanOperator(accumulator, seed, hasSeed));\n}\nexports.scan = scan;\nvar ScanOperator = (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    tslib_1.__extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this._seed = _seed;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        return _this;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=scan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/scan.js\n// module id = 353\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual(compareTo, comparor) {\n    return this.lift(new SequenceEqualOperator(compareTo, comparor));\n}\nexports.sequenceEqual = sequenceEqual;\nvar SequenceEqualOperator = (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nexports.SequenceEqualOperator = SequenceEqualOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SequenceEqualSubscriber = (function (_super) {\n    tslib_1.__extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        var _this = _super.call(this, destination) || this;\n        _this.compareTo = compareTo;\n        _this.comparor = comparor;\n        _this._a = [];\n        _this._b = [];\n        _this._oneComplete = false;\n        _this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n        return _this;\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch_1.tryCatch(comparor)(a, b);\n                if (areEqual === errorObject_1.errorObject) {\n                    this.destination.error(errorObject_1.errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SequenceEqualSubscriber = SequenceEqualSubscriber;\nvar SequenceEqualCompareToSubscriber = (function (_super) {\n    tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/sequenceEqual.js\n// module id = 354\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar multicast_1 = require(\"./multicast\");\nvar ReplaySubject_1 = require(\"../ReplaySubject\");\n/**\n * @method shareReplay\n * @owner Observable\n */\nfunction shareReplay(bufferSize, windowTime, scheduler) {\n    var subject;\n    var connectable = multicast_1.multicast.call(this, function shareReplaySubjectFactory() {\n        if (this._isComplete) {\n            return subject;\n        }\n        else {\n            return (subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler));\n        }\n    });\n    return connectable.refCount();\n}\nexports.shareReplay = shareReplay;\n//# sourceMappingURL=shareReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/shareReplay.js\n// module id = 355\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar EmptyError_1 = require(\"../util/EmptyError\");\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single(predicate) {\n    return this.lift(new SingleOperator(predicate, this));\n}\nexports.single = single;\nvar SingleOperator = (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SingleSubscriber = (function (_super) {\n    tslib_1.__extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.seenValue = false;\n        _this.index = 0;\n        return _this;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=single.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/single.js\n// module id = 356\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(count) {\n    return this.lift(new SkipOperator(count));\n}\nexports.skip = skip;\nvar SkipOperator = (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = (function (_super) {\n    tslib_1.__extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/skip.js\n// module id = 357\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar ArgumentOutOfRangeError_1 = require(\"../util/ArgumentOutOfRangeError\");\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nfunction skipLast(count) {\n    return this.lift(new SkipLastOperator(count));\n}\nexports.skipLast = skipLast;\nvar SkipLastOperator = (function () {\n    function SkipLastOperator(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    SkipLastOperator.prototype.call = function (subscriber, source) {\n        if (this._skipCount === 0) {\n            // If we don't want to skip any values then just subscribe\n            // to Subscriber without any further logic.\n            return source.subscribe(new Subscriber_1.Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    };\n    return SkipLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipLastSubscriber = (function (_super) {\n    tslib_1.__extends(SkipLastSubscriber, _super);\n    function SkipLastSubscriber(destination, _skipCount) {\n        var _this = _super.call(this, destination) || this;\n        _this._skipCount = _skipCount;\n        _this._count = 0;\n        _this._ring = new Array(_skipCount);\n        return _this;\n    }\n    SkipLastSubscriber.prototype._next = function (value) {\n        var skipCount = this._skipCount;\n        var count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            var currentIndex = count % skipCount;\n            var ring = this._ring;\n            var oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    };\n    return SkipLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skipLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/skipLast.js\n// module id = 358\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil(notifier) {\n    return this.lift(new SkipUntilOperator(notifier));\n}\nexports.skipUntil = skipUntil;\nvar SkipUntilOperator = (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipUntilSubscriber = (function (_super) {\n    tslib_1.__extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasValue = false;\n        _this.isInnerStopped = false;\n        _this.add(subscribeToResult_1.subscribeToResult(_this, notifier));\n        return _this;\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype._complete = function () {\n        if (this.isInnerStopped) {\n            _super.prototype._complete.call(this);\n        }\n        else {\n            this.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n        this.isInnerStopped = true;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=skipUntil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/skipUntil.js\n// module id = 359\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n    return this.lift(new SkipWhileOperator(predicate));\n}\nexports.skipWhile = skipWhile;\nvar SkipWhileOperator = (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipWhileSubscriber = (function (_super) {\n    tslib_1.__extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.skipping = true;\n        _this.index = 0;\n        return _this;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skipWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/skipWhile.js\n// module id = 360\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayObservable_1 = require(\"../observable/ArrayObservable\");\nvar ScalarObservable_1 = require(\"../observable/ScalarObservable\");\nvar EmptyObservable_1 = require(\"../observable/EmptyObservable\");\nvar concat_1 = require(\"./concat\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    var scheduler = array[array.length - 1];\n    if (isScheduler_1.isScheduler(scheduler)) {\n        array.pop();\n    }\n    else {\n        scheduler = null;\n    }\n    var len = array.length;\n    if (len === 1) {\n        return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0], scheduler), this);\n    }\n    else if (len > 1) {\n        return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array, scheduler), this);\n    }\n    else {\n        return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler), this);\n    }\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/startWith.js\n// module id = 361\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SubscribeOnObservable_1 = require(\"../observable/SubscribeOnObservable\");\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new SubscribeOnOperator(scheduler, delay));\n}\nexports.subscribeOn = subscribeOn;\nvar SubscribeOnOperator = (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n//# sourceMappingURL=subscribeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/subscribeOn.js\n// module id = 362\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nfunction _switch() {\n    return this.lift(new SwitchOperator());\n}\nexports._switch = _switch;\nvar SwitchOperator = (function () {\n    function SwitchOperator() {\n    }\n    SwitchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchSubscriber(subscriber));\n    };\n    return SwitchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchSubscriber = (function (_super) {\n    tslib_1.__extends(SwitchSubscriber, _super);\n    function SwitchSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.active = 0;\n        _this.hasCompleted = false;\n        return _this;\n    }\n    SwitchSubscriber.prototype._next = function (value) {\n        this.unsubscribeInner();\n        this.active++;\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, value));\n    };\n    SwitchSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    SwitchSubscriber.prototype.unsubscribeInner = function () {\n        this.active = this.active > 0 ? this.active - 1 : 0;\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n            this.remove(innerSubscription);\n        }\n    };\n    SwitchSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    SwitchSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchSubscriber.prototype.notifyComplete = function () {\n        this.unsubscribeInner();\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return SwitchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/switch.js\n// module id = 363\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    tslib_1.__extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.resultSelector = resultSelector;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/switchMap.js\n// module id = 364\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo(innerObservable, resultSelector) {\n    return this.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\nexports.switchMapTo = switchMapTo;\nvar SwitchMapToOperator = (function () {\n    function SwitchMapToOperator(observable, resultSelector) {\n        this.observable = observable;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n    };\n    return SwitchMapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapToSubscriber = (function (_super) {\n    tslib_1.__extends(SwitchMapToSubscriber, _super);\n    function SwitchMapToSubscriber(destination, inner, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.inner = inner;\n        _this.resultSelector = resultSelector;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapToSubscriber.prototype._next = function (value) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));\n    };\n    SwitchMapToSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    return SwitchMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/switchMapTo.js\n// module id = 365\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar ArgumentOutOfRangeError_1 = require(\"../util/ArgumentOutOfRangeError\");\nvar EmptyObservable_1 = require(\"../observable/EmptyObservable\");\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeOperator(count));\n    }\n}\nexports.take = take;\nvar TakeOperator = (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = (function (_super) {\n    tslib_1.__extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=take.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/take.js\n// module id = 366\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar ArgumentOutOfRangeError_1 = require(\"../util/ArgumentOutOfRangeError\");\nvar EmptyObservable_1 = require(\"../observable/EmptyObservable\");\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeLastOperator(count));\n    }\n}\nexports.takeLast = takeLast;\nvar TakeLastOperator = (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = (function (_super) {\n    tslib_1.__extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.ring = new Array();\n        _this.count = 0;\n        return _this;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/takeLast.js\n// module id = 367\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return this.lift(new TakeUntilOperator(notifier));\n}\nexports.takeUntil = takeUntil;\nvar TakeUntilOperator = (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = (function (_super) {\n    tslib_1.__extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.add(subscribeToResult_1.subscribeToResult(_this, notifier));\n        return _this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/takeUntil.js\n// module id = 368\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return this.lift(new TakeWhileOperator(predicate));\n}\nexports.takeWhile = takeWhile;\nvar TakeWhileOperator = (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = (function (_super) {\n    tslib_1.__extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.index = 0;\n        return _this;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            this.unsubscribe();\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n            this.unsubscribe();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/takeWhile.js\n// module id = 369\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar async_1 = require(\"../scheduler/async\");\nvar throttle_1 = require(\"./throttle\");\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }\n    return this.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nexports.throttleTime = throttleTime;\nvar ThrottleTimeOperator = (function () {\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    };\n    return ThrottleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleTimeSubscriber = (function (_super) {\n    tslib_1.__extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.duration = duration;\n        _this.scheduler = scheduler;\n        _this.leading = leading;\n        _this.trailing = trailing;\n        _this._hasTrailingValue = false;\n        _this._trailingValue = null;\n        return _this;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/throttleTime.js\n// module id = 370\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar async_1 = require(\"../scheduler/async\");\nvar isDate_1 = require(\"../util/isDate\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar TimeoutError_1 = require(\"../util/TimeoutError\");\n/**\n * @param {number} due\n * @param {Scheduler} [scheduler]\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return this.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError_1.TimeoutError()));\n}\nexports.timeout = timeout;\nvar TimeoutOperator = (function () {\n    function TimeoutOperator(waitFor, absoluteTimeout, scheduler, errorInstance) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n    }\n    TimeoutOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance));\n    };\n    return TimeoutOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutSubscriber = (function (_super) {\n    tslib_1.__extends(TimeoutSubscriber, _super);\n    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, scheduler, errorInstance) {\n        var _this = _super.call(this, destination) || this;\n        _this.absoluteTimeout = absoluteTimeout;\n        _this.waitFor = waitFor;\n        _this.scheduler = scheduler;\n        _this.errorInstance = errorInstance;\n        _this.action = null;\n        _this.scheduleTimeout();\n        return _this;\n    }\n    TimeoutSubscriber.dispatchTimeout = function (subscriber) {\n        subscriber.error(subscriber.errorInstance);\n    };\n    TimeoutSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    TimeoutSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.errorInstance = null;\n    };\n    return TimeoutSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeout.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/timeout.js\n// module id = 371\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar async_1 = require(\"../scheduler/async\");\nvar isDate_1 = require(\"../util/isDate\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/* tslint:enable:max-line-length */\n/**\n * @param due\n * @param withObservable\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return this.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n}\nexports.timeoutWith = timeoutWith;\nvar TimeoutWithOperator = (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutWithSubscriber = (function (_super) {\n    tslib_1.__extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.absoluteTimeout = absoluteTimeout;\n        _this.waitFor = waitFor;\n        _this.withObservable = withObservable;\n        _this.scheduler = scheduler;\n        _this.action = null;\n        _this.scheduleTimeout();\n        return _this;\n    }\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n        var withObservable = subscriber.withObservable;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult_1.subscribeToResult(subscriber, withObservable));\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    TimeoutWithSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=timeoutWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/timeoutWith.js\n// module id = 372\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\n/**\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray() {\n    return this.lift(new ToArrayOperator());\n}\nexports.toArray = toArray;\nvar ToArrayOperator = (function () {\n    function ToArrayOperator() {\n    }\n    ToArrayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ToArraySubscriber(subscriber));\n    };\n    return ToArrayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ToArraySubscriber = (function (_super) {\n    tslib_1.__extends(ToArraySubscriber, _super);\n    function ToArraySubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.array = [];\n        return _this;\n    }\n    ToArraySubscriber.prototype._next = function (x) {\n        this.array.push(x);\n    };\n    ToArraySubscriber.prototype._complete = function () {\n        this.destination.next(this.array);\n        this.destination.complete();\n    };\n    return ToArraySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=toArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/toArray.js\n// module id = 373\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = require(\"../util/root\");\n/* tslint:enable:max-line-length */\n/**\n * Converts an Observable sequence to a ES2015 compliant promise.\n *\n * @example\n * // Using normal ES2015\n * let source = Rx.Observable\n *   .of(42)\n *   .toPromise();\n *\n * source.then((value) => console.log('Value: %s', value));\n * // => Value: 42\n *\n * // Rejected Promise\n * // Using normal ES2015\n * let source = Rx.Observable\n *   .throw(new Error('woops'))\n *   .toPromise();\n *\n * source\n *   .then((value) => console.log('Value: %s', value))\n *   .catch((err) => console.log('Error: %s', err));\n * // => Error: Error: woops\n *\n * // Setting via the config\n * Rx.config.Promise = RSVP.Promise;\n *\n * let source = Rx.Observable\n *   .of(42)\n *   .toPromise();\n *\n * source.then((value) => console.log('Value: %s', value));\n * // => Value: 42\n *\n * // Setting via the method\n * let source = Rx.Observable\n *   .of(42)\n *   .toPromise(RSVP.Promise);\n *\n * source.then((value) => console.log('Value: %s', value));\n * // => Value: 42\n *\n * @param {PromiseConstructor} [PromiseCtor] The constructor of the promise. If not provided,\n * it will look for a constructor first in Rx.config.Promise then fall back to\n * the native Promise constructor if available.\n * @return {Promise<T>} An ES2015 compatible promise with the last value from\n * the observable sequence.\n * @method toPromise\n * @owner Observable\n */\nfunction toPromise(PromiseCtor) {\n    var _this = this;\n    if (!PromiseCtor) {\n        if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n            PromiseCtor = root_1.root.Rx.config.Promise;\n        }\n        else if (root_1.root.Promise) {\n            PromiseCtor = root_1.root.Promise;\n        }\n    }\n    if (!PromiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return new PromiseCtor(function (resolve, reject) {\n        var value;\n        _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n    });\n}\nexports.toPromise = toPromise;\n//# sourceMappingURL=toPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/toPromise.js\n// module id = 374\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subject_1 = require(\"../Subject\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window(windowBoundaries) {\n    return this.lift(new WindowOperator(windowBoundaries));\n}\nexports.window = window;\nvar WindowOperator = (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    tslib_1.__extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.window = new Subject_1.Subject();\n        destination.next(_this.window);\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject_1.Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=window.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/window.js\n// module id = 375\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Subject_1 = require(\"../Subject\");\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return this.lift(new WindowCountOperator(windowSize, startWindowEvery));\n}\nexports.windowCount = windowCount;\nvar WindowCountOperator = (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowCountSubscriber = (function (_super) {\n    tslib_1.__extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowSize = windowSize;\n        _this.startWindowEvery = startWindowEvery;\n        _this.windows = [new Subject_1.Subject()];\n        _this.count = 0;\n        destination.next(_this.windows[0]);\n        return _this;\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject_1.Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=windowCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/windowCount.js\n// module id = 376\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subject_1 = require(\"../Subject\");\nvar async_1 = require(\"../scheduler/async\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar isNumeric_1 = require(\"../util/isNumeric\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\nfunction windowTime(windowTimeSpan) {\n    var scheduler = async_1.async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler_1.isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler_1.isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric_1.isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler_1.isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric_1.isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return this.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n}\nexports.windowTime = windowTime;\nvar WindowTimeOperator = (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = (function (_super) {\n    tslib_1.__extends(CountedSubject, _super);\n    function CountedSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._numberOfNextedValues = 0;\n        return _this;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject_1.Subject));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowTimeSubscriber = (function (_super) {\n    tslib_1.__extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowTimeSpan = windowTimeSpan;\n        _this.windowCreationInterval = windowCreationInterval;\n        _this.maxWindowSize = maxWindowSize;\n        _this.scheduler = scheduler;\n        _this.windows = [];\n        var window = _this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: _this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };\n            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n        return _this;\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/windowTime.js\n// module id = 377\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subject_1 = require(\"../Subject\");\nvar Subscription_1 = require(\"../Subscription\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle(openings, closingSelector) {\n    return this.lift(new WindowToggleOperator(openings, closingSelector));\n}\nexports.windowToggle = windowToggle;\nvar WindowToggleOperator = (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowToggleSubscriber = (function (_super) {\n    tslib_1.__extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(_this.openSubscription = subscribeToResult_1.subscribeToResult(_this, openings, openings));\n        return _this;\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_1 = contexts[index];\n                context_1.window.error(err);\n                context_1.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_2 = contexts[index];\n                context_2.window.complete();\n                context_2.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_3 = contexts[index];\n                context_3.window.unsubscribe();\n                context_3.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject_1.errorObject) {\n                return this.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var window_1 = new Subject_1.Subject();\n                var subscription = new Subscription_1.Subscription();\n                var context_4 = { window: window_1, subscription: subscription };\n                this.contexts.push(context_4);\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context_4);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context_4;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/windowToggle.js\n// module id = 378\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subject_1 = require(\"../Subject\");\nvar tryCatch_1 = require(\"../util/tryCatch\");\nvar errorObject_1 = require(\"../util/errorObject\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return this.lift(new WindowOperator(closingSelector));\n}\nexports.windowWhen = windowWhen;\nvar WindowOperator = (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    tslib_1.__extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.closingSelector = closingSelector;\n        _this.openWindow();\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) { innerSub = null; }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject_1.Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            var err = errorObject_1.errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/windowWhen.js\n// module id = 379\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var project;\n    if (typeof args[args.length - 1] === 'function') {\n        project = args.pop();\n    }\n    var observables = args;\n    return this.lift(new WithLatestFromOperator(observables, project));\n}\nexports.withLatestFrom = withLatestFrom;\nvar WithLatestFromOperator = (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = (function (_super) {\n    tslib_1.__extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.observables = observables;\n        _this.project = project;\n        _this.toRespond = [];\n        var len = observables.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            _this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            _this.add(subscribeToResult_1.subscribeToResult(_this, observable, observable, i));\n        }\n        return _this;\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/withLatestFrom.js\n// module id = 380\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar zip_1 = require(\"./zip\");\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nfunction zipAll(project) {\n    return this.lift(new zip_1.ZipOperator(project));\n}\nexports.zipAll = zipAll;\n//# sourceMappingURL=zipAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/zipAll.js\n// module id = 381\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"../Subscription\");\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    tslib_1.__extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/Action.js\n// module id = 382\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar AsyncAction_1 = require(\"./AsyncAction\");\nvar AnimationFrame_1 = require(\"../util/AnimationFrame\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AnimationFrameAction = (function (_super) {\n    tslib_1.__extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If an animation frame has already been requested, don't request another\n        // one. If an animation frame hasn't been requested yet, request one. Return\n        // the current animation frame request id.\n        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested animation frame and\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\n        // request its own.\n        if (scheduler.actions.length === 0) {\n            AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction_1.AsyncAction));\nexports.AnimationFrameAction = AnimationFrameAction;\n//# sourceMappingURL=AnimationFrameAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AnimationFrameAction.js\n// module id = 383\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar AsyncScheduler_1 = require(\"./AsyncScheduler\");\nvar AnimationFrameScheduler = (function (_super) {\n    tslib_1.__extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnimationFrameScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AnimationFrameScheduler = AnimationFrameScheduler;\n//# sourceMappingURL=AnimationFrameScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AnimationFrameScheduler.js\n// module id = 384\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Immediate_1 = require(\"../util/Immediate\");\nvar AsyncAction_1 = require(\"./AsyncAction\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsapAction = (function (_super) {\n    tslib_1.__extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If a microtask has already been scheduled, don't schedule another\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n        // the current scheduled microtask id.\n        return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested microtask and\n        // set the scheduled flag to undefined so the next AsapAction will schedule\n        // its own.\n        if (scheduler.actions.length === 0) {\n            Immediate_1.Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction_1.AsyncAction));\nexports.AsapAction = AsapAction;\n//# sourceMappingURL=AsapAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsapAction.js\n// module id = 385\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar AsyncScheduler_1 = require(\"./AsyncScheduler\");\nvar AsapScheduler = (function (_super) {\n    tslib_1.__extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AsapScheduler = AsapScheduler;\n//# sourceMappingURL=AsapScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsapScheduler.js\n// module id = 386\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar AsyncAction_1 = require(\"./AsyncAction\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    tslib_1.__extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nexports.QueueAction = QueueAction;\n//# sourceMappingURL=QueueAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/QueueAction.js\n// module id = 387\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar AsyncScheduler_1 = require(\"./AsyncScheduler\");\nvar QueueScheduler = (function (_super) {\n    tslib_1.__extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.QueueScheduler = QueueScheduler;\n//# sourceMappingURL=QueueScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/QueueScheduler.js\n// module id = 388\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AnimationFrameAction_1 = require(\"./AnimationFrameAction\");\nvar AnimationFrameScheduler_1 = require(\"./AnimationFrameScheduler\");\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * @example <caption>Schedule div height animation</caption>\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n *\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\nexports.animationFrame = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/animationFrame.js\n// module id = 389\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar Subscription_1 = require(\"../Subscription\");\nvar SubscriptionLoggable_1 = require(\"./SubscriptionLoggable\");\nvar applyMixins_1 = require(\"../util/applyMixins\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ColdObservable = (function (_super) {\n    tslib_1.__extends(ColdObservable, _super);\n    function ColdObservable(messages, scheduler) {\n        var _this = _super.call(this, function (subscriber) {\n            var observable = this;\n            var index = observable.logSubscribedFrame();\n            subscriber.add(new Subscription_1.Subscription(function () {\n                observable.logUnsubscribedFrame(index);\n            }));\n            observable.scheduleMessages(subscriber);\n            return subscriber;\n        }) || this;\n        _this.messages = messages;\n        _this.subscriptions = [];\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    ColdObservable.prototype.scheduleMessages = function (subscriber) {\n        var messagesLength = this.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            var message = this.messages[i];\n            subscriber.add(this.scheduler.schedule(function (_a) {\n                var message = _a.message, subscriber = _a.subscriber;\n                message.notification.observe(subscriber);\n            }, message.frame, { message: message, subscriber: subscriber }));\n        }\n    };\n    return ColdObservable;\n}(Observable_1.Observable));\nexports.ColdObservable = ColdObservable;\napplyMixins_1.applyMixins(ColdObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n//# sourceMappingURL=ColdObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/testing/ColdObservable.js\n// module id = 390\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subject_1 = require(\"../Subject\");\nvar Subscription_1 = require(\"../Subscription\");\nvar SubscriptionLoggable_1 = require(\"./SubscriptionLoggable\");\nvar applyMixins_1 = require(\"../util/applyMixins\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar HotObservable = (function (_super) {\n    tslib_1.__extends(HotObservable, _super);\n    function HotObservable(messages, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.messages = messages;\n        _this.subscriptions = [];\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    HotObservable.prototype._subscribe = function (subscriber) {\n        var subject = this;\n        var index = subject.logSubscribedFrame();\n        subscriber.add(new Subscription_1.Subscription(function () {\n            subject.logUnsubscribedFrame(index);\n        }));\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    HotObservable.prototype.setup = function () {\n        var subject = this;\n        var messagesLength = subject.messages.length;\n        /* tslint:disable:no-var-keyword */\n        for (var i = 0; i < messagesLength; i++) {\n            (function () {\n                var message = subject.messages[i];\n                /* tslint:enable */\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    };\n    return HotObservable;\n}(Subject_1.Subject));\nexports.HotObservable = HotObservable;\napplyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n//# sourceMappingURL=HotObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/testing/HotObservable.js\n// module id = 391\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Observable_1 = require(\"../Observable\");\nvar Notification_1 = require(\"../Notification\");\nvar ColdObservable_1 = require(\"./ColdObservable\");\nvar HotObservable_1 = require(\"./HotObservable\");\nvar SubscriptionLog_1 = require(\"./SubscriptionLog\");\nvar VirtualTimeScheduler_1 = require(\"../scheduler/VirtualTimeScheduler\");\nvar defaultMaxFrame = 750;\nvar TestScheduler = (function (_super) {\n    tslib_1.__extends(TestScheduler, _super);\n    function TestScheduler(assertDeepEqual) {\n        var _this = _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame) || this;\n        _this.assertDeepEqual = assertDeepEqual;\n        _this.hotObservables = [];\n        _this.coldObservables = [];\n        _this.flushTests = [];\n        return _this;\n    }\n    TestScheduler.prototype.createTime = function (marbles) {\n        var indexOf = marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    };\n    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var cold = new ColdObservable_1.ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    };\n    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var subject = new HotObservable_1.HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    };\n    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n        var _this = this;\n        var messages = [];\n        observable.subscribe(function (value) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });\n        }, function (err) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });\n        }, function () {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });\n        });\n        return messages;\n    };\n    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {\n        var _this = this;\n        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }\n        var actual = [];\n        var flushTest = { actual: actual, ready: false };\n        var unsubscriptionFrame = TestScheduler\n            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n        var subscription;\n        this.schedule(function () {\n            subscription = observable.subscribe(function (x) {\n                var value = x;\n                // Support Observable-of-Observables\n                if (x instanceof Observable_1.Observable) {\n                    value = _this.materializeInnerObservable(value, _this.frame);\n                }\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });\n            }, function (err) {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });\n            }, function () {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });\n            });\n        }, 0);\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n            }\n        };\n    };\n    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n        var flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles) {\n                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray.map(function (marbles) {\n                    return TestScheduler.parseMarblesAsSubscriptions(marbles);\n                });\n            }\n        };\n    };\n    TestScheduler.prototype.flush = function () {\n        var hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        _super.prototype.flush.call(this);\n        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });\n        while (readyFlushTests.length > 0) {\n            var test_1 = readyFlushTests.shift();\n            this.assertDeepEqual(test_1.actual, test_1.expected);\n        }\n    };\n    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);\n        }\n        var len = marbles.length;\n        var groupStart = -1;\n        var subscriptionFrame = Number.POSITIVE_INFINITY;\n        var unsubscriptionFrame = Number.POSITIVE_INFINITY;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\n            }\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    };\n    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {\n        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' +\n                'unsubscription marker \"!\"');\n        }\n        var len = marbles.length;\n        var testMessages = [];\n        var subIndex = marbles.indexOf('^');\n        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n        var getValue = typeof values !== 'object' ?\n            function (x) { return x; } :\n            function (x) {\n                // Support Observable-of-Observables\n                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        var groupStart = -1;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor + frameOffset;\n            var notification = void 0;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '|':\n                    notification = Notification_1.Notification.createComplete();\n                    break;\n                case '^':\n                    break;\n                case '#':\n                    notification = Notification_1.Notification.createError(errorValue || 'error');\n                    break;\n                default:\n                    notification = Notification_1.Notification.createNext(getValue(c));\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });\n            }\n        }\n        return testMessages;\n    };\n    return TestScheduler;\n}(VirtualTimeScheduler_1.VirtualTimeScheduler));\nexports.TestScheduler = TestScheduler;\n//# sourceMappingURL=TestScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/testing/TestScheduler.js\n// module id = 392\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = require(\"./root\");\nvar RequestAnimationFrameDefinition = (function () {\n    function RequestAnimationFrameDefinition(root) {\n        if (root.requestAnimationFrame) {\n            this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.requestAnimationFrame.bind(root);\n        }\n        else if (root.mozRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);\n        }\n        else if (root.webkitRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);\n        }\n        else if (root.msRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);\n        }\n        else if (root.oRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);\n        }\n        else {\n            this.cancelAnimationFrame = root.clearTimeout.bind(root);\n            this.requestAnimationFrame = function (cb) { return root.setTimeout(cb, 1000 / 60); };\n        }\n    }\n    return RequestAnimationFrameDefinition;\n}());\nexports.RequestAnimationFrameDefinition = RequestAnimationFrameDefinition;\nexports.AnimationFrame = new RequestAnimationFrameDefinition(root_1.root);\n//# sourceMappingURL=AnimationFrame.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/AnimationFrame.js\n// module id = 393\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FastMap = (function () {\n    function FastMap() {\n        this.values = {};\n    }\n    FastMap.prototype.delete = function (key) {\n        this.values[key] = null;\n        return true;\n    };\n    FastMap.prototype.set = function (key, value) {\n        this.values[key] = value;\n        return this;\n    };\n    FastMap.prototype.get = function (key) {\n        return this.values[key];\n    };\n    FastMap.prototype.forEach = function (cb, thisArg) {\n        var values = this.values;\n        for (var key in values) {\n            if (values.hasOwnProperty(key) && values[key] !== null) {\n                cb.call(thisArg, values[key], key);\n            }\n        }\n    };\n    FastMap.prototype.clear = function () {\n        this.values = {};\n    };\n    return FastMap;\n}());\nexports.FastMap = FastMap;\n//# sourceMappingURL=FastMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/FastMap.js\n// module id = 394\n// module chunks = 0 1 2","\"use strict\";\n/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = require(\"./root\");\nvar ImmediateDefinition = (function () {\n    function ImmediateDefinition(root) {\n        this.root = root;\n        if (root.setImmediate && typeof root.setImmediate === 'function') {\n            this.setImmediate = root.setImmediate.bind(root);\n            this.clearImmediate = root.clearImmediate.bind(root);\n        }\n        else {\n            this.nextHandle = 1;\n            this.tasksByHandle = {};\n            this.currentlyRunningATask = false;\n            // Don't get fooled by e.g. browserify environments.\n            if (this.canUseProcessNextTick()) {\n                // For Node.js before 0.9\n                this.setImmediate = this.createProcessNextTickSetImmediate();\n            }\n            else if (this.canUsePostMessage()) {\n                // For non-IE10 modern browsers\n                this.setImmediate = this.createPostMessageSetImmediate();\n            }\n            else if (this.canUseMessageChannel()) {\n                // For web workers, where supported\n                this.setImmediate = this.createMessageChannelSetImmediate();\n            }\n            else if (this.canUseReadyStateChange()) {\n                // For IE 6–8\n                this.setImmediate = this.createReadyStateChangeSetImmediate();\n            }\n            else {\n                // For older browsers\n                this.setImmediate = this.createSetTimeoutSetImmediate();\n            }\n            var ci = function clearImmediate(handle) {\n                delete clearImmediate.instance.tasksByHandle[handle];\n            };\n            ci.instance = this;\n            this.clearImmediate = ci;\n        }\n    }\n    ImmediateDefinition.prototype.identify = function (o) {\n        return this.root.Object.prototype.toString.call(o);\n    };\n    ImmediateDefinition.prototype.canUseProcessNextTick = function () {\n        return this.identify(this.root.process) === '[object process]';\n    };\n    ImmediateDefinition.prototype.canUseMessageChannel = function () {\n        return Boolean(this.root.MessageChannel);\n    };\n    ImmediateDefinition.prototype.canUseReadyStateChange = function () {\n        var document = this.root.document;\n        return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n    };\n    ImmediateDefinition.prototype.canUsePostMessage = function () {\n        var root = this.root;\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `root.postMessage` means something completely different and can't be used for this purpose.\n        if (root.postMessage && !root.importScripts) {\n            var postMessageIsAsynchronous_1 = true;\n            var oldOnMessage = root.onmessage;\n            root.onmessage = function () {\n                postMessageIsAsynchronous_1 = false;\n            };\n            root.postMessage('', '*');\n            root.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous_1;\n        }\n        return false;\n    };\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    ImmediateDefinition.prototype.partiallyApplied = function (handler) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var fn = function result() {\n            var _a = result, handler = _a.handler, args = _a.args;\n            if (typeof handler === 'function') {\n                handler.apply(undefined, args);\n            }\n            else {\n                (new Function('' + handler))();\n            }\n        };\n        fn.handler = handler;\n        fn.args = args;\n        return fn;\n    };\n    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {\n        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n        return this.nextHandle++;\n    };\n    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n        var root = this.root;\n        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n        var onGlobalMessage = function globalMessageHandler(event) {\n            var instance = globalMessageHandler.instance;\n            if (event.source === root &&\n                typeof event.data === 'string' &&\n                event.data.indexOf(messagePrefix) === 0) {\n                instance.runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n        onGlobalMessage.instance = this;\n        root.addEventListener('message', onGlobalMessage, false);\n        var fn = function setImmediate() {\n            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.postMessage(messagePrefix + handle, '*');\n            return handle;\n        };\n        fn.instance = this;\n        fn.messagePrefix = messagePrefix;\n        return fn;\n    };\n    ImmediateDefinition.prototype.runIfPresent = function (handle) {\n        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (this.currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // 'too much recursion' error.\n            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n        }\n        else {\n            var task = this.tasksByHandle[handle];\n            if (task) {\n                this.currentlyRunningATask = true;\n                try {\n                    task();\n                }\n                finally {\n                    this.clearImmediate(handle);\n                    this.currentlyRunningATask = false;\n                }\n            }\n        }\n    };\n    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {\n        var _this = this;\n        var channel = new this.root.MessageChannel();\n        channel.port1.onmessage = function (event) {\n            var handle = event.data;\n            _this.runIfPresent(handle);\n        };\n        var fn = function setImmediate() {\n            var _a = setImmediate, channel = _a.channel, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n        fn.channel = channel;\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var root = instance.root;\n            var doc = root.document;\n            var html = doc.documentElement;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement('script');\n            script.onreadystatechange = function () {\n                instance.runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    return ImmediateDefinition;\n}());\nexports.ImmediateDefinition = ImmediateDefinition;\nexports.Immediate = new ImmediateDefinition(root_1.root);\n//# sourceMappingURL=Immediate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/Immediate.js\n// module id = 395\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = require(\"./root\");\nvar MapPolyfill_1 = require(\"./MapPolyfill\");\nexports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();\n//# sourceMappingURL=Map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/Map.js\n// module id = 396\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MapPolyfill = (function () {\n    function MapPolyfill() {\n        this.size = 0;\n        this._values = [];\n        this._keys = [];\n    }\n    MapPolyfill.prototype.get = function (key) {\n        var i = this._keys.indexOf(key);\n        return i === -1 ? undefined : this._values[i];\n    };\n    MapPolyfill.prototype.set = function (key, value) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            this._keys.push(key);\n            this._values.push(value);\n            this.size++;\n        }\n        else {\n            this._values[i] = value;\n        }\n        return this;\n    };\n    MapPolyfill.prototype.delete = function (key) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            return false;\n        }\n        this._values.splice(i, 1);\n        this._keys.splice(i, 1);\n        this.size--;\n        return true;\n    };\n    MapPolyfill.prototype.clear = function () {\n        this._keys.length = 0;\n        this._values.length = 0;\n        this.size = 0;\n    };\n    MapPolyfill.prototype.forEach = function (cb, thisArg) {\n        for (var i = 0; i < this.size; i++) {\n            cb.call(thisArg, this._values[i], this._keys[i]);\n        }\n    };\n    return MapPolyfill;\n}());\nexports.MapPolyfill = MapPolyfill;\n//# sourceMappingURL=MapPolyfill.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/MapPolyfill.js\n// module id = 397\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = require(\"./root\");\nfunction minimalSetImpl() {\n    // THIS IS NOT a full impl of Set, this is just the minimum\n    // bits of functionality we need for this library.\n    return (function () {\n        function MinimalSet() {\n            this._values = [];\n        }\n        MinimalSet.prototype.add = function (value) {\n            if (!this.has(value)) {\n                this._values.push(value);\n            }\n        };\n        MinimalSet.prototype.has = function (value) {\n            return this._values.indexOf(value) !== -1;\n        };\n        Object.defineProperty(MinimalSet.prototype, \"size\", {\n            get: function () {\n                return this._values.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MinimalSet.prototype.clear = function () {\n            this._values.length = 0;\n        };\n        return MinimalSet;\n    }());\n}\nexports.minimalSetImpl = minimalSetImpl;\nexports.Set = root_1.root.Set || minimalSetImpl();\n//# sourceMappingURL=Set.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/Set.js\n// module id = 398\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar root_1 = require(\"./root\");\nfunction assignImpl(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    var len = sources.length;\n    for (var i = 0; i < len; i++) {\n        var source = sources[i];\n        for (var k in source) {\n            if (source.hasOwnProperty(k)) {\n                target[k] = source[k];\n            }\n        }\n    }\n    return target;\n}\nexports.assignImpl = assignImpl;\nfunction getAssign(root) {\n    return root.Object.assign || assignImpl;\n}\nexports.getAssign = getAssign;\nexports.assign = getAssign(root_1.root);\n//# sourceMappingURL=assign.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/assign.js\n// module id = 399\n// module chunks = 0 1 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\nexports.not = not;\n//# sourceMappingURL=not.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/not.js\n// module id = 400\n// module chunks = 0 1 2","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 401\n// module chunks = 0 1 2","// angular\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n// services\r\nimport { AxisCalculator, axisCalculatorParams } from \"./services/axis_calculator.service\";\r\n// components\r\nimport { FaqComponent } from \"../shared/faq.component/faq.component\";\r\nimport { CalculatorComponent } from \"./calculator.component/calculator.component\";\r\nimport { AxisSettingsComponent } from \"./axis_settings.component/axis_settings.component\";\r\nimport { SharedModule } from \"../shared/\";\r\n\r\nconst routes: Routes = [\r\n  //{ path: '', redirectTo: 'calculator', pathMatch: 'full' },\r\n  { path: 'calculator', component: CalculatorComponent },\r\n  { path: 'settings', component: AxisSettingsComponent },\r\n  { path: 'faq', component: FaqComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CalculatorComponent,\r\n    AxisSettingsComponent,\r\n  ],\r\n  providers: [\r\n    { provide: AxisCalculator, useFactory () {\r\n        const axisCalculatorSettings: axisCalculatorParams = {\r\n          accuracy: {\r\n            min: 0,\r\n            max: 15,\r\n            default: 2,\r\n          },\r\n\r\n          maxSum: {\r\n            min: 0,\r\n            max: 1000,\r\n            default: {\r\n              min: -20,\r\n              max: 20,\r\n            },\r\n            initValue: 1,\r\n          },\r\n\r\n          maxWave: {\r\n            min: 0,\r\n            max: 1000,\r\n            default: {\r\n              min: 0,\r\n              max: 20,\r\n            },\r\n            initR: 1,\r\n            initQS: 0,\r\n          },\r\n        };\r\n\r\n        return new AxisCalculator (axisCalculatorSettings);\r\n      }\r\n    },\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild (routes),\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n})\r\n\r\nexport class AxisHeartModule {}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/axis-heart/index.ts","// angular\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n// services\r\nimport { ArrhythmiaService, arrhythmiaServiceSettings } from \"./services/arrhythmia.service\";\r\n// components\r\nimport { FaqComponent } from \"../shared/faq.component/faq.component\";\r\nimport { ArrhythmiaComponent } from \"./arrhythmia.component/arrhythmia.component\";\r\nimport { ArrhythmiaSettingsComponent } from \"./arrhythmia_settings.component/arrhythmia_settings.component\";\r\nimport { SharedModule } from \"../shared/\";\r\n\r\nconst routes: Routes = [\r\n  //{ path: '', redirectTo: 'calculator', pathMatch: 'full' },\r\n  { path: 'calculator', component: ArrhythmiaComponent },\r\n  { path: 'settings', component: ArrhythmiaSettingsComponent },\r\n  { path: 'faq', component: FaqComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ArrhythmiaComponent,\r\n    ArrhythmiaSettingsComponent,\r\n  ],\r\n  providers: [\r\n    { provide: ArrhythmiaService, useFactory () {\r\n        const settings: arrhythmiaServiceSettings = {\r\n          coefficient: {\r\n            min: 1,\r\n            max: 100,\r\n            init: 15\r\n          },\r\n          difference: {\r\n            min: 1,\r\n            max: 1000,\r\n            init: 120\r\n          },\r\n          accuracy: {\r\n            min: 0,\r\n            max: 15,\r\n            init: 2\r\n          },\r\n          interval: {\r\n            min: 200,\r\n            max: 3000,\r\n            init: 1000\r\n          },\r\n          moreThenOnly: true\r\n        };\r\n\r\n        return new ArrhythmiaService (settings);\r\n      }\r\n    },\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild (routes),\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n})\r\n\r\nexport class IsArrhythmiaModule {}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/is-arrhythmia/index.ts","// angular\r\nimport { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n// services and helpers\r\nimport { verifyNum, checkMinimum, checkMaximum } from \"../../helpers/validators\";\r\nimport { AxisCalculator } from \"../services/axis_calculator.service\";\r\nimport { AppState } from \"../../services/app_state.service\";\r\n// components\r\nimport { SettingsFieldComponent } from \"../../shared/settings_field.component/settings_field.component\";\r\n\r\n@Component ({\r\n  selector: 'axis-settings',\r\n  template: require('./axis_settings.component.html')\r\n})\r\n\r\nexport class AxisSettingsComponent implements OnInit, OnDestroy {\r\n  settingsForm: FormGroup;\r\n  accuracy: AbstractControl;\r\n  maxSum: AbstractControl;\r\n  maxWave: AbstractControl;\r\n  useSumsField: AbstractControl;\r\n  useSums: boolean;\r\n  formChanged: boolean;\r\n  message: string;\r\n  messageLoop: any;\r\n\r\n  constructor (\r\n    fb: FormBuilder,\r\n    public axisCalculatorModel: AxisCalculator,\r\n    public state: AppState\r\n  ) {\r\n    this.useSums = state.getValue ('useSums').use;\r\n\r\n    this.settingsForm = fb.group({\r\n      'accuracy': [\r\n        this.axisCalculatorModel.settings.accuracy.default,\r\n        Validators.compose(\r\n          [\r\n            Validators.required,\r\n            verifyNum,\r\n            checkMinimum (this.axisCalculatorModel.settings.accuracy.min),\r\n            checkMaximum (this.axisCalculatorModel.settings.accuracy.max)\r\n          ]\r\n        )\r\n      ],\r\n      'maxSum': [\r\n        this.axisCalculatorModel.settings.maxSum.default.max,\r\n        Validators.compose(\r\n          [\r\n            Validators.required,\r\n            verifyNum,\r\n            checkMinimum (this.axisCalculatorModel.settings.maxSum.min),\r\n            checkMaximum (this.axisCalculatorModel.settings.maxSum.max)\r\n          ]\r\n        )\r\n      ],\r\n      'maxWave': [\r\n        this.axisCalculatorModel.settings.maxWave.default.max,\r\n        Validators.compose(\r\n          [\r\n            Validators.required,\r\n            verifyNum,\r\n            checkMinimum (this.axisCalculatorModel.settings.maxWave.min),\r\n            checkMaximum (this.axisCalculatorModel.settings.maxWave.max)\r\n          ]\r\n        )\r\n      ],\r\n      'useSums': [\r\n        !this.useSums\r\n      ],\r\n    });\r\n\r\n    this.accuracy = this.settingsForm.controls['accuracy'];\r\n    this.maxSum = this.settingsForm.controls['maxSum'];\r\n    this.maxWave = this.settingsForm.controls['maxWave'];\r\n    this.useSumsField = this.settingsForm.controls['useSums'];\r\n\r\n    state.getStream ('useSums').subscribe ((value) => {\r\n      this.useSums = value.use;\r\n    });\r\n\r\n    this.settingsForm.valueChanges.subscribe((data) => {\r\n      this.formChanged = this.checkFormChanges (data);\r\n    });\r\n\r\n    this.useSumsField.valueChanges.subscribe((data) => {\r\n      this.changeInputs (!data);\r\n    });\r\n  }\r\n\r\n  ngOnInit (): void {\r\n    let formValue = sessionStorage.getItem('lastSettings');\r\n\r\n    if (formValue !== null) {\r\n      this.settingsForm.setValue (JSON.parse(formValue));\r\n      this.setSettings ();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n    sessionStorage.setItem('lastSettings', JSON.stringify(this.settingsForm.value));\r\n  }\r\n\r\n  onSubmit (val: object): void {\r\n    if (this.settingsForm.valid) {\r\n      this.setSettings ();\r\n      this.formChanged = false;\r\n      this.showResult ('сохранено');\r\n    }\r\n  }\r\n\r\n  setSettings (): void {\r\n    this.axisCalculatorModel\r\n      .setAccuracy (this.accuracy.value)\r\n      .setMaxSum (-1 * this.maxSum.value, this.maxSum.value)\r\n      .setMaxWave (this.maxWave.value);\r\n  }\r\n\r\n  reset (event: MouseEvent): void {\r\n    event.preventDefault ();\r\n    this.accuracy.reset (this.axisCalculatorModel.settings.accuracy.default);\r\n    this.maxSum.reset (this.axisCalculatorModel.settings.maxSum.default.max);\r\n    this.maxWave.reset (this.axisCalculatorModel.settings.maxWave.default.max);\r\n    this.state.toggle ('useSums', true);\r\n    this.setSettings ();\r\n    this.formChanged = false;\r\n    this.showResult ('сброшено');\r\n  }\r\n\r\n  changeInputs (direction: boolean): void {\r\n    this.state.toggle ('useSums', direction);\r\n  }\r\n\r\n  showResult (message: string): void {\r\n    this.message = message;\r\n    if (this.messageLoop) {\r\n      clearTimeout (this.messageLoop);\r\n    }\r\n\r\n    this.messageLoop = setTimeout (() => {\r\n      this.message = void (0);\r\n    }, 3000);\r\n  }\r\n\r\n  checkFormChanges (val: object): boolean {\r\n    return val['accuracy'] !== this.axisCalculatorModel.accuracy\r\n      || val['maxSum'] !== this.axisCalculatorModel.maxSum.max\r\n      || val['maxWave'] !== this.axisCalculatorModel.maxWave.max\r\n      || val['useSums'] === this.useSums;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/axis-heart/axis_settings.component/axis_settings.component.ts","// angular\r\nimport { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n// services and helpers\r\nimport { verifyNum, checkMinimum, checkMaximum, allValuesNotZero, sumOfValuesNotZero } from \"../../helpers/validators\";\r\nimport { AxisCalculator } from \"../services/axis_calculator.service\";\r\nimport { AppState } from \"../../services/app_state.service\";\r\n// components\r\nimport { SumFieldComponent } from \"../../shared/sum_field.component/sum_field.component\";\r\n\r\n@Component ({\r\n  selector: 'calc',\r\n  template: require('./calculator.component.html'),\r\n})\r\n\r\nexport class CalculatorComponent implements OnInit, OnDestroy {\r\n  calculatorForm: FormGroup;\r\n  sumI: AbstractControl;\r\n  sumIII: AbstractControl;\r\n  r1: AbstractControl;\r\n  qs1: AbstractControl;\r\n  r3: AbstractControl;\r\n  qs3: AbstractControl;\r\n  outputValue: string;\r\n  useSums: boolean;\r\n\r\n  constructor (\r\n    fb: FormBuilder,\r\n    public axisCalculatorModel: AxisCalculator,\r\n    public state: AppState\r\n  ) {\r\n    this.calculatorForm = fb.group({\r\n        'sumI': [\r\n          this.axisCalculatorModel.settings.maxSum.initValue,\r\n          Validators.compose(\r\n            [\r\n              Validators.required,\r\n              verifyNum,\r\n              checkMinimum (this.axisCalculatorModel.maxSum.min),\r\n              checkMaximum (this.axisCalculatorModel.maxSum.max)\r\n            ]\r\n          )\r\n        ],\r\n        'sumIII': [\r\n          this.axisCalculatorModel.settings.maxSum.initValue,\r\n          Validators.compose(\r\n            [\r\n              Validators.required,\r\n              verifyNum,\r\n              checkMinimum (this.axisCalculatorModel.maxSum.min),\r\n              checkMaximum (this.axisCalculatorModel.maxSum.max)\r\n            ]\r\n          )\r\n        ],\r\n        'r1': [\r\n          this.axisCalculatorModel.settings.maxWave.initR,\r\n          Validators.compose(\r\n            [\r\n              Validators.required,\r\n              verifyNum,\r\n              checkMinimum (this.axisCalculatorModel.maxWave.min),\r\n              checkMaximum (this.axisCalculatorModel.maxWave.max)\r\n            ]\r\n          )\r\n        ],\r\n        'qs1': [\r\n          this.axisCalculatorModel.settings.maxWave.initQS,\r\n          Validators.compose(\r\n            [\r\n              Validators.required,\r\n              verifyNum,\r\n              checkMinimum (this.axisCalculatorModel.maxWave.min),\r\n              checkMaximum (this.axisCalculatorModel.maxWave.max)\r\n            ]\r\n          )\r\n        ],\r\n        'r3': [\r\n          this.axisCalculatorModel.settings.maxWave.initR,\r\n          Validators.compose(\r\n            [\r\n              Validators.required,\r\n              verifyNum,\r\n              checkMinimum (this.axisCalculatorModel.maxWave.min),\r\n              checkMaximum (this.axisCalculatorModel.maxWave.max)\r\n            ]\r\n          )\r\n        ],\r\n        'qs3': [\r\n          this.axisCalculatorModel.settings.maxWave.initQS,\r\n          Validators.compose(\r\n            [\r\n              Validators.required,\r\n              verifyNum,\r\n              checkMinimum (this.axisCalculatorModel.maxWave.min),\r\n              checkMaximum (this.axisCalculatorModel.maxWave.max)\r\n            ]\r\n          )\r\n        ],\r\n    }, { validator: Validators.compose(\r\n        [\r\n          allValuesNotZero ('sumI', 'sumIII'),\r\n          sumOfValuesNotZero (['r1', 'qs1'], ['r3', 'qs3']),\r\n        ]\r\n      )\r\n    });\r\n\r\n    this.sumI = this.calculatorForm.controls['sumI'];\r\n    this.sumIII = this.calculatorForm.controls['sumIII'];\r\n    this.r1 = this.calculatorForm.controls['r1'];\r\n    this.qs1 = this.calculatorForm.controls['qs1'];\r\n    this.r3 = this.calculatorForm.controls['r3'];\r\n    this.qs3 = this.calculatorForm.controls['qs3'];\r\n\r\n    this.calculatorForm.valueChanges.subscribe (() => {\r\n      this.displayValue ();\r\n    });\r\n\r\n    this.useSums = this.state.getValue ('useSums').use;\r\n\r\n    this.state.getStream ('useSums').subscribe ((value) => {\r\n      this.useSums = value.use;\r\n      if (this.useSums) {\r\n        this.resetWaves ();\r\n      } else {\r\n        this.resetSums ();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit (): void {\r\n    let formValue = sessionStorage.getItem('lastSums');\r\n\r\n    if (formValue !== null) {\r\n      this.calculatorForm.setValue (JSON.parse(formValue));\r\n    }\r\n\r\n    if (this.useSums) {\r\n      this.resetWaves ();\r\n    } else {\r\n      this.resetSums ();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n    sessionStorage.setItem('lastSums', JSON.stringify(this.calculatorForm.value));\r\n  }\r\n\r\n  getValue (): number {\r\n    if (this.useSums) {\r\n      return this.axisCalculatorModel.countAngle(this.sumI.value, this.sumIII.value);\r\n    } else {\r\n      return this.axisCalculatorModel.countSumsThenAngle(\r\n        this.r1.value,\r\n        this.qs1.value,\r\n        this.r3.value,\r\n        this.qs3.value\r\n      );\r\n    }\r\n  }\r\n\r\n  displayValue (): void {\r\n    if (this.calculatorForm.invalid) {\r\n      this.outputValue = 'Форма заполнена не корректно';\r\n    } else {\r\n      try {\r\n        let result: number = this.getValue();\r\n\r\n        if (isNaN(result)) {\r\n          throw new Error ('result is not a number');\r\n        }\r\n\r\n        this.outputValue = `${result}°`;\r\n      } catch (error) {\r\n        this.outputValue = 'Форма заполнена не корректно';\r\n      }\r\n    }\r\n  }\r\n\r\n  reset (event: MouseEvent): void {\r\n    event.preventDefault ();\r\n    this.resetSums ();\r\n    this.resetWaves ();\r\n  }\r\n\r\n  resetSums (): void {\r\n    this.sumI.reset (this.axisCalculatorModel.settings.maxSum.initValue);\r\n    this.sumIII.reset (this.axisCalculatorModel.settings.maxSum.initValue);\r\n  }\r\n\r\n  resetWaves (): void {\r\n    this.r1.reset (this.axisCalculatorModel.settings.maxWave.initR);\r\n    this.qs1.reset (this.axisCalculatorModel.settings.maxWave.initQS);\r\n    this.r3.reset (this.axisCalculatorModel.settings.maxWave.initR);\r\n    this.qs3.reset (this.axisCalculatorModel.settings.maxWave.initQS);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/axis-heart/calculator.component/calculator.component.ts","// angular\r\nimport { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n// services and helpers\r\nimport { verifyNum, checkMinimum, checkMaximum } from \"../../helpers/validators\";\r\nimport { ArrhythmiaService } from '../services/arrhythmia.service';\r\nimport { AppState } from \"../../services/app_state.service\";\r\n// components\r\nimport { SumFieldComponent } from \"../../shared/sum_field.component/sum_field.component\";\r\n\r\n@Component ({\r\n  selector: 'arrhythmia',\r\n  template: require('./arrhythmia.component.html'),\r\n})\r\n\r\nexport class ArrhythmiaComponent implements OnInit, OnDestroy {\r\n  arrhythmiaForm: FormGroup;\r\n  pp1: AbstractControl;\r\n  pp2: AbstractControl;\r\n  output: string;\r\n  useSeconds: boolean;\r\n  isArrhythmia: boolean = false;\r\n  usePercentage: boolean;\r\n\r\n  constructor (\r\n    fb: FormBuilder,\r\n    public arrhythmiaModel: ArrhythmiaService,\r\n    public state: AppState\r\n  ) {\r\n    this.arrhythmiaForm = fb.group({\r\n        'pp1': [\r\n          this.arrhythmiaModel.settings.interval.init,\r\n          Validators.compose(\r\n            [\r\n              Validators.required,\r\n              verifyNum,\r\n              checkMinimum (this.arrhythmiaModel.settings.interval.min),\r\n              checkMaximum (this.arrhythmiaModel.settings.interval.max)\r\n            ]\r\n          )\r\n        ],\r\n        'pp2': [\r\n          this.arrhythmiaModel.settings.interval.init,\r\n          Validators.compose(\r\n            [\r\n              Validators.required,\r\n              verifyNum,\r\n              checkMinimum (this.arrhythmiaModel.settings.interval.min),\r\n              checkMaximum (this.arrhythmiaModel.settings.interval.max)\r\n            ]\r\n          )\r\n        ],\r\n    });\r\n\r\n    this.pp1 = this.arrhythmiaForm.controls['pp1'];\r\n    this.pp2 = this.arrhythmiaForm.controls['pp2'];\r\n\r\n    this.arrhythmiaForm.valueChanges.subscribe (() => {\r\n      this.displayValue ();\r\n    });\r\n\r\n    this.usePercentage = state.getValue('usePercentage').use;\r\n    state.getStream('usePercentage').subscribe(value => this.usePercentage = value.use);\r\n  }\r\n\r\n  ngOnInit (): void {\r\n    let formValue = sessionStorage.getItem('lastPP');\r\n\r\n    if (formValue !== null) {\r\n      this.arrhythmiaForm.setValue (JSON.parse(formValue));\r\n    }\r\n\r\n    this.displayValue ();\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n    sessionStorage.setItem('lastPP', JSON.stringify(this.arrhythmiaForm.value));\r\n  }\r\n\r\n  getValue (): number {\r\n    let result: number;\r\n\r\n    if (this.usePercentage) {\r\n      result = this.arrhythmiaModel.countProportion (this.pp1.value, this.pp2.value);\r\n      this.isArrhythmia = this.arrhythmiaModel.isArrhythmia (result, this.arrhythmiaModel.coefficient);\r\n    } else {\r\n      result = this.arrhythmiaModel.countDifferenceTime (this.pp1.value, this.pp2.value);\r\n      this.isArrhythmia = this.arrhythmiaModel.isArrhythmia (result, this.arrhythmiaModel.difference);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  displayValue (): void {\r\n    if (this.arrhythmiaForm.invalid) {\r\n      this.output = 'Форма заполнена не корректно';\r\n    } else {\r\n      let result: number = this.getValue();\r\n\r\n      this.output = `${result} ${this.usePercentage ? '%' : 'мс'}`;\r\n    }\r\n  }\r\n\r\n  reset (event?: MouseEvent): void {\r\n    if (event) {\r\n      event.preventDefault ();\r\n    }\r\n\r\n    this.pp1.reset (this.arrhythmiaModel.settings.interval.init);\r\n    this.pp2.reset (this.arrhythmiaModel.settings.interval.init);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/is-arrhythmia/arrhythmia.component/arrhythmia.component.ts","// angular\r\nimport { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n// services and helpers\r\nimport { verifyNum, checkMinimum, checkMaximum } from \"../../helpers/validators\";\r\nimport { ArrhythmiaService } from \"../services/arrhythmia.service\";\r\nimport { AppState } from \"../../services/app_state.service\";\r\n// components\r\nimport { SettingsFieldComponent } from \"../../shared/settings_field.component/settings_field.component\";\r\n\r\n@Component ({\r\n  selector: 'arrhythmia-settings',\r\n  template: require('./arrhythmia_settings.component.html')\r\n})\r\n\r\nexport class ArrhythmiaSettingsComponent implements OnInit, OnDestroy {\r\n  settingsForm: FormGroup;\r\n  accuracy: AbstractControl;\r\n  coefficient: AbstractControl;\r\n  difference: AbstractControl;\r\n  usePercentageField: AbstractControl;\r\n  moreThenOnlyField: AbstractControl;\r\n  usePercentage: boolean;\r\n  moreThenOnly: boolean;\r\n  formChanged: boolean;\r\n  message: string;\r\n  messageLoop: any;\r\n\r\n  constructor (\r\n    fb: FormBuilder,\r\n    public service: ArrhythmiaService,\r\n    public state: AppState\r\n  ) {\r\n    this.usePercentage = state.getValue ('usePercentage').use;\r\n    this.moreThenOnly = this.service.moreThenOnly;\r\n\r\n    this.settingsForm = fb.group({\r\n      'accuracy': [\r\n        this.service.settings.accuracy.init,\r\n        Validators.compose(\r\n          [\r\n            Validators.required,\r\n            verifyNum,\r\n            checkMinimum (this.service.settings.accuracy.min),\r\n            checkMaximum (this.service.settings.accuracy.max)\r\n          ]\r\n        )\r\n      ],\r\n      'coefficient': [\r\n        this.service.settings.coefficient.init,\r\n        Validators.compose(\r\n          [\r\n            Validators.required,\r\n            verifyNum,\r\n            checkMinimum (this.service.settings.coefficient.min),\r\n            checkMaximum (this.service.settings.coefficient.max)\r\n          ]\r\n        )\r\n      ],\r\n      'difference': [\r\n        this.service.settings.difference.init,\r\n        Validators.compose(\r\n          [\r\n            Validators.required,\r\n            verifyNum,\r\n            checkMinimum (this.service.settings.difference.min),\r\n            checkMaximum (this.service.settings.difference.max)\r\n          ]\r\n        )\r\n      ],\r\n      'moreThenOnly': [\r\n        this.moreThenOnly\r\n      ],\r\n      'usePercentage': [\r\n        this.usePercentage\r\n      ],\r\n    });\r\n\r\n    this.accuracy = this.settingsForm.controls['accuracy'];\r\n    this.coefficient = this.settingsForm.controls['coefficient'];\r\n    this.difference = this.settingsForm.controls['difference'];\r\n    this.usePercentageField = this.settingsForm.controls['usePercentage'];\r\n    this.moreThenOnlyField = this.settingsForm.controls['moreThenOnly'];\r\n\r\n    state.getStream ('usePercentage').subscribe ((value) => {\r\n      this.usePercentage = value.use;\r\n    });\r\n\r\n    this.settingsForm.valueChanges.subscribe((data) => {\r\n      this.formChanged = this.checkFormChanges (data);\r\n    });\r\n\r\n    this.usePercentageField.valueChanges.subscribe((data) => {\r\n      this.state.toggle ('usePercentage', data);\r\n    });\r\n\r\n    this.moreThenOnlyField.valueChanges.subscribe((data) => {\r\n      this.moreThenOnly = data;\r\n      this.service.moreThenOnly = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit (): void {\r\n    let formValue = sessionStorage.getItem('lastArrhythmiaSettings');\r\n\r\n    if (formValue !== null) {\r\n      this.settingsForm.setValue (JSON.parse(formValue));\r\n      this.setSettings ();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n    sessionStorage.setItem('lastArrhythmiaSettings', JSON.stringify(this.settingsForm.value));\r\n  }\r\n\r\n  onSubmit (val: object): void {\r\n    if (this.settingsForm.valid) {\r\n      this.setSettings ();\r\n      this.formChanged = false;\r\n      this.showResult ('сохранено');\r\n    }\r\n  }\r\n\r\n  setSettings (): void {\r\n    this.service.accuracy  = this.accuracy.value;\r\n    this.service.coefficient  = this.coefficient.value;\r\n    this.service.difference  = this.difference.value;\r\n    this.service.moreThenOnly  = this.moreThenOnlyField.value;\r\n  }\r\n\r\n  reset (event: MouseEvent): void {\r\n    event.preventDefault ();\r\n    this.accuracy.reset (this.service.settings.accuracy.init);\r\n    this.coefficient.reset (this.service.settings.coefficient.init);\r\n    this.difference.reset (this.service.settings.difference.init);\r\n    this.moreThenOnlyField.reset (this.service.settings.moreThenOnly);\r\n    this.state.toggle ('usePercentage', true);\r\n    this.setSettings ();\r\n    this.formChanged = false;\r\n    this.showResult ('сброшено');\r\n  }\r\n\r\n  showResult (message: string): void {\r\n    this.message = message;\r\n    if (this.messageLoop) {\r\n      clearTimeout (this.messageLoop);\r\n    }\r\n\r\n    this.messageLoop = setTimeout (() => {\r\n      this.message = void (0);\r\n    }, 3000);\r\n  }\r\n\r\n  checkFormChanges (val: object): boolean {\r\n    return val['accuracy'] !== this.service.accuracy\r\n      || val['coefficient'] !== this.service.coefficient\r\n      || val['difference'] !== this.service.difference\r\n      || val['moreThenOnly'] !== this.service.moreThenOnly;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/is-arrhythmia/arrhythmia_settings.component/arrhythmia_settings.component.ts","module.exports = \"<h2>Настройки</h2> <form id=\\\"count-form\\\" [formGroup]=\\\"settingsForm\\\" (ngSubmit)=\\\"onSubmit(settingsForm.value)\\\" class=\\\"count-form\\\"> <settings-field [input]=\\\"accuracy\\\" [step]=\\\"1\\\" [value]=\\\"axisCalculatorModel.accuracy\\\" [maximum]=\\\"axisCalculatorModel.settings.accuracy.max\\\" [minimum]=\\\"axisCalculatorModel.settings.accuracy.min\\\" [data]=\\\"{\\r\\n        'name': 'accuracy',\\r\\n        'title': 'Точность - количество знаков после запятой.',\\r\\n        'output': 'Точность - '\\r\\n      }\\\"> </settings-field> <settings-field *ngIf=\\\"useSums\\\" [input]=\\\"maxSum\\\" [step]=\\\"1\\\" [value]=\\\"axisCalculatorModel.maxSum.max\\\" [maximum]=\\\"axisCalculatorModel.settings.maxSum.max\\\" [minimum]=\\\"axisCalculatorModel.settings.maxSum.min\\\" [data]=\\\"{\\r\\n        'name': 'maxSum',\\r\\n        'title': 'Максимальная алгебраическая сумма зубцов.',\\r\\n        'output': 'Максимальная сумма - '\\r\\n      }\\\"> </settings-field> <settings-field *ngIf=\\\"!useSums\\\" [input]=\\\"maxWave\\\" [step]=\\\"1\\\" [value]=\\\"axisCalculatorModel.maxWave.max\\\" [maximum]=\\\"axisCalculatorModel.settings.maxWave.max\\\" [minimum]=\\\"axisCalculatorModel.settings.maxWave.min\\\" [data]=\\\"{\\r\\n        'name': 'maxWave',\\r\\n        'title': 'Максимальная амплитуда зубцов.',\\r\\n        'output': 'Максимальная амплитуда - '\\r\\n      }\\\"> </settings-field> <label class=\\\"form-label\\\"> <input name=\\\"use-sums\\\" class=\\\"\\\" type=\\\"checkbox\\\" [formControl]=\\\"useSumsField\\\"> Использовать амплитуды отдельных зубцов </label> <p> <span class=\\\"use-sums-state\\\" *ngIf=\\\"useSums\\\"> Расчитывать используя суммы амплитуд QRS </span> <span class=\\\"use-sums-state\\\" *ngIf=\\\"!useSums\\\"> Расчитывать используя амплитуды зубцов QRS </span> </p> <button id=\\\"to-count\\\" type=\\\"submit\\\">Сохранить</button> <span class=\\\"form-alert\\\" *ngIf=\\\"formChanged\\\">не сохранено</span> <button type=\\\"reset\\\" (click)=\\\"reset($event)\\\">Сбросить</button> <label class=\\\"form-label\\\"> <output *ngIf=\\\"message\\\" id=\\\"message\\\" class=\\\"\\\"> {{ this.message }} </output> </label> </form>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/axis-heart/axis_settings.component/axis_settings.component.html\n// module id = 446\n// module chunks = 0 2","module.exports = \"<h1>Расчет ЭОС</h1> <form id=\\\"count-form\\\" [formGroup]=\\\"calculatorForm\\\" (ngSubmit)=\\\"onSubmit(calculatorForm.value)\\\" class=\\\"count-form\\\"> <sum-field *ngIf=\\\"useSums\\\" [input]=\\\"sumI\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxSum.max\\\" [minimum]=\\\"axisCalculatorModel.maxSum.min\\\" [data]=\\\"{'name':'sumI', 'title':'Алгебраическая сумма зубцов QRS I отведения.'}\\\"> </sum-field> <sum-field *ngIf=\\\"useSums\\\" [input]=\\\"sumIII\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxSum.max\\\" [minimum]=\\\"axisCalculatorModel.maxSum.min\\\" [data]=\\\"{'name':'sumIII', 'title':'Алгебраическая сумма зубцов QRS III отведения.'}\\\"> </sum-field> <sum-field *ngIf=\\\"!useSums\\\" [input]=\\\"r1\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxWave.max\\\" [minimum]=\\\"axisCalculatorModel.maxWave.min\\\" [data]=\\\"{'name':'r1', 'title':'Зубец R I отведения.'}\\\"> </sum-field> <sum-field *ngIf=\\\"!useSums\\\" [input]=\\\"qs1\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxWave.max\\\" [minimum]=\\\"axisCalculatorModel.maxWave.min\\\" [data]=\\\"{'name':'qs1', 'title':'Самый глубокий зубец Q или S I отведения.'}\\\"> </sum-field> <sum-field *ngIf=\\\"!useSums\\\" [input]=\\\"r3\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxWave.max\\\" [minimum]=\\\"axisCalculatorModel.maxWave.min\\\" [data]=\\\"{'name':'r3', 'title':'Зубец R III отведения.'}\\\"> </sum-field> <sum-field *ngIf=\\\"!useSums\\\" [input]=\\\"qs3\\\" [step]=\\\"1\\\" [maximum]=\\\"axisCalculatorModel.maxWave.max\\\" [minimum]=\\\"axisCalculatorModel.maxWave.min\\\" [data]=\\\"{'name':'qs3', 'title':'Самый глубокий зубец Q или S III отведения.'}\\\"> </sum-field> <label>Угл альфа в градусах<br> <output id=\\\"output\\\" class=\\\"\\\"> {{ this.outputValue }} <span class=\\\"form-error\\\" *ngIf=\\\"calculatorForm.hasError('allValueIsZero')\\\"> Все суммы не должны быть равны нулю </span> <span class=\\\"form-error\\\" *ngIf=\\\"calculatorForm.hasError('allSumsIsZero')\\\"> Все суммы амплитуд не должны быть равны нулю </span> </output> </label><br> <button type=\\\"reset\\\" (click)=\\\"reset($event)\\\">Сбросить</button> </form>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/axis-heart/calculator.component/calculator.component.html\n// module id = 447\n// module chunks = 0 2","module.exports = \"<h1>Расчет пропорции интервалов PP</h1> <form action=\\\"\\\" class=\\\"\\\" [formGroup]=\\\"arrhythmiaForm\\\"> <sum-field [input]=\\\"pp1\\\" [step]=\\\"10\\\" [maximum]=\\\"arrhythmiaModel.settings.interval.max\\\" [minimum]=\\\"arrhythmiaModel.settings.interval.min\\\" [data]=\\\"{'name':'pp1', 'title':'P<sub>0</sub>P<sub>1</sub> интервал'}\\\"> </sum-field> <sum-field [input]=\\\"pp2\\\" [step]=\\\"10\\\" [maximum]=\\\"arrhythmiaModel.settings.interval.max\\\" [minimum]=\\\"arrhythmiaModel.settings.interval.min\\\" [data]=\\\"{'name':'pp2', 'title':'P<sub>1</sub>P<sub>2</sub> интервал'}\\\"> </sum-field> <label *ngIf=\\\"useSeconds\\\">Разница в миллисекундах<br> <output class=\\\"\\\"> {{ this.output }} </output> </label><br> <label *ngIf=\\\"!useSeconds\\\">Разница в процентах<br> <output class=\\\"form-output\\\"> {{ this.output }} </output> </label><br> <span class=\\\"form-alert\\\" *ngIf=\\\"isArrhythmia\\\">Аритмия - по данным значениям интервалов PP</span> <button type=\\\"reset\\\" (click)=\\\"reset($event)\\\">Сбросить</button> </form>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/is-arrhythmia/arrhythmia.component/arrhythmia.component.html\n// module id = 448\n// module chunks = 0 1","module.exports = \"<h2>Настройки</h2> <form action=\\\"\\\" [formGroup]=\\\"settingsForm\\\" (ngSubmit)=\\\"onSubmit(settingsForm.value)\\\" class=\\\"count-form\\\"> <settings-field [input]=\\\"accuracy\\\" [step]=\\\"1\\\" [value]=\\\"service.accuracy\\\" [maximum]=\\\"service.settings.accuracy.max\\\" [minimum]=\\\"service.settings.accuracy.min\\\" [data]=\\\"{\\r\\n        'name': 'accuracy',\\r\\n        'title': 'Точность - количество знаков после запятой.',\\r\\n        'output': 'Точность - '\\r\\n      }\\\"> </settings-field> <settings-field *ngIf=\\\"usePercentage\\\" [input]=\\\"coefficient\\\" [step]=\\\"1\\\" [value]=\\\"service.coefficient\\\" [maximum]=\\\"service.settings.coefficient.max\\\" [minimum]=\\\"service.settings.coefficient.min\\\" [data]=\\\"{\\r\\n        'name': 'coefficient',\\r\\n        'title': 'Разница в %, когда диагностируется аритмия',\\r\\n        'output': 'Разница в % - '\\r\\n      }\\\"> </settings-field> <settings-field *ngIf=\\\"!usePercentage\\\" [input]=\\\"difference\\\" [step]=\\\"10\\\" [value]=\\\"service.difference\\\" [maximum]=\\\"service.settings.difference.max\\\" [minimum]=\\\"service.settings.difference.min\\\" [data]=\\\"{\\r\\n        'name': 'difference',\\r\\n        'title': 'Разница в милисекундах, когда диагностируется аритмия',\\r\\n        'output': 'Разница в милисекундах - '\\r\\n      }\\\"> </settings-field> <label class=\\\"form-label\\\"> <input class=\\\"\\\" type=\\\"checkbox\\\" name=\\\"more-then-only\\\" [formControl]=\\\"moreThenOnlyField\\\"> Диагностировать аритмию, когда результат больше разницы </label> <p> <span class=\\\"state-alert\\\" *ngIf=\\\"moreThenOnly\\\"> Расчитывать если результат больше разницы </span> <span class=\\\"state-alert\\\" *ngIf=\\\"!moreThenOnly\\\"> Расчитывать если результат больше и/или равен разницы </span> </p> <label class=\\\"form-label\\\"> <input class=\\\"\\\" type=\\\"checkbox\\\" name=\\\"use-percentage\\\" [formControl]=\\\"usePercentageField\\\"> Использовать разность в % </label> <p> <span class=\\\"state-alert\\\" *ngIf=\\\"usePercentage\\\"> Расчитывать используя разность в % </span> <span class=\\\"state-alert\\\" *ngIf=\\\"!usePercentage\\\"> Расчитывать используя разность в милисекундах </span> </p> <button id=\\\"to-count\\\" type=\\\"submit\\\">Сохранить</button> <span class=\\\"form-alert\\\" *ngIf=\\\"formChanged\\\">не сохранено</span> <button type=\\\"reset\\\" (click)=\\\"reset($event)\\\">Сбросить</button> <label class=\\\"form-label\\\"> <output *ngIf=\\\"message\\\" id=\\\"message\\\" class=\\\"\\\"> {{ this.message }} </output> </label> </form>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/is-arrhythmia/arrhythmia_settings.component/arrhythmia_settings.component.html\n// module id = 449\n// module chunks = 0 1","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AppState } from '../../services/app_state.service';\r\n\r\n@Component ({\r\n  selector: 'calc-wrap',\r\n  template: require('./calc_wrapper.component.html')\r\n})\r\n\r\nexport class CalcWrapperComponent {\r\n  title: string;\r\n  calculatorType: string;\r\n\r\n  constructor (\r\n    private route: ActivatedRoute,\r\n    private state: AppState\r\n  ) {\r\n    route\r\n      .url\r\n      .subscribe ( value => this.calculatorType = value[0].path );\r\n    state\r\n      .getDataStream ('calcWrapperData')\r\n      .subscribe ( value => this.title = value[this.calculatorType].title );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/common/calc_wrapper.component/calc_wrapper.component.ts","import { Component } from \"@angular/core\";\r\n\r\n@Component ({\r\n  selector: 'faq-list',\r\n  template: require('./faq_list.component.html')\r\n})\r\n\r\nexport class FAQListComponent {}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/common/faq_list.component/faq_list.component.ts","import { Component } from \"@angular/core\";\r\n\r\n@Component ({\r\n  selector: 'index',\r\n  template: require('./index.component.html')\r\n})\r\n\r\nexport class IndexComponent {}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/common/index.component/index.component.ts","import { Component } from \"@angular/core\";\r\n\r\n@Component ({\r\n  selector: 'not-found.',\r\n  template: require('./not_found.component.html')\r\n})\r\n\r\nexport class NotFoundComponent {}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/common/not_found.component/not_found.component.ts","// angular\r\nimport { Component, ViewEncapsulation, } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'app',\r\n  template: require('./app.component.html'),\r\n  styles: [\r\n   require('./app.component.scss')\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\n\r\nexport class AppComponent {\r\n\r\n  constructor () {}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/app.component.ts","// angular\r\nimport { Routes } from \"@angular/router\";\r\n// components\r\nimport { NotFoundComponent } from \"./common/not_found.component/not_found.component\";\r\nimport { CalcWrapperComponent } from './common/calc_wrapper.component/calc_wrapper.component';\r\nimport { IndexComponent } from './common/index.component/index.component';\r\nimport { FAQListComponent } from './common/faq_list.component/faq_list.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: IndexComponent\r\n  },\r\n  {\r\n    path: 'heart-axis',\r\n    redirectTo: 'heart-axis/calculator',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'heart-axis',\r\n    component: CalcWrapperComponent,\r\n    loadChildren: () => new Promise(function (resolve) {  (require as any).ensure([], function (require: any) {    resolve(require('.\\\\axis-heart\\\\index')['AxisHeartModule']);  });}),\r\n  },\r\n  {\r\n    path: 'is-arrhythmia',\r\n    redirectTo: 'is-arrhythmia/calculator',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'is-arrhythmia',\r\n    component: CalcWrapperComponent,\r\n    loadChildren: () => new Promise(function (resolve) {  (require as any).ensure([], function (require: any) {    resolve(require('.\\\\is-arrhythmia\\\\index')['IsArrhythmiaModule']);  });}),\r\n  },\r\n  {\r\n    path: 'faq-list',\r\n    component: FAQListComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent\r\n  },\r\n];\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/app.routes.ts","// angular\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { APP_BASE_HREF, LocationStrategy, HashLocationStrategy } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\n// services\r\nimport { AppState } from \"./services/app_state.service\";\r\nimport { routes } from \"./app.routes\";\r\n// app\r\nimport { AppComponent } from \"./app.component\";\r\nimport { CalcWrapperComponent } from \"./common/calc_wrapper.component/calc_wrapper.component\";\r\nimport { NotFoundComponent } from \"./common/not_found.component/not_found.component\";\r\nimport { IndexComponent } from './common/index.component/index.component';\r\nimport { FAQListComponent } from './common/faq_list.component/faq_list.component';\r\n// nested modules\r\nimport { AxisHeartModule } from \"./axis-heart/index\";\r\nimport { IsArrhythmiaModule } from \"./is-arrhythmia/index\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CalcWrapperComponent,\r\n    NotFoundComponent,\r\n    IndexComponent,\r\n    FAQListComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AxisHeartModule,\r\n    IsArrhythmiaModule,\r\n    RouterModule.forRoot(routes),\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  providers: [\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n    { provide: APP_BASE_HREF, useValue: '/' },\r\n    AppState\r\n  ]\r\n})\r\n\r\nexport class AppModule {}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).catch((err: any) => console.error(err));\n\n\n// WEBPACK FOOTER //\n// ./~/angular-router-loader/src!./~/angular2-template-loader!./src/app/app.module.ts","module.exports = \"<h1>Приложение функциональная диагностика.</h1> <nav> <ul> <li><a [routerLink]=\\\"['']\\\" routerLinkActive=\\\"active\\\">Главная</a></li> <ul> <li><a [routerLink]=\\\"['heart-axis']\\\" routerLinkActive=\\\"active\\\">Расчет ЭОС</a></li> <li><a [routerLink]=\\\"['is-arrhythmia']\\\" routerLinkActive=\\\"active\\\">Расчет соотношения PP</a></li> </ul> <li><a [routerLink]=\\\"['faq-list']\\\" routerLinkActive=\\\"active\\\">FAQ</a></li> </ul> </nav> <router-outlet></router-outlet>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 651\n// module chunks = 0","module.exports = \"<h2>{{ title }}</h2> <nav> <ul> <li><a [routerLink]=\\\"['calculator']\\\" routerLinkActive=\\\"active\\\">Калькулятор</a></li> <li><a [routerLink]=\\\"['settings']\\\" routerLinkActive=\\\"active\\\">Настройки расчетов</a></li> <li><a [routerLink]=\\\"['faq']\\\" routerLinkActive=\\\"active\\\">FAQ</a></li> </ul> </nav> <router-outlet></router-outlet>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/common/calc_wrapper.component/calc_wrapper.component.html\n// module id = 652\n// module chunks = 0","module.exports = \"<h2>FAQ список</h2> <p>Общая справка - ...</p> <nav> <h3>Список приложений</h3> <ul> <li><a [routerLink]=\\\"['/heart-axis/faq']\\\">FAQ по расчету ЭОС</a></li> <li><a [routerLink]=\\\"['/is-arrhythmia/faq']\\\">FAQ по расчету соотношения PP</a></li> </ul> </nav> <router-outlet></router-outlet>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/common/faq_list.component/faq_list.component.html\n// module id = 653\n// module chunks = 0","module.exports = \"<p>main page</p>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/common/index.component/index.component.html\n// module id = 654\n// module chunks = 0","module.exports = \"<h2>404</h2> <a href=\\\"/\\\">Вернуться на главную</a>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/common/not_found.component/not_found.component.html\n// module id = 655\n// module chunks = 0","module.exports = \"body{font-family:'Arial', sans-serif;font-weight:400;font-size:1rem;line-height:1.2em;color:#010101}h1{font-family:'Arial', sans-serif;font-weight:600;font-size:40px;line-height:1.2em;color:#171717}input[type=number]{-moz-appearance:textfield}input[type=number]::-webkit-outer-spin-button,input[type=number]::-webkit-inner-spin-button{-webkit-appearance:none;-moz-appearance:none;margin:0}input.ng-invalid{border:1px solid crimson;box-shadow:0 0 10px 0 crimson}.form-label{display:block}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = 656\n// module chunks = 0"],"sourceRoot":""}